

Microchip Technology PIC18 LITE Macro Assembler V1.11 build 48931 
                                                                                               Fri May  3 05:12:13 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 48931
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 48931"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45K50
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   109  0000                     SRCON1 equ 0F57h ;# 
   110                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   111  0000                     SRCON0 equ 0F58h ;# 
   112                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   113  0000                     CCPTMRS equ 0F59h ;# 
   114                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   115  0000                     VREGCON equ 0F5Ah ;# 
   116                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   117  0000                     ANSELA equ 0F5Bh ;# 
   118                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   119  0000                     ANSELB equ 0F5Ch ;# 
   120                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   121  0000                     ANSELC equ 0F5Dh ;# 
   122                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   123  0000                     ANSELD equ 0F5Eh ;# 
   124                           # 409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   125  0000                     ANSELE equ 0F5Fh ;# 
   126                           # 440 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   127  0000                     UCON equ 0F60h ;# 
   128                           # 490 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   129  0000                     USTAT equ 0F61h ;# 
   130                           # 549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   131  0000                     UCFG equ 0F62h ;# 
   132                           # 630 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   133  0000                     UADDR equ 0F63h ;# 
   134                           # 693 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   135  0000                     UIE equ 0F64h ;# 
   136                           # 748 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   137  0000                     UIR equ 0F65h ;# 
   138                           # 803 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   139  0000                     UEIE equ 0F66h ;# 
   140                           # 853 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   141  0000                     UEIR equ 0F67h ;# 
   142                           # 903 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   143  0000                     UFRM equ 0F68h ;# 
   144                           # 909 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   145  0000                     UFRML equ 0F68h ;# 
   146                           # 986 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   147  0000                     UFRMH equ 0F69h ;# 
   148                           # 1025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   149  0000                     UEP0 equ 0F6Ah ;# 
   150                           # 1156 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   151  0000                     UEP1 equ 0F6Bh ;# 
   152                           # 1287 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   153  0000                     UEP2 equ 0F6Ch ;# 
   154                           # 1418 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   155  0000                     UEP3 equ 0F6Dh ;# 
   156                           # 1549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   157  0000                     UEP4 equ 0F6Eh ;# 
   158                           # 1680 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   159  0000                     UEP5 equ 0F6Fh ;# 
   160                           # 1811 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   161  0000                     UEP6 equ 0F70h ;# 
   162                           # 1942 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   163  0000                     UEP7 equ 0F71h ;# 
   164                           # 2073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   165  0000                     UEP8 equ 0F72h ;# 
   166                           # 2160 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   167  0000                     UEP9 equ 0F73h ;# 
   168                           # 2247 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   169  0000                     UEP10 equ 0F74h ;# 
   170                           # 2334 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   171  0000                     UEP11 equ 0F75h ;# 
   172                           # 2421 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   173  0000                     UEP12 equ 0F76h ;# 
   174                           # 2508 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   175  0000                     UEP13 equ 0F77h ;# 
   176                           # 2595 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   177  0000                     UEP14 equ 0F78h ;# 
   178                           # 2682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   179  0000                     UEP15 equ 0F79h ;# 
   180                           # 2769 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   181  0000                     SLRCON equ 0F7Ah ;# 
   182                           # 2812 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   183  0000                     VREFCON2 equ 0F7Bh ;# 
   184                           # 2863 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   185  0000                     VREFCON1 equ 0F7Ch ;# 
   186                           # 2923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   187  0000                     VREFCON0 equ 0F7Dh ;# 
   188                           # 2982 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   189  0000                     PMD0 equ 0F7Eh ;# 
   190                           # 3066 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   191  0000                     PMD1 equ 0F7Fh ;# 
   192                           # 3147 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   193  0000                     PORTA equ 0F80h ;# 
   194                           # 3300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   195  0000                     PORTB equ 0F81h ;# 
   196                           # 3409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   197  0000                     PORTC equ 0F82h ;# 
   198                           # 3562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   199  0000                     PORTD equ 0F83h ;# 
   200                           # 3682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   201  0000                     PORTE equ 0F84h ;# 
   202                           # 3926 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   203  0000                     IOCB equ 0F86h ;# 
   204                           # 3964 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   205  0000                     IOCC equ 0F87h ;# 
   206                           # 4020 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   207  0000                     CTMUICON equ 0F88h ;# 
   208                           # 4095 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   209  0000                     LATA equ 0F89h ;# 
   210                           # 4227 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   211  0000                     LATB equ 0F8Ah ;# 
   212                           # 4359 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   213  0000                     LATC equ 0F8Bh ;# 
   214                           # 4486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   215  0000                     LATD equ 0F8Ch ;# 
   216                           # 4618 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   217  0000                     LATE equ 0F8Dh ;# 
   218                           # 4720 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   219  0000                     CTMUCONL equ 0F8Eh ;# 
   220                           # 4725 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   221  0000                     CTMUCON1 equ 0F8Eh ;# 
   222                           # 4873 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   223  0000                     CTMUCONH equ 0F8Fh ;# 
   224                           # 4878 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   225  0000                     CTMUCON0 equ 0F8Fh ;# 
   226                           # 5028 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   227  0000                     CCPR2 equ 0F90h ;# 
   228                           # 5034 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   229  0000                     CCPR2L equ 0F90h ;# 
   230                           # 5053 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   231  0000                     CCPR2H equ 0F91h ;# 
   232                           # 5072 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   233  0000                     TRISA equ 0F92h ;# 
   234                           # 5077 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   235  0000                     DDRA equ 0F92h ;# 
   236                           # 5281 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   237  0000                     TRISB equ 0F93h ;# 
   238                           # 5286 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   239  0000                     DDRB equ 0F93h ;# 
   240                           # 5502 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   241  0000                     TRISC equ 0F94h ;# 
   242                           # 5507 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   243  0000                     DDRC equ 0F94h ;# 
   244                           # 5697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   245  0000                     TRISD equ 0F95h ;# 
   246                           # 5702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   247  0000                     DDRD equ 0F95h ;# 
   248                           # 5918 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   249  0000                     TRISE equ 0F96h ;# 
   250                           # 5923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   251  0000                     DDRE equ 0F96h ;# 
   252                           # 6033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   253  0000                     CCP2CON equ 0F97h ;# 
   254                           # 6038 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   255  0000                     ECCP2CON equ 0F97h ;# 
   256                           # 6188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   257  0000                     CM1CON0 equ 0F98h ;# 
   258                           # 6310 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   259  0000                     CM2CON0 equ 0F99h ;# 
   260                           # 6432 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   261  0000                     CM2CON1 equ 0F9Ah ;# 
   262                           # 6493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   263  0000                     OSCTUNE equ 0F9Bh ;# 
   264                           # 6562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   265  0000                     HLVDCON equ 0F9Ch ;# 
   266                           # 6631 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   267  0000                     PIE1 equ 0F9Dh ;# 
   268                           # 6729 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   269  0000                     PIR1 equ 0F9Eh ;# 
   270                           # 6827 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   271  0000                     IPR1 equ 0F9Fh ;# 
   272                           # 6925 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   273  0000                     PIE2 equ 0FA0h ;# 
   274                           # 7023 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   275  0000                     PIR2 equ 0FA1h ;# 
   276                           # 7121 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   277  0000                     IPR2 equ 0FA2h ;# 
   278                           # 7219 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   279  0000                     PIE3 equ 0FA3h ;# 
   280                           # 7300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   281  0000                     PIR3 equ 0FA4h ;# 
   282                           # 7346 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   283  0000                     IPR3 equ 0FA5h ;# 
   284                           # 7392 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   285  0000                     EECON1 equ 0FA6h ;# 
   286                           # 7457 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   287  0000                     EECON2 equ 0FA7h ;# 
   288                           # 7476 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   289  0000                     EEDATA equ 0FA8h ;# 
   290                           # 7482 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   291  0000                     EEADR equ 0FA9h ;# 
   292                           # 7488 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   293  0000                     RCSTA1 equ 0FABh ;# 
   294                           # 7493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   295  0000                     RCSTA equ 0FABh ;# 
   296                           # 7697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   297  0000                     TXSTA1 equ 0FACh ;# 
   298                           # 7702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   299  0000                     TXSTA equ 0FACh ;# 
   300                           # 7994 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   301  0000                     TXREG1 equ 0FADh ;# 
   302                           # 7999 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   303  0000                     TXREG equ 0FADh ;# 
   304                           # 8031 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   305  0000                     RCREG1 equ 0FAEh ;# 
   306                           # 8036 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   307  0000                     RCREG equ 0FAEh ;# 
   308                           # 8068 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   309  0000                     SPBRG1 equ 0FAFh ;# 
   310                           # 8073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   311  0000                     SPBRG equ 0FAFh ;# 
   312                           # 8205 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   313  0000                     SPBRGH1 equ 0FB0h ;# 
   314                           # 8210 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   315  0000                     SPBRGH equ 0FB0h ;# 
   316                           # 8342 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   317  0000                     T3CON equ 0FB1h ;# 
   318                           # 8472 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   319  0000                     TMR3 equ 0FB2h ;# 
   320                           # 8478 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   321  0000                     TMR3L equ 0FB2h ;# 
   322                           # 8497 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   323  0000                     TMR3H equ 0FB3h ;# 
   324                           # 8516 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   325  0000                     T3GCON equ 0FB4h ;# 
   326                           # 8646 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   327  0000                     ACTCON equ 0FB5h ;# 
   328                           # 8651 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   329  0000                     STCON equ 0FB5h ;# 
   330                           # 8851 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   331  0000                     ECCP1AS equ 0FB6h ;# 
   332                           # 8984 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   333  0000                     PWM1CON equ 0FB7h ;# 
   334                           # 8989 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   335  0000                     ECCP1DEL equ 0FB7h ;# 
   336                           # 9133 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   337  0000                     BAUDCON1 equ 0FB8h ;# 
   338                           # 9138 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   339  0000                     BAUDCON equ 0FB8h ;# 
   340                           # 9142 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   341  0000                     BAUDCTL equ 0FB8h ;# 
   342                           # 9684 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   343  0000                     PSTR1CON equ 0FB9h ;# 
   344                           # 9759 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   345  0000                     T2CON equ 0FBAh ;# 
   346                           # 9829 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   347  0000                     PR2 equ 0FBBh ;# 
   348                           # 9848 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   349  0000                     TMR2 equ 0FBCh ;# 
   350                           # 9867 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   351  0000                     CCP1CON equ 0FBDh ;# 
   352                           # 9872 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   353  0000                     ECCP1CON equ 0FBDh ;# 
   354                           # 10058 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   355  0000                     CCPR1 equ 0FBEh ;# 
   356                           # 10064 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   357  0000                     CCPR1L equ 0FBEh ;# 
   358                           # 10083 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   359  0000                     CCPR1H equ 0FBFh ;# 
   360                           # 10102 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   361  0000                     ADCON2 equ 0FC0h ;# 
   362                           # 10172 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   363  0000                     ADCON1 equ 0FC1h ;# 
   364                           # 10239 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   365  0000                     ADCON0 equ 0FC2h ;# 
   366                           # 10324 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   367  0000                     ADRESL equ 0FC3h ;# 
   368                           # 10330 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   369  0000                     ADRESH equ 0FC4h ;# 
   370                           # 10336 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   371  0000                     SSP1CON2 equ 0FC5h ;# 
   372                           # 10341 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   373  0000                     SSPCON2 equ 0FC5h ;# 
   374                           # 10779 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   375  0000                     SSP1CON1 equ 0FC6h ;# 
   376                           # 10784 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   377  0000                     SSPCON equ 0FC6h ;# 
   378                           # 10788 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   379  0000                     SSP1CON equ 0FC6h ;# 
   380                           # 10792 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   381  0000                     SSPCON1 equ 0FC6h ;# 
   382                           # 11332 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   383  0000                     SSP1STAT equ 0FC7h ;# 
   384                           # 11337 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   385  0000                     SSPSTAT equ 0FC7h ;# 
   386                           # 11991 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   387  0000                     SSP1ADD equ 0FC8h ;# 
   388                           # 11996 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   389  0000                     SSPADD equ 0FC8h ;# 
   390                           # 12412 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   391  0000                     SSP1BUF equ 0FC9h ;# 
   392                           # 12417 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   393  0000                     SSPBUF equ 0FC9h ;# 
   394                           # 12449 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   395  0000                     SSP1MSK equ 0FCAh ;# 
   396                           # 12454 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   397  0000                     SSPMSK equ 0FCAh ;# 
   398                           # 12586 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   399  0000                     SSP1CON3 equ 0FCBh ;# 
   400                           # 12591 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   401  0000                     SSPCON3 equ 0FCBh ;# 
   402                           # 12707 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   403  0000                     T1GCON equ 0FCCh ;# 
   404                           # 12837 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   405  0000                     T1CON equ 0FCDh ;# 
   406                           # 12949 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   407  0000                     TMR1 equ 0FCEh ;# 
   408                           # 12955 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   409  0000                     TMR1L equ 0FCEh ;# 
   410                           # 12974 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   411  0000                     TMR1H equ 0FCFh ;# 
   412                           # 12993 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   413  0000                     RCON equ 0FD0h ;# 
   414                           # 13125 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   415  0000                     WDTCON equ 0FD1h ;# 
   416                           # 13152 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   417  0000                     OSCCON2 equ 0FD2h ;# 
   418                           # 13213 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   419  0000                     OSCCON equ 0FD3h ;# 
   420                           # 13295 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   421  0000                     T0CON equ 0FD5h ;# 
   422                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   423  0000                     TMR0 equ 0FD6h ;# 
   424                           # 13370 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   425  0000                     TMR0L equ 0FD6h ;# 
   426                           # 13389 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   427  0000                     TMR0H equ 0FD7h ;# 
   428                           # 13408 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   429  0000                     STATUS equ 0FD8h ;# 
   430                           # 13486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   431  0000                     FSR2 equ 0FD9h ;# 
   432                           # 13492 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   433  0000                     FSR2L equ 0FD9h ;# 
   434                           # 13511 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   435  0000                     FSR2H equ 0FDAh ;# 
   436                           # 13517 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   437  0000                     BSR equ 0FE0h ;# 
   438                           # 13523 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   439  0000                     FSR1 equ 0FE1h ;# 
   440                           # 13529 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   441  0000                     FSR1L equ 0FE1h ;# 
   442                           # 13548 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   443  0000                     FSR1H equ 0FE2h ;# 
   444                           # 13554 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   445  0000                     WREG equ 0FE8h ;# 
   446                           # 13573 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   447  0000                     FSR0 equ 0FE9h ;# 
   448                           # 13579 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   449  0000                     FSR0L equ 0FE9h ;# 
   450                           # 13598 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   451  0000                     FSR0H equ 0FEAh ;# 
   452                           # 13604 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   453  0000                     INDF0 equ 0FEFh ;# 
   454                           # 13623 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   455  0000                     INTCON3 equ 0FF0h ;# 
   456                           # 13714 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   457  0000                     INTCON2 equ 0FF1h ;# 
   458                           # 13790 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   459  0000                     INTCON equ 0FF2h ;# 
   460                           # 13916 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   461  0000                     PROD equ 0FF3h ;# 
   462                           # 13922 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   463  0000                     PRODL equ 0FF3h ;# 
   464                           # 13941 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   465  0000                     PRODH equ 0FF4h ;# 
   466                           # 13960 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   467  0000                     TABLAT equ 0FF5h ;# 
   468                           # 13981 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   469  0000                     TBLPTR equ 0FF6h ;# 
   470                           # 13987 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   471  0000                     TBLPTRL equ 0FF6h ;# 
   472                           # 14006 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   473  0000                     TBLPTRH equ 0FF7h ;# 
   474                           # 14025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   475  0000                     TBLPTRU equ 0FF8h ;# 
   476                           # 14033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   477  0000                     PCLAT equ 0FF9h ;# 
   478                           # 14040 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   479  0000                     PC equ 0FF9h ;# 
   480                           # 14046 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   481  0000                     PCL equ 0FF9h ;# 
   482                           # 14065 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   483  0000                     PCLATH equ 0FFAh ;# 
   484                           # 14084 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   485  0000                     PCLATU equ 0FFBh ;# 
   486                           # 14090 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   487  0000                     STKPTR equ 0FFCh ;# 
   488                           # 14163 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   489  0000                     TOS equ 0FFDh ;# 
   490                           # 14169 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   491  0000                     TOSL equ 0FFDh ;# 
   492                           # 14188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   493  0000                     TOSH equ 0FFEh ;# 
   494                           # 14207 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   495  0000                     TOSU equ 0FFFh ;# 
   496                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   497  0000                     SRCON1 equ 0F57h ;# 
   498                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   499  0000                     SRCON0 equ 0F58h ;# 
   500                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   501  0000                     CCPTMRS equ 0F59h ;# 
   502                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   503  0000                     VREGCON equ 0F5Ah ;# 
   504                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   505  0000                     ANSELA equ 0F5Bh ;# 
   506                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   507  0000                     ANSELB equ 0F5Ch ;# 
   508                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   509  0000                     ANSELC equ 0F5Dh ;# 
   510                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   511  0000                     ANSELD equ 0F5Eh ;# 
   512                           # 409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   513  0000                     ANSELE equ 0F5Fh ;# 
   514                           # 440 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   515  0000                     UCON equ 0F60h ;# 
   516                           # 490 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   517  0000                     USTAT equ 0F61h ;# 
   518                           # 549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   519  0000                     UCFG equ 0F62h ;# 
   520                           # 630 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   521  0000                     UADDR equ 0F63h ;# 
   522                           # 693 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   523  0000                     UIE equ 0F64h ;# 
   524                           # 748 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   525  0000                     UIR equ 0F65h ;# 
   526                           # 803 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   527  0000                     UEIE equ 0F66h ;# 
   528                           # 853 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   529  0000                     UEIR equ 0F67h ;# 
   530                           # 903 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   531  0000                     UFRM equ 0F68h ;# 
   532                           # 909 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   533  0000                     UFRML equ 0F68h ;# 
   534                           # 986 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   535  0000                     UFRMH equ 0F69h ;# 
   536                           # 1025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   537  0000                     UEP0 equ 0F6Ah ;# 
   538                           # 1156 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   539  0000                     UEP1 equ 0F6Bh ;# 
   540                           # 1287 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   541  0000                     UEP2 equ 0F6Ch ;# 
   542                           # 1418 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   543  0000                     UEP3 equ 0F6Dh ;# 
   544                           # 1549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   545  0000                     UEP4 equ 0F6Eh ;# 
   546                           # 1680 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   547  0000                     UEP5 equ 0F6Fh ;# 
   548                           # 1811 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   549  0000                     UEP6 equ 0F70h ;# 
   550                           # 1942 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   551  0000                     UEP7 equ 0F71h ;# 
   552                           # 2073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   553  0000                     UEP8 equ 0F72h ;# 
   554                           # 2160 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   555  0000                     UEP9 equ 0F73h ;# 
   556                           # 2247 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   557  0000                     UEP10 equ 0F74h ;# 
   558                           # 2334 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   559  0000                     UEP11 equ 0F75h ;# 
   560                           # 2421 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   561  0000                     UEP12 equ 0F76h ;# 
   562                           # 2508 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   563  0000                     UEP13 equ 0F77h ;# 
   564                           # 2595 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   565  0000                     UEP14 equ 0F78h ;# 
   566                           # 2682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   567  0000                     UEP15 equ 0F79h ;# 
   568                           # 2769 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   569  0000                     SLRCON equ 0F7Ah ;# 
   570                           # 2812 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   571  0000                     VREFCON2 equ 0F7Bh ;# 
   572                           # 2863 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   573  0000                     VREFCON1 equ 0F7Ch ;# 
   574                           # 2923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   575  0000                     VREFCON0 equ 0F7Dh ;# 
   576                           # 2982 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   577  0000                     PMD0 equ 0F7Eh ;# 
   578                           # 3066 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   579  0000                     PMD1 equ 0F7Fh ;# 
   580                           # 3147 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   581  0000                     PORTA equ 0F80h ;# 
   582                           # 3300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   583  0000                     PORTB equ 0F81h ;# 
   584                           # 3409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   585  0000                     PORTC equ 0F82h ;# 
   586                           # 3562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   587  0000                     PORTD equ 0F83h ;# 
   588                           # 3682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   589  0000                     PORTE equ 0F84h ;# 
   590                           # 3926 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   591  0000                     IOCB equ 0F86h ;# 
   592                           # 3964 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   593  0000                     IOCC equ 0F87h ;# 
   594                           # 4020 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   595  0000                     CTMUICON equ 0F88h ;# 
   596                           # 4095 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   597  0000                     LATA equ 0F89h ;# 
   598                           # 4227 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   599  0000                     LATB equ 0F8Ah ;# 
   600                           # 4359 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   601  0000                     LATC equ 0F8Bh ;# 
   602                           # 4486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   603  0000                     LATD equ 0F8Ch ;# 
   604                           # 4618 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   605  0000                     LATE equ 0F8Dh ;# 
   606                           # 4720 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   607  0000                     CTMUCONL equ 0F8Eh ;# 
   608                           # 4725 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   609  0000                     CTMUCON1 equ 0F8Eh ;# 
   610                           # 4873 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   611  0000                     CTMUCONH equ 0F8Fh ;# 
   612                           # 4878 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   613  0000                     CTMUCON0 equ 0F8Fh ;# 
   614                           # 5028 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   615  0000                     CCPR2 equ 0F90h ;# 
   616                           # 5034 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   617  0000                     CCPR2L equ 0F90h ;# 
   618                           # 5053 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   619  0000                     CCPR2H equ 0F91h ;# 
   620                           # 5072 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   621  0000                     TRISA equ 0F92h ;# 
   622                           # 5077 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   623  0000                     DDRA equ 0F92h ;# 
   624                           # 5281 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   625  0000                     TRISB equ 0F93h ;# 
   626                           # 5286 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   627  0000                     DDRB equ 0F93h ;# 
   628                           # 5502 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   629  0000                     TRISC equ 0F94h ;# 
   630                           # 5507 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   631  0000                     DDRC equ 0F94h ;# 
   632                           # 5697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   633  0000                     TRISD equ 0F95h ;# 
   634                           # 5702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   635  0000                     DDRD equ 0F95h ;# 
   636                           # 5918 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   637  0000                     TRISE equ 0F96h ;# 
   638                           # 5923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   639  0000                     DDRE equ 0F96h ;# 
   640                           # 6033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   641  0000                     CCP2CON equ 0F97h ;# 
   642                           # 6038 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   643  0000                     ECCP2CON equ 0F97h ;# 
   644                           # 6188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   645  0000                     CM1CON0 equ 0F98h ;# 
   646                           # 6310 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   647  0000                     CM2CON0 equ 0F99h ;# 
   648                           # 6432 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   649  0000                     CM2CON1 equ 0F9Ah ;# 
   650                           # 6493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   651  0000                     OSCTUNE equ 0F9Bh ;# 
   652                           # 6562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   653  0000                     HLVDCON equ 0F9Ch ;# 
   654                           # 6631 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   655  0000                     PIE1 equ 0F9Dh ;# 
   656                           # 6729 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   657  0000                     PIR1 equ 0F9Eh ;# 
   658                           # 6827 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   659  0000                     IPR1 equ 0F9Fh ;# 
   660                           # 6925 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   661  0000                     PIE2 equ 0FA0h ;# 
   662                           # 7023 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   663  0000                     PIR2 equ 0FA1h ;# 
   664                           # 7121 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   665  0000                     IPR2 equ 0FA2h ;# 
   666                           # 7219 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   667  0000                     PIE3 equ 0FA3h ;# 
   668                           # 7300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   669  0000                     PIR3 equ 0FA4h ;# 
   670                           # 7346 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   671  0000                     IPR3 equ 0FA5h ;# 
   672                           # 7392 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   673  0000                     EECON1 equ 0FA6h ;# 
   674                           # 7457 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   675  0000                     EECON2 equ 0FA7h ;# 
   676                           # 7476 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   677  0000                     EEDATA equ 0FA8h ;# 
   678                           # 7482 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   679  0000                     EEADR equ 0FA9h ;# 
   680                           # 7488 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   681  0000                     RCSTA1 equ 0FABh ;# 
   682                           # 7493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   683  0000                     RCSTA equ 0FABh ;# 
   684                           # 7697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   685  0000                     TXSTA1 equ 0FACh ;# 
   686                           # 7702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   687  0000                     TXSTA equ 0FACh ;# 
   688                           # 7994 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   689  0000                     TXREG1 equ 0FADh ;# 
   690                           # 7999 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   691  0000                     TXREG equ 0FADh ;# 
   692                           # 8031 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   693  0000                     RCREG1 equ 0FAEh ;# 
   694                           # 8036 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   695  0000                     RCREG equ 0FAEh ;# 
   696                           # 8068 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   697  0000                     SPBRG1 equ 0FAFh ;# 
   698                           # 8073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   699  0000                     SPBRG equ 0FAFh ;# 
   700                           # 8205 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   701  0000                     SPBRGH1 equ 0FB0h ;# 
   702                           # 8210 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   703  0000                     SPBRGH equ 0FB0h ;# 
   704                           # 8342 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   705  0000                     T3CON equ 0FB1h ;# 
   706                           # 8472 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   707  0000                     TMR3 equ 0FB2h ;# 
   708                           # 8478 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   709  0000                     TMR3L equ 0FB2h ;# 
   710                           # 8497 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   711  0000                     TMR3H equ 0FB3h ;# 
   712                           # 8516 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   713  0000                     T3GCON equ 0FB4h ;# 
   714                           # 8646 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   715  0000                     ACTCON equ 0FB5h ;# 
   716                           # 8651 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   717  0000                     STCON equ 0FB5h ;# 
   718                           # 8851 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   719  0000                     ECCP1AS equ 0FB6h ;# 
   720                           # 8984 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   721  0000                     PWM1CON equ 0FB7h ;# 
   722                           # 8989 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   723  0000                     ECCP1DEL equ 0FB7h ;# 
   724                           # 9133 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   725  0000                     BAUDCON1 equ 0FB8h ;# 
   726                           # 9138 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   727  0000                     BAUDCON equ 0FB8h ;# 
   728                           # 9142 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   729  0000                     BAUDCTL equ 0FB8h ;# 
   730                           # 9684 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   731  0000                     PSTR1CON equ 0FB9h ;# 
   732                           # 9759 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   733  0000                     T2CON equ 0FBAh ;# 
   734                           # 9829 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   735  0000                     PR2 equ 0FBBh ;# 
   736                           # 9848 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   737  0000                     TMR2 equ 0FBCh ;# 
   738                           # 9867 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   739  0000                     CCP1CON equ 0FBDh ;# 
   740                           # 9872 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   741  0000                     ECCP1CON equ 0FBDh ;# 
   742                           # 10058 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   743  0000                     CCPR1 equ 0FBEh ;# 
   744                           # 10064 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   745  0000                     CCPR1L equ 0FBEh ;# 
   746                           # 10083 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   747  0000                     CCPR1H equ 0FBFh ;# 
   748                           # 10102 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   749  0000                     ADCON2 equ 0FC0h ;# 
   750                           # 10172 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   751  0000                     ADCON1 equ 0FC1h ;# 
   752                           # 10239 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   753  0000                     ADCON0 equ 0FC2h ;# 
   754                           # 10324 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   755  0000                     ADRESL equ 0FC3h ;# 
   756                           # 10330 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   757  0000                     ADRESH equ 0FC4h ;# 
   758                           # 10336 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   759  0000                     SSP1CON2 equ 0FC5h ;# 
   760                           # 10341 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   761  0000                     SSPCON2 equ 0FC5h ;# 
   762                           # 10779 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   763  0000                     SSP1CON1 equ 0FC6h ;# 
   764                           # 10784 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   765  0000                     SSPCON equ 0FC6h ;# 
   766                           # 10788 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   767  0000                     SSP1CON equ 0FC6h ;# 
   768                           # 10792 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   769  0000                     SSPCON1 equ 0FC6h ;# 
   770                           # 11332 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   771  0000                     SSP1STAT equ 0FC7h ;# 
   772                           # 11337 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   773  0000                     SSPSTAT equ 0FC7h ;# 
   774                           # 11991 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   775  0000                     SSP1ADD equ 0FC8h ;# 
   776                           # 11996 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   777  0000                     SSPADD equ 0FC8h ;# 
   778                           # 12412 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   779  0000                     SSP1BUF equ 0FC9h ;# 
   780                           # 12417 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   781  0000                     SSPBUF equ 0FC9h ;# 
   782                           # 12449 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   783  0000                     SSP1MSK equ 0FCAh ;# 
   784                           # 12454 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   785  0000                     SSPMSK equ 0FCAh ;# 
   786                           # 12586 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   787  0000                     SSP1CON3 equ 0FCBh ;# 
   788                           # 12591 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   789  0000                     SSPCON3 equ 0FCBh ;# 
   790                           # 12707 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   791  0000                     T1GCON equ 0FCCh ;# 
   792                           # 12837 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   793  0000                     T1CON equ 0FCDh ;# 
   794                           # 12949 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   795  0000                     TMR1 equ 0FCEh ;# 
   796                           # 12955 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   797  0000                     TMR1L equ 0FCEh ;# 
   798                           # 12974 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   799  0000                     TMR1H equ 0FCFh ;# 
   800                           # 12993 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   801  0000                     RCON equ 0FD0h ;# 
   802                           # 13125 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   803  0000                     WDTCON equ 0FD1h ;# 
   804                           # 13152 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   805  0000                     OSCCON2 equ 0FD2h ;# 
   806                           # 13213 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   807  0000                     OSCCON equ 0FD3h ;# 
   808                           # 13295 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   809  0000                     T0CON equ 0FD5h ;# 
   810                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   811  0000                     TMR0 equ 0FD6h ;# 
   812                           # 13370 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   813  0000                     TMR0L equ 0FD6h ;# 
   814                           # 13389 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   815  0000                     TMR0H equ 0FD7h ;# 
   816                           # 13408 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   817  0000                     STATUS equ 0FD8h ;# 
   818                           # 13486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   819  0000                     FSR2 equ 0FD9h ;# 
   820                           # 13492 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   821  0000                     FSR2L equ 0FD9h ;# 
   822                           # 13511 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   823  0000                     FSR2H equ 0FDAh ;# 
   824                           # 13517 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   825  0000                     BSR equ 0FE0h ;# 
   826                           # 13523 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   827  0000                     FSR1 equ 0FE1h ;# 
   828                           # 13529 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   829  0000                     FSR1L equ 0FE1h ;# 
   830                           # 13548 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   831  0000                     FSR1H equ 0FE2h ;# 
   832                           # 13554 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   833  0000                     WREG equ 0FE8h ;# 
   834                           # 13573 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   835  0000                     FSR0 equ 0FE9h ;# 
   836                           # 13579 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   837  0000                     FSR0L equ 0FE9h ;# 
   838                           # 13598 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   839  0000                     FSR0H equ 0FEAh ;# 
   840                           # 13604 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   841  0000                     INDF0 equ 0FEFh ;# 
   842                           # 13623 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   843  0000                     INTCON3 equ 0FF0h ;# 
   844                           # 13714 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   845  0000                     INTCON2 equ 0FF1h ;# 
   846                           # 13790 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   847  0000                     INTCON equ 0FF2h ;# 
   848                           # 13916 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   849  0000                     PROD equ 0FF3h ;# 
   850                           # 13922 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   851  0000                     PRODL equ 0FF3h ;# 
   852                           # 13941 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   853  0000                     PRODH equ 0FF4h ;# 
   854                           # 13960 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   855  0000                     TABLAT equ 0FF5h ;# 
   856                           # 13981 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   857  0000                     TBLPTR equ 0FF6h ;# 
   858                           # 13987 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   859  0000                     TBLPTRL equ 0FF6h ;# 
   860                           # 14006 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   861  0000                     TBLPTRH equ 0FF7h ;# 
   862                           # 14025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   863  0000                     TBLPTRU equ 0FF8h ;# 
   864                           # 14033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   865  0000                     PCLAT equ 0FF9h ;# 
   866                           # 14040 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   867  0000                     PC equ 0FF9h ;# 
   868                           # 14046 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   869  0000                     PCL equ 0FF9h ;# 
   870                           # 14065 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   871  0000                     PCLATH equ 0FFAh ;# 
   872                           # 14084 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   873  0000                     PCLATU equ 0FFBh ;# 
   874                           # 14090 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   875  0000                     STKPTR equ 0FFCh ;# 
   876                           # 14163 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   877  0000                     TOS equ 0FFDh ;# 
   878                           # 14169 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   879  0000                     TOSL equ 0FFDh ;# 
   880                           # 14188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   881  0000                     TOSH equ 0FFEh ;# 
   882                           # 14207 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   883  0000                     TOSU equ 0FFFh ;# 
   884                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   885  0000                     SRCON1 equ 0F57h ;# 
   886                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   887  0000                     SRCON0 equ 0F58h ;# 
   888                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   889  0000                     CCPTMRS equ 0F59h ;# 
   890                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   891  0000                     VREGCON equ 0F5Ah ;# 
   892                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   893  0000                     ANSELA equ 0F5Bh ;# 
   894                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   895  0000                     ANSELB equ 0F5Ch ;# 
   896                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   897  0000                     ANSELC equ 0F5Dh ;# 
   898                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   899  0000                     ANSELD equ 0F5Eh ;# 
   900                           # 409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   901  0000                     ANSELE equ 0F5Fh ;# 
   902                           # 440 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   903  0000                     UCON equ 0F60h ;# 
   904                           # 490 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   905  0000                     USTAT equ 0F61h ;# 
   906                           # 549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   907  0000                     UCFG equ 0F62h ;# 
   908                           # 630 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   909  0000                     UADDR equ 0F63h ;# 
   910                           # 693 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   911  0000                     UIE equ 0F64h ;# 
   912                           # 748 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   913  0000                     UIR equ 0F65h ;# 
   914                           # 803 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   915  0000                     UEIE equ 0F66h ;# 
   916                           # 853 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   917  0000                     UEIR equ 0F67h ;# 
   918                           # 903 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   919  0000                     UFRM equ 0F68h ;# 
   920                           # 909 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   921  0000                     UFRML equ 0F68h ;# 
   922                           # 986 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   923  0000                     UFRMH equ 0F69h ;# 
   924                           # 1025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   925  0000                     UEP0 equ 0F6Ah ;# 
   926                           # 1156 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   927  0000                     UEP1 equ 0F6Bh ;# 
   928                           # 1287 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   929  0000                     UEP2 equ 0F6Ch ;# 
   930                           # 1418 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   931  0000                     UEP3 equ 0F6Dh ;# 
   932                           # 1549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   933  0000                     UEP4 equ 0F6Eh ;# 
   934                           # 1680 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   935  0000                     UEP5 equ 0F6Fh ;# 
   936                           # 1811 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   937  0000                     UEP6 equ 0F70h ;# 
   938                           # 1942 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   939  0000                     UEP7 equ 0F71h ;# 
   940                           # 2073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   941  0000                     UEP8 equ 0F72h ;# 
   942                           # 2160 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   943  0000                     UEP9 equ 0F73h ;# 
   944                           # 2247 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   945  0000                     UEP10 equ 0F74h ;# 
   946                           # 2334 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   947  0000                     UEP11 equ 0F75h ;# 
   948                           # 2421 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   949  0000                     UEP12 equ 0F76h ;# 
   950                           # 2508 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   951  0000                     UEP13 equ 0F77h ;# 
   952                           # 2595 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   953  0000                     UEP14 equ 0F78h ;# 
   954                           # 2682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   955  0000                     UEP15 equ 0F79h ;# 
   956                           # 2769 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   957  0000                     SLRCON equ 0F7Ah ;# 
   958                           # 2812 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   959  0000                     VREFCON2 equ 0F7Bh ;# 
   960                           # 2863 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   961  0000                     VREFCON1 equ 0F7Ch ;# 
   962                           # 2923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   963  0000                     VREFCON0 equ 0F7Dh ;# 
   964                           # 2982 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   965  0000                     PMD0 equ 0F7Eh ;# 
   966                           # 3066 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   967  0000                     PMD1 equ 0F7Fh ;# 
   968                           # 3147 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   969  0000                     PORTA equ 0F80h ;# 
   970                           # 3300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   971  0000                     PORTB equ 0F81h ;# 
   972                           # 3409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   973  0000                     PORTC equ 0F82h ;# 
   974                           # 3562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   975  0000                     PORTD equ 0F83h ;# 
   976                           # 3682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   977  0000                     PORTE equ 0F84h ;# 
   978                           # 3926 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   979  0000                     IOCB equ 0F86h ;# 
   980                           # 3964 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   981  0000                     IOCC equ 0F87h ;# 
   982                           # 4020 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   983  0000                     CTMUICON equ 0F88h ;# 
   984                           # 4095 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 4227 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 4359 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 4486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 4618 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 4720 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   995  0000                     CTMUCONL equ 0F8Eh ;# 
   996                           # 4725 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   997  0000                     CTMUCON1 equ 0F8Eh ;# 
   998                           # 4873 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
   999  0000                     CTMUCONH equ 0F8Fh ;# 
  1000                           # 4878 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1001  0000                     CTMUCON0 equ 0F8Fh ;# 
  1002                           # 5028 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1003  0000                     CCPR2 equ 0F90h ;# 
  1004                           # 5034 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1005  0000                     CCPR2L equ 0F90h ;# 
  1006                           # 5053 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1007  0000                     CCPR2H equ 0F91h ;# 
  1008                           # 5072 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1009  0000                     TRISA equ 0F92h ;# 
  1010                           # 5077 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1011  0000                     DDRA equ 0F92h ;# 
  1012                           # 5281 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1013  0000                     TRISB equ 0F93h ;# 
  1014                           # 5286 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1015  0000                     DDRB equ 0F93h ;# 
  1016                           # 5502 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1017  0000                     TRISC equ 0F94h ;# 
  1018                           # 5507 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1019  0000                     DDRC equ 0F94h ;# 
  1020                           # 5697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1021  0000                     TRISD equ 0F95h ;# 
  1022                           # 5702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1023  0000                     DDRD equ 0F95h ;# 
  1024                           # 5918 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1025  0000                     TRISE equ 0F96h ;# 
  1026                           # 5923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1027  0000                     DDRE equ 0F96h ;# 
  1028                           # 6033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1029  0000                     CCP2CON equ 0F97h ;# 
  1030                           # 6038 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1031  0000                     ECCP2CON equ 0F97h ;# 
  1032                           # 6188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1033  0000                     CM1CON0 equ 0F98h ;# 
  1034                           # 6310 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1035  0000                     CM2CON0 equ 0F99h ;# 
  1036                           # 6432 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1037  0000                     CM2CON1 equ 0F9Ah ;# 
  1038                           # 6493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1039  0000                     OSCTUNE equ 0F9Bh ;# 
  1040                           # 6562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1041  0000                     HLVDCON equ 0F9Ch ;# 
  1042                           # 6631 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1043  0000                     PIE1 equ 0F9Dh ;# 
  1044                           # 6729 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1045  0000                     PIR1 equ 0F9Eh ;# 
  1046                           # 6827 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1047  0000                     IPR1 equ 0F9Fh ;# 
  1048                           # 6925 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1049  0000                     PIE2 equ 0FA0h ;# 
  1050                           # 7023 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1051  0000                     PIR2 equ 0FA1h ;# 
  1052                           # 7121 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1053  0000                     IPR2 equ 0FA2h ;# 
  1054                           # 7219 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1055  0000                     PIE3 equ 0FA3h ;# 
  1056                           # 7300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1057  0000                     PIR3 equ 0FA4h ;# 
  1058                           # 7346 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1059  0000                     IPR3 equ 0FA5h ;# 
  1060                           # 7392 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1061  0000                     EECON1 equ 0FA6h ;# 
  1062                           # 7457 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1063  0000                     EECON2 equ 0FA7h ;# 
  1064                           # 7476 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1065  0000                     EEDATA equ 0FA8h ;# 
  1066                           # 7482 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1067  0000                     EEADR equ 0FA9h ;# 
  1068                           # 7488 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1069  0000                     RCSTA1 equ 0FABh ;# 
  1070                           # 7493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1071  0000                     RCSTA equ 0FABh ;# 
  1072                           # 7697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1073  0000                     TXSTA1 equ 0FACh ;# 
  1074                           # 7702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1075  0000                     TXSTA equ 0FACh ;# 
  1076                           # 7994 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1077  0000                     TXREG1 equ 0FADh ;# 
  1078                           # 7999 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1079  0000                     TXREG equ 0FADh ;# 
  1080                           # 8031 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1081  0000                     RCREG1 equ 0FAEh ;# 
  1082                           # 8036 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1083  0000                     RCREG equ 0FAEh ;# 
  1084                           # 8068 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1085  0000                     SPBRG1 equ 0FAFh ;# 
  1086                           # 8073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1087  0000                     SPBRG equ 0FAFh ;# 
  1088                           # 8205 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1089  0000                     SPBRGH1 equ 0FB0h ;# 
  1090                           # 8210 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1091  0000                     SPBRGH equ 0FB0h ;# 
  1092                           # 8342 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1093  0000                     T3CON equ 0FB1h ;# 
  1094                           # 8472 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1095  0000                     TMR3 equ 0FB2h ;# 
  1096                           # 8478 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1097  0000                     TMR3L equ 0FB2h ;# 
  1098                           # 8497 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1099  0000                     TMR3H equ 0FB3h ;# 
  1100                           # 8516 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1101  0000                     T3GCON equ 0FB4h ;# 
  1102                           # 8646 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1103  0000                     ACTCON equ 0FB5h ;# 
  1104                           # 8651 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1105  0000                     STCON equ 0FB5h ;# 
  1106                           # 8851 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1107  0000                     ECCP1AS equ 0FB6h ;# 
  1108                           # 8984 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1109  0000                     PWM1CON equ 0FB7h ;# 
  1110                           # 8989 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1111  0000                     ECCP1DEL equ 0FB7h ;# 
  1112                           # 9133 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1113  0000                     BAUDCON1 equ 0FB8h ;# 
  1114                           # 9138 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1115  0000                     BAUDCON equ 0FB8h ;# 
  1116                           # 9142 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1117  0000                     BAUDCTL equ 0FB8h ;# 
  1118                           # 9684 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1119  0000                     PSTR1CON equ 0FB9h ;# 
  1120                           # 9759 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1121  0000                     T2CON equ 0FBAh ;# 
  1122                           # 9829 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1123  0000                     PR2 equ 0FBBh ;# 
  1124                           # 9848 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1125  0000                     TMR2 equ 0FBCh ;# 
  1126                           # 9867 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1127  0000                     CCP1CON equ 0FBDh ;# 
  1128                           # 9872 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1129  0000                     ECCP1CON equ 0FBDh ;# 
  1130                           # 10058 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1131  0000                     CCPR1 equ 0FBEh ;# 
  1132                           # 10064 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1133  0000                     CCPR1L equ 0FBEh ;# 
  1134                           # 10083 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1135  0000                     CCPR1H equ 0FBFh ;# 
  1136                           # 10102 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1137  0000                     ADCON2 equ 0FC0h ;# 
  1138                           # 10172 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1139  0000                     ADCON1 equ 0FC1h ;# 
  1140                           # 10239 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1141  0000                     ADCON0 equ 0FC2h ;# 
  1142                           # 10324 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1143  0000                     ADRESL equ 0FC3h ;# 
  1144                           # 10330 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1145  0000                     ADRESH equ 0FC4h ;# 
  1146                           # 10336 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1147  0000                     SSP1CON2 equ 0FC5h ;# 
  1148                           # 10341 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1149  0000                     SSPCON2 equ 0FC5h ;# 
  1150                           # 10779 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1151  0000                     SSP1CON1 equ 0FC6h ;# 
  1152                           # 10784 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1153  0000                     SSPCON equ 0FC6h ;# 
  1154                           # 10788 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1155  0000                     SSP1CON equ 0FC6h ;# 
  1156                           # 10792 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1157  0000                     SSPCON1 equ 0FC6h ;# 
  1158                           # 11332 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1159  0000                     SSP1STAT equ 0FC7h ;# 
  1160                           # 11337 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1161  0000                     SSPSTAT equ 0FC7h ;# 
  1162                           # 11991 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1163  0000                     SSP1ADD equ 0FC8h ;# 
  1164                           # 11996 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1165  0000                     SSPADD equ 0FC8h ;# 
  1166                           # 12412 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1167  0000                     SSP1BUF equ 0FC9h ;# 
  1168                           # 12417 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1169  0000                     SSPBUF equ 0FC9h ;# 
  1170                           # 12449 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1171  0000                     SSP1MSK equ 0FCAh ;# 
  1172                           # 12454 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1173  0000                     SSPMSK equ 0FCAh ;# 
  1174                           # 12586 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1175  0000                     SSP1CON3 equ 0FCBh ;# 
  1176                           # 12591 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1177  0000                     SSPCON3 equ 0FCBh ;# 
  1178                           # 12707 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1179  0000                     T1GCON equ 0FCCh ;# 
  1180                           # 12837 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1181  0000                     T1CON equ 0FCDh ;# 
  1182                           # 12949 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1183  0000                     TMR1 equ 0FCEh ;# 
  1184                           # 12955 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1185  0000                     TMR1L equ 0FCEh ;# 
  1186                           # 12974 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1187  0000                     TMR1H equ 0FCFh ;# 
  1188                           # 12993 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1189  0000                     RCON equ 0FD0h ;# 
  1190                           # 13125 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1191  0000                     WDTCON equ 0FD1h ;# 
  1192                           # 13152 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1193  0000                     OSCCON2 equ 0FD2h ;# 
  1194                           # 13213 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1195  0000                     OSCCON equ 0FD3h ;# 
  1196                           # 13295 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1197  0000                     T0CON equ 0FD5h ;# 
  1198                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1199  0000                     TMR0 equ 0FD6h ;# 
  1200                           # 13370 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1201  0000                     TMR0L equ 0FD6h ;# 
  1202                           # 13389 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1203  0000                     TMR0H equ 0FD7h ;# 
  1204                           # 13408 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1205  0000                     STATUS equ 0FD8h ;# 
  1206                           # 13486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1207  0000                     FSR2 equ 0FD9h ;# 
  1208                           # 13492 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1209  0000                     FSR2L equ 0FD9h ;# 
  1210                           # 13511 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1211  0000                     FSR2H equ 0FDAh ;# 
  1212                           # 13517 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1213  0000                     BSR equ 0FE0h ;# 
  1214                           # 13523 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1215  0000                     FSR1 equ 0FE1h ;# 
  1216                           # 13529 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1217  0000                     FSR1L equ 0FE1h ;# 
  1218                           # 13548 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1219  0000                     FSR1H equ 0FE2h ;# 
  1220                           # 13554 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1221  0000                     WREG equ 0FE8h ;# 
  1222                           # 13573 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1223  0000                     FSR0 equ 0FE9h ;# 
  1224                           # 13579 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1225  0000                     FSR0L equ 0FE9h ;# 
  1226                           # 13598 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1227  0000                     FSR0H equ 0FEAh ;# 
  1228                           # 13604 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1229  0000                     INDF0 equ 0FEFh ;# 
  1230                           # 13623 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1231  0000                     INTCON3 equ 0FF0h ;# 
  1232                           # 13714 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1233  0000                     INTCON2 equ 0FF1h ;# 
  1234                           # 13790 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1235  0000                     INTCON equ 0FF2h ;# 
  1236                           # 13916 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1237  0000                     PROD equ 0FF3h ;# 
  1238                           # 13922 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1239  0000                     PRODL equ 0FF3h ;# 
  1240                           # 13941 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1241  0000                     PRODH equ 0FF4h ;# 
  1242                           # 13960 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1243  0000                     TABLAT equ 0FF5h ;# 
  1244                           # 13981 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1245  0000                     TBLPTR equ 0FF6h ;# 
  1246                           # 13987 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1247  0000                     TBLPTRL equ 0FF6h ;# 
  1248                           # 14006 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1249  0000                     TBLPTRH equ 0FF7h ;# 
  1250                           # 14025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1251  0000                     TBLPTRU equ 0FF8h ;# 
  1252                           # 14033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1253  0000                     PCLAT equ 0FF9h ;# 
  1254                           # 14040 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1255  0000                     PC equ 0FF9h ;# 
  1256                           # 14046 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1257  0000                     PCL equ 0FF9h ;# 
  1258                           # 14065 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1259  0000                     PCLATH equ 0FFAh ;# 
  1260                           # 14084 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1261  0000                     PCLATU equ 0FFBh ;# 
  1262                           # 14090 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1263  0000                     STKPTR equ 0FFCh ;# 
  1264                           # 14163 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1265  0000                     TOS equ 0FFDh ;# 
  1266                           # 14169 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1267  0000                     TOSL equ 0FFDh ;# 
  1268                           # 14188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1269  0000                     TOSH equ 0FFEh ;# 
  1270                           # 14207 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1271  0000                     TOSU equ 0FFFh ;# 
  1272                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1273  0000                     SRCON1 equ 0F57h ;# 
  1274                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1275  0000                     SRCON0 equ 0F58h ;# 
  1276                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1277  0000                     CCPTMRS equ 0F59h ;# 
  1278                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1279  0000                     VREGCON equ 0F5Ah ;# 
  1280                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1281  0000                     ANSELA equ 0F5Bh ;# 
  1282                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1283  0000                     ANSELB equ 0F5Ch ;# 
  1284                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1285  0000                     ANSELC equ 0F5Dh ;# 
  1286                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1287  0000                     ANSELD equ 0F5Eh ;# 
  1288                           # 409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1289  0000                     ANSELE equ 0F5Fh ;# 
  1290                           # 440 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1291  0000                     UCON equ 0F60h ;# 
  1292                           # 490 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1293  0000                     USTAT equ 0F61h ;# 
  1294                           # 549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1295  0000                     UCFG equ 0F62h ;# 
  1296                           # 630 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1297  0000                     UADDR equ 0F63h ;# 
  1298                           # 693 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1299  0000                     UIE equ 0F64h ;# 
  1300                           # 748 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1301  0000                     UIR equ 0F65h ;# 
  1302                           # 803 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1303  0000                     UEIE equ 0F66h ;# 
  1304                           # 853 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1305  0000                     UEIR equ 0F67h ;# 
  1306                           # 903 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1307  0000                     UFRM equ 0F68h ;# 
  1308                           # 909 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1309  0000                     UFRML equ 0F68h ;# 
  1310                           # 986 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1311  0000                     UFRMH equ 0F69h ;# 
  1312                           # 1025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1313  0000                     UEP0 equ 0F6Ah ;# 
  1314                           # 1156 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1315  0000                     UEP1 equ 0F6Bh ;# 
  1316                           # 1287 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1317  0000                     UEP2 equ 0F6Ch ;# 
  1318                           # 1418 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1319  0000                     UEP3 equ 0F6Dh ;# 
  1320                           # 1549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1321  0000                     UEP4 equ 0F6Eh ;# 
  1322                           # 1680 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1323  0000                     UEP5 equ 0F6Fh ;# 
  1324                           # 1811 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1325  0000                     UEP6 equ 0F70h ;# 
  1326                           # 1942 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1327  0000                     UEP7 equ 0F71h ;# 
  1328                           # 2073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1329  0000                     UEP8 equ 0F72h ;# 
  1330                           # 2160 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1331  0000                     UEP9 equ 0F73h ;# 
  1332                           # 2247 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1333  0000                     UEP10 equ 0F74h ;# 
  1334                           # 2334 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1335  0000                     UEP11 equ 0F75h ;# 
  1336                           # 2421 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1337  0000                     UEP12 equ 0F76h ;# 
  1338                           # 2508 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1339  0000                     UEP13 equ 0F77h ;# 
  1340                           # 2595 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1341  0000                     UEP14 equ 0F78h ;# 
  1342                           # 2682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1343  0000                     UEP15 equ 0F79h ;# 
  1344                           # 2769 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1345  0000                     SLRCON equ 0F7Ah ;# 
  1346                           # 2812 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1347  0000                     VREFCON2 equ 0F7Bh ;# 
  1348                           # 2863 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1349  0000                     VREFCON1 equ 0F7Ch ;# 
  1350                           # 2923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1351  0000                     VREFCON0 equ 0F7Dh ;# 
  1352                           # 2982 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1353  0000                     PMD0 equ 0F7Eh ;# 
  1354                           # 3066 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1355  0000                     PMD1 equ 0F7Fh ;# 
  1356                           # 3147 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1357  0000                     PORTA equ 0F80h ;# 
  1358                           # 3300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1359  0000                     PORTB equ 0F81h ;# 
  1360                           # 3409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1361  0000                     PORTC equ 0F82h ;# 
  1362                           # 3562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1363  0000                     PORTD equ 0F83h ;# 
  1364                           # 3682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1365  0000                     PORTE equ 0F84h ;# 
  1366                           # 3926 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1367  0000                     IOCB equ 0F86h ;# 
  1368                           # 3964 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1369  0000                     IOCC equ 0F87h ;# 
  1370                           # 4020 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1371  0000                     CTMUICON equ 0F88h ;# 
  1372                           # 4095 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1373  0000                     LATA equ 0F89h ;# 
  1374                           # 4227 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1375  0000                     LATB equ 0F8Ah ;# 
  1376                           # 4359 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1377  0000                     LATC equ 0F8Bh ;# 
  1378                           # 4486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1379  0000                     LATD equ 0F8Ch ;# 
  1380                           # 4618 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1381  0000                     LATE equ 0F8Dh ;# 
  1382                           # 4720 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1383  0000                     CTMUCONL equ 0F8Eh ;# 
  1384                           # 4725 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1385  0000                     CTMUCON1 equ 0F8Eh ;# 
  1386                           # 4873 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1387  0000                     CTMUCONH equ 0F8Fh ;# 
  1388                           # 4878 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1389  0000                     CTMUCON0 equ 0F8Fh ;# 
  1390                           # 5028 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1391  0000                     CCPR2 equ 0F90h ;# 
  1392                           # 5034 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1393  0000                     CCPR2L equ 0F90h ;# 
  1394                           # 5053 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1395  0000                     CCPR2H equ 0F91h ;# 
  1396                           # 5072 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1397  0000                     TRISA equ 0F92h ;# 
  1398                           # 5077 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1399  0000                     DDRA equ 0F92h ;# 
  1400                           # 5281 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1401  0000                     TRISB equ 0F93h ;# 
  1402                           # 5286 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1403  0000                     DDRB equ 0F93h ;# 
  1404                           # 5502 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1405  0000                     TRISC equ 0F94h ;# 
  1406                           # 5507 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1407  0000                     DDRC equ 0F94h ;# 
  1408                           # 5697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1409  0000                     TRISD equ 0F95h ;# 
  1410                           # 5702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1411  0000                     DDRD equ 0F95h ;# 
  1412                           # 5918 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1413  0000                     TRISE equ 0F96h ;# 
  1414                           # 5923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1415  0000                     DDRE equ 0F96h ;# 
  1416                           # 6033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1417  0000                     CCP2CON equ 0F97h ;# 
  1418                           # 6038 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1419  0000                     ECCP2CON equ 0F97h ;# 
  1420                           # 6188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1421  0000                     CM1CON0 equ 0F98h ;# 
  1422                           # 6310 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1423  0000                     CM2CON0 equ 0F99h ;# 
  1424                           # 6432 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1425  0000                     CM2CON1 equ 0F9Ah ;# 
  1426                           # 6493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1427  0000                     OSCTUNE equ 0F9Bh ;# 
  1428                           # 6562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1429  0000                     HLVDCON equ 0F9Ch ;# 
  1430                           # 6631 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1431  0000                     PIE1 equ 0F9Dh ;# 
  1432                           # 6729 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1433  0000                     PIR1 equ 0F9Eh ;# 
  1434                           # 6827 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1435  0000                     IPR1 equ 0F9Fh ;# 
  1436                           # 6925 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1437  0000                     PIE2 equ 0FA0h ;# 
  1438                           # 7023 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1439  0000                     PIR2 equ 0FA1h ;# 
  1440                           # 7121 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1441  0000                     IPR2 equ 0FA2h ;# 
  1442                           # 7219 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1443  0000                     PIE3 equ 0FA3h ;# 
  1444                           # 7300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1445  0000                     PIR3 equ 0FA4h ;# 
  1446                           # 7346 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1447  0000                     IPR3 equ 0FA5h ;# 
  1448                           # 7392 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1449  0000                     EECON1 equ 0FA6h ;# 
  1450                           # 7457 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1451  0000                     EECON2 equ 0FA7h ;# 
  1452                           # 7476 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1453  0000                     EEDATA equ 0FA8h ;# 
  1454                           # 7482 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1455  0000                     EEADR equ 0FA9h ;# 
  1456                           # 7488 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1457  0000                     RCSTA1 equ 0FABh ;# 
  1458                           # 7493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1459  0000                     RCSTA equ 0FABh ;# 
  1460                           # 7697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1461  0000                     TXSTA1 equ 0FACh ;# 
  1462                           # 7702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1463  0000                     TXSTA equ 0FACh ;# 
  1464                           # 7994 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1465  0000                     TXREG1 equ 0FADh ;# 
  1466                           # 7999 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1467  0000                     TXREG equ 0FADh ;# 
  1468                           # 8031 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1469  0000                     RCREG1 equ 0FAEh ;# 
  1470                           # 8036 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1471  0000                     RCREG equ 0FAEh ;# 
  1472                           # 8068 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1473  0000                     SPBRG1 equ 0FAFh ;# 
  1474                           # 8073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1475  0000                     SPBRG equ 0FAFh ;# 
  1476                           # 8205 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1477  0000                     SPBRGH1 equ 0FB0h ;# 
  1478                           # 8210 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1479  0000                     SPBRGH equ 0FB0h ;# 
  1480                           # 8342 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1481  0000                     T3CON equ 0FB1h ;# 
  1482                           # 8472 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1483  0000                     TMR3 equ 0FB2h ;# 
  1484                           # 8478 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1485  0000                     TMR3L equ 0FB2h ;# 
  1486                           # 8497 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1487  0000                     TMR3H equ 0FB3h ;# 
  1488                           # 8516 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1489  0000                     T3GCON equ 0FB4h ;# 
  1490                           # 8646 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1491  0000                     ACTCON equ 0FB5h ;# 
  1492                           # 8651 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1493  0000                     STCON equ 0FB5h ;# 
  1494                           # 8851 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1495  0000                     ECCP1AS equ 0FB6h ;# 
  1496                           # 8984 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1497  0000                     PWM1CON equ 0FB7h ;# 
  1498                           # 8989 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1499  0000                     ECCP1DEL equ 0FB7h ;# 
  1500                           # 9133 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1501  0000                     BAUDCON1 equ 0FB8h ;# 
  1502                           # 9138 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1503  0000                     BAUDCON equ 0FB8h ;# 
  1504                           # 9142 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1505  0000                     BAUDCTL equ 0FB8h ;# 
  1506                           # 9684 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1507  0000                     PSTR1CON equ 0FB9h ;# 
  1508                           # 9759 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1509  0000                     T2CON equ 0FBAh ;# 
  1510                           # 9829 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1511  0000                     PR2 equ 0FBBh ;# 
  1512                           # 9848 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1513  0000                     TMR2 equ 0FBCh ;# 
  1514                           # 9867 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1515  0000                     CCP1CON equ 0FBDh ;# 
  1516                           # 9872 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1517  0000                     ECCP1CON equ 0FBDh ;# 
  1518                           # 10058 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1519  0000                     CCPR1 equ 0FBEh ;# 
  1520                           # 10064 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1521  0000                     CCPR1L equ 0FBEh ;# 
  1522                           # 10083 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1523  0000                     CCPR1H equ 0FBFh ;# 
  1524                           # 10102 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1525  0000                     ADCON2 equ 0FC0h ;# 
  1526                           # 10172 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1527  0000                     ADCON1 equ 0FC1h ;# 
  1528                           # 10239 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1529  0000                     ADCON0 equ 0FC2h ;# 
  1530                           # 10324 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1531  0000                     ADRESL equ 0FC3h ;# 
  1532                           # 10330 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1533  0000                     ADRESH equ 0FC4h ;# 
  1534                           # 10336 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1535  0000                     SSP1CON2 equ 0FC5h ;# 
  1536                           # 10341 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1537  0000                     SSPCON2 equ 0FC5h ;# 
  1538                           # 10779 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1539  0000                     SSP1CON1 equ 0FC6h ;# 
  1540                           # 10784 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1541  0000                     SSPCON equ 0FC6h ;# 
  1542                           # 10788 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1543  0000                     SSP1CON equ 0FC6h ;# 
  1544                           # 10792 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1545  0000                     SSPCON1 equ 0FC6h ;# 
  1546                           # 11332 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1547  0000                     SSP1STAT equ 0FC7h ;# 
  1548                           # 11337 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1549  0000                     SSPSTAT equ 0FC7h ;# 
  1550                           # 11991 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1551  0000                     SSP1ADD equ 0FC8h ;# 
  1552                           # 11996 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1553  0000                     SSPADD equ 0FC8h ;# 
  1554                           # 12412 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1555  0000                     SSP1BUF equ 0FC9h ;# 
  1556                           # 12417 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1557  0000                     SSPBUF equ 0FC9h ;# 
  1558                           # 12449 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1559  0000                     SSP1MSK equ 0FCAh ;# 
  1560                           # 12454 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1561  0000                     SSPMSK equ 0FCAh ;# 
  1562                           # 12586 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1563  0000                     SSP1CON3 equ 0FCBh ;# 
  1564                           # 12591 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1565  0000                     SSPCON3 equ 0FCBh ;# 
  1566                           # 12707 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1567  0000                     T1GCON equ 0FCCh ;# 
  1568                           # 12837 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1569  0000                     T1CON equ 0FCDh ;# 
  1570                           # 12949 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1571  0000                     TMR1 equ 0FCEh ;# 
  1572                           # 12955 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1573  0000                     TMR1L equ 0FCEh ;# 
  1574                           # 12974 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1575  0000                     TMR1H equ 0FCFh ;# 
  1576                           # 12993 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1577  0000                     RCON equ 0FD0h ;# 
  1578                           # 13125 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1579  0000                     WDTCON equ 0FD1h ;# 
  1580                           # 13152 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1581  0000                     OSCCON2 equ 0FD2h ;# 
  1582                           # 13213 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1583  0000                     OSCCON equ 0FD3h ;# 
  1584                           # 13295 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1585  0000                     T0CON equ 0FD5h ;# 
  1586                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1587  0000                     TMR0 equ 0FD6h ;# 
  1588                           # 13370 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1589  0000                     TMR0L equ 0FD6h ;# 
  1590                           # 13389 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1591  0000                     TMR0H equ 0FD7h ;# 
  1592                           # 13408 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1593  0000                     STATUS equ 0FD8h ;# 
  1594                           # 13486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1595  0000                     FSR2 equ 0FD9h ;# 
  1596                           # 13492 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1597  0000                     FSR2L equ 0FD9h ;# 
  1598                           # 13511 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1599  0000                     FSR2H equ 0FDAh ;# 
  1600                           # 13517 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1601  0000                     BSR equ 0FE0h ;# 
  1602                           # 13523 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1603  0000                     FSR1 equ 0FE1h ;# 
  1604                           # 13529 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1605  0000                     FSR1L equ 0FE1h ;# 
  1606                           # 13548 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1607  0000                     FSR1H equ 0FE2h ;# 
  1608                           # 13554 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1609  0000                     WREG equ 0FE8h ;# 
  1610                           # 13573 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1611  0000                     FSR0 equ 0FE9h ;# 
  1612                           # 13579 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1613  0000                     FSR0L equ 0FE9h ;# 
  1614                           # 13598 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1615  0000                     FSR0H equ 0FEAh ;# 
  1616                           # 13604 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1617  0000                     INDF0 equ 0FEFh ;# 
  1618                           # 13623 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1619  0000                     INTCON3 equ 0FF0h ;# 
  1620                           # 13714 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1621  0000                     INTCON2 equ 0FF1h ;# 
  1622                           # 13790 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1623  0000                     INTCON equ 0FF2h ;# 
  1624                           # 13916 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1625  0000                     PROD equ 0FF3h ;# 
  1626                           # 13922 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1627  0000                     PRODL equ 0FF3h ;# 
  1628                           # 13941 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1629  0000                     PRODH equ 0FF4h ;# 
  1630                           # 13960 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1631  0000                     TABLAT equ 0FF5h ;# 
  1632                           # 13981 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1633  0000                     TBLPTR equ 0FF6h ;# 
  1634                           # 13987 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1635  0000                     TBLPTRL equ 0FF6h ;# 
  1636                           # 14006 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1637  0000                     TBLPTRH equ 0FF7h ;# 
  1638                           # 14025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1639  0000                     TBLPTRU equ 0FF8h ;# 
  1640                           # 14033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1641  0000                     PCLAT equ 0FF9h ;# 
  1642                           # 14040 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1643  0000                     PC equ 0FF9h ;# 
  1644                           # 14046 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1645  0000                     PCL equ 0FF9h ;# 
  1646                           # 14065 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1647  0000                     PCLATH equ 0FFAh ;# 
  1648                           # 14084 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1649  0000                     PCLATU equ 0FFBh ;# 
  1650                           # 14090 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1651  0000                     STKPTR equ 0FFCh ;# 
  1652                           # 14163 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1653  0000                     TOS equ 0FFDh ;# 
  1654                           # 14169 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1655  0000                     TOSL equ 0FFDh ;# 
  1656                           # 14188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1657  0000                     TOSH equ 0FFEh ;# 
  1658                           # 14207 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1659  0000                     TOSU equ 0FFFh ;# 
  1660                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1661  0000                     SRCON1 equ 0F57h ;# 
  1662                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1663  0000                     SRCON0 equ 0F58h ;# 
  1664                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1665  0000                     CCPTMRS equ 0F59h ;# 
  1666                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1667  0000                     VREGCON equ 0F5Ah ;# 
  1668                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1669  0000                     ANSELA equ 0F5Bh ;# 
  1670                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1671  0000                     ANSELB equ 0F5Ch ;# 
  1672                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1673  0000                     ANSELC equ 0F5Dh ;# 
  1674                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1675  0000                     ANSELD equ 0F5Eh ;# 
  1676                           # 409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1677  0000                     ANSELE equ 0F5Fh ;# 
  1678                           # 440 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1679  0000                     UCON equ 0F60h ;# 
  1680                           # 490 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1681  0000                     USTAT equ 0F61h ;# 
  1682                           # 549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1683  0000                     UCFG equ 0F62h ;# 
  1684                           # 630 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1685  0000                     UADDR equ 0F63h ;# 
  1686                           # 693 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1687  0000                     UIE equ 0F64h ;# 
  1688                           # 748 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1689  0000                     UIR equ 0F65h ;# 
  1690                           # 803 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1691  0000                     UEIE equ 0F66h ;# 
  1692                           # 853 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1693  0000                     UEIR equ 0F67h ;# 
  1694                           # 903 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1695  0000                     UFRM equ 0F68h ;# 
  1696                           # 909 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1697  0000                     UFRML equ 0F68h ;# 
  1698                           # 986 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1699  0000                     UFRMH equ 0F69h ;# 
  1700                           # 1025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1701  0000                     UEP0 equ 0F6Ah ;# 
  1702                           # 1156 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1703  0000                     UEP1 equ 0F6Bh ;# 
  1704                           # 1287 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1705  0000                     UEP2 equ 0F6Ch ;# 
  1706                           # 1418 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1707  0000                     UEP3 equ 0F6Dh ;# 
  1708                           # 1549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1709  0000                     UEP4 equ 0F6Eh ;# 
  1710                           # 1680 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1711  0000                     UEP5 equ 0F6Fh ;# 
  1712                           # 1811 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1713  0000                     UEP6 equ 0F70h ;# 
  1714                           # 1942 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1715  0000                     UEP7 equ 0F71h ;# 
  1716                           # 2073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1717  0000                     UEP8 equ 0F72h ;# 
  1718                           # 2160 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1719  0000                     UEP9 equ 0F73h ;# 
  1720                           # 2247 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1721  0000                     UEP10 equ 0F74h ;# 
  1722                           # 2334 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1723  0000                     UEP11 equ 0F75h ;# 
  1724                           # 2421 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1725  0000                     UEP12 equ 0F76h ;# 
  1726                           # 2508 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1727  0000                     UEP13 equ 0F77h ;# 
  1728                           # 2595 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1729  0000                     UEP14 equ 0F78h ;# 
  1730                           # 2682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1731  0000                     UEP15 equ 0F79h ;# 
  1732                           # 2769 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1733  0000                     SLRCON equ 0F7Ah ;# 
  1734                           # 2812 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1735  0000                     VREFCON2 equ 0F7Bh ;# 
  1736                           # 2863 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1737  0000                     VREFCON1 equ 0F7Ch ;# 
  1738                           # 2923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1739  0000                     VREFCON0 equ 0F7Dh ;# 
  1740                           # 2982 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1741  0000                     PMD0 equ 0F7Eh ;# 
  1742                           # 3066 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1743  0000                     PMD1 equ 0F7Fh ;# 
  1744                           # 3147 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1745  0000                     PORTA equ 0F80h ;# 
  1746                           # 3300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1747  0000                     PORTB equ 0F81h ;# 
  1748                           # 3409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1749  0000                     PORTC equ 0F82h ;# 
  1750                           # 3562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1751  0000                     PORTD equ 0F83h ;# 
  1752                           # 3682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1753  0000                     PORTE equ 0F84h ;# 
  1754                           # 3926 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1755  0000                     IOCB equ 0F86h ;# 
  1756                           # 3964 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1757  0000                     IOCC equ 0F87h ;# 
  1758                           # 4020 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1759  0000                     CTMUICON equ 0F88h ;# 
  1760                           # 4095 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1761  0000                     LATA equ 0F89h ;# 
  1762                           # 4227 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1763  0000                     LATB equ 0F8Ah ;# 
  1764                           # 4359 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1765  0000                     LATC equ 0F8Bh ;# 
  1766                           # 4486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1767  0000                     LATD equ 0F8Ch ;# 
  1768                           # 4618 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1769  0000                     LATE equ 0F8Dh ;# 
  1770                           # 4720 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1771  0000                     CTMUCONL equ 0F8Eh ;# 
  1772                           # 4725 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1773  0000                     CTMUCON1 equ 0F8Eh ;# 
  1774                           # 4873 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1775  0000                     CTMUCONH equ 0F8Fh ;# 
  1776                           # 4878 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1777  0000                     CTMUCON0 equ 0F8Fh ;# 
  1778                           # 5028 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1779  0000                     CCPR2 equ 0F90h ;# 
  1780                           # 5034 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1781  0000                     CCPR2L equ 0F90h ;# 
  1782                           # 5053 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1783  0000                     CCPR2H equ 0F91h ;# 
  1784                           # 5072 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1785  0000                     TRISA equ 0F92h ;# 
  1786                           # 5077 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1787  0000                     DDRA equ 0F92h ;# 
  1788                           # 5281 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1789  0000                     TRISB equ 0F93h ;# 
  1790                           # 5286 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1791  0000                     DDRB equ 0F93h ;# 
  1792                           # 5502 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1793  0000                     TRISC equ 0F94h ;# 
  1794                           # 5507 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1795  0000                     DDRC equ 0F94h ;# 
  1796                           # 5697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1797  0000                     TRISD equ 0F95h ;# 
  1798                           # 5702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1799  0000                     DDRD equ 0F95h ;# 
  1800                           # 5918 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1801  0000                     TRISE equ 0F96h ;# 
  1802                           # 5923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1803  0000                     DDRE equ 0F96h ;# 
  1804                           # 6033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1805  0000                     CCP2CON equ 0F97h ;# 
  1806                           # 6038 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1807  0000                     ECCP2CON equ 0F97h ;# 
  1808                           # 6188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1809  0000                     CM1CON0 equ 0F98h ;# 
  1810                           # 6310 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1811  0000                     CM2CON0 equ 0F99h ;# 
  1812                           # 6432 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1813  0000                     CM2CON1 equ 0F9Ah ;# 
  1814                           # 6493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1815  0000                     OSCTUNE equ 0F9Bh ;# 
  1816                           # 6562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1817  0000                     HLVDCON equ 0F9Ch ;# 
  1818                           # 6631 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1819  0000                     PIE1 equ 0F9Dh ;# 
  1820                           # 6729 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1821  0000                     PIR1 equ 0F9Eh ;# 
  1822                           # 6827 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1823  0000                     IPR1 equ 0F9Fh ;# 
  1824                           # 6925 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1825  0000                     PIE2 equ 0FA0h ;# 
  1826                           # 7023 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1827  0000                     PIR2 equ 0FA1h ;# 
  1828                           # 7121 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1829  0000                     IPR2 equ 0FA2h ;# 
  1830                           # 7219 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1831  0000                     PIE3 equ 0FA3h ;# 
  1832                           # 7300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1833  0000                     PIR3 equ 0FA4h ;# 
  1834                           # 7346 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1835  0000                     IPR3 equ 0FA5h ;# 
  1836                           # 7392 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1837  0000                     EECON1 equ 0FA6h ;# 
  1838                           # 7457 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1839  0000                     EECON2 equ 0FA7h ;# 
  1840                           # 7476 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1841  0000                     EEDATA equ 0FA8h ;# 
  1842                           # 7482 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1843  0000                     EEADR equ 0FA9h ;# 
  1844                           # 7488 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1845  0000                     RCSTA1 equ 0FABh ;# 
  1846                           # 7493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1847  0000                     RCSTA equ 0FABh ;# 
  1848                           # 7697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1849  0000                     TXSTA1 equ 0FACh ;# 
  1850                           # 7702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1851  0000                     TXSTA equ 0FACh ;# 
  1852                           # 7994 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1853  0000                     TXREG1 equ 0FADh ;# 
  1854                           # 7999 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1855  0000                     TXREG equ 0FADh ;# 
  1856                           # 8031 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1857  0000                     RCREG1 equ 0FAEh ;# 
  1858                           # 8036 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1859  0000                     RCREG equ 0FAEh ;# 
  1860                           # 8068 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1861  0000                     SPBRG1 equ 0FAFh ;# 
  1862                           # 8073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1863  0000                     SPBRG equ 0FAFh ;# 
  1864                           # 8205 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1865  0000                     SPBRGH1 equ 0FB0h ;# 
  1866                           # 8210 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1867  0000                     SPBRGH equ 0FB0h ;# 
  1868                           # 8342 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1869  0000                     T3CON equ 0FB1h ;# 
  1870                           # 8472 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1871  0000                     TMR3 equ 0FB2h ;# 
  1872                           # 8478 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1873  0000                     TMR3L equ 0FB2h ;# 
  1874                           # 8497 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1875  0000                     TMR3H equ 0FB3h ;# 
  1876                           # 8516 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1877  0000                     T3GCON equ 0FB4h ;# 
  1878                           # 8646 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1879  0000                     ACTCON equ 0FB5h ;# 
  1880                           # 8651 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1881  0000                     STCON equ 0FB5h ;# 
  1882                           # 8851 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1883  0000                     ECCP1AS equ 0FB6h ;# 
  1884                           # 8984 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1885  0000                     PWM1CON equ 0FB7h ;# 
  1886                           # 8989 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1887  0000                     ECCP1DEL equ 0FB7h ;# 
  1888                           # 9133 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1889  0000                     BAUDCON1 equ 0FB8h ;# 
  1890                           # 9138 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1891  0000                     BAUDCON equ 0FB8h ;# 
  1892                           # 9142 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1893  0000                     BAUDCTL equ 0FB8h ;# 
  1894                           # 9684 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1895  0000                     PSTR1CON equ 0FB9h ;# 
  1896                           # 9759 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1897  0000                     T2CON equ 0FBAh ;# 
  1898                           # 9829 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1899  0000                     PR2 equ 0FBBh ;# 
  1900                           # 9848 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1901  0000                     TMR2 equ 0FBCh ;# 
  1902                           # 9867 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1903  0000                     CCP1CON equ 0FBDh ;# 
  1904                           # 9872 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1905  0000                     ECCP1CON equ 0FBDh ;# 
  1906                           # 10058 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1907  0000                     CCPR1 equ 0FBEh ;# 
  1908                           # 10064 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1909  0000                     CCPR1L equ 0FBEh ;# 
  1910                           # 10083 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1911  0000                     CCPR1H equ 0FBFh ;# 
  1912                           # 10102 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1913  0000                     ADCON2 equ 0FC0h ;# 
  1914                           # 10172 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1915  0000                     ADCON1 equ 0FC1h ;# 
  1916                           # 10239 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1917  0000                     ADCON0 equ 0FC2h ;# 
  1918                           # 10324 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1919  0000                     ADRESL equ 0FC3h ;# 
  1920                           # 10330 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1921  0000                     ADRESH equ 0FC4h ;# 
  1922                           # 10336 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1923  0000                     SSP1CON2 equ 0FC5h ;# 
  1924                           # 10341 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1925  0000                     SSPCON2 equ 0FC5h ;# 
  1926                           # 10779 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1927  0000                     SSP1CON1 equ 0FC6h ;# 
  1928                           # 10784 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1929  0000                     SSPCON equ 0FC6h ;# 
  1930                           # 10788 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1931  0000                     SSP1CON equ 0FC6h ;# 
  1932                           # 10792 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1933  0000                     SSPCON1 equ 0FC6h ;# 
  1934                           # 11332 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1935  0000                     SSP1STAT equ 0FC7h ;# 
  1936                           # 11337 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1937  0000                     SSPSTAT equ 0FC7h ;# 
  1938                           # 11991 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1939  0000                     SSP1ADD equ 0FC8h ;# 
  1940                           # 11996 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1941  0000                     SSPADD equ 0FC8h ;# 
  1942                           # 12412 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1943  0000                     SSP1BUF equ 0FC9h ;# 
  1944                           # 12417 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1945  0000                     SSPBUF equ 0FC9h ;# 
  1946                           # 12449 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1947  0000                     SSP1MSK equ 0FCAh ;# 
  1948                           # 12454 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1949  0000                     SSPMSK equ 0FCAh ;# 
  1950                           # 12586 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1951  0000                     SSP1CON3 equ 0FCBh ;# 
  1952                           # 12591 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1953  0000                     SSPCON3 equ 0FCBh ;# 
  1954                           # 12707 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1955  0000                     T1GCON equ 0FCCh ;# 
  1956                           # 12837 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1957  0000                     T1CON equ 0FCDh ;# 
  1958                           # 12949 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1959  0000                     TMR1 equ 0FCEh ;# 
  1960                           # 12955 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1961  0000                     TMR1L equ 0FCEh ;# 
  1962                           # 12974 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1963  0000                     TMR1H equ 0FCFh ;# 
  1964                           # 12993 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1965  0000                     RCON equ 0FD0h ;# 
  1966                           # 13125 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1967  0000                     WDTCON equ 0FD1h ;# 
  1968                           # 13152 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1969  0000                     OSCCON2 equ 0FD2h ;# 
  1970                           # 13213 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1971  0000                     OSCCON equ 0FD3h ;# 
  1972                           # 13295 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1973  0000                     T0CON equ 0FD5h ;# 
  1974                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1975  0000                     TMR0 equ 0FD6h ;# 
  1976                           # 13370 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1977  0000                     TMR0L equ 0FD6h ;# 
  1978                           # 13389 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1979  0000                     TMR0H equ 0FD7h ;# 
  1980                           # 13408 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1981  0000                     STATUS equ 0FD8h ;# 
  1982                           # 13486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1983  0000                     FSR2 equ 0FD9h ;# 
  1984                           # 13492 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1985  0000                     FSR2L equ 0FD9h ;# 
  1986                           # 13511 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1987  0000                     FSR2H equ 0FDAh ;# 
  1988                           # 13517 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1989  0000                     BSR equ 0FE0h ;# 
  1990                           # 13523 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1991  0000                     FSR1 equ 0FE1h ;# 
  1992                           # 13529 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1993  0000                     FSR1L equ 0FE1h ;# 
  1994                           # 13548 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1995  0000                     FSR1H equ 0FE2h ;# 
  1996                           # 13554 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1997  0000                     WREG equ 0FE8h ;# 
  1998                           # 13573 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  1999  0000                     FSR0 equ 0FE9h ;# 
  2000                           # 13579 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2001  0000                     FSR0L equ 0FE9h ;# 
  2002                           # 13598 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2003  0000                     FSR0H equ 0FEAh ;# 
  2004                           # 13604 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2005  0000                     INDF0 equ 0FEFh ;# 
  2006                           # 13623 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2007  0000                     INTCON3 equ 0FF0h ;# 
  2008                           # 13714 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2009  0000                     INTCON2 equ 0FF1h ;# 
  2010                           # 13790 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2011  0000                     INTCON equ 0FF2h ;# 
  2012                           # 13916 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2013  0000                     PROD equ 0FF3h ;# 
  2014                           # 13922 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2015  0000                     PRODL equ 0FF3h ;# 
  2016                           # 13941 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2017  0000                     PRODH equ 0FF4h ;# 
  2018                           # 13960 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2019  0000                     TABLAT equ 0FF5h ;# 
  2020                           # 13981 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2021  0000                     TBLPTR equ 0FF6h ;# 
  2022                           # 13987 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2023  0000                     TBLPTRL equ 0FF6h ;# 
  2024                           # 14006 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2025  0000                     TBLPTRH equ 0FF7h ;# 
  2026                           # 14025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2027  0000                     TBLPTRU equ 0FF8h ;# 
  2028                           # 14033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2029  0000                     PCLAT equ 0FF9h ;# 
  2030                           # 14040 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2031  0000                     PC equ 0FF9h ;# 
  2032                           # 14046 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2033  0000                     PCL equ 0FF9h ;# 
  2034                           # 14065 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2035  0000                     PCLATH equ 0FFAh ;# 
  2036                           # 14084 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2037  0000                     PCLATU equ 0FFBh ;# 
  2038                           # 14090 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2039  0000                     STKPTR equ 0FFCh ;# 
  2040                           # 14163 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2041  0000                     TOS equ 0FFDh ;# 
  2042                           # 14169 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2043  0000                     TOSL equ 0FFDh ;# 
  2044                           # 14188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2045  0000                     TOSH equ 0FFEh ;# 
  2046                           # 14207 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2047  0000                     TOSU equ 0FFFh ;# 
  2048                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2049  0000                     SRCON1 equ 0F57h ;# 
  2050                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2051  0000                     SRCON0 equ 0F58h ;# 
  2052                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2053  0000                     CCPTMRS equ 0F59h ;# 
  2054                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2055  0000                     VREGCON equ 0F5Ah ;# 
  2056                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2057  0000                     ANSELA equ 0F5Bh ;# 
  2058                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2059  0000                     ANSELB equ 0F5Ch ;# 
  2060                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2061  0000                     ANSELC equ 0F5Dh ;# 
  2062                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2063  0000                     ANSELD equ 0F5Eh ;# 
  2064                           # 409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2065  0000                     ANSELE equ 0F5Fh ;# 
  2066                           # 440 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2067  0000                     UCON equ 0F60h ;# 
  2068                           # 490 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2069  0000                     USTAT equ 0F61h ;# 
  2070                           # 549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2071  0000                     UCFG equ 0F62h ;# 
  2072                           # 630 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2073  0000                     UADDR equ 0F63h ;# 
  2074                           # 693 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2075  0000                     UIE equ 0F64h ;# 
  2076                           # 748 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2077  0000                     UIR equ 0F65h ;# 
  2078                           # 803 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2079  0000                     UEIE equ 0F66h ;# 
  2080                           # 853 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2081  0000                     UEIR equ 0F67h ;# 
  2082                           # 903 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2083  0000                     UFRM equ 0F68h ;# 
  2084                           # 909 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2085  0000                     UFRML equ 0F68h ;# 
  2086                           # 986 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2087  0000                     UFRMH equ 0F69h ;# 
  2088                           # 1025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2089  0000                     UEP0 equ 0F6Ah ;# 
  2090                           # 1156 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2091  0000                     UEP1 equ 0F6Bh ;# 
  2092                           # 1287 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2093  0000                     UEP2 equ 0F6Ch ;# 
  2094                           # 1418 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2095  0000                     UEP3 equ 0F6Dh ;# 
  2096                           # 1549 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2097  0000                     UEP4 equ 0F6Eh ;# 
  2098                           # 1680 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2099  0000                     UEP5 equ 0F6Fh ;# 
  2100                           # 1811 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2101  0000                     UEP6 equ 0F70h ;# 
  2102                           # 1942 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2103  0000                     UEP7 equ 0F71h ;# 
  2104                           # 2073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2105  0000                     UEP8 equ 0F72h ;# 
  2106                           # 2160 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2107  0000                     UEP9 equ 0F73h ;# 
  2108                           # 2247 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2109  0000                     UEP10 equ 0F74h ;# 
  2110                           # 2334 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2111  0000                     UEP11 equ 0F75h ;# 
  2112                           # 2421 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2113  0000                     UEP12 equ 0F76h ;# 
  2114                           # 2508 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2115  0000                     UEP13 equ 0F77h ;# 
  2116                           # 2595 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2117  0000                     UEP14 equ 0F78h ;# 
  2118                           # 2682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2119  0000                     UEP15 equ 0F79h ;# 
  2120                           # 2769 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2121  0000                     SLRCON equ 0F7Ah ;# 
  2122                           # 2812 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2123  0000                     VREFCON2 equ 0F7Bh ;# 
  2124                           # 2863 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2125  0000                     VREFCON1 equ 0F7Ch ;# 
  2126                           # 2923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2127  0000                     VREFCON0 equ 0F7Dh ;# 
  2128                           # 2982 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2129  0000                     PMD0 equ 0F7Eh ;# 
  2130                           # 3066 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2131  0000                     PMD1 equ 0F7Fh ;# 
  2132                           # 3147 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2133  0000                     PORTA equ 0F80h ;# 
  2134                           # 3300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2135  0000                     PORTB equ 0F81h ;# 
  2136                           # 3409 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2137  0000                     PORTC equ 0F82h ;# 
  2138                           # 3562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2139  0000                     PORTD equ 0F83h ;# 
  2140                           # 3682 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2141  0000                     PORTE equ 0F84h ;# 
  2142                           # 3926 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2143  0000                     IOCB equ 0F86h ;# 
  2144                           # 3964 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2145  0000                     IOCC equ 0F87h ;# 
  2146                           # 4020 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2147  0000                     CTMUICON equ 0F88h ;# 
  2148                           # 4095 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2149  0000                     LATA equ 0F89h ;# 
  2150                           # 4227 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2151  0000                     LATB equ 0F8Ah ;# 
  2152                           # 4359 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2153  0000                     LATC equ 0F8Bh ;# 
  2154                           # 4486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2155  0000                     LATD equ 0F8Ch ;# 
  2156                           # 4618 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2157  0000                     LATE equ 0F8Dh ;# 
  2158                           # 4720 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2159  0000                     CTMUCONL equ 0F8Eh ;# 
  2160                           # 4725 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2161  0000                     CTMUCON1 equ 0F8Eh ;# 
  2162                           # 4873 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2163  0000                     CTMUCONH equ 0F8Fh ;# 
  2164                           # 4878 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2165  0000                     CTMUCON0 equ 0F8Fh ;# 
  2166                           # 5028 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2167  0000                     CCPR2 equ 0F90h ;# 
  2168                           # 5034 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2169  0000                     CCPR2L equ 0F90h ;# 
  2170                           # 5053 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2171  0000                     CCPR2H equ 0F91h ;# 
  2172                           # 5072 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2173  0000                     TRISA equ 0F92h ;# 
  2174                           # 5077 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2175  0000                     DDRA equ 0F92h ;# 
  2176                           # 5281 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2177  0000                     TRISB equ 0F93h ;# 
  2178                           # 5286 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2179  0000                     DDRB equ 0F93h ;# 
  2180                           # 5502 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2181  0000                     TRISC equ 0F94h ;# 
  2182                           # 5507 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2183  0000                     DDRC equ 0F94h ;# 
  2184                           # 5697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2185  0000                     TRISD equ 0F95h ;# 
  2186                           # 5702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2187  0000                     DDRD equ 0F95h ;# 
  2188                           # 5918 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2189  0000                     TRISE equ 0F96h ;# 
  2190                           # 5923 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2191  0000                     DDRE equ 0F96h ;# 
  2192                           # 6033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2193  0000                     CCP2CON equ 0F97h ;# 
  2194                           # 6038 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2195  0000                     ECCP2CON equ 0F97h ;# 
  2196                           # 6188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2197  0000                     CM1CON0 equ 0F98h ;# 
  2198                           # 6310 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2199  0000                     CM2CON0 equ 0F99h ;# 
  2200                           # 6432 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2201  0000                     CM2CON1 equ 0F9Ah ;# 
  2202                           # 6493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2203  0000                     OSCTUNE equ 0F9Bh ;# 
  2204                           # 6562 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2205  0000                     HLVDCON equ 0F9Ch ;# 
  2206                           # 6631 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2207  0000                     PIE1 equ 0F9Dh ;# 
  2208                           # 6729 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2209  0000                     PIR1 equ 0F9Eh ;# 
  2210                           # 6827 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2211  0000                     IPR1 equ 0F9Fh ;# 
  2212                           # 6925 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2213  0000                     PIE2 equ 0FA0h ;# 
  2214                           # 7023 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2215  0000                     PIR2 equ 0FA1h ;# 
  2216                           # 7121 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2217  0000                     IPR2 equ 0FA2h ;# 
  2218                           # 7219 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2219  0000                     PIE3 equ 0FA3h ;# 
  2220                           # 7300 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2221  0000                     PIR3 equ 0FA4h ;# 
  2222                           # 7346 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2223  0000                     IPR3 equ 0FA5h ;# 
  2224                           # 7392 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2225  0000                     EECON1 equ 0FA6h ;# 
  2226                           # 7457 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2227  0000                     EECON2 equ 0FA7h ;# 
  2228                           # 7476 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2229  0000                     EEDATA equ 0FA8h ;# 
  2230                           # 7482 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2231  0000                     EEADR equ 0FA9h ;# 
  2232                           # 7488 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2233  0000                     RCSTA1 equ 0FABh ;# 
  2234                           # 7493 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2235  0000                     RCSTA equ 0FABh ;# 
  2236                           # 7697 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2237  0000                     TXSTA1 equ 0FACh ;# 
  2238                           # 7702 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2239  0000                     TXSTA equ 0FACh ;# 
  2240                           # 7994 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2241  0000                     TXREG1 equ 0FADh ;# 
  2242                           # 7999 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2243  0000                     TXREG equ 0FADh ;# 
  2244                           # 8031 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2245  0000                     RCREG1 equ 0FAEh ;# 
  2246                           # 8036 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2247  0000                     RCREG equ 0FAEh ;# 
  2248                           # 8068 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2249  0000                     SPBRG1 equ 0FAFh ;# 
  2250                           # 8073 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2251  0000                     SPBRG equ 0FAFh ;# 
  2252                           # 8205 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2253  0000                     SPBRGH1 equ 0FB0h ;# 
  2254                           # 8210 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2255  0000                     SPBRGH equ 0FB0h ;# 
  2256                           # 8342 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2257  0000                     T3CON equ 0FB1h ;# 
  2258                           # 8472 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2259  0000                     TMR3 equ 0FB2h ;# 
  2260                           # 8478 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2261  0000                     TMR3L equ 0FB2h ;# 
  2262                           # 8497 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2263  0000                     TMR3H equ 0FB3h ;# 
  2264                           # 8516 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2265  0000                     T3GCON equ 0FB4h ;# 
  2266                           # 8646 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2267  0000                     ACTCON equ 0FB5h ;# 
  2268                           # 8651 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2269  0000                     STCON equ 0FB5h ;# 
  2270                           # 8851 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2271  0000                     ECCP1AS equ 0FB6h ;# 
  2272                           # 8984 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2273  0000                     PWM1CON equ 0FB7h ;# 
  2274                           # 8989 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2275  0000                     ECCP1DEL equ 0FB7h ;# 
  2276                           # 9133 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2277  0000                     BAUDCON1 equ 0FB8h ;# 
  2278                           # 9138 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2279  0000                     BAUDCON equ 0FB8h ;# 
  2280                           # 9142 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2281  0000                     BAUDCTL equ 0FB8h ;# 
  2282                           # 9684 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2283  0000                     PSTR1CON equ 0FB9h ;# 
  2284                           # 9759 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2285  0000                     T2CON equ 0FBAh ;# 
  2286                           # 9829 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2287  0000                     PR2 equ 0FBBh ;# 
  2288                           # 9848 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2289  0000                     TMR2 equ 0FBCh ;# 
  2290                           # 9867 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2291  0000                     CCP1CON equ 0FBDh ;# 
  2292                           # 9872 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2293  0000                     ECCP1CON equ 0FBDh ;# 
  2294                           # 10058 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2295  0000                     CCPR1 equ 0FBEh ;# 
  2296                           # 10064 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2297  0000                     CCPR1L equ 0FBEh ;# 
  2298                           # 10083 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2299  0000                     CCPR1H equ 0FBFh ;# 
  2300                           # 10102 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2301  0000                     ADCON2 equ 0FC0h ;# 
  2302                           # 10172 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2303  0000                     ADCON1 equ 0FC1h ;# 
  2304                           # 10239 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2305  0000                     ADCON0 equ 0FC2h ;# 
  2306                           # 10324 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2307  0000                     ADRESL equ 0FC3h ;# 
  2308                           # 10330 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2309  0000                     ADRESH equ 0FC4h ;# 
  2310                           # 10336 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2311  0000                     SSP1CON2 equ 0FC5h ;# 
  2312                           # 10341 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2313  0000                     SSPCON2 equ 0FC5h ;# 
  2314                           # 10779 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2315  0000                     SSP1CON1 equ 0FC6h ;# 
  2316                           # 10784 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2317  0000                     SSPCON equ 0FC6h ;# 
  2318                           # 10788 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2319  0000                     SSP1CON equ 0FC6h ;# 
  2320                           # 10792 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2321  0000                     SSPCON1 equ 0FC6h ;# 
  2322                           # 11332 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2323  0000                     SSP1STAT equ 0FC7h ;# 
  2324                           # 11337 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2325  0000                     SSPSTAT equ 0FC7h ;# 
  2326                           # 11991 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2327  0000                     SSP1ADD equ 0FC8h ;# 
  2328                           # 11996 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2329  0000                     SSPADD equ 0FC8h ;# 
  2330                           # 12412 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2331  0000                     SSP1BUF equ 0FC9h ;# 
  2332                           # 12417 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2333  0000                     SSPBUF equ 0FC9h ;# 
  2334                           # 12449 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2335  0000                     SSP1MSK equ 0FCAh ;# 
  2336                           # 12454 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2337  0000                     SSPMSK equ 0FCAh ;# 
  2338                           # 12586 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2339  0000                     SSP1CON3 equ 0FCBh ;# 
  2340                           # 12591 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2341  0000                     SSPCON3 equ 0FCBh ;# 
  2342                           # 12707 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2343  0000                     T1GCON equ 0FCCh ;# 
  2344                           # 12837 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2345  0000                     T1CON equ 0FCDh ;# 
  2346                           # 12949 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2347  0000                     TMR1 equ 0FCEh ;# 
  2348                           # 12955 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2349  0000                     TMR1L equ 0FCEh ;# 
  2350                           # 12974 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2351  0000                     TMR1H equ 0FCFh ;# 
  2352                           # 12993 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2353  0000                     RCON equ 0FD0h ;# 
  2354                           # 13125 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2355  0000                     WDTCON equ 0FD1h ;# 
  2356                           # 13152 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2357  0000                     OSCCON2 equ 0FD2h ;# 
  2358                           # 13213 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2359  0000                     OSCCON equ 0FD3h ;# 
  2360                           # 13295 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2361  0000                     T0CON equ 0FD5h ;# 
  2362                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2363  0000                     TMR0 equ 0FD6h ;# 
  2364                           # 13370 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2365  0000                     TMR0L equ 0FD6h ;# 
  2366                           # 13389 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2367  0000                     TMR0H equ 0FD7h ;# 
  2368                           # 13408 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2369  0000                     STATUS equ 0FD8h ;# 
  2370                           # 13486 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2371  0000                     FSR2 equ 0FD9h ;# 
  2372                           # 13492 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2373  0000                     FSR2L equ 0FD9h ;# 
  2374                           # 13511 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2375  0000                     FSR2H equ 0FDAh ;# 
  2376                           # 13517 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2377  0000                     BSR equ 0FE0h ;# 
  2378                           # 13523 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2379  0000                     FSR1 equ 0FE1h ;# 
  2380                           # 13529 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2381  0000                     FSR1L equ 0FE1h ;# 
  2382                           # 13548 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2383  0000                     FSR1H equ 0FE2h ;# 
  2384                           # 13554 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2385  0000                     WREG equ 0FE8h ;# 
  2386                           # 13573 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2387  0000                     FSR0 equ 0FE9h ;# 
  2388                           # 13579 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2389  0000                     FSR0L equ 0FE9h ;# 
  2390                           # 13598 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2391  0000                     FSR0H equ 0FEAh ;# 
  2392                           # 13604 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2393  0000                     INDF0 equ 0FEFh ;# 
  2394                           # 13623 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2395  0000                     INTCON3 equ 0FF0h ;# 
  2396                           # 13714 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2397  0000                     INTCON2 equ 0FF1h ;# 
  2398                           # 13790 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2399  0000                     INTCON equ 0FF2h ;# 
  2400                           # 13916 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2401  0000                     PROD equ 0FF3h ;# 
  2402                           # 13922 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2403  0000                     PRODL equ 0FF3h ;# 
  2404                           # 13941 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2405  0000                     PRODH equ 0FF4h ;# 
  2406                           # 13960 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2407  0000                     TABLAT equ 0FF5h ;# 
  2408                           # 13981 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2409  0000                     TBLPTR equ 0FF6h ;# 
  2410                           # 13987 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2411  0000                     TBLPTRL equ 0FF6h ;# 
  2412                           # 14006 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2413  0000                     TBLPTRH equ 0FF7h ;# 
  2414                           # 14025 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2415  0000                     TBLPTRU equ 0FF8h ;# 
  2416                           # 14033 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2417  0000                     PCLAT equ 0FF9h ;# 
  2418                           # 14040 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2419  0000                     PC equ 0FF9h ;# 
  2420                           # 14046 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2421  0000                     PCL equ 0FF9h ;# 
  2422                           # 14065 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2423  0000                     PCLATH equ 0FFAh ;# 
  2424                           # 14084 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2425  0000                     PCLATU equ 0FFBh ;# 
  2426                           # 14090 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2427  0000                     STKPTR equ 0FFCh ;# 
  2428                           # 14163 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2429  0000                     TOS equ 0FFDh ;# 
  2430                           # 14169 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2431  0000                     TOSL equ 0FFDh ;# 
  2432                           # 14188 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2433  0000                     TOSH equ 0FFEh ;# 
  2434                           # 14207 "/opt/microchip/xc8/v1.11/include/pic18f45k50.h"
  2435  0000                     TOSU equ 0FFFh ;# 
  2436                           	FNCALL	_main,_InitializeSystem
  2437                           	FNCALL	_main,_USBTasks
  2438                           	FNCALL	_main,_BlinkUSBStatus
  2439                           	FNCALL	_main,_ProcessIO
  2440                           	FNCALL	_InitializeSystem,_UserInit
  2441                           	FNCALL	_USBTasks,_USBCheckBusStatus
  2442                           	FNCALL	_USBTasks,_USBDriverService
  2443                           	FNCALL	_ProcessIO,_HIDRxReport
  2444                           	FNCALL	_ProcessIO,_HIDTxReport
  2445                           	FNCALL	_ProcessIO,_ClearWatchdog
  2446                           	FNCALL	_ProcessIO,_UnlockAndActivate
  2447                           	FNCALL	_ProcessIO,_USBDriverService
  2448                           	FNCALL	_ProcessIO,_WriteConfigBits
  2449                           	FNCALL	_ProcessIO,_WriteEEPROM
  2450                           	FNCALL	_ProcessIO,_WriteFlashBlock
  2451                           	FNCALL	_ProcessIO,_TableReadPostIncrement
  2452                           	FNCALL	_ProcessIO,_ResetDeviceCleanly
  2453                           	FNCALL	_USBCheckBusStatus,_USBModuleEnable
  2454                           	FNCALL	_USBDriverService,_USBWakeFromSuspend
  2455                           	FNCALL	_USBDriverService,_USBProtocolResetHandler
  2456                           	FNCALL	_USBDriverService,_USBSuspend
  2457                           	FNCALL	_USBDriverService,_USBStallHandler
  2458                           	FNCALL	_USBDriverService,_USBCtrlEPService
  2459                           	FNCALL	_USBCtrlEPService,_USBCtrlTrfSetupHandler
  2460                           	FNCALL	_USBCtrlEPService,_USBCtrlTrfOutHandler
  2461                           	FNCALL	_USBCtrlEPService,_USBCtrlTrfInHandler
  2462                           	FNCALL	_USBCtrlTrfSetupHandler,_USBCheckStdRequest
  2463                           	FNCALL	_USBCtrlTrfSetupHandler,_USBCheckHIDRequest
  2464                           	FNCALL	_USBCtrlTrfSetupHandler,_USBCtrlEPServiceComplete
  2465                           	FNCALL	_USBCheckHIDRequest,_HIDGetReportHandler
  2466                           	FNCALL	_USBCheckHIDRequest,_HIDSetReportHandler
  2467                           	FNCALL	_USBCheckStdRequest,_USBStdGetDscHandler
  2468                           	FNCALL	_USBCheckStdRequest,_USBStdSetCfgHandler
  2469                           	FNCALL	_USBCheckStdRequest,_USBStdGetStatusHandler
  2470                           	FNCALL	_USBCheckStdRequest,_USBStdFeatureReqHandler
  2471                           	FNCALL	_USBStdSetCfgHandler,_ClearArray
  2472                           	FNCALL	_USBStdSetCfgHandler,_HIDInitEP
  2473                           	FNCALL	_USBCtrlTrfOutHandler,_USBCtrlTrfRxService
  2474                           	FNCALL	_USBCtrlTrfOutHandler,_USBPrepareForNextSetupTrf
  2475                           	FNCALL	_USBCtrlTrfInHandler,_USBCtrlTrfTxService
  2476                           	FNCALL	_USBCtrlTrfInHandler,_USBPrepareForNextSetupTrf
  2477                           	FNCALL	_USBCtrlEPServiceComplete,_USBCtrlTrfTxService
  2478                           	FNCALL	_USBProtocolResetHandler,_ClearArray
  2479                           	FNCALL	_USBProtocolResetHandler,_USBPrepareForNextSetupTrf
  2480                           	FNCALL	_WriteConfigBits,_UnlockAndActivate
  2481                           	FNCALL	_WriteEEPROM,_UnlockAndActivate
  2482                           	FNCALL	_WriteFlashBlock,_UnlockAndActivate
  2483                           	FNROOT	_main
  2484                           	FNCALL	intlevel2,_interrupt_at_high_vector
  2485                           	global	intlevel2
  2486                           	FNROOT	intlevel2
  2487                           	FNCALL	intlevel1,_interrupt_at_low_vector
  2488                           	global	intlevel1
  2489                           	FNROOT	intlevel1
  2490                           	global	_USB_SD_Ptr
  2491                           psect	smallconst,class=SMALLCONST,space=0,reloc=2
  2492                           global __psmallconst
  2493  000800                     __psmallconst:
  2494                           	file	"../usbdsc.c"
  2495                           	line	276
  2496  000800                     _USB_SD_Ptr:
  2497  000800  08BE               	dw	((_sd000))&0ffffh
  2498  000802  080C               	dw	((_sd001))&0ffffh
  2499  000804  0869               	dw	((_sd002))&0ffffh
  2500                           	global __end_of_USB_SD_Ptr
  2501  000806                     __end_of_USB_SD_Ptr:
  2502                           	global	_USB_CD_Ptr
  2503                           psect	smallconst
  2504                           	file	"../usbdsc.c"
  2505                           	line	271
  2506  000806                     _USB_CD_Ptr:
  2507  000806  0840               	dw	((_cfg01))&0ffffh
  2508  000808  0840               	dw	((_cfg01))&0ffffh
  2509                           	global __end_of_USB_CD_Ptr
  2510  00080A                     __end_of_USB_CD_Ptr:
  2511                           	global	_ClassReqHandler
  2512                           psect	smallconst
  2513                           	file	"../usbdsc.c"
  2514                           	line	283
  2515  00080A                     _ClassReqHandler:
  2516  00080A  0F6E               	dw	(_USBCheckHIDRequest)&0ffffh
  2517                           	global __end_of_ClassReqHandler
  2518  00080C                     __end_of_ClassReqHandler:
  2519                           	global	_sd001
  2520                           psect	smallconst
  2521                           	file	"../usbdsc.c"
  2522                           	line	238
  2523  00080C                     _sd001:
  2524  00080C  34                 	db	low(034h)
  2525  00080D  03                 	db	low(03h)
  2526  00080E  004D               	dw	(04Dh)&0ffffh
  2527  000810  0069               	dw	(069h)&0ffffh
  2528  000812  0063               	dw	(063h)&0ffffh
  2529  000814  0072               	dw	(072h)&0ffffh
  2530  000816  006F               	dw	(06Fh)&0ffffh
  2531  000818  0063               	dw	(063h)&0ffffh
  2532  00081A  0068               	dw	(068h)&0ffffh
  2533  00081C  0069               	dw	(069h)&0ffffh
  2534  00081E  0070               	dw	(070h)&0ffffh
  2535  000820  0020               	dw	(020h)&0ffffh
  2536  000822  0054               	dw	(054h)&0ffffh
  2537  000824  0065               	dw	(065h)&0ffffh
  2538  000826  0063               	dw	(063h)&0ffffh
  2539  000828  0068               	dw	(068h)&0ffffh
  2540  00082A  006E               	dw	(06Eh)&0ffffh
  2541  00082C  006F               	dw	(06Fh)&0ffffh
  2542  00082E  006C               	dw	(06Ch)&0ffffh
  2543  000830  006F               	dw	(06Fh)&0ffffh
  2544  000832  0067               	dw	(067h)&0ffffh
  2545  000834  0079               	dw	(079h)&0ffffh
  2546  000836  0020               	dw	(020h)&0ffffh
  2547  000838  0049               	dw	(049h)&0ffffh
  2548  00083A  006E               	dw	(06Eh)&0ffffh
  2549  00083C  0063               	dw	(063h)&0ffffh
  2550  00083E  002E               	dw	(02Eh)&0ffffh
  2551                           	global __end_of_sd001
  2552  000840                     __end_of_sd001:
  2553                           	global	_cfg01
  2554                           psect	smallconst
  2555                           	file	"../usbdsc.c"
  2556                           	line	199
  2557  000840                     _cfg01:
  2558  000840  09                 	db	low(09h)
  2559  000841  02                 	db	low(02h)
  2560  000842  0029               	dw	(029h)&0ffffh
  2561  000844  01                 	db	low(01h)
  2562  000845  01                 	db	low(01h)
  2563  000846  00                 	db	low(0)
  2564  000847  C0                 	db	low(0C0h)
  2565  000848  32                 	db	low(032h)
  2566  000849  09                 	db	low(09h)
  2567  00084A  04                 	db	low(04h)
  2568  00084B  00                 	db	low(0)
  2569  00084C  00                 	db	low(0)
  2570  00084D  02                 	db	low(02h)
  2571  00084E  03                 	db	low(03h)
  2572  00084F  00                 	db	low(0)
  2573  000850  00                 	db	low(0)
  2574  000851  00                 	db	low(0)
  2575  000852  09                 	db	low(09h)
  2576  000853  21                 	db	low(021h)
  2577  000854  0111               	dw	(0111h)&0ffffh
  2578  000856  00                 	db	low(0)
  2579  000857  01                 	db	low(01h)
  2580  000858  22                 	db	low(022h)
  2581  000859  001D               	dw	(01Dh)&0ffffh
  2582  00085B  07                 	db	low(07h)
  2583  00085C  05                 	db	low(05h)
  2584  00085D  81                 	db	low(081h)
  2585  00085E  03                 	db	low(03h)
  2586  00085F  0040               	dw	(040h)&0ffffh
  2587  000861  01                 	db	low(01h)
  2588  000862  07                 	db	low(07h)
  2589  000863  05                 	db	low(05h)
  2590  000864  01                 	db	low(01h)
  2591  000865  03                 	db	low(03h)
  2592  000866  0040               	dw	(040h)&0ffffh
  2593  000868  01                 	db	low(01h)
  2594                           	global __end_of_cfg01
  2595  000869                     __end_of_cfg01:
  2596                           	global	_sd002
  2597                           psect	smallconst
  2598                           	file	"../usbdsc.c"
  2599                           	line	243
  2600  000869                     _sd002:
  2601  000869  26                 	db	low(026h)
  2602  00086A  03                 	db	low(03h)
  2603  00086B  0048               	dw	(048h)&0ffffh
  2604  00086D  0049               	dw	(049h)&0ffffh
  2605  00086F  0044               	dw	(044h)&0ffffh
  2606  000871  0020               	dw	(020h)&0ffffh
  2607  000873  0055               	dw	(055h)&0ffffh
  2608  000875  0053               	dw	(053h)&0ffffh
  2609  000877  0042               	dw	(042h)&0ffffh
  2610  000879  0020               	dw	(020h)&0ffffh
  2611  00087B  0042               	dw	(042h)&0ffffh
  2612  00087D  006F               	dw	(06Fh)&0ffffh
  2613  00087F  006F               	dw	(06Fh)&0ffffh
  2614  000881  0074               	dw	(074h)&0ffffh
  2615  000883  006C               	dw	(06Ch)&0ffffh
  2616  000885  006F               	dw	(06Fh)&0ffffh
  2617  000887  0061               	dw	(061h)&0ffffh
  2618  000889  0064               	dw	(064h)&0ffffh
  2619  00088B  0065               	dw	(065h)&0ffffh
  2620  00088D  0072               	dw	(072h)&0ffffh
  2621                           	global __end_of_sd002
  2622  00088F                     __end_of_sd002:
  2623                           	global	_hid_rpt01
  2624                           psect	smallconst
  2625                           	file	"../usbdsc.c"
  2626                           	line	248
  2627  00088F                     _hid_rpt01:
  2628  00088F  06                 	db	low(06h)
  2629  000890  00                 	db	low(0)
  2630  000891  FF                 	db	low(0FFh)
  2631  000892  09                 	db	low(09h)
  2632  000893  01                 	db	low(01h)
  2633  000894  A1                 	db	low(0A1h)
  2634  000895  01                 	db	low(01h)
  2635  000896  19                 	db	low(019h)
  2636  000897  01                 	db	low(01h)
  2637  000898  29                 	db	low(029h)
  2638  000899  40                 	db	low(040h)
  2639  00089A  15                 	db	low(015h)
  2640  00089B  00                 	db	low(0)
  2641  00089C  26                 	db	low(026h)
  2642  00089D  FF                 	db	low(0FFh)
  2643  00089E  00                 	db	low(0)
  2644  00089F  75                 	db	low(075h)
  2645  0008A0  08                 	db	low(08h)
  2646  0008A1  95                 	db	low(095h)
  2647  0008A2  40                 	db	low(040h)
  2648  0008A3  81                 	db	low(081h)
  2649  0008A4  00                 	db	low(0)
  2650  0008A5  19                 	db	low(019h)
  2651  0008A6  01                 	db	low(01h)
  2652  0008A7  29                 	db	low(029h)
  2653  0008A8  40                 	db	low(040h)
  2654  0008A9  91                 	db	low(091h)
  2655  0008AA  00                 	db	low(0)
  2656  0008AB  C0                 	db	low(0C0h)
  2657                           	global __end_of_hid_rpt01
  2658  0008AC                     __end_of_hid_rpt01:
  2659                           	global	_device_dsc
  2660                           psect	smallconst
  2661                           	file	"../usbdsc.c"
  2662                           	line	180
  2663  0008AC                     _device_dsc:
  2664  0008AC  12                 	db	low(012h)
  2665  0008AD  01                 	db	low(01h)
  2666  0008AE  0200               	dw	(0200h)&0ffffh
  2667  0008B0  00                 	db	low(0)
  2668  0008B1  00                 	db	low(0)
  2669  0008B2  00                 	db	low(0)
  2670  0008B3  08                 	db	low(08h)
  2671  0008B4  04D8               	dw	(04D8h)&0ffffh
  2672  0008B6  003C               	dw	(03Ch)&0ffffh
  2673  0008B8  0002               	dw	(02h)&0ffffh
  2674  0008BA  01                 	db	low(01h)
  2675  0008BB  02                 	db	low(02h)
  2676  0008BC  00                 	db	low(0)
  2677  0008BD  01                 	db	low(01h)
  2678                           	global __end_of_device_dsc
  2679  0008BE                     __end_of_device_dsc:
  2680                           	global	_sd000
  2681                           psect	smallconst
  2682                           	file	"../usbdsc.c"
  2683                           	line	235
  2684  0008BE                     _sd000:
  2685  0008BE  04                 	db	low(04h)
  2686  0008BF  03                 	db	low(03h)
  2687  0008C0  0409               	dw	(0409h)&0ffffh
  2688                           	global __end_of_sd000
  2689  0008C2                     __end_of_sd000:
  2690                           	global	_USB_SD_Ptr
  2691                           	global	_USB_CD_Ptr
  2692                           	global	_ClassReqHandler
  2693                           	global	_sd001
  2694                           	global	_cfg01
  2695                           	global	_sd002
  2696                           	global	_hid_rpt01
  2697                           	global	_device_dsc
  2698                           	global	_sd000
  2699                           	global	_ProgrammedPointer
  2700                           	global	_pDst
  2701                           	global	_pSrc
  2702                           	global	BlinkUSBStatus@led_count
  2703                           	global	_ErasePageTracker
  2704                           	global	ResetDeviceCleanly@i
  2705                           	global	WriteConfigBits@i
  2706                           	global	WriteEEPROM@i
  2707                           	global	WriteFlashBlock@BytesTakenFromBuffer
  2708                           	global	WriteFlashBlock@CorrectionFactor
  2709                           	global	WriteFlashBlock@i
  2710                           	global	_BootState
  2711                           	global	_BufferedDataIndex
  2712                           	global	_ConfigsLockValue
  2713                           	global	_bTRNIFCount
  2714                           	global	_ctrl_trf_session_owner
  2715                           	global	_ctrl_trf_state
  2716                           	global	_hid_rpt_rx_len
  2717                           	global	_short_pkt_status
  2718                           	global	_usb_device_state
  2719                           	global	_usb_stat
  2720                           	global	_wCount
  2721                           	global	_active_protocol
  2722                           	global	_idle_rate
  2723                           	global	_usb_active_cfg
  2724                           	global	_usb_alt_intf
  2725                           	global	_PacketFromPC
  2726                           	global	_PacketToPC
  2727                           	global	_ProgrammingBuffer
  2728                           	global	_ep0Bi
  2729                           	global	_ep0Bi
  2730  0000                     _ep0Bi  equ     1028
  2731                           
  2732                           	DABS	1,1028,4	;_ep0Bi
  2733                           	global	_ep1Bi
  2734                           	global	_ep1Bi
  2735  0000                     _ep1Bi  equ     1036
  2736                           
  2737                           	DABS	1,1036,4	;_ep1Bi
  2738                           	global	_TBLPTR
  2739  0000                     _TBLPTR	set	0xFF6
  2740                           	global	_EEADR
  2741  0000                     _EEADR	set	0xFA9
  2742                           	global	_EECON1
  2743  0000                     _EECON1	set	0xFA6
  2744                           	global	_EECON1bits
  2745  0000                     _EECON1bits	set	0xFA6
  2746                           	global	_EEDATA
  2747  0000                     _EEDATA	set	0xFA8
  2748                           	global	_INTCONbits
  2749  0000                     _INTCONbits	set	0xFF2
  2750                           	global	_LATC
  2751  0000                     _LATC	set	0xF8B
  2752                           	global	_LATCbits
  2753  0000                     _LATCbits	set	0xF8B
  2754                           	global	_OSCCON
  2755  0000                     _OSCCON	set	0xFD3
  2756                           	global	_OSCCON2
  2757  0000                     _OSCCON2	set	0xFD2
  2758                           	global	_OSCCON2bits
  2759  0000                     _OSCCON2bits	set	0xFD2
  2760                           	global	_OSCTUNE
  2761  0000                     _OSCTUNE	set	0xF9B
  2762                           	global	_PIE3bits
  2763  0000                     _PIE3bits	set	0xFA3
  2764                           	global	_PIR3bits
  2765  0000                     _PIR3bits	set	0xFA4
  2766                           	global	_PORTBbits
  2767  0000                     _PORTBbits	set	0xF81
  2768                           	global	_TABLAT
  2769  0000                     _TABLAT	set	0xFF5
  2770                           	global	_TBLPTRL
  2771  0000                     _TBLPTRL	set	0xFF6
  2772                           	global	_TBLPTRU
  2773  0000                     _TBLPTRU	set	0xFF8
  2774                           	global	_TRISC
  2775  0000                     _TRISC	set	0xF94
  2776                           	global	_UADDR
  2777  0000                     _UADDR	set	0xF63
  2778                           	global	_UCFG
  2779  0000                     _UCFG	set	0xF62
  2780                           	global	_UCON
  2781  0000                     _UCON	set	0xF60
  2782                           	global	_UCONbits
  2783  0000                     _UCONbits	set	0xF60
  2784                           	global	_UEIE
  2785  0000                     _UEIE	set	0xF66
  2786                           	global	_UEIR
  2787  0000                     _UEIR	set	0xF67
  2788                           	global	_UEP0
  2789  0000                     _UEP0	set	0xF6A
  2790                           	global	_UEP0bits
  2791  0000                     _UEP0bits	set	0xF6A
  2792                           	global	_UIE
  2793  0000                     _UIE	set	0xF64
  2794                           	global	_UIEbits
  2795  0000                     _UIEbits	set	0xF64
  2796                           	global	_UIR
  2797  0000                     _UIR	set	0xF65
  2798                           	global	_UIRbits
  2799  0000                     _UIRbits	set	0xF65
  2800                           	global	_USTAT
  2801  0000                     _USTAT	set	0xF61
  2802                           	global	_WREG
  2803  0000                     _WREG	set	0xFE8
  2804                           	global	_UEP1
  2805  0000                     _UEP1	set	0xF6B
  2806                           	global	_ep1Bo
  2807                           	global	_ep1Bo
  2808  0000                     _ep1Bo  equ     1032
  2809                           
  2810                           	DABS	1,1032,4	;_ep1Bo
  2811                           	global	_SetupPkt
  2812                           	global	_SetupPkt
  2813  0000                     _SetupPkt  equ     1280
  2814                           
  2815                           	DABS	1,1280,8	;_SetupPkt
  2816                           	global	_ep0Bo
  2817                           	global	_ep0Bo
  2818  0000                     _ep0Bo  equ     1024
  2819                           
  2820                           	DABS	1,1024,4	;_ep0Bo
  2821                           	global	_hid_report_out
  2822                           	global	_hid_report_out
  2823  0000                     _hid_report_out  equ     1792
  2824                           
  2825                           	DABS	1,1792,64	;_hid_report_out
  2826                           	global	_CtrlTrfData
  2827                           	global	_CtrlTrfData
  2828  0000                     _CtrlTrfData  equ     1536
  2829                           
  2830                           	DABS	1,1536,8	;_CtrlTrfData
  2831                           	global	_hid_report_in
  2832                           	global	_hid_report_in
  2833  0000                     _hid_report_in  equ     1856
  2834                           
  2835                           	DABS	1,1856,64	;_hid_report_in
  2836                           ; #config settings
  2837                           global __CFG_PLLSEL$PLL3X
  2838  0000                     __CFG_PLLSEL$PLL3X equ 0x0
  2839                           global __CFG_CFGPLLEN$OFF
  2840  0000                     __CFG_CFGPLLEN$OFF equ 0x0
  2841                           global __CFG_CPUDIV$NOCLKDIV
  2842  0000                     __CFG_CPUDIV$NOCLKDIV equ 0x0
  2843                           global __CFG_LS48MHZ$SYS48X8
  2844  0000                     __CFG_LS48MHZ$SYS48X8 equ 0x0
  2845                           global __CFG_IESO$OFF
  2846  0000                     __CFG_IESO$OFF equ 0x0
  2847                           global __CFG_FOSC$INTOSCIO
  2848  0000                     __CFG_FOSC$INTOSCIO equ 0x0
  2849                           global __CFG_FCMEN$OFF
  2850  0000                     __CFG_FCMEN$OFF equ 0x0
  2851                           global __CFG_PCLKEN$OFF
  2852  0000                     __CFG_PCLKEN$OFF equ 0x0
  2853                           global __CFG_BOREN$SBORDIS
  2854  0000                     __CFG_BOREN$SBORDIS equ 0x0
  2855                           global __CFG_nPWRTEN$OFF
  2856  0000                     __CFG_nPWRTEN$OFF equ 0x0
  2857                           global __CFG_nLPBOR$ON
  2858  0000                     __CFG_nLPBOR$ON equ 0x0
  2859                           global __CFG_BORV$220
  2860  0000                     __CFG_BORV$220 equ 0x0
  2861                           global __CFG_WDTPS$32768
  2862  0000                     __CFG_WDTPS$32768 equ 0x0
  2863                           global __CFG_WDTEN$SWON
  2864  0000                     __CFG_WDTEN$SWON equ 0x0
  2865                           global __CFG_CCP2MX$RC1
  2866  0000                     __CFG_CCP2MX$RC1 equ 0x0
  2867                           global __CFG_PBADEN$OFF
  2868  0000                     __CFG_PBADEN$OFF equ 0x0
  2869                           global __CFG_MCLRE$ON
  2870  0000                     __CFG_MCLRE$ON equ 0x0
  2871                           global __CFG_SDOMX$RC7
  2872  0000                     __CFG_SDOMX$RC7 equ 0x0
  2873                           global __CFG_T3CMX$RB5
  2874  0000                     __CFG_T3CMX$RB5 equ 0x0
  2875                           global __CFG_STVREN$ON
  2876  0000                     __CFG_STVREN$ON equ 0x0
  2877                           global __CFG_ICPRT$OFF
  2878  0000                     __CFG_ICPRT$OFF equ 0x0
  2879                           global __CFG_XINST$OFF
  2880  0000                     __CFG_XINST$OFF equ 0x0
  2881                           global __CFG_LVP$OFF
  2882  0000                     __CFG_LVP$OFF equ 0x0
  2883                           global __CFG_CP0$OFF
  2884  0000                     __CFG_CP0$OFF equ 0x0
  2885                           global __CFG_CP1$OFF
  2886  0000                     __CFG_CP1$OFF equ 0x0
  2887                           global __CFG_CP2$OFF
  2888  0000                     __CFG_CP2$OFF equ 0x0
  2889                           global __CFG_CP3$OFF
  2890  0000                     __CFG_CP3$OFF equ 0x0
  2891                           global __CFG_CPD$OFF
  2892  0000                     __CFG_CPD$OFF equ 0x0
  2893                           global __CFG_CPB$OFF
  2894  0000                     __CFG_CPB$OFF equ 0x0
  2895                           global __CFG_WRT0$OFF
  2896  0000                     __CFG_WRT0$OFF equ 0x0
  2897                           global __CFG_WRT1$OFF
  2898  0000                     __CFG_WRT1$OFF equ 0x0
  2899                           global __CFG_WRT2$OFF
  2900  0000                     __CFG_WRT2$OFF equ 0x0
  2901                           global __CFG_WRT3$OFF
  2902  0000                     __CFG_WRT3$OFF equ 0x0
  2903                           global __CFG_WRTB$OFF
  2904  0000                     __CFG_WRTB$OFF equ 0x0
  2905                           global __CFG_WRTC$OFF
  2906  0000                     __CFG_WRTC$OFF equ 0x0
  2907                           global __CFG_WRTD$OFF
  2908  0000                     __CFG_WRTD$OFF equ 0x0
  2909                           global __CFG_EBTR0$OFF
  2910  0000                     __CFG_EBTR0$OFF equ 0x0
  2911                           global __CFG_EBTR1$OFF
  2912  0000                     __CFG_EBTR1$OFF equ 0x0
  2913                           global __CFG_EBTR2$OFF
  2914  0000                     __CFG_EBTR2$OFF equ 0x0
  2915                           global __CFG_EBTR3$OFF
  2916  0000                     __CFG_EBTR3$OFF equ 0x0
  2917                           global __CFG_EBTRB$OFF
  2918  0000                     __CFG_EBTRB$OFF equ 0x0
  2919                           	file	"/tmp/cgtYlzGfB"
  2920                           	line	#
  2921                           psect	cinit,class=CODE,delta=1,reloc=2
  2922                           global __pcinit
  2923  00238A                     __pcinit:
  2924                           global start_initialization
  2925  00238A                     start_initialization:
  2926                           
  2927                           global __initialization
  2928  00238A                     __initialization:
  2929                           psect	bssCOMRAM,class=COMRAM,space=1
  2930                           global __pbssCOMRAM
  2931  000001                     __pbssCOMRAM:
  2932                           	global	_ProgramMemStopAddress
  2933                           	global	_ProgramMemStopAddress
  2934  000001                     _ProgramMemStopAddress:
  2935  000001                            ds      3
  2936                           	global	_ProgrammedPointer
  2937  000004                     _ProgrammedPointer:
  2938  000004                            ds      3
  2939                           	global	_pDst
  2940  000007                     _pDst:
  2941  000007                            ds      3
  2942                           	global	_pSrc
  2943  00000A                     _pSrc:
  2944  00000A                            ds      3
  2945  00000D                     BlinkUSBStatus@led_count:
  2946  00000D                            ds      2
  2947                           	global	_ErasePageTracker
  2948  00000F                     _ErasePageTracker:
  2949  00000F                            ds      2
  2950  000011                     ResetDeviceCleanly@i:
  2951  000011                            ds      1
  2952  000012                     WriteConfigBits@i:
  2953  000012                            ds      1
  2954  000013                     WriteEEPROM@i:
  2955  000013                            ds      1
  2956  000014                     WriteFlashBlock@BytesTakenFromBuffer:
  2957  000014                            ds      1
  2958  000015                     WriteFlashBlock@CorrectionFactor:
  2959  000015                            ds      1
  2960  000016                     WriteFlashBlock@i:
  2961  000016                            ds      1
  2962                           	global	_BootState
  2963  000017                     _BootState:
  2964  000017                            ds      1
  2965                           	global	_BufferedDataIndex
  2966  000018                     _BufferedDataIndex:
  2967  000018                            ds      1
  2968                           	global	_ConfigsLockValue
  2969  000019                     _ConfigsLockValue:
  2970  000019                            ds      1
  2971                           	global	_bTRNIFCount
  2972  00001A                     _bTRNIFCount:
  2973  00001A                            ds      1
  2974                           	global	_ctrl_trf_session_owner
  2975  00001B                     _ctrl_trf_session_owner:
  2976  00001B                            ds      1
  2977                           	global	_ctrl_trf_state
  2978  00001C                     _ctrl_trf_state:
  2979  00001C                            ds      1
  2980                           	global	_hid_rpt_rx_len
  2981  00001D                     _hid_rpt_rx_len:
  2982  00001D                            ds      1
  2983                           	global	_short_pkt_status
  2984  00001E                     _short_pkt_status:
  2985  00001E                            ds      1
  2986                           	global	_usb_device_state
  2987  00001F                     _usb_device_state:
  2988  00001F                            ds      1
  2989                           	global	_usb_stat
  2990  000020                     _usb_stat:
  2991  000020                            ds      1
  2992                           	global	_wCount
  2993  000021                     _wCount:
  2994  000021                            ds      2
  2995                           	global	_active_protocol
  2996  000023                     _active_protocol:
  2997  000023                            ds      1
  2998                           	global	_idle_rate
  2999  000024                     _idle_rate:
  3000  000024                            ds      1
  3001                           	global	_usb_active_cfg
  3002  000025                     _usb_active_cfg:
  3003  000025                            ds      1
  3004                           	global	_usb_alt_intf
  3005  000026                     _usb_alt_intf:
  3006  000026                            ds      1
  3007                           psect	bssBANK0,class=BANK0,space=1
  3008                           global __pbssBANK0
  3009  000060                     __pbssBANK0:
  3010                           	global	_PacketFromPC
  3011  000060                     _PacketFromPC:
  3012  000060                            ds      64
  3013                           	global	_PacketToPC
  3014  0000A0                     _PacketToPC:
  3015  0000A0                            ds      64
  3016                           psect	bssBANK1,class=BANK1,space=1
  3017                           global __pbssBANK1
  3018  000100                     __pbssBANK1:
  3019                           	global	_ProgrammingBuffer
  3020  000100                     _ProgrammingBuffer:
  3021  000100                            ds      64
  3022                           psect	cinit
  3023                           ; Clear objects allocated to BANK1 (64 bytes)
  3024                           	global __pbssBANK1
  3025  00238A  EE01  F000         lfsr	0,__pbssBANK1
  3026  00238E  0E40               movlw	64
  3027  002390                     clear_0:
  3028  002390  6AEE               clrf	postinc0,c
  3029  002392  06E8               decf	wreg
  3030  002394  E1FD               bnz	clear_0
  3031                           ; Clear objects allocated to BANK0 (128 bytes)
  3032                           	global __pbssBANK0
  3033  002396  EE00  F060         lfsr	0,__pbssBANK0
  3034  00239A  0E80               movlw	128
  3035  00239C                     clear_1:
  3036  00239C  6AEE               clrf	postinc0,c
  3037  00239E  06E8               decf	wreg
  3038  0023A0  E1FD               bnz	clear_1
  3039                           ; Clear objects allocated to COMRAM (38 bytes)
  3040                           	global __pbssCOMRAM
  3041  0023A2  EE00  F001         lfsr	0,__pbssCOMRAM
  3042  0023A6  0E26               movlw	38
  3043  0023A8                     clear_2:
  3044  0023A8  6AEE               clrf	postinc0,c
  3045  0023AA  06E8               decf	wreg
  3046  0023AC  E1FD               bnz	clear_2
  3047                           psect cinit,class=CODE,delta=1
  3048                           global end_of_initialization,__end_of__initialization
  3049                           
  3050                           ;End of C runtime variable initialization code
  3051                           
  3052  0023AE                     end_of_initialization:
  3053  0023AE                     __end_of__initialization:	GLOBAL	__Lmediumconst
  3054  0023AE  0E00               	movlw	low highword(__Lmediumconst)
  3055  0023B0  6EF8               	movwf	tblptru
  3056  0023B2  0100               movlb 0
  3057  0023B4  EF53  F011         goto _main	;jump to C main() function
  3058                           psect	cstackBANK0,class=BANK0,space=1
  3059                           global __pcstackBANK0
  3060  0000E0                     __pcstackBANK0:
  3061  0000E0                     ??_HIDGetReportHandler:	; 0 bytes @ 0x0
  3062  0000E0                     ??_HIDSetReportHandler:	; 0 bytes @ 0x0
  3063  0000E0                     ??_BlinkUSBStatus:	; 0 bytes @ 0x0
  3064  0000E0                     ??_UserInit:	; 0 bytes @ 0x0
  3065  0000E0                     ??_USBStdGetDscHandler:	; 0 bytes @ 0x0
  3066  0000E0                     ??_USBStdGetStatusHandler:	; 0 bytes @ 0x0
  3067  0000E0                     ??_USBStdFeatureReqHandler:	; 0 bytes @ 0x0
  3068                           	global	?_ClearArray
  3069  0000E0                     ?_ClearArray:	; 0 bytes @ 0x0
  3070  0000E0                     ??_USBCtrlTrfRxService:	; 0 bytes @ 0x0
  3071  0000E0                     ??_USBPrepareForNextSetupTrf:	; 0 bytes @ 0x0
  3072  0000E0                     ??_USBCtrlTrfTxService:	; 0 bytes @ 0x0
  3073  0000E0                     ??_USBModuleEnable:	; 0 bytes @ 0x0
  3074  0000E0                     ??_USBWakeFromSuspend:	; 0 bytes @ 0x0
  3075  0000E0                     ??_USBSuspend:	; 0 bytes @ 0x0
  3076  0000E0                     ??_USBStallHandler:	; 0 bytes @ 0x0
  3077  0000E0                     ??_ClearWatchdog:	; 0 bytes @ 0x0
  3078                           	global	?_UnlockAndActivate
  3079  0000E0                     ?_UnlockAndActivate:	; 0 bytes @ 0x0
  3080  0000E0                     ??_TableReadPostIncrement:	; 0 bytes @ 0x0
  3081  0000E0                     ??_ResetDeviceCleanly:	; 0 bytes @ 0x0
  3082  0000E0                     ??_USBCheckHIDRequest:	; 0 bytes @ 0x0
  3083  0000E0                     ??_HIDInitEP:	; 0 bytes @ 0x0
  3084                           	global	?_HIDTxReport
  3085  0000E0                     ?_HIDTxReport:	; 0 bytes @ 0x0
  3086                           	global	?_HIDRxReport
  3087  0000E0                     ?_HIDRxReport:	; 1 bytes @ 0x0
  3088                           	global	UnlockAndActivate@UnlockKey
  3089  0000E0                     UnlockAndActivate@UnlockKey:	; 1 bytes @ 0x0
  3090                           	global	HIDTxReport@buffer
  3091  0000E0                     HIDTxReport@buffer:	; 2 bytes @ 0x0
  3092                           	global	HIDRxReport@buffer
  3093  0000E0                     HIDRxReport@buffer:	; 2 bytes @ 0x0
  3094                           	global	USBCtrlTrfRxService@byte_to_read
  3095  0000E0                     USBCtrlTrfRxService@byte_to_read:	; 2 bytes @ 0x0
  3096                           	global	ClearArray@startAdr
  3097  0000E0                     ClearArray@startAdr:	; 2 bytes @ 0x0
  3098  0000E0                     	ds   1
  3099  0000E1                     ??_InitializeSystem:	; 0 bytes @ 0x1
  3100  0000E1                     ??_USBCheckBusStatus:	; 0 bytes @ 0x1
  3101  0000E1                     ??_UnlockAndActivate:	; 0 bytes @ 0x1
  3102  0000E1                     ??_WriteConfigBits:	; 0 bytes @ 0x1
  3103  0000E1                     ??_WriteEEPROM:	; 0 bytes @ 0x1
  3104  0000E1                     ??_WriteFlashBlock:	; 0 bytes @ 0x1
  3105  0000E1                     	ds   1
  3106  0000E2                     ??_USBCtrlTrfOutHandler:	; 0 bytes @ 0x2
  3107                           	global	HIDTxReport@len
  3108  0000E2                     HIDTxReport@len:	; 1 bytes @ 0x2
  3109                           	global	HIDRxReport@len
  3110  0000E2                     HIDRxReport@len:	; 1 bytes @ 0x2
  3111                           	global	ClearArray@count
  3112  0000E2                     ClearArray@count:	; 1 bytes @ 0x2
  3113                           	global	USBCtrlTrfTxService@byte_to_send
  3114  0000E2                     USBCtrlTrfTxService@byte_to_send:	; 2 bytes @ 0x2
  3115  0000E2                     	ds   1
  3116  0000E3                     ??_USBStdSetCfgHandler:	; 0 bytes @ 0x3
  3117  0000E3                     ??_ClearArray:	; 0 bytes @ 0x3
  3118  0000E3                     ??_USBProtocolResetHandler:	; 0 bytes @ 0x3
  3119  0000E3                     ??_HIDTxReport:	; 0 bytes @ 0x3
  3120  0000E3                     ??_HIDRxReport:	; 0 bytes @ 0x3
  3121  0000E3                     	ds   1
  3122  0000E4                     ??_USBCtrlTrfInHandler:	; 0 bytes @ 0x4
  3123  0000E4                     ??_USBCtrlEPServiceComplete:	; 0 bytes @ 0x4
  3124  0000E4                     ??_USBCheckStdRequest:	; 0 bytes @ 0x4
  3125                           	global	HIDTxReport@i
  3126  0000E4                     HIDTxReport@i:	; 1 bytes @ 0x4
  3127  0000E4                     	ds   1
  3128  0000E5                     ??_USBCtrlTrfSetupHandler:	; 0 bytes @ 0x5
  3129  0000E5                     	ds   1
  3130                           	global	USBCtrlTrfSetupHandler@i
  3131  0000E6                     USBCtrlTrfSetupHandler@i:	; 1 bytes @ 0x6
  3132  0000E6                     	ds   1
  3133  0000E7                     ??_USBCtrlEPService:	; 0 bytes @ 0x7
  3134  0000E7                     	ds   2
  3135                           	global	USBCtrlEPService@setup_cnt
  3136  0000E9                     USBCtrlEPService@setup_cnt:	; 1 bytes @ 0x9
  3137  0000E9                     	ds   1
  3138  0000EA                     ??_USBDriverService:	; 0 bytes @ 0xA
  3139  0000EA                     	ds   1
  3140  0000EB                     ??_USBTasks:	; 0 bytes @ 0xB
  3141  0000EB                     ??_ProcessIO:	; 0 bytes @ 0xB
  3142  0000EB                     	ds   4
  3143                           	global	ProcessIO@i
  3144  0000EF                     ProcessIO@i:	; 1 bytes @ 0xF
  3145  0000EF                     	ds   1
  3146  0000F0                     ??_main:	; 0 bytes @ 0x10
  3147                           psect	cstackCOMRAM,class=COMRAM,space=1
  3148                           global __pcstackCOMRAM
  3149  000027                     __pcstackCOMRAM:
  3150  000027                     ?_HIDGetReportHandler:	; 0 bytes @ 0x0
  3151  000027                     ?_HIDSetReportHandler:	; 0 bytes @ 0x0
  3152  000027                     ?_InitializeSystem:	; 0 bytes @ 0x0
  3153  000027                     ?_USBTasks:	; 0 bytes @ 0x0
  3154  000027                     ?_BlinkUSBStatus:	; 0 bytes @ 0x0
  3155  000027                     ?_ProcessIO:	; 0 bytes @ 0x0
  3156  000027                     ?_UserInit:	; 0 bytes @ 0x0
  3157  000027                     ?_USBCheckBusStatus:	; 0 bytes @ 0x0
  3158  000027                     ?_USBDriverService:	; 0 bytes @ 0x0
  3159  000027                     ?_USBStdGetDscHandler:	; 0 bytes @ 0x0
  3160  000027                     ?_USBStdSetCfgHandler:	; 0 bytes @ 0x0
  3161  000027                     ?_USBStdGetStatusHandler:	; 0 bytes @ 0x0
  3162  000027                     ?_USBStdFeatureReqHandler:	; 0 bytes @ 0x0
  3163  000027                     ?_USBCtrlTrfSetupHandler:	; 0 bytes @ 0x0
  3164  000027                     ?_USBCtrlTrfOutHandler:	; 0 bytes @ 0x0
  3165  000027                     ?_USBCtrlTrfInHandler:	; 0 bytes @ 0x0
  3166  000027                     ?_USBCtrlEPServiceComplete:	; 0 bytes @ 0x0
  3167  000027                     ?_USBCtrlTrfRxService:	; 0 bytes @ 0x0
  3168  000027                     ?_USBPrepareForNextSetupTrf:	; 0 bytes @ 0x0
  3169  000027                     ?_USBCtrlTrfTxService:	; 0 bytes @ 0x0
  3170  000027                     ?_USBModuleEnable:	; 0 bytes @ 0x0
  3171  000027                     ?_USBWakeFromSuspend:	; 0 bytes @ 0x0
  3172  000027                     ?_USBProtocolResetHandler:	; 0 bytes @ 0x0
  3173  000027                     ?_USBSuspend:	; 0 bytes @ 0x0
  3174  000027                     ?_USBStallHandler:	; 0 bytes @ 0x0
  3175  000027                     ?_ClearWatchdog:	; 0 bytes @ 0x0
  3176  000027                     ?_WriteConfigBits:	; 0 bytes @ 0x0
  3177  000027                     ?_WriteEEPROM:	; 0 bytes @ 0x0
  3178  000027                     ?_WriteFlashBlock:	; 0 bytes @ 0x0
  3179  000027                     ?_TableReadPostIncrement:	; 0 bytes @ 0x0
  3180  000027                     ?_ResetDeviceCleanly:	; 0 bytes @ 0x0
  3181  000027                     ?_USBCheckHIDRequest:	; 0 bytes @ 0x0
  3182  000027                     ?_HIDInitEP:	; 0 bytes @ 0x0
  3183  000027                     ?_interrupt_at_high_vector:	; 0 bytes @ 0x0
  3184  000027                     ?_interrupt_at_low_vector:	; 0 bytes @ 0x0
  3185  000027                     ??_interrupt_at_low_vector:	; 0 bytes @ 0x0
  3186  000027                     ?_main:	; 0 bytes @ 0x0
  3187  000027                     ?_USBCheckStdRequest:	; 0 bytes @ 0x0
  3188  000027                     ?_USBCtrlEPService:	; 1 bytes @ 0x0
  3189  000027                     	ds   17
  3190  000038                     ??_interrupt_at_high_vector:	; 0 bytes @ 0x11
  3191  000038                     	ds   14
  3192                           ;!
  3193                           ;!Data Sizes:
  3194                           ;!    Strings     0
  3195                           ;!    Constant    194
  3196                           ;!    Data        0
  3197                           ;!    BSS         230
  3198                           ;!    Persistent  0
  3199                           ;!    Stack       0
  3200                           ;!
  3201                           ;!Auto Spaces:
  3202                           ;!    Space          Size  Autos    Used
  3203                           ;!    COMRAM           95     31      69
  3204                           ;!    BANK0           160     16     144
  3205                           ;!    BANK1           256      0      64
  3206                           ;!    BANK2           256      0       0
  3207                           ;!    BANK3           256      0       0
  3208                           ;!    BANK4h          239      0       0
  3209                           ;!    BANK5           248      0       0
  3210                           ;!    BANK6           248      0       0
  3211                           ;!    BANK7           128      0       0
  3212                           
  3213                           ;!
  3214                           ;!Pointer List with Targets:
  3215                           ;!
  3216                           ;!    ClearArray@startAdr	PTR unsigned char  size(2) Largest target is 1
  3217                           ;!		 -> usb_alt_intf(COMRAM[1]), UEP1(DATA[1]), 
  3218                           ;!
  3219                           ;!    ep0Bi.ADR	PTR unsigned char  size(2) Largest target is 64
  3220                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3221                           ;!
  3222                           ;!    ClassReqHandler	const PTR FTN()void [1] size(2) Largest target is 0
  3223                           ;!		 -> USBCheckHIDRequest(), 
  3224                           ;!
  3225                           ;!    ep0Bo.ADR	PTR unsigned char  size(2) Largest target is 64
  3226                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3227                           ;!
  3228                           ;!    ep0Bi...ADR	PTR unsigned char  size(2) Largest target is 64
  3229                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3230                           ;!
  3231                           ;!    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
  3232                           ;!		 -> sd002(CODE[38]), sd001(CODE[52]), sd000(CODE[4]), 
  3233                           ;!
  3234                           ;!    USB_CD_Ptr	const PTR const unsigned char [2] size(2) Largest target is 41
  3235                           ;!		 -> cfg01(CODE[41]), 
  3236                           ;!
  3237                           ;!    ep0Bo...ADR	PTR unsigned char  size(2) Largest target is 64
  3238                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3239                           ;!
  3240                           ;!    pDst.wRom	PTR const unsigned int  size(2) Largest target is 0
  3241                           ;!
  3242                           ;!    pDst.bRom	PTR const unsigned char  size(2) Largest target is 0
  3243                           ;!
  3244                           ;!    pDst.wRam	PTR unsigned int  size(2) Largest target is 0
  3245                           ;!
  3246                           ;!    pDst.bRam	PTR unsigned char  size(2) Largest target is 0
  3247                           ;!
  3248                           ;!    HIDRxReport@buffer	PTR unsigned char  size(2) Largest target is 64
  3249                           ;!		 -> PacketFromPC(BANK0[64]), 
  3250                           ;!
  3251                           ;!    HIDTxReport@buffer	PTR unsigned char  size(2) Largest target is 64
  3252                           ;!		 -> PacketToPC(BANK0[64]), 
  3253                           ;!
  3254                           ;!    ep1Bi.ADR	PTR unsigned char  size(2) Largest target is 64
  3255                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3256                           ;!
  3257                           ;!    ep1Bo.ADR	PTR unsigned char  size(2) Largest target is 64
  3258                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3259                           ;!
  3260                           ;!    ep1Bi...ADR	PTR unsigned char  size(2) Largest target is 64
  3261                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3262                           ;!
  3263                           ;!    S601$ADR	PTR unsigned char  size(2) Largest target is 64
  3264                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3265                           ;!
  3266                           ;!    ep1Bo...ADR	PTR unsigned char  size(2) Largest target is 64
  3267                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3268                           ;!
  3269                           ;!    S393_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0
  3270                           ;!
  3271                           ;!    pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0
  3272                           ;!
  3273                           ;!    S393_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0
  3274                           ;!
  3275                           ;!    pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0
  3276                           ;!
  3277                           ;!    S393_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0
  3278                           ;!
  3279                           ;!    pSrc.wRam	PTR unsigned int  size(2) Largest target is 0
  3280                           ;!
  3281                           ;!    S393_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0
  3282                           ;!
  3283                           ;!    pSrc.bRam	PTR unsigned char  size(2) Largest target is 0
  3284                           ;!
  3285                           
  3286                           
  3287                           ;!
  3288                           ;!Critical Paths under _main in COMRAM
  3289                           ;!
  3290                           ;!    None.
  3291                           ;!
  3292                           ;!Critical Paths under _interrupt_at_high_vector in COMRAM
  3293                           ;!
  3294                           ;!    None.
  3295                           ;!
  3296                           ;!Critical Paths under _main in BANK0
  3297                           ;!
  3298                           ;!    _main->_ProcessIO
  3299                           ;!    _InitializeSystem->_UserInit
  3300                           ;!    _USBTasks->_USBDriverService
  3301                           ;!    _ProcessIO->_USBDriverService
  3302                           ;!    _USBCheckBusStatus->_USBModuleEnable
  3303                           ;!    _USBDriverService->_USBCtrlEPService
  3304                           ;!    _USBCtrlEPService->_USBCtrlTrfSetupHandler
  3305                           ;!    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
  3306                           ;!    _USBCtrlTrfSetupHandler->_USBCtrlEPServiceComplete
  3307                           ;!    _USBCheckStdRequest->_USBStdSetCfgHandler
  3308                           ;!    _USBCheckStdRequest->_USBStdGetStatusHandler
  3309                           ;!    _USBCheckStdRequest->_USBStdFeatureReqHandler
  3310                           ;!    _USBStdSetCfgHandler->_ClearArray
  3311                           ;!    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
  3312                           ;!    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
  3313                           ;!    _USBCtrlEPServiceComplete->_USBCtrlTrfTxService
  3314                           ;!    _USBProtocolResetHandler->_ClearArray
  3315                           ;!    _WriteConfigBits->_UnlockAndActivate
  3316                           ;!    _WriteEEPROM->_UnlockAndActivate
  3317                           ;!    _WriteFlashBlock->_UnlockAndActivate
  3318                           ;!
  3319                           ;!Critical Paths under _interrupt_at_high_vector in BANK0
  3320                           ;!
  3321                           ;!    None.
  3322                           ;!
  3323                           ;!Critical Paths under _main in BANK1
  3324                           ;!
  3325                           ;!    None.
  3326                           ;!
  3327                           ;!Critical Paths under _interrupt_at_high_vector in BANK1
  3328                           ;!
  3329                           ;!    None.
  3330                           ;!
  3331                           ;!Critical Paths under _main in BANK2
  3332                           ;!
  3333                           ;!    None.
  3334                           ;!
  3335                           ;!Critical Paths under _interrupt_at_high_vector in BANK2
  3336                           ;!
  3337                           ;!    None.
  3338                           ;!
  3339                           ;!Critical Paths under _main in BANK3
  3340                           ;!
  3341                           ;!    None.
  3342                           ;!
  3343                           ;!Critical Paths under _interrupt_at_high_vector in BANK3
  3344                           ;!
  3345                           ;!    None.
  3346                           ;!
  3347                           ;!Critical Paths under _main in BANK4h
  3348                           ;!
  3349                           ;!    None.
  3350                           ;!
  3351                           ;!Critical Paths under _interrupt_at_high_vector in BANK4h
  3352                           ;!
  3353                           ;!    None.
  3354                           ;!
  3355                           ;!Critical Paths under _main in BANK5
  3356                           ;!
  3357                           ;!    None.
  3358                           ;!
  3359                           ;!Critical Paths under _interrupt_at_high_vector in BANK5
  3360                           ;!
  3361                           ;!    None.
  3362                           ;!
  3363                           ;!Critical Paths under _main in BANK6
  3364                           ;!
  3365                           ;!    None.
  3366                           ;!
  3367                           ;!Critical Paths under _interrupt_at_high_vector in BANK6
  3368                           ;!
  3369                           ;!    None.
  3370                           ;!
  3371                           ;!Critical Paths under _main in BANK7
  3372                           ;!
  3373                           ;!    None.
  3374                           ;!
  3375                           ;!Critical Paths under _interrupt_at_high_vector in BANK7
  3376                           ;!
  3377                           ;!    None.
  3378                           
  3379 ;;
  3380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3381 ;;
  3382                           
  3383                           ;!
  3384                           ;!Call Graph Tables:
  3385                           ;!
  3386                           ;! ---------------------------------------------------------------------------------
  3387                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3388                           ;! ---------------------------------------------------------------------------------
  3389                           ;! (0) _main                                                 0     0      0    2410
  3390                           ;!                   _InitializeSystem
  3391                           ;!                           _USBTasks
  3392                           ;!                     _BlinkUSBStatus
  3393                           ;!                          _ProcessIO
  3394                           ;! ---------------------------------------------------------------------------------
  3395                           ;! (1) _InitializeSystem                                     1     1      0       0
  3396                           ;!                                              1 BANK0      1     1      0
  3397                           ;!                           _UserInit
  3398                           ;! ---------------------------------------------------------------------------------
  3399                           ;! (1) _USBTasks                                             0     0      0     801
  3400                           ;!                  _USBCheckBusStatus
  3401                           ;!                   _USBDriverService
  3402                           ;! ---------------------------------------------------------------------------------
  3403                           ;! (1) _BlinkUSBStatus                                       1     1      0       0
  3404                           ;!                                              0 BANK0      1     1      0
  3405                           ;! ---------------------------------------------------------------------------------
  3406                           ;! (1) _ProcessIO                                            5     5      0    1609
  3407                           ;!                                             11 BANK0      5     5      0
  3408                           ;!                        _HIDRxReport
  3409                           ;!                        _HIDTxReport
  3410                           ;!                      _ClearWatchdog
  3411                           ;!                  _UnlockAndActivate
  3412                           ;!                   _USBDriverService
  3413                           ;!                    _WriteConfigBits
  3414                           ;!                        _WriteEEPROM
  3415                           ;!                    _WriteFlashBlock
  3416                           ;!             _TableReadPostIncrement
  3417                           ;!                 _ResetDeviceCleanly
  3418                           ;! ---------------------------------------------------------------------------------
  3419                           ;! (2) _HIDTxReport                                          5     2      3     226
  3420                           ;!                                              0 BANK0      5     2      3
  3421                           ;! ---------------------------------------------------------------------------------
  3422                           ;! (2) _HIDRxReport                                          4     1      3      96
  3423                           ;!                                              0 BANK0      4     1      3
  3424                           ;! ---------------------------------------------------------------------------------
  3425                           ;! (2) _UserInit                                             1     1      0       0
  3426                           ;!                                              0 BANK0      1     1      0
  3427                           ;! ---------------------------------------------------------------------------------
  3428                           ;! (2) _USBCheckBusStatus                                    1     1      0       0
  3429                           ;!                                              1 BANK0      1     1      0
  3430                           ;!                    _USBModuleEnable
  3431                           ;! ---------------------------------------------------------------------------------
  3432                           ;! (2) _USBDriverService                                     1     1      0     801
  3433                           ;!                                             10 BANK0      1     1      0
  3434                           ;!                 _USBWakeFromSuspend
  3435                           ;!            _USBProtocolResetHandler
  3436                           ;!                         _USBSuspend
  3437                           ;!                    _USBStallHandler
  3438                           ;!                   _USBCtrlEPService
  3439                           ;! ---------------------------------------------------------------------------------
  3440                           ;! (3) _USBCtrlEPService                                     3     3      0     736
  3441                           ;!                                              7 BANK0      3     3      0
  3442                           ;!             _USBCtrlTrfSetupHandler
  3443                           ;!               _USBCtrlTrfOutHandler
  3444                           ;!                _USBCtrlTrfInHandler
  3445                           ;! ---------------------------------------------------------------------------------
  3446                           ;! (4) _USBCtrlTrfSetupHandler                               2     2      0     334
  3447                           ;!                                              5 BANK0      2     2      0
  3448                           ;!                 _USBCheckStdRequest
  3449                           ;!                 _USBCheckHIDRequest
  3450                           ;!           _USBCtrlEPServiceComplete
  3451                           ;! ---------------------------------------------------------------------------------
  3452                           ;! (5) _USBCheckHIDRequest                                   1     1      0       0
  3453                           ;!                                              0 BANK0      1     1      0
  3454                           ;!                _HIDGetReportHandler
  3455                           ;!                _HIDSetReportHandler
  3456                           ;! ---------------------------------------------------------------------------------
  3457                           ;! (6) _HIDGetReportHandler                                  0     0      0       0
  3458                           ;! ---------------------------------------------------------------------------------
  3459                           ;! (6) _HIDSetReportHandler                                  0     0      0       0
  3460                           ;! ---------------------------------------------------------------------------------
  3461                           ;! (5) _USBCheckStdRequest                                   1     1      0      65
  3462                           ;!                                              4 BANK0      1     1      0
  3463                           ;!                _USBStdGetDscHandler
  3464                           ;!                _USBStdSetCfgHandler
  3465                           ;!             _USBStdGetStatusHandler
  3466                           ;!            _USBStdFeatureReqHandler
  3467                           ;! ---------------------------------------------------------------------------------
  3468                           ;! (6) _USBStdGetDscHandler                                  2     2      0       0
  3469                           ;!                                              0 BANK0      2     2      0
  3470                           ;! ---------------------------------------------------------------------------------
  3471                           ;! (6) _USBStdSetCfgHandler                                  1     1      0      65
  3472                           ;!                                              3 BANK0      1     1      0
  3473                           ;!                         _ClearArray
  3474                           ;!                          _HIDInitEP
  3475                           ;! ---------------------------------------------------------------------------------
  3476                           ;! (7) _HIDInitEP                                            1     1      0       0
  3477                           ;!                                              0 BANK0      1     1      0
  3478                           ;! ---------------------------------------------------------------------------------
  3479                           ;! (6) _USBStdGetStatusHandler                               4     4      0       0
  3480                           ;!                                              0 BANK0      4     4      0
  3481                           ;! ---------------------------------------------------------------------------------
  3482                           ;! (6) _USBStdFeatureReqHandler                              4     4      0       0
  3483                           ;!                                              0 BANK0      4     4      0
  3484                           ;! ---------------------------------------------------------------------------------
  3485                           ;! (4) _USBCtrlTrfOutHandler                                 0     0      0     102
  3486                           ;!                _USBCtrlTrfRxService
  3487                           ;!          _USBPrepareForNextSetupTrf
  3488                           ;! ---------------------------------------------------------------------------------
  3489                           ;! (4) _USBCtrlTrfInHandler                                  1     1      0     170
  3490                           ;!                                              4 BANK0      1     1      0
  3491                           ;!                _USBCtrlTrfTxService
  3492                           ;!          _USBPrepareForNextSetupTrf
  3493                           ;! ---------------------------------------------------------------------------------
  3494                           ;! (5) _USBCtrlEPServiceComplete                             1     1      0     170
  3495                           ;!                                              4 BANK0      1     1      0
  3496                           ;!                _USBCtrlTrfTxService
  3497                           ;! ---------------------------------------------------------------------------------
  3498                           ;! (5) _USBCtrlTrfRxService                                  2     2      0     102
  3499                           ;!                                              0 BANK0      2     2      0
  3500                           ;! ---------------------------------------------------------------------------------
  3501                           ;! (5) _USBCtrlTrfTxService                                  4     4      0     170
  3502                           ;!                                              0 BANK0      4     4      0
  3503                           ;! ---------------------------------------------------------------------------------
  3504                           ;! (3) _USBModuleEnable                                      1     1      0       0
  3505                           ;!                                              0 BANK0      1     1      0
  3506                           ;! ---------------------------------------------------------------------------------
  3507                           ;! (3) _USBWakeFromSuspend                                   0     0      0       0
  3508                           ;! ---------------------------------------------------------------------------------
  3509                           ;! (3) _USBProtocolResetHandler                              1     1      0      65
  3510                           ;!                                              3 BANK0      1     1      0
  3511                           ;!                         _ClearArray
  3512                           ;!          _USBPrepareForNextSetupTrf
  3513                           ;! ---------------------------------------------------------------------------------
  3514                           ;! (7) _ClearArray                                           3     0      3      65
  3515                           ;!                                              0 BANK0      3     0      3
  3516                           ;! ---------------------------------------------------------------------------------
  3517                           ;! (5) _USBPrepareForNextSetupTrf                            1     1      0       0
  3518                           ;!                                              0 BANK0      1     1      0
  3519                           ;! ---------------------------------------------------------------------------------
  3520                           ;! (3) _USBSuspend                                           0     0      0       0
  3521                           ;! ---------------------------------------------------------------------------------
  3522                           ;! (3) _USBStallHandler                                      0     0      0       0
  3523                           ;! ---------------------------------------------------------------------------------
  3524                           ;! (2) _ClearWatchdog                                        0     0      0       0
  3525                           ;! ---------------------------------------------------------------------------------
  3526                           ;! (2) _WriteConfigBits                                      4     4      0      31
  3527                           ;!                                              1 BANK0      4     4      0
  3528                           ;!                  _UnlockAndActivate
  3529                           ;! ---------------------------------------------------------------------------------
  3530                           ;! (2) _WriteEEPROM                                          4     4      0      31
  3531                           ;!                                              1 BANK0      4     4      0
  3532                           ;!                  _UnlockAndActivate
  3533                           ;! ---------------------------------------------------------------------------------
  3534                           ;! (2) _WriteFlashBlock                                      3     3      0      31
  3535                           ;!                                              1 BANK0      3     3      0
  3536                           ;!                  _UnlockAndActivate
  3537                           ;! ---------------------------------------------------------------------------------
  3538                           ;! (3) _UnlockAndActivate                                    1     0      1      31
  3539                           ;!                                              0 BANK0      1     0      1
  3540                           ;! ---------------------------------------------------------------------------------
  3541                           ;! (2) _TableReadPostIncrement                               0     0      0       0
  3542                           ;! ---------------------------------------------------------------------------------
  3543                           ;! (2) _ResetDeviceCleanly                                   1     1      0       0
  3544                           ;!                                              0 BANK0      1     1      0
  3545                           ;! ---------------------------------------------------------------------------------
  3546                           ;! Estimated maximum stack depth 7
  3547                           ;! ---------------------------------------------------------------------------------
  3548                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3549                           ;! ---------------------------------------------------------------------------------
  3550                           ;! (8) _interrupt_at_low_vector                             17    17      0       0
  3551                           ;!                                              0 COMRAM    17    17      0
  3552                           ;! ---------------------------------------------------------------------------------
  3553                           ;! (9) _interrupt_at_high_vector                            14    14      0       0
  3554                           ;!                                             17 COMRAM    14    14      0
  3555                           ;! ---------------------------------------------------------------------------------
  3556                           ;! Estimated maximum stack depth 9
  3557                           ;! ---------------------------------------------------------------------------------
  3558                           ;!
  3559                           ;! Call Graph Graphs:
  3560                           ;!
  3561                           ;! _main (ROOT)
  3562                           ;!   _InitializeSystem
  3563                           ;!     _UserInit
  3564                           ;!   _USBTasks
  3565                           ;!     _USBCheckBusStatus
  3566                           ;!       _USBModuleEnable
  3567                           ;!     _USBDriverService
  3568                           ;!       _USBWakeFromSuspend
  3569                           ;!       _USBProtocolResetHandler
  3570                           ;!         _ClearArray
  3571                           ;!         _USBPrepareForNextSetupTrf
  3572                           ;!       _USBSuspend
  3573                           ;!       _USBStallHandler
  3574                           ;!       _USBCtrlEPService
  3575                           ;!         _USBCtrlTrfSetupHandler
  3576                           ;!           _USBCheckStdRequest
  3577                           ;!             _USBStdGetDscHandler
  3578                           ;!             _USBStdSetCfgHandler
  3579                           ;!               _ClearArray
  3580                           ;!               _HIDInitEP
  3581                           ;!             _USBStdGetStatusHandler
  3582                           ;!             _USBStdFeatureReqHandler
  3583                           ;!           _USBCheckHIDRequest
  3584                           ;!             _HIDGetReportHandler
  3585                           ;!             _HIDSetReportHandler
  3586                           ;!           _USBCtrlEPServiceComplete
  3587                           ;!             _USBCtrlTrfTxService
  3588                           ;!         _USBCtrlTrfOutHandler
  3589                           ;!           _USBCtrlTrfRxService
  3590                           ;!           _USBPrepareForNextSetupTrf
  3591                           ;!         _USBCtrlTrfInHandler
  3592                           ;!           _USBCtrlTrfTxService
  3593                           ;!           _USBPrepareForNextSetupTrf
  3594                           ;!   _BlinkUSBStatus
  3595                           ;!   _ProcessIO
  3596                           ;!     _HIDRxReport
  3597                           ;!     _HIDTxReport
  3598                           ;!     _ClearWatchdog
  3599                           ;!     _UnlockAndActivate
  3600                           ;!     _USBDriverService
  3601                           ;!       _USBWakeFromSuspend
  3602                           ;!       _USBProtocolResetHandler
  3603                           ;!         _ClearArray
  3604                           ;!         _USBPrepareForNextSetupTrf
  3605                           ;!       _USBSuspend
  3606                           ;!       _USBStallHandler
  3607                           ;!       _USBCtrlEPService
  3608                           ;!         _USBCtrlTrfSetupHandler
  3609                           ;!           _USBCheckStdRequest
  3610                           ;!             _USBStdGetDscHandler
  3611                           ;!             _USBStdSetCfgHandler
  3612                           ;!               _ClearArray
  3613                           ;!               _HIDInitEP
  3614                           ;!             _USBStdGetStatusHandler
  3615                           ;!             _USBStdFeatureReqHandler
  3616                           ;!           _USBCheckHIDRequest
  3617                           ;!             _HIDGetReportHandler
  3618                           ;!             _HIDSetReportHandler
  3619                           ;!           _USBCtrlEPServiceComplete
  3620                           ;!             _USBCtrlTrfTxService
  3621                           ;!         _USBCtrlTrfOutHandler
  3622                           ;!           _USBCtrlTrfRxService
  3623                           ;!           _USBPrepareForNextSetupTrf
  3624                           ;!         _USBCtrlTrfInHandler
  3625                           ;!           _USBCtrlTrfTxService
  3626                           ;!           _USBPrepareForNextSetupTrf
  3627                           ;!     _WriteConfigBits
  3628                           ;!       _UnlockAndActivate
  3629                           ;!     _WriteEEPROM
  3630                           ;!       _UnlockAndActivate
  3631                           ;!     _WriteFlashBlock
  3632                           ;!       _UnlockAndActivate
  3633                           ;!     _TableReadPostIncrement
  3634                           ;!     _ResetDeviceCleanly
  3635                           ;!
  3636                           ;! _interrupt_at_low_vector (ROOT)
  3637                           ;!
  3638                           
  3639                           ;! Address spaces:
  3640                           
  3641                           ;!Name               Size   Autos  Total    Cost      Usage
  3642                           ;!BIGRAMlll          3FF      0       0      25        0.0%
  3643                           ;!EEDATA             100      0       0       0        0.0%
  3644                           ;!BITBANK3           100      0       0      10        0.0%
  3645                           ;!BANK3              100      0       0      11        0.0%
  3646                           ;!BITBANK2           100      0       0       8        0.0%
  3647                           ;!BANK2              100      0       0       9        0.0%
  3648                           ;!BITBANK1           100      0       0       6        0.0%
  3649                           ;!BANK1              100      0      40       7       25.0%
  3650                           ;!BIGRAMhlh           F8      0       0      22        0.0%
  3651                           ;!BIGRAMhll           F8      0       0      23        0.0%
  3652                           ;!BITBANK6            F8      0       0      17        0.0%
  3653                           ;!BANK6               F8      0       0      18        0.0%
  3654                           ;!BITBANK5            F8      0       0      15        0.0%
  3655                           ;!BANK5               F8      0       0      16        0.0%
  3656                           ;!BIGRAMlh            EF      0       0      24        0.0%
  3657                           ;!BANK4h              EF      0       0      14        0.0%
  3658                           ;!BITBANK4h           EF      0       0      13        0.0%
  3659                           ;!BITBANK0            A0      0       0       4        0.0%
  3660                           ;!BANK0               A0     10      90       5       90.0%
  3661                           ;!BIGRAMhh            80      0       0      21        0.0%
  3662                           ;!BITBANK7            80      0       0      19        0.0%
  3663                           ;!BANK7               80      0       0      20        0.0%
  3664                           ;!BITCOMRAM           5F      0       0       0        0.0%
  3665                           ;!COMRAM              5F     1F      45       1       72.6%
  3666                           ;!BITSFR_1             0      0       0      40        0.0%
  3667                           ;!SFR_1                0      0       0      40        0.0%
  3668                           ;!BITSFR               0      0       0      40        0.0%
  3669                           ;!SFR                  0      0       0      40        0.0%
  3670                           ;!STACK                0      0       7       2        0.0%
  3671                           ;!NULL                 0      0       0       0        0.0%
  3672                           ;!ABS                  0      0     115      12        0.0%
  3673                           ;!DATA                 0      0     11C       3        0.0%
  3674                           ;!CODE                 0      0       0       0        0.0%
  3675                           
  3676                           	global	_main
  3677                           
  3678 ;; *************** function _main *****************
  3679 ;; Defined at:
  3680 ;;		line 173 in file "../main.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;		None               void
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels required when called:    9
  3700 ;; This function calls:
  3701 ;;		_InitializeSystem
  3702 ;;		_USBTasks
  3703 ;;		_BlinkUSBStatus
  3704 ;;		_ProcessIO
  3705 ;; This function is called by:
  3706 ;;		Startup code after reset
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           psect	text0,class=CODE,space=0,reloc=2
  3710                           global __ptext0
  3711  0022A6                     __ptext0:
  3712                           psect	text0
  3713                           	file	"../main.c"
  3714                           	line	173
  3715                           	global	__size_of_main
  3716  0000                     	__size_of_main	equ	__end_of_main-_main
  3717                           	
  3718  0022A6                     _main:
  3719                           	opt	stack 22
  3720                           	line	176
  3721                           	
  3722  0022A6                     l3190:
  3723                           ;main.c: 176: if ( PORTBbits.RB7 == 1 )
  3724                           	
  3725  0022A6  AE81               	btfss	((c:3969)),c,7	;volatile
  3726  0022A8  D001               	goto	u2521
  3727  0022AA  D001               	goto	u2520
  3728  0022AC                     u2521:
  3729  0022AC  D003               	goto	l3194
  3730  0022AE                     u2520:
  3731                           	line	178
  3732                           	
  3733  0022AE                     l3192:
  3734                           # 178 "../main.c"
  3735  0022AE  EF00 F020          goto 0x4000 ;# 
  3736                           psect	text0
  3737  0022B2  D000               	goto	l3194
  3738                           	line	180
  3739                           	
  3740  0022B4                     l128:
  3741                           	line	184
  3742                           	
  3743  0022B4                     l3194:
  3744                           ;main.c: 180: }
  3745                           ;main.c: 184: InitializeSystem();
  3746  0022B4  ECDC  F010         	call	_InitializeSystem	;wreg free
  3747                           	line	187
  3748                           ;main.c: 187: while ( 1 )
  3749                           	
  3750  0022B8                     l129:
  3751                           	line	189
  3752                           # 189 "../main.c"
  3753  0022B8  0004               clrwdt ;# 
  3754                           psect	text0
  3755                           	line	190
  3756                           ;main.c: 190: USBTasks();
  3757  0022BA  EC15  F012         	call	_USBTasks	;wreg free
  3758                           	line	193
  3759                           	
  3760  0022BE                     l3196:
  3761                           ;main.c: 193: BlinkUSBStatus();
  3762  0022BE  ECB0  F010         	call	_BlinkUSBStatus	;wreg free
  3763                           	line	195
  3764                           	
  3765  0022C2                     l3198:
  3766                           ;main.c: 195: if ( (usb_device_state == 6) && (UCONbits.SUSPND != 1) )
  3767  0022C2  501F               	movf	((c:_usb_device_state)),c,w
  3768  0022C4  0A06               	xorlw	6
  3769                           
  3770  0022C6  A4D8               	btfss	status,2
  3771  0022C8  D001               	goto	u2531
  3772  0022CA  D001               	goto	u2530
  3773  0022CC                     u2531:
  3774  0022CC  D7F5               	goto	l129
  3775  0022CE                     u2530:
  3776                           	
  3777  0022CE                     l3200:
  3778                           	
  3779  0022CE  B260               	btfsc	((c:3936)),c,1	;volatile
  3780  0022D0  D001               	goto	u2541
  3781  0022D2  D001               	goto	u2540
  3782  0022D4                     u2541:
  3783  0022D4  D7F1               	goto	l129
  3784  0022D6                     u2540:
  3785                           	line	197
  3786                           	
  3787  0022D6                     l3202:
  3788                           ;main.c: 196: {
  3789                           ;main.c: 197: ProcessIO();
  3790  0022D6  EC62  F004         	call	_ProcessIO	;wreg free
  3791  0022DA  D7EE               	goto	l129
  3792                           	line	198
  3793                           	
  3794  0022DC                     l130:
  3795  0022DC  D7ED               	goto	l129
  3796                           	line	199
  3797                           	
  3798  0022DE                     l131:
  3799                           	line	187
  3800  0022DE  D7EC               	goto	l129
  3801                           	
  3802  0022E0                     l132:
  3803                           	line	201
  3804                           	
  3805  0022E0                     l133:
  3806                           	global	start
  3807  0022E0  EF53  F000         	goto	start
  3808                           	opt stack 0
  3809                           GLOBAL	__end_of_main
  3810  0022E4                     	__end_of_main:
  3811                           	signat	_main,88
  3812                           	global	_InitializeSystem
  3813                           
  3814 ;; *************** function _InitializeSystem *****************
  3815 ;; Defined at:
  3816 ;;		line 224 in file "../main.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;		None               void
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3833 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        1 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    3
  3837 ;; This function calls:
  3838 ;;		_UserInit
  3839 ;; This function is called by:
  3840 ;;		_main
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           psect	text1,class=CODE,space=0,reloc=2
  3844                           global __ptext1
  3845  0021B8                     __ptext1:
  3846                           psect	text1
  3847                           	file	"../main.c"
  3848                           	line	224
  3849                           	global	__size_of_InitializeSystem
  3850  0000                     	__size_of_InitializeSystem	equ	__end_of_InitializeSystem-_InitializeSystem
  3851                           	
  3852  0021B8                     _InitializeSystem:
  3853                           	opt	stack 27
  3854                           	line	228
  3855                           	
  3856  0021B8                     l3204:
  3857                           ;main.c: 228: OSCTUNE = 0x80;
  3858  0021B8  0E80               	movlw	low(080h)
  3859  0021BA  6E9B               	movwf	((c:3995)),c	;volatile
  3860                           	line	229
  3861                           ;main.c: 229: OSCCON = 0x70;
  3862  0021BC  0E70               	movlw	low(070h)
  3863  0021BE  6ED3               	movwf	((c:4051)),c	;volatile
  3864                           	line	230
  3865                           ;main.c: 230: OSCCON2 = 0x10;
  3866  0021C0  0E10               	movlw	low(010h)
  3867  0021C2  6ED2               	movwf	((c:4050)),c	;volatile
  3868                           	line	231
  3869                           ;main.c: 231: while ( OSCCON2bits.PLLRDY != 1 );
  3870  0021C4  D000               	goto	l136
  3871                           	
  3872  0021C6                     l137:
  3873                           	
  3874  0021C6                     l136:
  3875                           	
  3876  0021C6  AED2               	btfss	((c:4050)),c,7	;volatile
  3877  0021C8  D001               	goto	u2551
  3878  0021CA  D001               	goto	u2550
  3879  0021CC                     u2551:
  3880  0021CC  D7FC               	goto	l136
  3881  0021CE                     u2550:
  3882  0021CE  D000               	goto	l3206
  3883                           	
  3884  0021D0                     l138:
  3885                           	line	232
  3886                           	
  3887  0021D0                     l3206:
  3888                           ;main.c: 232: *((unsigned char*) 0xFB5) = 0x90;
  3889  0021D0  0100               	movlb	0	; () banked
  3890  0021D2  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3891  0021D4  0E90               	movlw	low(090h)
  3892  0021D6  6EB5               	movwf	((c:4021)),c
  3893  0021D8  0100               	movlb	0	; () banked
  3894  0021DA  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3895                           	line	235
  3896                           	
  3897  0021DC                     l3208:; BSR set to: 0
  3898                           
  3899                           ;main.c: 235: {UCFG = 0x10|0x00|0x04|0x00; usb_device_state = 0; usb_stat._byte = 0x00; 
                                 usb_active_cfg = 0x00;};
  3900  0021DC  0E14               	movlw	low(014h)
  3901  0021DE  6E62               	movwf	((c:3938)),c	;volatile
  3902                           	
  3903  0021E0                     l3210:; BSR set to: 0
  3904                           
  3905  0021E0  0100               	movlb	0	; () banked
  3906  0021E2  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3907  0021E4  0E00               	movlw	low(0)
  3908  0021E6  6E1F               	movwf	((c:_usb_device_state)),c
  3909  0021E8  0100               	movlb	0	; () banked
  3910  0021EA  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3911                           	
  3912  0021EC                     l3212:; BSR set to: 0
  3913                           
  3914  0021EC  0100               	movlb	0	; () banked
  3915  0021EE  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3916  0021F0  0E00               	movlw	low(0)
  3917  0021F2  6E20               	movwf	((c:_usb_stat)),c
  3918  0021F4  0100               	movlb	0	; () banked
  3919  0021F6  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3920                           	
  3921  0021F8                     l3214:; BSR set to: 0
  3922                           
  3923  0021F8  0100               	movlb	0	; () banked
  3924  0021FA  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3925  0021FC  0E00               	movlw	low(0)
  3926  0021FE  6E25               	movwf	((c:_usb_active_cfg)),c
  3927  002200  0100               	movlb	0	; () banked
  3928  002202  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3929                           	line	237
  3930                           	
  3931  002204                     l3216:; BSR set to: 0
  3932                           
  3933                           ;main.c: 237: UserInit();
  3934  002204  EC8F  F011         	call	_UserInit	;wreg free
  3935                           	line	239
  3936                           	
  3937  002208                     l139:
  3938  002208  0012               	return
  3939                           	opt stack 0
  3940                           GLOBAL	__end_of_InitializeSystem
  3941  00220A                     	__end_of_InitializeSystem:
  3942                           	signat	_InitializeSystem,88
  3943                           	global	_USBTasks
  3944                           
  3945 ;; *************** function _USBTasks *****************
  3946 ;; Defined at:
  3947 ;;		line 257 in file "../main.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;		None               void
  3954 ;; Registers used:
  3955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  3961 ;;      Params:         0       0       0       0       0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3964 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    8
  3968 ;; This function calls:
  3969 ;;		_USBCheckBusStatus
  3970 ;;		_USBDriverService
  3971 ;; This function is called by:
  3972 ;;		_main
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           psect	text2,class=CODE,space=0,reloc=2
  3976                           global __ptext2
  3977  00242A                     __ptext2:
  3978                           psect	text2
  3979                           	file	"../main.c"
  3980                           	line	257
  3981                           	global	__size_of_USBTasks
  3982  0000                     	__size_of_USBTasks	equ	__end_of_USBTasks-_USBTasks
  3983                           	
  3984  00242A                     _USBTasks:
  3985                           	opt	stack 22
  3986                           	line	261
  3987                           	
  3988  00242A                     l3218:
  3989                           ;main.c: 261: USBCheckBusStatus();
  3990  00242A  EC80  F010         	call	_USBCheckBusStatus	;wreg free
  3991                           	line	262
  3992                           ;main.c: 262: USBDriverService();
  3993  00242E  EC0F  F00E         	call	_USBDriverService	;wreg free
  3994                           	line	264
  3995                           	
  3996  002432                     l142:
  3997  002432  0012               	return
  3998                           	opt stack 0
  3999                           GLOBAL	__end_of_USBTasks
  4000  002434                     	__end_of_USBTasks:
  4001                           	signat	_USBTasks,88
  4002                           	global	_BlinkUSBStatus
  4003                           
  4004 ;; *************** function _BlinkUSBStatus *****************
  4005 ;; Defined at:
  4006 ;;		line 285 in file "../main.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;		None               void
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4022 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4023 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4024 ;;Total ram usage:        1 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    2
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           psect	text3,class=CODE,space=0,reloc=2
  4034                           global __ptext3
  4035  002160                     __ptext3:
  4036                           psect	text3
  4037                           	file	"../main.c"
  4038                           	line	285
  4039                           	global	__size_of_BlinkUSBStatus
  4040  0000                     	__size_of_BlinkUSBStatus	equ	__end_of_BlinkUSBStatus-_BlinkUSBStatus
  4041                           	
  4042  002160                     _BlinkUSBStatus:
  4043                           	opt	stack 28
  4044                           	line	288
  4045                           	
  4046  002160                     l3220:
  4047                           ;main.c: 286: static word led_count = 0;
  4048                           ;main.c: 288: if ( led_count == 0 )led_count = 10000U;
  4049  002160  500E               	movf	((c:BlinkUSBStatus@led_count+1)),c,w
  4050  002162  100D               	iorwf ((c:BlinkUSBStatus@led_count)),c,w
  4051                           
  4052  002164  A4D8               	btfss	status,2
  4053  002166  D001               	goto	u2561
  4054  002168  D001               	goto	u2560
  4055  00216A                     u2561:
  4056  00216A  D005               	goto	l3224
  4057  00216C                     u2560:
  4058                           	
  4059  00216C                     l3222:
  4060  00216C  0E27               	movlw	high(02710h)
  4061  00216E  6E0E               	movwf	((c:BlinkUSBStatus@led_count+1)),c
  4062  002170  0E10               	movlw	low(02710h)
  4063  002172  6E0D               	movwf	((c:BlinkUSBStatus@led_count)),c
  4064  002174  D000               	goto	l3224
  4065                           	
  4066  002176                     l147:
  4067                           	line	289
  4068                           	
  4069  002176                     l3224:
  4070                           ;main.c: 289: led_count--;
  4071  002176  060D               	decf	((c:BlinkUSBStatus@led_count)),c
  4072  002178  A0D8               	btfss	status,0
  4073  00217A  060E               	decf	((c:BlinkUSBStatus@led_count+1)),c
  4074                           	line	291
  4075                           	
  4076  00217C                     l3226:
  4077                           ;main.c: 291: if ( usb_device_state < 6 )
  4078  00217C  0E06               	movlw	(06h)&0ffh
  4079  00217E  601F               	cpfslt	((c:_usb_device_state)),c
  4080  002180  D001               	goto	u2571
  4081  002182  D001               	goto	u2570
  4082  002184                     u2571:
  4083  002184  D002               	goto	l3230
  4084  002186                     u2570:
  4085                           	line	293
  4086                           	
  4087  002186                     l3228:
  4088                           ;main.c: 292: {
  4089                           ;main.c: 293: LATCbits.LATC0 = 1;;
  4090  002186  808B               	bsf	((c:3979)),c,0	;volatile
  4091                           	line	294
  4092                           ;main.c: 294: }
  4093  002188  D016               	goto	l151
  4094                           	line	295
  4095                           	
  4096  00218A                     l148:
  4097                           	line	297
  4098                           	
  4099  00218A                     l3230:
  4100                           ;main.c: 295: else
  4101                           ;main.c: 296: {
  4102                           ;main.c: 297: if ( led_count == 0 )
  4103  00218A  500E               	movf	((c:BlinkUSBStatus@led_count+1)),c,w
  4104  00218C  100D               	iorwf ((c:BlinkUSBStatus@led_count)),c,w
  4105                           
  4106  00218E  A4D8               	btfss	status,2
  4107  002190  D001               	goto	u2581
  4108  002192  D001               	goto	u2580
  4109  002194                     u2581:
  4110  002194  D010               	goto	l151
  4111  002196                     u2580:
  4112                           	line	299
  4113                           	
  4114  002196                     l3232:
  4115                           ;main.c: 298: {
  4116                           ;main.c: 299: LATCbits.LATC0 = !LATCbits.LATC0;;
  4117                           	
  4118  002196  A08B               	btfss	((c:3979)),c,0	;volatile
  4119  002198  D001               	goto	u2591
  4120  00219A  D002               	goto	u2590
  4121  00219C                     u2591:
  4122  00219C  0E01               	movlw	1
  4123  00219E  D001               	goto	u2596
  4124  0021A0                     u2590:
  4125  0021A0  0E00               	movlw	0
  4126  0021A2                     u2596:
  4127  0021A2  0100               	movlb	0	; () banked
  4128  0021A4  6FE0               	movwf	(??_BlinkUSBStatus+0+0)&0ffh
  4129  0021A6  508B               	movf	((c:3979)),c,w	;volatile
  4130  0021A8  0100               	movlb	0	; () banked
  4131  0021AA  19E0               	xorwf	((??_BlinkUSBStatus+0+0))&0ffh,w
  4132  0021AC  0BFE               	andlw	not ((1<<1)-1)
  4133  0021AE  19E0               	xorwf	((??_BlinkUSBStatus+0+0))&0ffh,w
  4134  0021B0  6E8B               	movwf	((c:3979)),c	;volatile
  4135  0021B2  D001               	goto	l151
  4136                           	line	300
  4137                           	
  4138  0021B4                     l150:; BSR set to: 0
  4139                           
  4140  0021B4  D000               	goto	l151
  4141                           	line	301
  4142                           	
  4143  0021B6                     l149:; BSR set to: 0
  4144                           
  4145                           	line	302
  4146                           	
  4147  0021B6                     l151:
  4148  0021B6  0012               	return
  4149                           	opt stack 0
  4150                           GLOBAL	__end_of_BlinkUSBStatus
  4151  0021B8                     	__end_of_BlinkUSBStatus:
  4152                           	signat	_BlinkUSBStatus,88
  4153                           	global	_ProcessIO
  4154                           
  4155 ;; *************** function _ProcessIO *****************
  4156 ;; Defined at:
  4157 ;;		line 285 in file "../BootPIC18NonJ.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  i               1   15[BANK0 ] unsigned char 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;		None               void
  4164 ;; Registers used:
  4165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0
  4172 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4173 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4174 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4175 ;;Total ram usage:        5 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    8
  4178 ;; This function calls:
  4179 ;;		_HIDRxReport
  4180 ;;		_HIDTxReport
  4181 ;;		_ClearWatchdog
  4182 ;;		_UnlockAndActivate
  4183 ;;		_USBDriverService
  4184 ;;		_WriteConfigBits
  4185 ;;		_WriteEEPROM
  4186 ;;		_WriteFlashBlock
  4187 ;;		_TableReadPostIncrement
  4188 ;;		_ResetDeviceCleanly
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           psect	text4,class=CODE,space=0,reloc=2
  4194                           global __ptext4
  4195  0008C4                     __ptext4:
  4196                           psect	text4
  4197                           	file	"../BootPIC18NonJ.c"
  4198                           	line	285
  4199                           	global	__size_of_ProcessIO
  4200  0000                     	__size_of_ProcessIO	equ	__end_of_ProcessIO-_ProcessIO
  4201                           	
  4202  0008C4                     _ProcessIO:
  4203                           	opt	stack 22
  4204                           	line	288
  4205                           	
  4206  0008C4                     l3234:
  4207                           ;BootPIC18NonJ.c: 286: unsigned char i;
  4208                           ;BootPIC18NonJ.c: 288: if(BootState == 0x00)
  4209  0008C4  6617               	tstfsz	((c:_BootState)),c
  4210  0008C6  D001               	goto	u2601
  4211  0008C8  D001               	goto	u2600
  4212  0008CA                     u2601:
  4213  0008CA  D336               	goto	l3414
  4214  0008CC                     u2600:
  4215                           	line	290
  4216                           	
  4217  0008CC                     l3236:
  4218                           ;BootPIC18NonJ.c: 289: {
  4219                           ;BootPIC18NonJ.c: 290: if(!ep1Bo.Stat.UOWN)
  4220  0008CC  0104               	movlb	4	; () banked
  4221                           	
  4222  0008CE  0104               	movlb	4	; () banked
  4223  0008D0  BF08               	btfsc	((1032))&0ffh,7	;volatile
  4224  0008D2  D001               	goto	u2611
  4225  0008D4  D001               	goto	u2610
  4226  0008D6                     u2611:
  4227  0008D6  D34A               	goto	l641
  4228  0008D8                     u2610:
  4229                           	line	292
  4230                           	
  4231  0008D8                     l3238:; BSR set to: 4
  4232                           
  4233                           ;BootPIC18NonJ.c: 291: {
  4234                           ;BootPIC18NonJ.c: 292: HIDRxReport((char *)&PacketFromPC, 64);
  4235  0008D8  0100               	movlb	0	; () banked
  4236  0008DA  0E00               	movlw	high(_PacketFromPC)
  4237  0008DC  0100               	movlb	0	; () banked
  4238  0008DE  0100               	movlb	0	; () banked
  4239  0008E0  6FE1               	movwf	((?_HIDRxReport+1))&0ffh
  4240  0008E2  0100               	movlb	0	; () banked
  4241  0008E4  0E60               	movlw	low(_PacketFromPC)
  4242  0008E6  0100               	movlb	0	; () banked
  4243  0008E8  6FE0               	movwf	((?_HIDRxReport))&0ffh
  4244  0008EA  0100               	movlb	0	; () banked
  4245  0008EC  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4246  0008EE  0E40               	movlw	low(040h)
  4247  0008F0  0100               	movlb	0	; () banked
  4248  0008F2  0100               	movlb	0	; () banked
  4249  0008F4  6FE2               	movwf	(0+(?_HIDRxReport+02h))&0ffh
  4250  0008F6  0100               	movlb	0	; () banked
  4251  0008F8  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4252  0008FA  0100               	movlb	0	; () banked
  4253  0008FC  ECE2  F00C         	call	_HIDRxReport	;wreg free
  4254                           	line	293
  4255                           	
  4256  000900                     l3240:
  4257                           ;BootPIC18NonJ.c: 293: BootState = 0x01;
  4258  000900  0100               	movlb	0	; () banked
  4259  000902  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4260  000904  0E01               	movlw	low(01h)
  4261  000906  6E17               	movwf	((c:_BootState)),c
  4262  000908  0100               	movlb	0	; () banked
  4263  00090A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4264                           	line	295
  4265                           	
  4266  00090C                     l3242:; BSR set to: 0
  4267                           
  4268                           ;BootPIC18NonJ.c: 295: for(i = 0; i < 0x40; i++)
  4269  00090C  0100               	movlb	0	; () banked
  4270  00090E  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4271  000910  0E00               	movlw	low(0)
  4272  000912  0100               	movlb	0	; () banked
  4273  000914  0100               	movlb	0	; () banked
  4274  000916  6FEF               	movwf	((ProcessIO@i))&0ffh
  4275  000918  0100               	movlb	0	; () banked
  4276  00091A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4277                           	
  4278  00091C                     l3244:; BSR set to: 0
  4279                           
  4280  00091C  0E3F               	movlw	(040h-1)
  4281  00091E  0100               	movlb	0	; () banked
  4282  000920  0100               	movlb	0	; () banked
  4283  000922  65EF               	cpfsgt	((ProcessIO@i))&0ffh
  4284  000924  D001               	goto	u2621
  4285  000926  D001               	goto	u2620
  4286  000928                     u2621:
  4287  000928  D002               	goto	l3248
  4288  00092A                     u2620:
  4289  00092A  D320               	goto	l641
  4290                           	
  4291  00092C                     l3246:; BSR set to: 0
  4292                           
  4293  00092C  D31F               	goto	l641
  4294                           	line	296
  4295                           	
  4296  00092E                     l605:; BSR set to: 0
  4297                           
  4298                           	
  4299  00092E                     l3248:; BSR set to: 0
  4300                           
  4301                           ;BootPIC18NonJ.c: 296: PacketToPC.Contents[i] = 0;
  4302  00092E  0100               	movlb	0	; () banked
  4303  000930  0100               	movlb	0	; () banked
  4304  000932  51EF               	movf	((ProcessIO@i))&0ffh,w
  4305  000934  0D01               	mullw	01h
  4306  000936  0100               	movlb	0	; () banked
  4307  000938  0EA0               	movlw	low(_PacketToPC)
  4308  00093A  24F3               	addwf	(prodl),c,w
  4309  00093C  6ED9               	movwf	c:fsr2l
  4310  00093E  0100               	movlb	0	; () banked
  4311  000940  0E00               	movlw	high(_PacketToPC)
  4312  000942  20F4               	addwfc	prod+1,w
  4313  000944  6EDA               	movwf	1+c:fsr2l
  4314  000946  0E00               	movlw	low(0)
  4315  000948  6EDF               	movwf	indf2
  4316                           	line	295
  4317                           	
  4318  00094A                     l3250:; BSR set to: 0
  4319                           
  4320  00094A  0100               	movlb	0	; () banked
  4321  00094C  0100               	movlb	0	; () banked
  4322  00094E  2BEF               	incf	((ProcessIO@i))&0ffh
  4323                           	
  4324  000950                     l3252:; BSR set to: 0
  4325                           
  4326  000950  0E3F               	movlw	(040h-1)
  4327  000952  0100               	movlb	0	; () banked
  4328  000954  0100               	movlb	0	; () banked
  4329  000956  65EF               	cpfsgt	((ProcessIO@i))&0ffh
  4330  000958  D001               	goto	u2631
  4331  00095A  D001               	goto	u2630
  4332  00095C                     u2631:
  4333  00095C  D7E8               	goto	l3248
  4334  00095E                     u2630:
  4335  00095E  D306               	goto	l641
  4336                           	
  4337  000960                     l606:; BSR set to: 0
  4338                           
  4339  000960  D305               	goto	l641
  4340                           	line	297
  4341                           	
  4342  000962                     l604:; BSR set to: 0
  4343                           
  4344                           	line	298
  4345                           ;BootPIC18NonJ.c: 297: }
  4346                           ;BootPIC18NonJ.c: 298: }
  4347  000962  D304               	goto	l641
  4348                           	line	299
  4349                           	
  4350  000964                     l603:; BSR set to: 0
  4351                           
  4352                           	line	301
  4353                           ;BootPIC18NonJ.c: 299: else
  4354                           ;BootPIC18NonJ.c: 300: {
  4355                           ;BootPIC18NonJ.c: 301: switch(PacketFromPC.Command)
  4356  000964  D2E9               	goto	l3414
  4357                           	line	303
  4358                           ;BootPIC18NonJ.c: 302: {
  4359                           ;BootPIC18NonJ.c: 303: case 0x02:
  4360                           	
  4361  000966                     l609:; BSR set to: 0
  4362                           
  4363                           	line	306
  4364                           	
  4365  000966                     l3254:; BSR set to: 0
  4366                           
  4367                           ;BootPIC18NonJ.c: 304: {
  4368                           ;BootPIC18NonJ.c: 306: PacketToPC.Command = 0x02;
  4369  000966  0100               	movlb	0	; () banked
  4370  000968  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4371  00096A  0E02               	movlw	low(02h)
  4372  00096C  0100               	movlb	0	; () banked
  4373  00096E  0100               	movlb	0	; () banked
  4374  000970  6FA0               	movwf	((_PacketToPC))&0ffh
  4375  000972  0100               	movlb	0	; () banked
  4376  000974  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4377                           	line	307
  4378                           ;BootPIC18NonJ.c: 307: PacketToPC.PacketDataFieldSize = 0x3A;
  4379  000976  0100               	movlb	0	; () banked
  4380  000978  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4381  00097A  0E3A               	movlw	low(03Ah)
  4382  00097C  0100               	movlb	0	; () banked
  4383  00097E  0100               	movlb	0	; () banked
  4384  000980  6FA1               	movwf	(0+(_PacketToPC+01h))&0ffh
  4385  000982  0100               	movlb	0	; () banked
  4386  000984  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4387                           	line	308
  4388                           ;BootPIC18NonJ.c: 308: PacketToPC.BytesPerAddress = 0x01;
  4389  000986  0100               	movlb	0	; () banked
  4390  000988  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4391  00098A  0E01               	movlw	low(01h)
  4392  00098C  0100               	movlb	0	; () banked
  4393  00098E  0100               	movlb	0	; () banked
  4394  000990  6FA2               	movwf	(0+(_PacketToPC+02h))&0ffh
  4395  000992  0100               	movlb	0	; () banked
  4396  000994  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4397                           	line	309
  4398                           ;BootPIC18NonJ.c: 309: PacketToPC.Type1 = 0x01;
  4399  000996  0100               	movlb	0	; () banked
  4400  000998  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4401  00099A  0E01               	movlw	low(01h)
  4402  00099C  0100               	movlb	0	; () banked
  4403  00099E  0100               	movlb	0	; () banked
  4404  0009A0  6FA3               	movwf	(0+(_PacketToPC+03h))&0ffh
  4405  0009A2  0100               	movlb	0	; () banked
  4406  0009A4  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4407                           	line	310
  4408                           	
  4409  0009A6                     l3256:; BSR set to: 0
  4410                           
  4411                           ;BootPIC18NonJ.c: 310: PacketToPC.Address1 = (unsigned long)0x004000;
  4412  0009A6  0E00               	movlw	low(04000h)
  4413  0009A8  0100               	movlb	0	; () banked
  4414  0009AA  0100               	movlb	0	; () banked
  4415  0009AC  6FA4               	movwf	(0+(_PacketToPC+04h))&0ffh
  4416  0009AE  0E40               	movlw	high(04000h)
  4417  0009B0  0100               	movlb	0	; () banked
  4418  0009B2  6FA5               	movwf	(1+(_PacketToPC+04h))&0ffh
  4419  0009B4  0E00               	movlw	low highword(04000h)
  4420  0009B6  0100               	movlb	0	; () banked
  4421  0009B8  6FA6               	movwf	(2+(_PacketToPC+04h))&0ffh
  4422  0009BA  0E00               	movlw	high highword(04000h)
  4423  0009BC  0100               	movlb	0	; () banked
  4424  0009BE  6FA7               	movwf	(3+(_PacketToPC+04h))&0ffh
  4425                           	line	311
  4426                           	
  4427  0009C0                     l3258:; BSR set to: 0
  4428                           
  4429                           ;BootPIC18NonJ.c: 311: PacketToPC.Length1 = (unsigned long)(0x008000 - 0x004000);
  4430  0009C0  0E00               	movlw	low(04000h)
  4431  0009C2  0100               	movlb	0	; () banked
  4432  0009C4  0100               	movlb	0	; () banked
  4433  0009C6  6FA8               	movwf	(0+(_PacketToPC+08h))&0ffh
  4434  0009C8  0E40               	movlw	high(04000h)
  4435  0009CA  0100               	movlb	0	; () banked
  4436  0009CC  6FA9               	movwf	(1+(_PacketToPC+08h))&0ffh
  4437  0009CE  0E00               	movlw	low highword(04000h)
  4438  0009D0  0100               	movlb	0	; () banked
  4439  0009D2  6FAA               	movwf	(2+(_PacketToPC+08h))&0ffh
  4440  0009D4  0E00               	movlw	high highword(04000h)
  4441  0009D6  0100               	movlb	0	; () banked
  4442  0009D8  6FAB               	movwf	(3+(_PacketToPC+08h))&0ffh
  4443                           	line	312
  4444                           ;BootPIC18NonJ.c: 312: PacketToPC.Type2 = 0x03;
  4445  0009DA  0100               	movlb	0	; () banked
  4446  0009DC  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4447  0009DE  0E03               	movlw	low(03h)
  4448  0009E0  0100               	movlb	0	; () banked
  4449  0009E2  0100               	movlb	0	; () banked
  4450  0009E4  6FAC               	movwf	(0+(_PacketToPC+0Ch))&0ffh
  4451  0009E6  0100               	movlb	0	; () banked
  4452  0009E8  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4453                           	line	313
  4454                           	
  4455  0009EA                     l3260:; BSR set to: 0
  4456                           
  4457                           ;BootPIC18NonJ.c: 313: PacketToPC.Address2 = (unsigned long)0x300000;
  4458  0009EA  0E00               	movlw	low(0300000h)
  4459  0009EC  0100               	movlb	0	; () banked
  4460  0009EE  0100               	movlb	0	; () banked
  4461  0009F0  6FAD               	movwf	(0+(_PacketToPC+0Dh))&0ffh
  4462  0009F2  0E00               	movlw	high(0300000h)
  4463  0009F4  0100               	movlb	0	; () banked
  4464  0009F6  6FAE               	movwf	(1+(_PacketToPC+0Dh))&0ffh
  4465  0009F8  0E30               	movlw	low highword(0300000h)
  4466  0009FA  0100               	movlb	0	; () banked
  4467  0009FC  6FAF               	movwf	(2+(_PacketToPC+0Dh))&0ffh
  4468  0009FE  0E00               	movlw	high highword(0300000h)
  4469  000A00  0100               	movlb	0	; () banked
  4470  000A02  6FB0               	movwf	(3+(_PacketToPC+0Dh))&0ffh
  4471                           	line	314
  4472                           	
  4473  000A04                     l3262:; BSR set to: 0
  4474                           
  4475                           ;BootPIC18NonJ.c: 314: PacketToPC.Length2 = (unsigned long)14;
  4476  000A04  0E0E               	movlw	low(0Eh)
  4477  000A06  0100               	movlb	0	; () banked
  4478  000A08  0100               	movlb	0	; () banked
  4479  000A0A  6FB1               	movwf	(0+(_PacketToPC+011h))&0ffh
  4480  000A0C  0E00               	movlw	high(0Eh)
  4481  000A0E  0100               	movlb	0	; () banked
  4482  000A10  6FB2               	movwf	(1+(_PacketToPC+011h))&0ffh
  4483  000A12  0E00               	movlw	low highword(0Eh)
  4484  000A14  0100               	movlb	0	; () banked
  4485  000A16  6FB3               	movwf	(2+(_PacketToPC+011h))&0ffh
  4486  000A18  0E00               	movlw	high highword(0Eh)
  4487  000A1A  0100               	movlb	0	; () banked
  4488  000A1C  6FB4               	movwf	(3+(_PacketToPC+011h))&0ffh
  4489                           	line	315
  4490                           ;BootPIC18NonJ.c: 315: PacketToPC.Type3 = 0x01;
  4491  000A1E  0100               	movlb	0	; () banked
  4492  000A20  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4493  000A22  0E01               	movlw	low(01h)
  4494  000A24  0100               	movlb	0	; () banked
  4495  000A26  0100               	movlb	0	; () banked
  4496  000A28  6FB5               	movwf	(0+(_PacketToPC+015h))&0ffh
  4497  000A2A  0100               	movlb	0	; () banked
  4498  000A2C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4499                           	line	316
  4500                           	
  4501  000A2E                     l3264:; BSR set to: 0
  4502                           
  4503                           ;BootPIC18NonJ.c: 316: PacketToPC.Address3 = (unsigned long)0x200000;
  4504  000A2E  0E00               	movlw	low(0200000h)
  4505  000A30  0100               	movlb	0	; () banked
  4506  000A32  0100               	movlb	0	; () banked
  4507  000A34  6FB6               	movwf	(0+(_PacketToPC+016h))&0ffh
  4508  000A36  0E00               	movlw	high(0200000h)
  4509  000A38  0100               	movlb	0	; () banked
  4510  000A3A  6FB7               	movwf	(1+(_PacketToPC+016h))&0ffh
  4511  000A3C  0E20               	movlw	low highword(0200000h)
  4512  000A3E  0100               	movlb	0	; () banked
  4513  000A40  6FB8               	movwf	(2+(_PacketToPC+016h))&0ffh
  4514  000A42  0E00               	movlw	high highword(0200000h)
  4515  000A44  0100               	movlb	0	; () banked
  4516  000A46  6FB9               	movwf	(3+(_PacketToPC+016h))&0ffh
  4517                           	line	317
  4518                           	
  4519  000A48                     l3266:; BSR set to: 0
  4520                           
  4521                           ;BootPIC18NonJ.c: 317: PacketToPC.Length3 = (unsigned long)(8);
  4522  000A48  0E08               	movlw	low(08h)
  4523  000A4A  0100               	movlb	0	; () banked
  4524  000A4C  0100               	movlb	0	; () banked
  4525  000A4E  6FBA               	movwf	(0+(_PacketToPC+01Ah))&0ffh
  4526  000A50  0E00               	movlw	high(08h)
  4527  000A52  0100               	movlb	0	; () banked
  4528  000A54  6FBB               	movwf	(1+(_PacketToPC+01Ah))&0ffh
  4529  000A56  0E00               	movlw	low highword(08h)
  4530  000A58  0100               	movlb	0	; () banked
  4531  000A5A  6FBC               	movwf	(2+(_PacketToPC+01Ah))&0ffh
  4532  000A5C  0E00               	movlw	high highword(08h)
  4533  000A5E  0100               	movlb	0	; () banked
  4534  000A60  6FBD               	movwf	(3+(_PacketToPC+01Ah))&0ffh
  4535                           	line	318
  4536                           	
  4537  000A62                     l3268:; BSR set to: 0
  4538                           
  4539                           ;BootPIC18NonJ.c: 318: PacketToPC.Type4 = 0xFF;
  4540  000A62  0100               	movlb	0	; () banked
  4541  000A64  0100               	movlb	0	; () banked
  4542  000A66  69BE               	setf	(0+(_PacketToPC+01Eh))&0ffh
  4543                           	line	320
  4544                           ;BootPIC18NonJ.c: 320: PacketToPC.Type4 = 0x02;
  4545  000A68  0100               	movlb	0	; () banked
  4546  000A6A  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4547  000A6C  0E02               	movlw	low(02h)
  4548  000A6E  0100               	movlb	0	; () banked
  4549  000A70  0100               	movlb	0	; () banked
  4550  000A72  6FBE               	movwf	(0+(_PacketToPC+01Eh))&0ffh
  4551  000A74  0100               	movlb	0	; () banked
  4552  000A76  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4553                           	line	321
  4554                           	
  4555  000A78                     l3270:; BSR set to: 0
  4556                           
  4557                           ;BootPIC18NonJ.c: 321: PacketToPC.Address4 = (unsigned long)0xF00000;
  4558  000A78  0E00               	movlw	low(0F00000h)
  4559  000A7A  0100               	movlb	0	; () banked
  4560  000A7C  0100               	movlb	0	; () banked
  4561  000A7E  6FBF               	movwf	(0+(_PacketToPC+01Fh))&0ffh
  4562  000A80  0E00               	movlw	high(0F00000h)
  4563  000A82  0100               	movlb	0	; () banked
  4564  000A84  6FC0               	movwf	(1+(_PacketToPC+01Fh))&0ffh
  4565  000A86  0EF0               	movlw	low highword(0F00000h)
  4566  000A88  0100               	movlb	0	; () banked
  4567  000A8A  6FC1               	movwf	(2+(_PacketToPC+01Fh))&0ffh
  4568  000A8C  0E00               	movlw	high highword(0F00000h)
  4569  000A8E  0100               	movlb	0	; () banked
  4570  000A90  6FC2               	movwf	(3+(_PacketToPC+01Fh))&0ffh
  4571                           	line	322
  4572                           	
  4573  000A92                     l3272:; BSR set to: 0
  4574                           
  4575                           ;BootPIC18NonJ.c: 322: PacketToPC.Length4 = (unsigned long)0x100;
  4576  000A92  0E00               	movlw	low(0100h)
  4577  000A94  0100               	movlb	0	; () banked
  4578  000A96  0100               	movlb	0	; () banked
  4579  000A98  6FC3               	movwf	(0+(_PacketToPC+023h))&0ffh
  4580  000A9A  0E01               	movlw	high(0100h)
  4581  000A9C  0100               	movlb	0	; () banked
  4582  000A9E  6FC4               	movwf	(1+(_PacketToPC+023h))&0ffh
  4583  000AA0  0E00               	movlw	low highword(0100h)
  4584  000AA2  0100               	movlb	0	; () banked
  4585  000AA4  6FC5               	movwf	(2+(_PacketToPC+023h))&0ffh
  4586  000AA6  0E00               	movlw	high highword(0100h)
  4587  000AA8  0100               	movlb	0	; () banked
  4588  000AAA  6FC6               	movwf	(3+(_PacketToPC+023h))&0ffh
  4589                           	line	323
  4590                           	
  4591  000AAC                     l3274:; BSR set to: 0
  4592                           
  4593                           ;BootPIC18NonJ.c: 323: PacketToPC.Type5 = 0xFF;
  4594  000AAC  0100               	movlb	0	; () banked
  4595  000AAE  0100               	movlb	0	; () banked
  4596  000AB0  69C7               	setf	(0+(_PacketToPC+027h))&0ffh
  4597                           	line	327
  4598                           	
  4599  000AB2                     l3276:; BSR set to: 0
  4600                           
  4601                           ;BootPIC18NonJ.c: 327: if(!ep1Bi.Stat.UOWN)
  4602  000AB2  0104               	movlb	4	; () banked
  4603                           	
  4604  000AB4  0104               	movlb	4	; () banked
  4605  000AB6  BF0C               	btfsc	((1036))&0ffh,7	;volatile
  4606  000AB8  D001               	goto	u2641
  4607  000ABA  D001               	goto	u2640
  4608  000ABC                     u2641:
  4609  000ABC  D257               	goto	l641
  4610  000ABE                     u2640:
  4611                           	line	329
  4612                           	
  4613  000ABE                     l3278:; BSR set to: 4
  4614                           
  4615                           ;BootPIC18NonJ.c: 328: {
  4616                           ;BootPIC18NonJ.c: 329: HIDTxReport((char *)&PacketToPC, 64);
  4617  000ABE  0100               	movlb	0	; () banked
  4618  000AC0  0E00               	movlw	high(_PacketToPC)
  4619  000AC2  0100               	movlb	0	; () banked
  4620  000AC4  0100               	movlb	0	; () banked
  4621  000AC6  6FE1               	movwf	((?_HIDTxReport+1))&0ffh
  4622  000AC8  0100               	movlb	0	; () banked
  4623  000ACA  0EA0               	movlw	low(_PacketToPC)
  4624  000ACC  0100               	movlb	0	; () banked
  4625  000ACE  6FE0               	movwf	((?_HIDTxReport))&0ffh
  4626  000AD0  0100               	movlb	0	; () banked
  4627  000AD2  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4628  000AD4  0E40               	movlw	low(040h)
  4629  000AD6  0100               	movlb	0	; () banked
  4630  000AD8  0100               	movlb	0	; () banked
  4631  000ADA  6FE2               	movwf	(0+(?_HIDTxReport+02h))&0ffh
  4632  000ADC  0100               	movlb	0	; () banked
  4633  000ADE  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4634  000AE0  0100               	movlb	0	; () banked
  4635  000AE2  EC4A  F00D         	call	_HIDTxReport	;wreg free
  4636                           	line	330
  4637                           	
  4638  000AE6                     l3280:
  4639                           ;BootPIC18NonJ.c: 330: BootState = 0x00;
  4640  000AE6  0100               	movlb	0	; () banked
  4641  000AE8  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4642  000AEA  0E00               	movlw	low(0)
  4643  000AEC  6E17               	movwf	((c:_BootState)),c
  4644  000AEE  0100               	movlb	0	; () banked
  4645  000AF0  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4646  000AF2  D23C               	goto	l641
  4647                           	line	331
  4648                           	
  4649  000AF4                     l610:; BSR set to: 0
  4650                           
  4651                           	line	333
  4652                           ;BootPIC18NonJ.c: 331: }
  4653                           ;BootPIC18NonJ.c: 332: }
  4654                           ;BootPIC18NonJ.c: 333: break;
  4655  000AF4  D23B               	goto	l641
  4656                           	line	334
  4657                           ;BootPIC18NonJ.c: 334: case 0x03:
  4658                           	
  4659  000AF6                     l612:; BSR set to: 0
  4660                           
  4661                           	line	336
  4662                           	
  4663  000AF6                     l3282:; BSR set to: 0
  4664                           
  4665                           ;BootPIC18NonJ.c: 335: {
  4666                           ;BootPIC18NonJ.c: 336: ConfigsLockValue = TRUE;
  4667  000AF6  0100               	movlb	0	; () banked
  4668  000AF8  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4669  000AFA  0E01               	movlw	low(01h)
  4670  000AFC  6E19               	movwf	((c:_ConfigsLockValue)),c
  4671  000AFE  0100               	movlb	0	; () banked
  4672  000B00  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4673                           	line	337
  4674                           	
  4675  000B02                     l3284:; BSR set to: 0
  4676                           
  4677                           ;BootPIC18NonJ.c: 337: if(PacketFromPC.LockValue == 0x00)
  4678  000B02  0100               	movlb	0	; () banked
  4679  000B04  0100               	movlb	0	; () banked
  4680  000B06  6761               	tstfsz	(0+(_PacketFromPC+01h))&0ffh
  4681  000B08  D001               	goto	u2651
  4682  000B0A  D001               	goto	u2650
  4683  000B0C                     u2651:
  4684  000B0C  D006               	goto	l613
  4685  000B0E                     u2650:
  4686                           	line	339
  4687                           	
  4688  000B0E                     l3286:; BSR set to: 0
  4689                           
  4690                           ;BootPIC18NonJ.c: 338: {
  4691                           ;BootPIC18NonJ.c: 339: ConfigsLockValue = FALSE;
  4692  000B0E  0100               	movlb	0	; () banked
  4693  000B10  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4694  000B12  0E00               	movlw	low(0)
  4695  000B14  6E19               	movwf	((c:_ConfigsLockValue)),c
  4696  000B16  0100               	movlb	0	; () banked
  4697  000B18  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4698                           	line	340
  4699                           	
  4700  000B1A                     l613:; BSR set to: 0
  4701                           
  4702                           	line	341
  4703                           ;BootPIC18NonJ.c: 340: }
  4704                           ;BootPIC18NonJ.c: 341: BootState = 0x00;
  4705  000B1A  0100               	movlb	0	; () banked
  4706  000B1C  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4707  000B1E  0E00               	movlw	low(0)
  4708  000B20  6E17               	movwf	((c:_BootState)),c
  4709  000B22  0100               	movlb	0	; () banked
  4710  000B24  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4711                           	line	343
  4712                           ;BootPIC18NonJ.c: 342: }
  4713                           ;BootPIC18NonJ.c: 343: break;
  4714  000B26  D222               	goto	l641
  4715                           	line	344
  4716                           ;BootPIC18NonJ.c: 344: case 0x04:
  4717                           	
  4718  000B28                     l614:; BSR set to: 0
  4719                           
  4720                           	line	347
  4721                           	
  4722  000B28                     l3288:; BSR set to: 0
  4723                           
  4724                           ;BootPIC18NonJ.c: 345: {
  4725                           ;BootPIC18NonJ.c: 347: for(ErasePageTracker = 256; ErasePageTracker < (unsigned int)(511
                                  + 1); ErasePageTracker++)
  4726  000B28  0E01               	movlw	high(0100h)
  4727  000B2A  6E10               	movwf	((c:_ErasePageTracker+1)),c
  4728  000B2C  0E00               	movlw	low(0100h)
  4729  000B2E  6E0F               	movwf	((c:_ErasePageTracker)),c
  4730                           	
  4731  000B30                     l3290:; BSR set to: 0
  4732                           
  4733  000B30  0E00               	movlw	0
  4734  000B32  5C0F               	subwf	((c:_ErasePageTracker)),c,w
  4735  000B34  0E02               	movlw	02h
  4736  000B36  5810               	subwfb	((c:_ErasePageTracker+1)),c,w
  4737  000B38  A0D8               	btfss	status,0
  4738  000B3A  D001               	goto	u2661
  4739  000B3C  D001               	goto	u2660
  4740  000B3E                     u2661:
  4741  000B3E  D002               	goto	l3294
  4742  000B40                     u2660:
  4743  000B40  D036               	goto	l3308
  4744                           	
  4745  000B42                     l3292:; BSR set to: 0
  4746                           
  4747  000B42  D035               	goto	l3308
  4748                           	line	348
  4749                           	
  4750  000B44                     l615:; BSR set to: 0
  4751                           
  4752                           	line	349
  4753                           	
  4754  000B44                     l3294:
  4755                           ;BootPIC18NonJ.c: 348: {
  4756                           ;BootPIC18NonJ.c: 349: ClearWatchdog();
  4757  000B44  EC1A  F012         	call	_ClearWatchdog	;wreg free
  4758                           	line	350
  4759                           	
  4760  000B48                     l3296:
  4761                           ;BootPIC18NonJ.c: 350: TBLPTR = ((unsigned short long)ErasePageTracker << 6);
  4762  000B48  0E06               	movlw	(06h)&0ffh
  4763  000B4A  0100               	movlb	0	; () banked
  4764  000B4C  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4765  000B4E  C00F  F0EC         	movff	(c:_ErasePageTracker),??_ProcessIO+1+0
  4766  000B52  C010  F0ED         	movff	(c:_ErasePageTracker+1),??_ProcessIO+1+0+1
  4767  000B56  0100               	movlb	0	; () banked
  4768  000B58  6BEE               	clrf	(??_ProcessIO+1+0+2)&0ffh
  4769  000B5A  0100               	movlb	0	; () banked
  4770  000B5C  29EB               	incf	((??_ProcessIO+0+0))&0ffh,w
  4771  000B5E  D005               	goto	u2670
  4772  000B60                     u2675:
  4773  000B60  90D8               	bcf	status,0
  4774  000B62  0100               	movlb	0	; () banked
  4775  000B64  37EC               	rlcf	(??_ProcessIO+1+0)&0ffh
  4776  000B66  37ED               	rlcf	(??_ProcessIO+1+1)&0ffh
  4777  000B68  37EE               	rlcf	(??_ProcessIO+1+2)&0ffh
  4778  000B6A                     u2670:
  4779  000B6A  2EE8               	decfsz	wreg
  4780  000B6C  D7F9               	goto	u2675
  4781  000B6E  C0EC  FFF6         	movff	??_ProcessIO+1+0,(c:4086)	;volatile
  4782  000B72  C0ED  FFF7         	movff	??_ProcessIO+1+1,(c:4086+1)	;volatile
  4783  000B76  C0EE  FFF8         	movff	??_ProcessIO+1+2,(c:4086+2)	;volatile
  4784                           	line	351
  4785                           	
  4786  000B7A                     l3298:; BSR set to: 0
  4787                           
  4788                           ;BootPIC18NonJ.c: 351: EECON1 = 0b10010100;
  4789  000B7A  0E94               	movlw	low(094h)
  4790  000B7C  6EA6               	movwf	((c:4006)),c	;volatile
  4791                           	line	352
  4792                           	
  4793  000B7E                     l3300:; BSR set to: 0
  4794                           
  4795                           ;BootPIC18NonJ.c: 352: UnlockAndActivate(0xB5);
  4796  000B7E  0100               	movlb	0	; () banked
  4797  000B80  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4798  000B82  0EB5               	movlw	low(0B5h)
  4799  000B84  0100               	movlb	0	; () banked
  4800  000B86  0100               	movlb	0	; () banked
  4801  000B88  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
  4802  000B8A  0100               	movlb	0	; () banked
  4803  000B8C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4804  000B8E  0100               	movlb	0	; () banked
  4805  000B90  ECAA  F011         	call	_UnlockAndActivate	;wreg free
  4806                           	line	353
  4807                           	
  4808  000B94                     l3302:
  4809                           ;BootPIC18NonJ.c: 353: USBDriverService();
  4810  000B94  EC0F  F00E         	call	_USBDriverService	;wreg free
  4811                           	line	347
  4812                           	
  4813  000B98                     l3304:
  4814  000B98  4A0F               	infsnz	((c:_ErasePageTracker)),c
  4815  000B9A  2A10               	incf	((c:_ErasePageTracker+1)),c
  4816                           	
  4817  000B9C                     l3306:
  4818  000B9C  0E00               	movlw	0
  4819  000B9E  5C0F               	subwf	((c:_ErasePageTracker)),c,w
  4820  000BA0  0E02               	movlw	02h
  4821  000BA2  5810               	subwfb	((c:_ErasePageTracker+1)),c,w
  4822  000BA4  A0D8               	btfss	status,0
  4823  000BA6  D001               	goto	u2681
  4824  000BA8  D001               	goto	u2680
  4825  000BAA                     u2681:
  4826  000BAA  D7CC               	goto	l3294
  4827  000BAC                     u2680:
  4828  000BAC  D000               	goto	l3308
  4829                           	
  4830  000BAE                     l616:
  4831                           	line	358
  4832                           	
  4833  000BAE                     l3308:
  4834                           ;BootPIC18NonJ.c: 354: }
  4835                           ;BootPIC18NonJ.c: 358: i = 0xF00000 & (0x100-1);
  4836  000BAE  0100               	movlb	0	; () banked
  4837  000BB0  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4838  000BB2  0E00               	movlw	low(0)
  4839  000BB4  0100               	movlb	0	; () banked
  4840  000BB6  0100               	movlb	0	; () banked
  4841  000BB8  6FEF               	movwf	((ProcessIO@i))&0ffh
  4842  000BBA  0100               	movlb	0	; () banked
  4843  000BBC  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4844  000BBE  D000               	goto	l3310
  4845                           	line	359
  4846                           ;BootPIC18NonJ.c: 359: do{
  4847                           	
  4848  000BC0                     l617:; BSR set to: 0
  4849                           
  4850                           	line	360
  4851                           	
  4852  000BC0                     l3310:; BSR set to: 0
  4853                           
  4854                           ;BootPIC18NonJ.c: 360: EEADR = i;
  4855  000BC0  C0EF  FFA9         	movff	(ProcessIO@i),(c:4009)	;volatile
  4856                           	line	361
  4857                           	
  4858  000BC4                     l3312:; BSR set to: 0
  4859                           
  4860                           ;BootPIC18NonJ.c: 361: EEDATA = 0xFF;
  4861  000BC4  68A8               	setf	((c:4008)),c	;volatile
  4862                           	line	362
  4863                           	
  4864  000BC6                     l3314:; BSR set to: 0
  4865                           
  4866                           ;BootPIC18NonJ.c: 362: EECON1 = 0b00000100;
  4867  000BC6  0E04               	movlw	low(04h)
  4868  000BC8  6EA6               	movwf	((c:4006)),c	;volatile
  4869                           	line	363
  4870                           	
  4871  000BCA                     l3316:; BSR set to: 0
  4872                           
  4873                           ;BootPIC18NonJ.c: 363: USBDriverService();
  4874  000BCA  EC0F  F00E         	call	_USBDriverService	;wreg free
  4875                           	line	364
  4876                           	
  4877  000BCE                     l3318:
  4878                           ;BootPIC18NonJ.c: 364: UnlockAndActivate(0xB5);
  4879  000BCE  0100               	movlb	0	; () banked
  4880  000BD0  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4881  000BD2  0EB5               	movlw	low(0B5h)
  4882  000BD4  0100               	movlb	0	; () banked
  4883  000BD6  0100               	movlb	0	; () banked
  4884  000BD8  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
  4885  000BDA  0100               	movlb	0	; () banked
  4886  000BDC  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4887  000BDE  0100               	movlb	0	; () banked
  4888  000BE0  ECAA  F011         	call	_UnlockAndActivate	;wreg free
  4889                           	line	365
  4890                           	
  4891  000BE4                     l3320:
  4892                           ;BootPIC18NonJ.c: 365: }while(i++<((0x100-1)+(0xF00000 & (0x100-1))));
  4893  000BE4  0100               	movlb	0	; () banked
  4894  000BE6  0100               	movlb	0	; () banked
  4895  000BE8  3FEF               	incfsz	((ProcessIO@i))&0ffh
  4896                           	
  4897  000BEA  D7EA               	goto	l3310
  4898  000BEC  D000               	goto	l3322
  4899                           	
  4900  000BEE                     l618:; BSR set to: 0
  4901                           
  4902                           	line	369
  4903                           	
  4904  000BEE                     l3322:; BSR set to: 0
  4905                           
  4906                           ;BootPIC18NonJ.c: 369: TBLPTR = 0x200000;
  4907  000BEE  0E00               	movlw	low(0200000h)
  4908  000BF0  6EF6               	movwf	((c:4086)),c	;volatile
  4909  000BF2  0E00               	movlw	high(0200000h)
  4910  000BF4  6EF7               	movwf	((c:4086+1)),c	;volatile
  4911  000BF6  0E20               	movlw	low highword(0200000h)
  4912  000BF8  6EF8               	movwf	((c:4086+2)),c	;volatile
  4913                           
  4914                           	line	370
  4915                           ;BootPIC18NonJ.c: 370: EECON1 = 0b10010100;
  4916  000BFA  0E94               	movlw	low(094h)
  4917  000BFC  6EA6               	movwf	((c:4006)),c	;volatile
  4918                           	line	371
  4919                           	
  4920  000BFE                     l3324:; BSR set to: 0
  4921                           
  4922                           ;BootPIC18NonJ.c: 371: UnlockAndActivate(0xB5);
  4923  000BFE  0100               	movlb	0	; () banked
  4924  000C00  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4925  000C02  0EB5               	movlw	low(0B5h)
  4926  000C04  0100               	movlb	0	; () banked
  4927  000C06  0100               	movlb	0	; () banked
  4928  000C08  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
  4929  000C0A  0100               	movlb	0	; () banked
  4930  000C0C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4931  000C0E  0100               	movlb	0	; () banked
  4932  000C10  ECAA  F011         	call	_UnlockAndActivate	;wreg free
  4933                           	line	373
  4934                           	
  4935  000C14                     l3326:
  4936                           ;BootPIC18NonJ.c: 373: BootState = 0x00;
  4937  000C14  0100               	movlb	0	; () banked
  4938  000C16  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4939  000C18  0E00               	movlw	low(0)
  4940  000C1A  6E17               	movwf	((c:_BootState)),c
  4941  000C1C  0100               	movlb	0	; () banked
  4942  000C1E  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4943                           	line	375
  4944                           ;BootPIC18NonJ.c: 374: }
  4945                           ;BootPIC18NonJ.c: 375: break;
  4946  000C20  D1A5               	goto	l641
  4947                           	line	376
  4948                           ;BootPIC18NonJ.c: 376: case 0x05:
  4949                           	
  4950  000C22                     l619:; BSR set to: 0
  4951                           
  4952                           	line	379
  4953                           	
  4954  000C22                     l3328:; BSR set to: 0
  4955                           
  4956                           ;BootPIC18NonJ.c: 377: {
  4957                           ;BootPIC18NonJ.c: 379: if(PacketFromPC.Contents[3] == 0x30)
  4958  000C22  0100               	movlb	0	; () banked
  4959  000C24  0100               	movlb	0	; () banked
  4960  000C26  5163               	movf	(0+(_PacketFromPC+03h))&0ffh,w
  4961  000C28  0A30               	xorlw	48
  4962                           
  4963  000C2A  A4D8               	btfss	status,2
  4964  000C2C  D001               	goto	u2691
  4965  000C2E  D001               	goto	u2690
  4966  000C30                     u2691:
  4967  000C30  D00E               	goto	l3336
  4968  000C32                     u2690:
  4969                           	line	381
  4970                           	
  4971  000C32                     l3330:; BSR set to: 0
  4972                           
  4973                           ;BootPIC18NonJ.c: 380: {
  4974                           ;BootPIC18NonJ.c: 381: if(ConfigsLockValue == FALSE)
  4975  000C32  6619               	tstfsz	((c:_ConfigsLockValue)),c
  4976  000C34  D001               	goto	u2701
  4977  000C36  D001               	goto	u2700
  4978  000C38                     u2701:
  4979  000C38  D003               	goto	l3334
  4980  000C3A                     u2700:
  4981                           	line	383
  4982                           	
  4983  000C3A                     l3332:; BSR set to: 0
  4984                           
  4985                           ;BootPIC18NonJ.c: 382: {
  4986                           ;BootPIC18NonJ.c: 383: WriteConfigBits();
  4987  000C3A  EC62  F00E         	call	_WriteConfigBits	;wreg free
  4988  000C3E  D000               	goto	l3334
  4989                           	line	384
  4990                           	
  4991  000C40                     l621:
  4992                           	line	385
  4993                           	
  4994  000C40                     l3334:
  4995                           ;BootPIC18NonJ.c: 384: }
  4996                           ;BootPIC18NonJ.c: 385: BootState = 0x00;
  4997  000C40  0100               	movlb	0	; () banked
  4998  000C42  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4999  000C44  0E00               	movlw	low(0)
  5000  000C46  6E17               	movwf	((c:_BootState)),c
  5001  000C48  0100               	movlb	0	; () banked
  5002  000C4A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5003                           	line	386
  5004                           ;BootPIC18NonJ.c: 386: break;
  5005  000C4C  D18F               	goto	l641
  5006                           	line	387
  5007                           	
  5008  000C4E                     l620:; BSR set to: 0
  5009                           
  5010                           	line	391
  5011                           	
  5012  000C4E                     l3336:; BSR set to: 0
  5013                           
  5014                           ;BootPIC18NonJ.c: 387: }
  5015                           ;BootPIC18NonJ.c: 391: if(PacketFromPC.Contents[3] == 0xF0)
  5016  000C4E  0100               	movlb	0	; () banked
  5017  000C50  0100               	movlb	0	; () banked
  5018  000C52  5163               	movf	(0+(_PacketFromPC+03h))&0ffh,w
  5019  000C54  0AF0               	xorlw	240
  5020                           
  5021  000C56  A4D8               	btfss	status,2
  5022  000C58  D001               	goto	u2711
  5023  000C5A  D001               	goto	u2710
  5024  000C5C                     u2711:
  5025  000C5C  D009               	goto	l3342
  5026  000C5E                     u2710:
  5027                           	line	393
  5028                           	
  5029  000C5E                     l3338:; BSR set to: 0
  5030                           
  5031                           ;BootPIC18NonJ.c: 392: {
  5032                           ;BootPIC18NonJ.c: 393: WriteEEPROM();
  5033  000C5E  ECFB  F00E         	call	_WriteEEPROM	;wreg free
  5034                           	line	394
  5035                           	
  5036  000C62                     l3340:
  5037                           ;BootPIC18NonJ.c: 394: BootState = 0x00;
  5038  000C62  0100               	movlb	0	; () banked
  5039  000C64  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5040  000C66  0E00               	movlw	low(0)
  5041  000C68  6E17               	movwf	((c:_BootState)),c
  5042  000C6A  0100               	movlb	0	; () banked
  5043  000C6C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5044                           	line	395
  5045                           ;BootPIC18NonJ.c: 395: break;
  5046  000C6E  D17E               	goto	l641
  5047                           	line	396
  5048                           	
  5049  000C70                     l622:; BSR set to: 0
  5050                           
  5051                           	line	399
  5052                           	
  5053  000C70                     l3342:; BSR set to: 0
  5054                           
  5055                           ;BootPIC18NonJ.c: 396: }
  5056                           ;BootPIC18NonJ.c: 399: if(ProgrammedPointer == (unsigned short long)0xFFFFFFFF)
  5057  000C70  0EFF               	movlw	low(0FFFFFFh)
  5058  000C72  1804               	xorwf	((c:_ProgrammedPointer)),c,w
  5059  000C74  0EFF               	movlw	high(0FFFFFFh)
  5060  000C76  B4D8               	btfsc	status,2
  5061  000C78  1805               	xorwf	((c:_ProgrammedPointer+1)),c,w
  5062                           	
  5063  000C7A  0EFF               	movlw	low highword(0FFFFFFh)
  5064  000C7C  B4D8               	btfsc	status,2
  5065  000C7E  1806               	xorwf	((c:_ProgrammedPointer+2)),c,w
  5066  000C80  A4D8               	btfss	status,2
  5067  000C82  D001               	goto	u2721
  5068  000C84  D001               	goto	u2720
  5069  000C86                     u2721:
  5070  000C86  D007               	goto	l3346
  5071  000C88                     u2720:
  5072                           	line	400
  5073                           	
  5074  000C88                     l3344:; BSR set to: 0
  5075                           
  5076                           ;BootPIC18NonJ.c: 400: ProgrammedPointer = PacketFromPC.Address;
  5077  000C88  C061  F004         	movff	0+(_PacketFromPC+01h),(c:_ProgrammedPointer)
  5078  000C8C  C062  F005         	movff	1+(_PacketFromPC+01h),(c:_ProgrammedPointer+1)
  5079  000C90  C063  F006         	movff	2+(_PacketFromPC+01h),(c:_ProgrammedPointer+2)
  5080  000C94  D000               	goto	l3346
  5081                           	
  5082  000C96                     l623:; BSR set to: 0
  5083                           
  5084                           	line	402
  5085                           	
  5086  000C96                     l3346:; BSR set to: 0
  5087                           
  5088                           ;BootPIC18NonJ.c: 402: if(ProgrammedPointer == (unsigned short long)PacketFromPC.Address
                                 )
  5089  000C96  0100               	movlb	0	; () banked
  5090  000C98  EE20  F061         	lfsr	2,_PacketFromPC+01h
  5091  000C9C  5004               	movf	((c:_ProgrammedPointer)),c,w
  5092  000C9E  18DE               	xorwf	postinc2,w
  5093  000CA0  E105               	bnz	u2735
  5094  000CA2  5005               	movf	((c:_ProgrammedPointer+1)),c,w
  5095  000CA4  18DE               	xorwf	postinc2,w
  5096  000CA6  E102               	bnz	u2735
  5097  000CA8  5006               	movf	((c:_ProgrammedPointer+2)),c,w
  5098  000CAA  18DE               	xorwf	postinc2,w
  5099  000CAC                     u2735:
  5100  000CAC  A4D8               	btfss	status,2
  5101  000CAE  D001               	goto	u2731
  5102  000CB0  D001               	goto	u2730
  5103  000CB2                     u2731:
  5104  000CB2  D05B               	goto	l3364
  5105  000CB4                     u2730:
  5106                           	line	404
  5107                           	
  5108  000CB4                     l3348:; BSR set to: 0
  5109                           
  5110                           ;BootPIC18NonJ.c: 403: {
  5111                           ;BootPIC18NonJ.c: 404: for(i = 0; i < PacketFromPC.Size; i++)
  5112  000CB4  0100               	movlb	0	; () banked
  5113  000CB6  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5114  000CB8  0E00               	movlw	low(0)
  5115  000CBA  0100               	movlb	0	; () banked
  5116  000CBC  0100               	movlb	0	; () banked
  5117  000CBE  6FEF               	movwf	((ProcessIO@i))&0ffh
  5118  000CC0  0100               	movlb	0	; () banked
  5119  000CC2  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5120  000CC4  D046               	goto	l3362
  5121                           	line	405
  5122                           	
  5123  000CC6                     l626:; BSR set to: 0
  5124                           
  5125                           	line	406
  5126                           	
  5127  000CC6                     l3350:; BSR set to: 0
  5128                           
  5129                           ;BootPIC18NonJ.c: 405: {
  5130                           ;BootPIC18NonJ.c: 406: ProgrammingBuffer[BufferedDataIndex] = PacketFromPC.Data[i+(0x3A-
                                 PacketFromPC.Size)];
  5131  000CC6  0100               	movlb	0	; () banked
  5132  000CC8  0100               	movlb	0	; () banked
  5133  000CCA  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5134  000CCC  0100               	movlb	0	; () banked
  5135  000CCE  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5136  000CD0  6BEC               	clrf	(??_ProcessIO+0+0+1)&0ffh
  5137                           
  5138  000CD2  0100               	movlb	0	; () banked
  5139  000CD4  1FEB               	comf	(??_ProcessIO+0+0)&0ffh
  5140  000CD6  1FEC               	comf	(??_ProcessIO+0+1)&0ffh
  5141  000CD8  4BEB               	infsnz	(??_ProcessIO+0+0)&0ffh
  5142  000CDA  2BEC               	incf	(??_ProcessIO+0+1)&0ffh
  5143  000CDC  0100               	movlb	0	; () banked
  5144  000CDE  0100               	movlb	0	; () banked
  5145  000CE0  51EF               	movf	((ProcessIO@i))&0ffh,w
  5146  000CE2  0100               	movlb	0	; () banked
  5147  000CE4  25EB               	addwf	(??_ProcessIO+0+0)&0ffh,w
  5148  000CE6  0100               	movlb	0	; () banked
  5149  000CE8  6FED               	movwf	(??_ProcessIO+2+0)&0ffh
  5150  000CEA  0100               	movlb	0	; () banked
  5151  000CEC  0100               	movlb	0	; () banked
  5152  000CEE  0E00               	movlw	0
  5153  000CF0  21EC               	addwfc	(??_ProcessIO+0+1)&0ffh,w
  5154  000CF2  6FEE               	movwf	1+(??_ProcessIO+2+0)&0ffh
  5155  000CF4  0E40               	movlw	040h
  5156  000CF6  0100               	movlb	0	; () banked
  5157  000CF8  27ED               	addwf	(??_ProcessIO+2+0)&0ffh
  5158  000CFA  0E00               	movlw	0
  5159  000CFC  23EE               	addwfc	(??_ProcessIO+2+1)&0ffh
  5160  000CFE  0100               	movlb	0	; () banked
  5161  000D00  0E60               	movlw	low(_PacketFromPC)
  5162  000D02  0100               	movlb	0	; () banked
  5163  000D04  25ED               	addwf	(??_ProcessIO+2+0)&0ffh,w
  5164  000D06  6ED9               	movwf	c:fsr2l
  5165  000D08  0100               	movlb	0	; () banked
  5166  000D0A  0E00               	movlw	high(_PacketFromPC)
  5167  000D0C  0100               	movlb	0	; () banked
  5168  000D0E  21EE               	addwfc	(??_ProcessIO+2+1)&0ffh,w
  5169  000D10  6EDA               	movwf	1+c:fsr2l
  5170  000D12  5018               	movf	((c:_BufferedDataIndex)),c,w
  5171  000D14  0D01               	mullw	01h
  5172  000D16  0101               	movlb	1	; () banked
  5173  000D18  0E00               	movlw	low(_ProgrammingBuffer)
  5174  000D1A  24F3               	addwf	(prodl),c,w
  5175  000D1C  6EE1               	movwf	c:fsr1l
  5176  000D1E  0101               	movlb	1	; () banked
  5177  000D20  0E01               	movlw	high(_ProgrammingBuffer)
  5178  000D22  20F4               	addwfc	prod+1,w
  5179  000D24  6EE2               	movwf	1+c:fsr1l
  5180  000D26  CFDF FFE7          	movff	indf2,indf1
  5181                           	line	407
  5182                           	
  5183  000D2A                     l3352:; BSR set to: 1
  5184                           
  5185                           ;BootPIC18NonJ.c: 407: BufferedDataIndex++;
  5186  000D2A  2A18               	incf	((c:_BufferedDataIndex)),c
  5187                           	line	408
  5188                           	
  5189  000D2C                     l3354:; BSR set to: 1
  5190                           
  5191                           ;BootPIC18NonJ.c: 408: ProgrammedPointer++;
  5192  000D2C  0E01               	movlw	low(01h)
  5193  000D2E  2604               	addwf	((c:_ProgrammedPointer)),c
  5194  000D30  0E00               	movlw	high(01h)
  5195  000D32  2205               	addwfc	((c:_ProgrammedPointer+1)),c
  5196  000D34  0E00               	movlw	low highword(01h)
  5197  000D36  2206               	addwfc	((c:_ProgrammedPointer+2)),c
  5198                           
  5199                           	line	409
  5200                           	
  5201  000D38                     l3356:; BSR set to: 1
  5202                           
  5203                           ;BootPIC18NonJ.c: 409: if(BufferedDataIndex == 0x20)
  5204  000D38  5018               	movf	((c:_BufferedDataIndex)),c,w
  5205  000D3A  0A20               	xorlw	32
  5206                           
  5207  000D3C  A4D8               	btfss	status,2
  5208  000D3E  D001               	goto	u2741
  5209  000D40  D001               	goto	u2740
  5210  000D42                     u2741:
  5211  000D42  D003               	goto	l3360
  5212  000D44                     u2740:
  5213                           	line	411
  5214                           	
  5215  000D44                     l3358:; BSR set to: 1
  5216                           
  5217                           ;BootPIC18NonJ.c: 410: {
  5218                           ;BootPIC18NonJ.c: 411: WriteFlashBlock();
  5219  000D44  EC2A  F009         	call	_WriteFlashBlock	;wreg free
  5220  000D48  D000               	goto	l3360
  5221                           	line	412
  5222                           	
  5223  000D4A                     l627:
  5224                           	line	404
  5225                           	
  5226  000D4A                     l3360:
  5227  000D4A  0100               	movlb	0	; () banked
  5228  000D4C  0100               	movlb	0	; () banked
  5229  000D4E  2BEF               	incf	((ProcessIO@i))&0ffh
  5230  000D50  D000               	goto	l3362
  5231                           	
  5232  000D52                     l625:; BSR set to: 0
  5233                           
  5234                           	
  5235  000D52                     l3362:; BSR set to: 0
  5236                           
  5237  000D52  0100               	movlb	0	; () banked
  5238  000D54  0100               	movlb	0	; () banked
  5239  000D56  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5240  000D58  0100               	movlb	0	; () banked
  5241  000D5A  0100               	movlb	0	; () banked
  5242  000D5C  5DEF               	subwf	((ProcessIO@i))&0ffh,w
  5243  000D5E  A0D8               	btfss	status,0
  5244  000D60  D001               	goto	u2751
  5245  000D62  D001               	goto	u2750
  5246  000D64                     u2751:
  5247  000D64  D7B0               	goto	l3350
  5248  000D66                     u2750:
  5249  000D66  D001               	goto	l3364
  5250                           	
  5251  000D68                     l628:; BSR set to: 0
  5252                           
  5253  000D68  D000               	goto	l3364
  5254                           	line	414
  5255                           	
  5256  000D6A                     l624:; BSR set to: 0
  5257                           
  5258                           	line	416
  5259                           	
  5260  000D6A                     l3364:; BSR set to: 0
  5261                           
  5262                           ;BootPIC18NonJ.c: 412: }
  5263                           ;BootPIC18NonJ.c: 413: }
  5264                           ;BootPIC18NonJ.c: 414: }
  5265                           ;BootPIC18NonJ.c: 416: BootState = 0x00;
  5266  000D6A  0100               	movlb	0	; () banked
  5267  000D6C  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5268  000D6E  0E00               	movlw	low(0)
  5269  000D70  6E17               	movwf	((c:_BootState)),c
  5270  000D72  0100               	movlb	0	; () banked
  5271  000D74  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5272                           	line	418
  5273                           ;BootPIC18NonJ.c: 417: }
  5274                           ;BootPIC18NonJ.c: 418: break;
  5275  000D76  D0FA               	goto	l641
  5276                           	line	419
  5277                           ;BootPIC18NonJ.c: 419: case 0x06:
  5278                           	
  5279  000D78                     l629:; BSR set to: 0
  5280                           
  5281                           	line	421
  5282                           	
  5283  000D78                     l3366:; BSR set to: 0
  5284                           
  5285                           ;BootPIC18NonJ.c: 420: {
  5286                           ;BootPIC18NonJ.c: 421: WriteFlashBlock();
  5287  000D78  EC2A  F009         	call	_WriteFlashBlock	;wreg free
  5288                           	line	422
  5289                           	
  5290  000D7C                     l3368:
  5291                           ;BootPIC18NonJ.c: 422: ProgrammedPointer = 0xFFFFFFFF;
  5292  000D7C  0EFF               	movlw	low(0FFFFFFh)
  5293  000D7E  6E04               	movwf	((c:_ProgrammedPointer)),c
  5294  000D80  0EFF               	movlw	high(0FFFFFFh)
  5295  000D82  6E05               	movwf	((c:_ProgrammedPointer+1)),c
  5296  000D84  0EFF               	movlw	low highword(0FFFFFFh)
  5297  000D86  6E06               	movwf	((c:_ProgrammedPointer+2)),c
  5298                           
  5299                           	line	423
  5300                           	
  5301  000D88                     l3370:
  5302                           ;BootPIC18NonJ.c: 423: BootState = 0x00;
  5303  000D88  0100               	movlb	0	; () banked
  5304  000D8A  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5305  000D8C  0E00               	movlw	low(0)
  5306  000D8E  6E17               	movwf	((c:_BootState)),c
  5307  000D90  0100               	movlb	0	; () banked
  5308  000D92  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5309                           	line	425
  5310                           ;BootPIC18NonJ.c: 424: }
  5311                           ;BootPIC18NonJ.c: 425: break;
  5312  000D94  D0EB               	goto	l641
  5313                           	line	426
  5314                           ;BootPIC18NonJ.c: 426: case 0x07:
  5315                           	
  5316  000D96                     l630:; BSR set to: 0
  5317                           
  5318                           	line	429
  5319                           	
  5320  000D96                     l3372:; BSR set to: 0
  5321                           
  5322                           ;BootPIC18NonJ.c: 427: {
  5323                           ;BootPIC18NonJ.c: 429: PacketToPC.Command = 0x07;
  5324  000D96  0100               	movlb	0	; () banked
  5325  000D98  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5326  000D9A  0E07               	movlw	low(07h)
  5327  000D9C  0100               	movlb	0	; () banked
  5328  000D9E  0100               	movlb	0	; () banked
  5329  000DA0  6FA0               	movwf	((_PacketToPC))&0ffh
  5330  000DA2  0100               	movlb	0	; () banked
  5331  000DA4  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5332                           	line	430
  5333                           	
  5334  000DA6                     l3374:; BSR set to: 0
  5335                           
  5336                           ;BootPIC18NonJ.c: 430: PacketToPC.Address = PacketFromPC.Address;
  5337  000DA6  C061  F0A1         	movff	0+(_PacketFromPC+01h),0+(_PacketToPC+01h)
  5338  000DAA  C062  F0A2         	movff	1+(_PacketFromPC+01h),1+(_PacketToPC+01h)
  5339  000DAE  C063  F0A3         	movff	2+(_PacketFromPC+01h),2+(_PacketToPC+01h)
  5340  000DB2  C064  F0A4         	movff	3+(_PacketFromPC+01h),3+(_PacketToPC+01h)
  5341                           	line	431
  5342                           	
  5343  000DB6                     l3376:; BSR set to: 0
  5344                           
  5345                           ;BootPIC18NonJ.c: 431: PacketToPC.Size = PacketFromPC.Size;
  5346  000DB6  C065  F0A5         	movff	0+(_PacketFromPC+05h),0+(_PacketToPC+05h)
  5347                           	line	434
  5348                           	
  5349  000DBA                     l3378:; BSR set to: 0
  5350                           
  5351                           ;BootPIC18NonJ.c: 434: TBLPTR = (unsigned short long)PacketFromPC.Address;
  5352  000DBA  C061  FFF6         	movff	0+(_PacketFromPC+01h),(c:4086)	;volatile
  5353  000DBE  C062  FFF7         	movff	1+(_PacketFromPC+01h),(c:4086+1)	;volatile
  5354  000DC2  C063  FFF8         	movff	2+(_PacketFromPC+01h),(c:4086+2)	;volatile
  5355                           	line	435
  5356                           ;BootPIC18NonJ.c: 435: for(i = 0; i < PacketFromPC.Size; i++)
  5357  000DC6  0100               	movlb	0	; () banked
  5358  000DC8  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5359  000DCA  0E00               	movlw	low(0)
  5360  000DCC  0100               	movlb	0	; () banked
  5361  000DCE  0100               	movlb	0	; () banked
  5362  000DD0  6FEF               	movwf	((ProcessIO@i))&0ffh
  5363  000DD2  0100               	movlb	0	; () banked
  5364  000DD4  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5365  000DD6  D081               	goto	l3406
  5366                           	line	436
  5367                           	
  5368  000DD8                     l632:; BSR set to: 0
  5369                           
  5370                           	line	437
  5371                           	
  5372  000DD8                     l3380:; BSR set to: 0
  5373                           
  5374                           ;BootPIC18NonJ.c: 436: {
  5375                           ;BootPIC18NonJ.c: 437: if(PacketFromPC.Contents[3] == 0xF0)
  5376  000DD8  0100               	movlb	0	; () banked
  5377  000DDA  0100               	movlb	0	; () banked
  5378  000DDC  5163               	movf	(0+(_PacketFromPC+03h))&0ffh,w
  5379  000DDE  0AF0               	xorlw	240
  5380                           
  5381  000DE0  A4D8               	btfss	status,2
  5382  000DE2  D001               	goto	u2761
  5383  000DE4  D001               	goto	u2760
  5384  000DE6                     u2761:
  5385  000DE6  D033               	goto	l3390
  5386  000DE8                     u2760:
  5387                           	line	440
  5388                           	
  5389  000DE8                     l3382:; BSR set to: 0
  5390                           
  5391                           ;BootPIC18NonJ.c: 438: {
  5392                           ;BootPIC18NonJ.c: 440: EEADR = (((unsigned char)PacketFromPC.Address) + i);
  5393  000DE8  0100               	movlb	0	; () banked
  5394  000DEA  0100               	movlb	0	; () banked
  5395  000DEC  5161               	movf	(0+(_PacketFromPC+01h))&0ffh,w
  5396  000DEE  0100               	movlb	0	; () banked
  5397  000DF0  0100               	movlb	0	; () banked
  5398  000DF2  25EF               	addwf	((ProcessIO@i))&0ffh,w
  5399  000DF4  6EA9               	movwf	((c:4009)),c	;volatile
  5400                           	line	441
  5401                           	
  5402  000DF6                     l3384:; BSR set to: 0
  5403                           
  5404                           ;BootPIC18NonJ.c: 441: EECON1 = 0b00000000;
  5405  000DF6  0E00               	movlw	low(0)
  5406  000DF8  6EA6               	movwf	((c:4006)),c	;volatile
  5407                           	line	442
  5408                           	
  5409  000DFA                     l3386:; BSR set to: 0
  5410                           
  5411                           ;BootPIC18NonJ.c: 442: EECON1bits.RD = 1;
  5412  000DFA  80A6               	bsf	((c:4006)),c,0	;volatile
  5413                           	line	443
  5414                           	
  5415  000DFC                     l3388:; BSR set to: 0
  5416                           
  5417                           ;BootPIC18NonJ.c: 443: PacketToPC.Data[i+((0x40 - 6) - PacketFromPC.Size)] = EEDATA;
  5418  000DFC  0100               	movlb	0	; () banked
  5419  000DFE  0100               	movlb	0	; () banked
  5420  000E00  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5421  000E02  0100               	movlb	0	; () banked
  5422  000E04  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5423  000E06  6BEC               	clrf	(??_ProcessIO+0+0+1)&0ffh
  5424                           
  5425  000E08  0100               	movlb	0	; () banked
  5426  000E0A  1FEB               	comf	(??_ProcessIO+0+0)&0ffh
  5427  000E0C  1FEC               	comf	(??_ProcessIO+0+1)&0ffh
  5428  000E0E  4BEB               	infsnz	(??_ProcessIO+0+0)&0ffh
  5429  000E10  2BEC               	incf	(??_ProcessIO+0+1)&0ffh
  5430  000E12  0100               	movlb	0	; () banked
  5431  000E14  0100               	movlb	0	; () banked
  5432  000E16  51EF               	movf	((ProcessIO@i))&0ffh,w
  5433  000E18  0100               	movlb	0	; () banked
  5434  000E1A  25EB               	addwf	(??_ProcessIO+0+0)&0ffh,w
  5435  000E1C  0100               	movlb	0	; () banked
  5436  000E1E  6FED               	movwf	(??_ProcessIO+2+0)&0ffh
  5437  000E20  0100               	movlb	0	; () banked
  5438  000E22  0100               	movlb	0	; () banked
  5439  000E24  0E00               	movlw	0
  5440  000E26  21EC               	addwfc	(??_ProcessIO+0+1)&0ffh,w
  5441  000E28  6FEE               	movwf	1+(??_ProcessIO+2+0)&0ffh
  5442  000E2A  0E40               	movlw	040h
  5443  000E2C  0100               	movlb	0	; () banked
  5444  000E2E  27ED               	addwf	(??_ProcessIO+2+0)&0ffh
  5445  000E30  0E00               	movlw	0
  5446  000E32  23EE               	addwfc	(??_ProcessIO+2+1)&0ffh
  5447  000E34  0100               	movlb	0	; () banked
  5448  000E36  0EA0               	movlw	low(_PacketToPC)
  5449  000E38  0100               	movlb	0	; () banked
  5450  000E3A  25ED               	addwf	(??_ProcessIO+2+0)&0ffh,w
  5451  000E3C  6ED9               	movwf	c:fsr2l
  5452  000E3E  0100               	movlb	0	; () banked
  5453  000E40  0E00               	movlw	high(_PacketToPC)
  5454  000E42  0100               	movlb	0	; () banked
  5455  000E44  21EE               	addwfc	(??_ProcessIO+2+1)&0ffh,w
  5456  000E46  6EDA               	movwf	1+c:fsr2l
  5457  000E48  CFA8 FFDF          	movff	(c:4008),indf2	;volatile
  5458                           
  5459                           	line	445
  5460                           ;BootPIC18NonJ.c: 445: }
  5461  000E4C  D042               	goto	l3404
  5462                           	line	446
  5463                           	
  5464  000E4E                     l633:; BSR set to: 0
  5465                           
  5466                           	line	448
  5467                           	
  5468  000E4E                     l3390:; BSR set to: 0
  5469                           
  5470                           ;BootPIC18NonJ.c: 446: else
  5471                           ;BootPIC18NonJ.c: 447: {
  5472                           ;BootPIC18NonJ.c: 448: TableReadPostIncrement();
  5473  000E4E  EC1C  F012         	call	_TableReadPostIncrement	;wreg free
  5474                           	line	452
  5475                           	
  5476  000E52                     l3392:
  5477                           ;BootPIC18NonJ.c: 452: if(TBLPTRU == 0x30)
  5478  000E52  50F8               	movf	((c:4088)),c,w	;volatile
  5479  000E54  0A30               	xorlw	48
  5480                           
  5481  000E56  A4D8               	btfss	status,2
  5482  000E58  D001               	goto	u2771
  5483  000E5A  D001               	goto	u2770
  5484  000E5C                     u2771:
  5485  000E5C  D011               	goto	l3402
  5486  000E5E                     u2770:
  5487                           	line	454
  5488                           	
  5489  000E5E                     l3394:
  5490                           ;BootPIC18NonJ.c: 453: {
  5491                           ;BootPIC18NonJ.c: 454: if(TBLPTRL == 0x05)
  5492  000E5E  50F6               	movf	((c:4086)),c,w	;volatile
  5493  000E60  0A05               	xorlw	5
  5494                           
  5495  000E62  A4D8               	btfss	status,2
  5496  000E64  D001               	goto	u2781
  5497  000E66  D001               	goto	u2780
  5498  000E68                     u2781:
  5499  000E68  D002               	goto	l3398
  5500  000E6A                     u2780:
  5501                           	line	455
  5502                           	
  5503  000E6A                     l3396:
  5504                           ;BootPIC18NonJ.c: 455: TABLAT = 0xFF;
  5505  000E6A  68F5               	setf	((c:4085)),c	;volatile
  5506  000E6C  D000               	goto	l3398
  5507                           	
  5508  000E6E                     l636:
  5509                           	line	456
  5510                           	
  5511  000E6E                     l3398:
  5512                           ;BootPIC18NonJ.c: 456: if(TBLPTRL == 0x08)
  5513  000E6E  50F6               	movf	((c:4086)),c,w	;volatile
  5514  000E70  0A08               	xorlw	8
  5515                           
  5516  000E72  A4D8               	btfss	status,2
  5517  000E74  D001               	goto	u2791
  5518  000E76  D001               	goto	u2790
  5519  000E78                     u2791:
  5520  000E78  D003               	goto	l3402
  5521  000E7A                     u2790:
  5522                           	line	457
  5523                           	
  5524  000E7A                     l3400:
  5525                           ;BootPIC18NonJ.c: 457: TABLAT = 0xFF;
  5526  000E7A  68F5               	setf	((c:4085)),c	;volatile
  5527  000E7C  D001               	goto	l3402
  5528                           	
  5529  000E7E                     l637:
  5530  000E7E  D000               	goto	l3402
  5531                           	line	458
  5532                           	
  5533  000E80                     l635:
  5534                           	line	459
  5535                           	
  5536  000E80                     l3402:
  5537                           ;BootPIC18NonJ.c: 458: }
  5538                           ;BootPIC18NonJ.c: 459: PacketToPC.Data[i+((0x40 - 6) - PacketFromPC.Size)]=TABLAT;
  5539  000E80  0100               	movlb	0	; () banked
  5540  000E82  0100               	movlb	0	; () banked
  5541  000E84  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5542  000E86  0100               	movlb	0	; () banked
  5543  000E88  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5544  000E8A  6BEC               	clrf	(??_ProcessIO+0+0+1)&0ffh
  5545                           
  5546  000E8C  0100               	movlb	0	; () banked
  5547  000E8E  1FEB               	comf	(??_ProcessIO+0+0)&0ffh
  5548  000E90  1FEC               	comf	(??_ProcessIO+0+1)&0ffh
  5549  000E92  4BEB               	infsnz	(??_ProcessIO+0+0)&0ffh
  5550  000E94  2BEC               	incf	(??_ProcessIO+0+1)&0ffh
  5551  000E96  0100               	movlb	0	; () banked
  5552  000E98  0100               	movlb	0	; () banked
  5553  000E9A  51EF               	movf	((ProcessIO@i))&0ffh,w
  5554  000E9C  0100               	movlb	0	; () banked
  5555  000E9E  25EB               	addwf	(??_ProcessIO+0+0)&0ffh,w
  5556  000EA0  0100               	movlb	0	; () banked
  5557  000EA2  6FED               	movwf	(??_ProcessIO+2+0)&0ffh
  5558  000EA4  0100               	movlb	0	; () banked
  5559  000EA6  0100               	movlb	0	; () banked
  5560  000EA8  0E00               	movlw	0
  5561  000EAA  21EC               	addwfc	(??_ProcessIO+0+1)&0ffh,w
  5562  000EAC  6FEE               	movwf	1+(??_ProcessIO+2+0)&0ffh
  5563  000EAE  0E40               	movlw	040h
  5564  000EB0  0100               	movlb	0	; () banked
  5565  000EB2  27ED               	addwf	(??_ProcessIO+2+0)&0ffh
  5566  000EB4  0E00               	movlw	0
  5567  000EB6  23EE               	addwfc	(??_ProcessIO+2+1)&0ffh
  5568  000EB8  0100               	movlb	0	; () banked
  5569  000EBA  0EA0               	movlw	low(_PacketToPC)
  5570  000EBC  0100               	movlb	0	; () banked
  5571  000EBE  25ED               	addwf	(??_ProcessIO+2+0)&0ffh,w
  5572  000EC0  6ED9               	movwf	c:fsr2l
  5573  000EC2  0100               	movlb	0	; () banked
  5574  000EC4  0E00               	movlw	high(_PacketToPC)
  5575  000EC6  0100               	movlb	0	; () banked
  5576  000EC8  21EE               	addwfc	(??_ProcessIO+2+1)&0ffh,w
  5577  000ECA  6EDA               	movwf	1+c:fsr2l
  5578  000ECC  CFF5 FFDF          	movff	(c:4085),indf2	;volatile
  5579                           
  5580  000ED0  D000               	goto	l3404
  5581                           	line	460
  5582                           	
  5583  000ED2                     l634:; BSR set to: 0
  5584                           
  5585                           	line	435
  5586                           	
  5587  000ED2                     l3404:; BSR set to: 0
  5588                           
  5589  000ED2  0100               	movlb	0	; () banked
  5590  000ED4  0100               	movlb	0	; () banked
  5591  000ED6  2BEF               	incf	((ProcessIO@i))&0ffh
  5592  000ED8  D000               	goto	l3406
  5593                           	
  5594  000EDA                     l631:; BSR set to: 0
  5595                           
  5596                           	
  5597  000EDA                     l3406:; BSR set to: 0
  5598                           
  5599  000EDA  0100               	movlb	0	; () banked
  5600  000EDC  0100               	movlb	0	; () banked
  5601  000EDE  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5602  000EE0  0100               	movlb	0	; () banked
  5603  000EE2  0100               	movlb	0	; () banked
  5604  000EE4  5DEF               	subwf	((ProcessIO@i))&0ffh,w
  5605  000EE6  A0D8               	btfss	status,0
  5606  000EE8  D001               	goto	u2801
  5607  000EEA  D001               	goto	u2800
  5608  000EEC                     u2801:
  5609  000EEC  D775               	goto	l3380
  5610  000EEE                     u2800:
  5611                           	
  5612  000EEE                     l638:; BSR set to: 0
  5613                           
  5614                           	line	463
  5615                           ;BootPIC18NonJ.c: 460: }
  5616                           ;BootPIC18NonJ.c: 461: }
  5617                           ;BootPIC18NonJ.c: 463: if(!ep1Bi.Stat.UOWN)
  5618  000EEE  0104               	movlb	4	; () banked
  5619                           	
  5620  000EF0  0104               	movlb	4	; () banked
  5621  000EF2  BF0C               	btfsc	((1036))&0ffh,7	;volatile
  5622  000EF4  D001               	goto	u2811
  5623  000EF6  D001               	goto	u2810
  5624  000EF8                     u2811:
  5625  000EF8  D039               	goto	l641
  5626  000EFA                     u2810:
  5627                           	line	465
  5628                           	
  5629  000EFA                     l3408:; BSR set to: 4
  5630                           
  5631                           ;BootPIC18NonJ.c: 464: {
  5632                           ;BootPIC18NonJ.c: 465: HIDTxReport((char *)&PacketToPC, 64);
  5633  000EFA  0100               	movlb	0	; () banked
  5634  000EFC  0E00               	movlw	high(_PacketToPC)
  5635  000EFE  0100               	movlb	0	; () banked
  5636  000F00  0100               	movlb	0	; () banked
  5637  000F02  6FE1               	movwf	((?_HIDTxReport+1))&0ffh
  5638  000F04  0100               	movlb	0	; () banked
  5639  000F06  0EA0               	movlw	low(_PacketToPC)
  5640  000F08  0100               	movlb	0	; () banked
  5641  000F0A  6FE0               	movwf	((?_HIDTxReport))&0ffh
  5642  000F0C  0100               	movlb	0	; () banked
  5643  000F0E  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5644  000F10  0E40               	movlw	low(040h)
  5645  000F12  0100               	movlb	0	; () banked
  5646  000F14  0100               	movlb	0	; () banked
  5647  000F16  6FE2               	movwf	(0+(?_HIDTxReport+02h))&0ffh
  5648  000F18  0100               	movlb	0	; () banked
  5649  000F1A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5650  000F1C  0100               	movlb	0	; () banked
  5651  000F1E  EC4A  F00D         	call	_HIDTxReport	;wreg free
  5652                           	line	466
  5653                           	
  5654  000F22                     l3410:
  5655                           ;BootPIC18NonJ.c: 466: BootState = 0x00;
  5656  000F22  0100               	movlb	0	; () banked
  5657  000F24  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5658  000F26  0E00               	movlw	low(0)
  5659  000F28  6E17               	movwf	((c:_BootState)),c
  5660  000F2A  0100               	movlb	0	; () banked
  5661  000F2C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5662  000F2E  D01E               	goto	l641
  5663                           	line	467
  5664                           	
  5665  000F30                     l639:; BSR set to: 0
  5666                           
  5667                           	line	469
  5668                           ;BootPIC18NonJ.c: 467: }
  5669                           ;BootPIC18NonJ.c: 468: }
  5670                           ;BootPIC18NonJ.c: 469: break;
  5671  000F30  D01D               	goto	l641
  5672                           	line	470
  5673                           ;BootPIC18NonJ.c: 470: case 0x08:
  5674                           	
  5675  000F32                     l640:; BSR set to: 0
  5676                           
  5677                           	line	471
  5678                           	
  5679  000F32                     l3412:; BSR set to: 0
  5680                           
  5681                           ;BootPIC18NonJ.c: 471: ResetDeviceCleanly();
  5682  000F32  EC2C  F011         	call	_ResetDeviceCleanly	;wreg free
  5683                           	line	472
  5684                           ;BootPIC18NonJ.c: 472: }
  5685  000F36  D01A               	goto	l641
  5686                           	line	301
  5687                           	
  5688  000F38                     l608:
  5689                           	
  5690  000F38                     l3414:
  5691  000F38  0100               	movlb	0	; () banked
  5692  000F3A  0100               	movlb	0	; () banked
  5693  000F3C  5160               	movf	((_PacketFromPC))&0ffh,w
  5694                           	; Switch size 1, requested type "space"
  5695                           ; Number of cases is 7, Range of values is 2 to 8
  5696                           ; switch strategies available:
  5697                           ; Name         Instructions Cycles
  5698                           ; simple_byte           22    12 (average)
  5699                           ;	Chosen strategy is simple_byte
  5700                           
  5701  000F3E  0A02               	xorlw	2^0	; case 2
  5702  000F40  B4D8               	skipnz
  5703  000F42  D511               	goto	l3254
  5704  000F44  0A01               	xorlw	3^2	; case 3
  5705  000F46  B4D8               	skipnz
  5706  000F48  D5D6               	goto	l3282
  5707  000F4A  0A07               	xorlw	4^3	; case 4
  5708  000F4C  B4D8               	skipnz
  5709  000F4E  D5EC               	goto	l3288
  5710  000F50  0A01               	xorlw	5^4	; case 5
  5711  000F52  B4D8               	skipnz
  5712  000F54  D666               	goto	l3328
  5713  000F56  0A03               	xorlw	6^5	; case 6
  5714  000F58  B4D8               	skipnz
  5715  000F5A  D70E               	goto	l3366
  5716  000F5C  0A01               	xorlw	7^6	; case 7
  5717  000F5E  B4D8               	skipnz
  5718  000F60  D71A               	goto	l3372
  5719  000F62  0A0F               	xorlw	8^7	; case 8
  5720  000F64  B4D8               	skipnz
  5721  000F66  D7E5               	goto	l3412
  5722  000F68  D001               	goto	l641
  5723                           
  5724                           	line	472
  5725                           	
  5726  000F6A                     l611:; BSR set to: 0
  5727                           
  5728  000F6A  D000               	goto	l641
  5729                           	line	473
  5730                           	
  5731  000F6C                     l607:; BSR set to: 0
  5732                           
  5733                           	line	475
  5734                           	
  5735  000F6C                     l641:
  5736  000F6C  0012               	return
  5737                           	opt stack 0
  5738                           GLOBAL	__end_of_ProcessIO
  5739  000F6E                     	__end_of_ProcessIO:
  5740                           	signat	_ProcessIO,88
  5741                           	global	_HIDTxReport
  5742                           
  5743 ;; *************** function _HIDTxReport *****************
  5744 ;; Defined at:
  5745 ;;		line 228 in file "../hid.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  5748 ;;		 -> PacketToPC(64), 
  5749 ;;  len             1    2[BANK0 ] unsigned char 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  i               1    4[BANK0 ] unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;		None               void
  5754 ;; Registers used:
  5755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  5761 ;;      Params:         0       3       0       0       0       0       0       0       0
  5762 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5763 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5764 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5765 ;;Total ram usage:        5 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    2
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_ProcessIO
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           psect	text5,class=CODE,space=0,reloc=2
  5775                           global __ptext5
  5776  001A94                     __ptext5:
  5777                           psect	text5
  5778                           	file	"../hid.c"
  5779                           	line	228
  5780                           	global	__size_of_HIDTxReport
  5781  0000                     	__size_of_HIDTxReport	equ	__end_of_HIDTxReport-_HIDTxReport
  5782                           	
  5783  001A94                     _HIDTxReport:
  5784                           	opt	stack 27
  5785                           	line	235
  5786                           	
  5787  001A94                     l3152:
  5788                           ;hid.c: 229: byte i;
  5789                           ;hid.c: 235: if(len > 64)
  5790  001A94  0E40               	movlw	(041h-1)
  5791  001A96  0100               	movlb	0	; () banked
  5792  001A98  0100               	movlb	0	; () banked
  5793  001A9A  65E2               	cpfsgt	((HIDTxReport@len))&0ffh
  5794  001A9C  D001               	goto	u2451
  5795  001A9E  D001               	goto	u2450
  5796  001AA0                     u2451:
  5797  001AA0  D008               	goto	l71
  5798  001AA2                     u2450:
  5799                           	line	236
  5800                           	
  5801  001AA2                     l3154:; BSR set to: 0
  5802                           
  5803                           ;hid.c: 236: len = 64;
  5804  001AA2  0100               	movlb	0	; () banked
  5805  001AA4  6FE3               	movwf	(??_HIDTxReport+0+0)&0ffh
  5806  001AA6  0E40               	movlw	low(040h)
  5807  001AA8  0100               	movlb	0	; () banked
  5808  001AAA  0100               	movlb	0	; () banked
  5809  001AAC  6FE2               	movwf	((HIDTxReport@len))&0ffh
  5810  001AAE  0100               	movlb	0	; () banked
  5811  001AB0  51E3               	movf	(??_HIDTxReport+0+0)&0ffh,w
  5812                           	
  5813  001AB2                     l71:; BSR set to: 0
  5814                           
  5815                           	line	241
  5816                           ;hid.c: 241: for (i = 0; i < len; i++)
  5817  001AB2  0100               	movlb	0	; () banked
  5818  001AB4  6FE3               	movwf	(??_HIDTxReport+0+0)&0ffh
  5819  001AB6  0E00               	movlw	low(0)
  5820  001AB8  0100               	movlb	0	; () banked
  5821  001ABA  0100               	movlb	0	; () banked
  5822  001ABC  6FE4               	movwf	((HIDTxReport@i))&0ffh
  5823  001ABE  0100               	movlb	0	; () banked
  5824  001AC0  51E3               	movf	(??_HIDTxReport+0+0)&0ffh,w
  5825  001AC2  D020               	goto	l3160
  5826                           	line	242
  5827                           	
  5828  001AC4                     l73:; BSR set to: 0
  5829                           
  5830                           	
  5831  001AC4                     l3156:; BSR set to: 0
  5832                           
  5833                           ;hid.c: 242: hid_report_in[i] = buffer[i];
  5834  001AC4  0100               	movlb	0	; () banked
  5835  001AC6  0100               	movlb	0	; () banked
  5836  001AC8  51E4               	movf	((HIDTxReport@i))&0ffh,w
  5837  001ACA  0D01               	mullw	01h
  5838  001ACC  50F3               	movf	(prodl),c,w
  5839  001ACE  0100               	movlb	0	; () banked
  5840  001AD0  0100               	movlb	0	; () banked
  5841  001AD2  25E0               	addwf	((HIDTxReport@buffer))&0ffh,w
  5842  001AD4  6ED9               	movwf	c:fsr2l
  5843  001AD6  50F4               	movf	(prodh),c,w
  5844  001AD8  0100               	movlb	0	; () banked
  5845  001ADA  0100               	movlb	0	; () banked
  5846  001ADC  21E1               	addwfc	((HIDTxReport@buffer+1))&0ffh,w
  5847  001ADE  6EDA               	movwf	1+c:fsr2l
  5848  001AE0  0100               	movlb	0	; () banked
  5849  001AE2  0100               	movlb	0	; () banked
  5850  001AE4  51E4               	movf	((HIDTxReport@i))&0ffh,w
  5851  001AE6  0D01               	mullw	01h
  5852  001AE8  0107               	movlb	7	; () banked
  5853  001AEA  0E40               	movlw	low(1856)	;volatile
  5854  001AEC  24F3               	addwf	(prodl),c,w
  5855  001AEE  6EE1               	movwf	c:fsr1l
  5856  001AF0  0107               	movlb	7	; () banked
  5857  001AF2  0E07               	movlw	high(1856)	;volatile
  5858  001AF4  20F4               	addwfc	prod+1,w
  5859  001AF6  6EE2               	movwf	1+c:fsr1l
  5860  001AF8  CFDF FFE7          	movff	indf2,indf1
  5861                           	line	241
  5862                           	
  5863  001AFC                     l3158:; BSR set to: 7
  5864                           
  5865  001AFC  0100               	movlb	0	; () banked
  5866  001AFE  0100               	movlb	0	; () banked
  5867  001B00  2BE4               	incf	((HIDTxReport@i))&0ffh
  5868  001B02  D000               	goto	l3160
  5869                           	
  5870  001B04                     l72:; BSR set to: 0
  5871                           
  5872                           	
  5873  001B04                     l3160:; BSR set to: 0
  5874                           
  5875  001B04  0100               	movlb	0	; () banked
  5876  001B06  0100               	movlb	0	; () banked
  5877  001B08  51E2               	movf	((HIDTxReport@len))&0ffh,w
  5878  001B0A  0100               	movlb	0	; () banked
  5879  001B0C  0100               	movlb	0	; () banked
  5880  001B0E  5DE4               	subwf	((HIDTxReport@i))&0ffh,w
  5881  001B10  A0D8               	btfss	status,0
  5882  001B12  D001               	goto	u2461
  5883  001B14  D001               	goto	u2460
  5884  001B16                     u2461:
  5885  001B16  D7D6               	goto	l3156
  5886  001B18                     u2460:
  5887                           	
  5888  001B18                     l74:; BSR set to: 0
  5889                           
  5890                           	line	244
  5891                           ;hid.c: 244: ep1Bi.Cnt = len;
  5892  001B18  C0E2  F40D         	movff	(HIDTxReport@len),0+(1036+01h)	;volatile
  5893                           	line	245
  5894                           	
  5895  001B1C                     l3162:; BSR set to: 0
  5896                           
  5897                           ;hid.c: 245: { ep1Bi.Stat._byte &= 0x40; ep1Bi.Stat.DTS = !ep1Bi.Stat.DTS; ep1Bi.Stat._b
                                 yte |= 0x80|0x08; };
  5898  001B1C  0E40               	movlw	(040h)&0ffh
  5899  001B1E  0104               	movlb	4	; () banked
  5900  001B20  0104               	movlb	4	; () banked
  5901  001B22  170C               	andwf	((1036))&0ffh	;volatile
  5902  001B24  0104               	movlb	4	; () banked
  5903                           	
  5904  001B26  0104               	movlb	4	; () banked
  5905  001B28  AD0C               	btfss	((1036))&0ffh,6	;volatile
  5906  001B2A  D001               	goto	u2471
  5907  001B2C  D002               	goto	u2470
  5908  001B2E                     u2471:
  5909  001B2E  0E01               	movlw	1
  5910  001B30  D001               	goto	u2476
  5911  001B32                     u2470:
  5912  001B32  0E00               	movlw	0
  5913  001B34                     u2476:
  5914  001B34  0100               	movlb	0	; () banked
  5915  001B36  6FE3               	movwf	(??_HIDTxReport+0+0)&0ffh
  5916  001B38  0100               	movlb	0	; () banked
  5917  001B3A  3BE3               	swapf	((??_HIDTxReport+0+0))&0ffh
  5918  001B3C  47E3               	rlncf	((??_HIDTxReport+0+0))&0ffh
  5919  001B3E  47E3               	rlncf	((??_HIDTxReport+0+0))&0ffh
  5920  001B40  0104               	movlb	4	; () banked
  5921  001B42  0104               	movlb	4	; () banked
  5922  001B44  510C               	movf	((1036))&0ffh,w	;volatile
  5923  001B46  19E3               	xorwf	((??_HIDTxReport+0+0))&0ffh,w
  5924  001B48  0BBF               	andlw	not (((1<<1)-1)<<6)
  5925  001B4A  19E3               	xorwf	((??_HIDTxReport+0+0))&0ffh,w
  5926  001B4C  0104               	movlb	4	; () banked
  5927  001B4E  0104               	movlb	4	; () banked
  5928  001B50  6F0C               	movwf	((1036))&0ffh	;volatile
  5929  001B52  0E88               	movlw	(088h)&0ffh
  5930  001B54  0104               	movlb	4	; () banked
  5931  001B56  0104               	movlb	4	; () banked
  5932  001B58  130C               	iorwf	((1036))&0ffh	;volatile
  5933                           	line	247
  5934                           	
  5935  001B5A                     l75:; BSR set to: 4
  5936                           
  5937  001B5A  0012               	return
  5938                           	opt stack 0
  5939                           GLOBAL	__end_of_HIDTxReport
  5940  001B5C                     	__end_of_HIDTxReport:
  5941                           	signat	_HIDTxReport,8312
  5942                           	global	_HIDRxReport
  5943                           
  5944 ;; *************** function _HIDRxReport *****************
  5945 ;; Defined at:
  5946 ;;		line 283 in file "../hid.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  5949 ;;		 -> PacketFromPC(64), 
  5950 ;;  len             1    2[BANK0 ] unsigned char 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      unsigned char 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  5962 ;;      Params:         0       3       0       0       0       0       0       0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5964 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5965 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5966 ;;Total ram usage:        4 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    2
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_ProcessIO
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           psect	text6,class=CODE,space=0,reloc=2
  5976                           global __ptext6
  5977  0019C4                     __ptext6:
  5978                           psect	text6
  5979                           	file	"../hid.c"
  5980                           	line	283
  5981                           	global	__size_of_HIDRxReport
  5982  0000                     	__size_of_HIDRxReport	equ	__end_of_HIDRxReport-_HIDRxReport
  5983                           	
  5984  0019C4                     _HIDRxReport:; BSR set to: 4
  5985                           
  5986                           	opt	stack 27
  5987                           	line	284
  5988                           	
  5989  0019C4                     l3164:
  5990                           ;hid.c: 284: hid_rpt_rx_len = 0;
  5991  0019C4  0100               	movlb	0	; () banked
  5992  0019C6  6FE3               	movwf	(??_HIDRxReport+0+0)&0ffh
  5993  0019C8  0E00               	movlw	low(0)
  5994  0019CA  6E1D               	movwf	((c:_hid_rpt_rx_len)),c
  5995  0019CC  0100               	movlb	0	; () banked
  5996  0019CE  51E3               	movf	(??_HIDRxReport+0+0)&0ffh,w
  5997                           	line	286
  5998                           	
  5999  0019D0                     l3166:; BSR set to: 0
  6000                           
  6001                           ;hid.c: 286: if(!ep1Bo.Stat.UOWN)
  6002  0019D0  0104               	movlb	4	; () banked
  6003                           	
  6004  0019D2  0104               	movlb	4	; () banked
  6005  0019D4  BF08               	btfsc	((1032))&0ffh,7	;volatile
  6006  0019D6  D001               	goto	u2481
  6007  0019D8  D001               	goto	u2480
  6008  0019DA                     u2481:
  6009  0019DA  D05B               	goto	l83
  6010  0019DC                     u2480:
  6011                           	line	292
  6012                           	
  6013  0019DC                     l3168:; BSR set to: 4
  6014                           
  6015                           ;hid.c: 287: {
  6016                           ;hid.c: 292: if(len > ep1Bo.Cnt)
  6017  0019DC  0100               	movlb	0	; () banked
  6018  0019DE  0100               	movlb	0	; () banked
  6019  0019E0  51E2               	movf	((HIDRxReport@len))&0ffh,w
  6020  0019E2  0104               	movlb	4	; () banked
  6021  0019E4  0104               	movlb	4	; () banked
  6022  0019E6  6109               	cpfslt	(0+(1032+01h))&0ffh	;volatile
  6023  0019E8  D001               	goto	u2491
  6024  0019EA  D001               	goto	u2490
  6025  0019EC                     u2491:
  6026  0019EC  D003               	goto	l3172
  6027  0019EE                     u2490:
  6028                           	line	293
  6029                           	
  6030  0019EE                     l3170:; BSR set to: 4
  6031                           
  6032                           ;hid.c: 293: len = ep1Bo.Cnt;
  6033  0019EE  C409 F0E2          	movff	0+(1032+01h),(HIDRxReport@len)	;volatile
  6034  0019F2  D000               	goto	l3172
  6035                           	
  6036  0019F4                     l79:; BSR set to: 4
  6037                           
  6038                           	line	298
  6039                           	
  6040  0019F4                     l3172:; BSR set to: 4
  6041                           
  6042                           ;hid.c: 298: for(hid_rpt_rx_len = 0; hid_rpt_rx_len < len; hid_rpt_rx_len++)
  6043  0019F4  0100               	movlb	0	; () banked
  6044  0019F6  6FE3               	movwf	(??_HIDRxReport+0+0)&0ffh
  6045  0019F8  0E00               	movlw	low(0)
  6046  0019FA  6E1D               	movwf	((c:_hid_rpt_rx_len)),c
  6047  0019FC  0100               	movlb	0	; () banked
  6048  0019FE  51E3               	movf	(??_HIDRxReport+0+0)&0ffh,w
  6049  001A00  D01A               	goto	l3178
  6050                           	line	299
  6051                           	
  6052  001A02                     l81:; BSR set to: 0
  6053                           
  6054                           	
  6055  001A02                     l3174:; BSR set to: 0
  6056                           
  6057                           ;hid.c: 299: buffer[hid_rpt_rx_len] = hid_report_out[hid_rpt_rx_len];
  6058  001A02  501D               	movf	((c:_hid_rpt_rx_len)),c,w
  6059  001A04  0D01               	mullw	01h
  6060  001A06  0107               	movlb	7	; () banked
  6061  001A08  0E00               	movlw	low(1792)	;volatile
  6062  001A0A  24F3               	addwf	(prodl),c,w
  6063  001A0C  6ED9               	movwf	c:fsr2l
  6064  001A0E  0107               	movlb	7	; () banked
  6065  001A10  0E07               	movlw	high(1792)	;volatile
  6066  001A12  20F4               	addwfc	prod+1,w
  6067  001A14  6EDA               	movwf	1+c:fsr2l
  6068  001A16  501D               	movf	((c:_hid_rpt_rx_len)),c,w
  6069  001A18  0D01               	mullw	01h
  6070  001A1A  50F3               	movf	(prodl),c,w
  6071  001A1C  0100               	movlb	0	; () banked
  6072  001A1E  0100               	movlb	0	; () banked
  6073  001A20  25E0               	addwf	((HIDRxReport@buffer))&0ffh,w
  6074  001A22  6EE1               	movwf	c:fsr1l
  6075  001A24  50F4               	movf	(prodh),c,w
  6076  001A26  0100               	movlb	0	; () banked
  6077  001A28  0100               	movlb	0	; () banked
  6078  001A2A  21E1               	addwfc	((HIDRxReport@buffer+1))&0ffh,w
  6079  001A2C  6EE2               	movwf	1+c:fsr1l
  6080  001A2E  CFDF FFE7          	movff	indf2,indf1
  6081                           	line	298
  6082                           	
  6083  001A32                     l3176:; BSR set to: 0
  6084                           
  6085  001A32  2A1D               	incf	((c:_hid_rpt_rx_len)),c
  6086  001A34  D000               	goto	l3178
  6087                           	
  6088  001A36                     l80:; BSR set to: 0
  6089                           
  6090                           	
  6091  001A36                     l3178:; BSR set to: 0
  6092                           
  6093  001A36  0100               	movlb	0	; () banked
  6094  001A38  0100               	movlb	0	; () banked
  6095  001A3A  51E2               	movf	((HIDRxReport@len))&0ffh,w
  6096  001A3C  5C1D               	subwf	((c:_hid_rpt_rx_len)),c,w
  6097  001A3E  A0D8               	btfss	status,0
  6098  001A40  D001               	goto	u2501
  6099  001A42  D001               	goto	u2500
  6100  001A44                     u2501:
  6101  001A44  D7DE               	goto	l3174
  6102  001A46                     u2500:
  6103  001A46  D000               	goto	l3180
  6104                           	
  6105  001A48                     l82:; BSR set to: 0
  6106                           
  6107                           	line	304
  6108                           	
  6109  001A48                     l3180:; BSR set to: 0
  6110                           
  6111                           ;hid.c: 304: ep1Bo.Cnt = sizeof(hid_report_out);
  6112  001A48  0E40               	movlw	low(040h)
  6113  001A4A  0104               	movlb	4	; () banked
  6114  001A4C  0104               	movlb	4	; () banked
  6115  001A4E  6F09               	movwf	(0+(1032+01h))&0ffh	;volatile
  6116                           	line	305
  6117                           	
  6118  001A50                     l3182:; BSR set to: 4
  6119                           
  6120                           ;hid.c: 305: { ep1Bo.Stat._byte &= 0x40; ep1Bo.Stat.DTS = !ep1Bo.Stat.DTS; ep1Bo.Stat._b
                                 yte |= 0x80|0x08; };
  6121  001A50  0E40               	movlw	(040h)&0ffh
  6122  001A52  0104               	movlb	4	; () banked
  6123  001A54  0104               	movlb	4	; () banked
  6124  001A56  1708               	andwf	((1032))&0ffh	;volatile
  6125                           	
  6126  001A58                     l3184:; BSR set to: 4
  6127                           
  6128  001A58  0104               	movlb	4	; () banked
  6129                           	
  6130  001A5A  0104               	movlb	4	; () banked
  6131  001A5C  AD08               	btfss	((1032))&0ffh,6	;volatile
  6132  001A5E  D001               	goto	u2511
  6133  001A60  D002               	goto	u2510
  6134  001A62                     u2511:
  6135  001A62  0E01               	movlw	1
  6136  001A64  D001               	goto	u2516
  6137  001A66                     u2510:
  6138  001A66  0E00               	movlw	0
  6139  001A68                     u2516:
  6140  001A68  0100               	movlb	0	; () banked
  6141  001A6A  6FE3               	movwf	(??_HIDRxReport+0+0)&0ffh
  6142  001A6C  0100               	movlb	0	; () banked
  6143  001A6E  3BE3               	swapf	((??_HIDRxReport+0+0))&0ffh
  6144  001A70  47E3               	rlncf	((??_HIDRxReport+0+0))&0ffh
  6145  001A72  47E3               	rlncf	((??_HIDRxReport+0+0))&0ffh
  6146  001A74  0104               	movlb	4	; () banked
  6147  001A76  0104               	movlb	4	; () banked
  6148  001A78  5108               	movf	((1032))&0ffh,w	;volatile
  6149  001A7A  19E3               	xorwf	((??_HIDRxReport+0+0))&0ffh,w
  6150  001A7C  0BBF               	andlw	not (((1<<1)-1)<<6)
  6151  001A7E  19E3               	xorwf	((??_HIDRxReport+0+0))&0ffh,w
  6152  001A80  0104               	movlb	4	; () banked
  6153  001A82  0104               	movlb	4	; () banked
  6154  001A84  6F08               	movwf	((1032))&0ffh	;volatile
  6155                           	
  6156  001A86                     l3186:; BSR set to: 4
  6157                           
  6158  001A86  0E88               	movlw	(088h)&0ffh
  6159  001A88  0104               	movlb	4	; () banked
  6160  001A8A  0104               	movlb	4	; () banked
  6161  001A8C  1308               	iorwf	((1032))&0ffh	;volatile
  6162  001A8E  D001               	goto	l83
  6163                           	line	306
  6164                           	
  6165  001A90                     l78:; BSR set to: 4
  6166                           
  6167  001A90  D000               	goto	l83
  6168                           	line	308
  6169                           	
  6170  001A92                     l3188:; BSR set to: 4
  6171                           
  6172                           	line	310
  6173                           ;hid.c: 306: }
  6174                           ;hid.c: 308: return hid_rpt_rx_len;
  6175                           ;	Return value of _HIDRxReport is never used
  6176                           	
  6177  001A92                     l83:; BSR set to: 4
  6178                           
  6179  001A92  0012               	return
  6180                           	opt stack 0
  6181                           GLOBAL	__end_of_HIDRxReport
  6182  001A94                     	__end_of_HIDRxReport:
  6183                           	signat	_HIDRxReport,8313
  6184                           	global	_UserInit
  6185                           
  6186 ;; *************** function _UserInit *****************
  6187 ;; Defined at:
  6188 ;;		line 257 in file "../BootPIC18NonJ.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;		None               void
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6202 ;;      Params:         0       0       0       0       0       0       0       0       0
  6203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6204 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6205 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6206 ;;Total ram usage:        1 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    2
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_InitializeSystem
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           psect	text7,class=CODE,space=0,reloc=2
  6216                           global __ptext7
  6217  00231E                     __ptext7:
  6218                           psect	text7
  6219                           	file	"../BootPIC18NonJ.c"
  6220                           	line	257
  6221                           	global	__size_of_UserInit
  6222  0000                     	__size_of_UserInit	equ	__end_of_UserInit-_UserInit
  6223                           	
  6224  00231E                     _UserInit:; BSR set to: 4
  6225                           
  6226                           	opt	stack 27
  6227                           	line	258
  6228                           	
  6229  00231E                     l3416:
  6230                           ;BootPIC18NonJ.c: 258: LATC &= 0xFE; TRISC &= 0xFE;;
  6231  00231E  908B               	bcf	(0+(0/8)+(c:3979)),c,(0)&7	;volatile
  6232  002320  9094               	bcf	(0+(0/8)+(c:3988)),c,(0)&7	;volatile
  6233                           	line	261
  6234                           	
  6235  002322                     l3418:
  6236                           ;BootPIC18NonJ.c: 261: BootState = 0x00;
  6237  002322  0100               	movlb	0	; () banked
  6238  002324  6FE0               	movwf	(??_UserInit+0+0)&0ffh
  6239  002326  0E00               	movlw	low(0)
  6240  002328  6E17               	movwf	((c:_BootState)),c
  6241  00232A  0100               	movlb	0	; () banked
  6242  00232C  51E0               	movf	(??_UserInit+0+0)&0ffh,w
  6243                           	line	262
  6244                           	
  6245  00232E                     l3420:; BSR set to: 0
  6246                           
  6247                           ;BootPIC18NonJ.c: 262: ProgrammedPointer = 0xFFFFFFFF;
  6248  00232E  0EFF               	movlw	low(0FFFFFFh)
  6249  002330  6E04               	movwf	((c:_ProgrammedPointer)),c
  6250  002332  0EFF               	movlw	high(0FFFFFFh)
  6251  002334  6E05               	movwf	((c:_ProgrammedPointer+1)),c
  6252  002336  0EFF               	movlw	low highword(0FFFFFFh)
  6253  002338  6E06               	movwf	((c:_ProgrammedPointer+2)),c
  6254                           
  6255                           	line	263
  6256                           	
  6257  00233A                     l3422:; BSR set to: 0
  6258                           
  6259                           ;BootPIC18NonJ.c: 263: BufferedDataIndex = 0;
  6260  00233A  0100               	movlb	0	; () banked
  6261  00233C  6FE0               	movwf	(??_UserInit+0+0)&0ffh
  6262  00233E  0E00               	movlw	low(0)
  6263  002340  6E18               	movwf	((c:_BufferedDataIndex)),c
  6264  002342  0100               	movlb	0	; () banked
  6265  002344  51E0               	movf	(??_UserInit+0+0)&0ffh,w
  6266                           	line	264
  6267                           	
  6268  002346                     l3424:; BSR set to: 0
  6269                           
  6270                           ;BootPIC18NonJ.c: 264: ConfigsLockValue = TRUE;
  6271  002346  0100               	movlb	0	; () banked
  6272  002348  6FE0               	movwf	(??_UserInit+0+0)&0ffh
  6273  00234A  0E01               	movlw	low(01h)
  6274  00234C  6E19               	movwf	((c:_ConfigsLockValue)),c
  6275  00234E  0100               	movlb	0	; () banked
  6276  002350  51E0               	movf	(??_UserInit+0+0)&0ffh,w
  6277                           	line	265
  6278                           	
  6279  002352                     l600:; BSR set to: 0
  6280                           
  6281  002352  0012               	return
  6282                           	opt stack 0
  6283                           GLOBAL	__end_of_UserInit
  6284  002354                     	__end_of_UserInit:
  6285                           	signat	_UserInit,88
  6286                           	global	_USBCheckBusStatus
  6287                           
  6288 ;; *************** function _USBCheckBusStatus *****************
  6289 ;; Defined at:
  6290 ;;		line 87 in file "../usbdrv.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;		None               void
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6304 ;;      Params:         0       0       0       0       0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6306 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6307 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6308 ;;Total ram usage:        1 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    3
  6311 ;; This function calls:
  6312 ;;		_USBModuleEnable
  6313 ;; This function is called by:
  6314 ;;		_USBTasks
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           psect	text8,class=CODE,space=0,reloc=2
  6318                           global __ptext8
  6319  002100                     __ptext8:
  6320                           psect	text8
  6321                           	file	"../usbdrv.c"
  6322                           	line	87
  6323                           	global	__size_of_USBCheckBusStatus
  6324  0000                     	__size_of_USBCheckBusStatus	equ	__end_of_USBCheckBusStatus-_USBCheckBusStatus
  6325                           	
  6326  002100                     _USBCheckBusStatus:; BSR set to: 0
  6327                           
  6328                           	opt	stack 26
  6329                           	line	97
  6330                           	
  6331  002100                     l3426:
  6332                           ;usbdrv.c: 96: {
  6333                           ;usbdrv.c: 97: if(UCONbits.USBEN == 0)
  6334                           	
  6335  002100  B660               	btfsc	((c:3936)),c,3	;volatile
  6336  002102  D001               	goto	u2821
  6337  002104  D001               	goto	u2820
  6338  002106                     u2821:
  6339  002106  D014               	goto	l3434
  6340  002108                     u2820:
  6341                           	line	98
  6342                           	
  6343  002108                     l3428:
  6344                           ;usbdrv.c: 98: USBModuleEnable();
  6345  002108  ECEC  F011         	call	_USBModuleEnable	;wreg free
  6346  00210C  D011               	goto	l3434
  6347                           	
  6348  00210E                     l431:
  6349                           	line	99
  6350                           ;usbdrv.c: 99: }
  6351  00210E  D010               	goto	l3434
  6352                           	line	100
  6353                           	
  6354  002110                     l430:
  6355                           	line	102
  6356                           ;usbdrv.c: 100: else
  6357                           ;usbdrv.c: 101: {
  6358                           ;usbdrv.c: 102: if(UCONbits.USBEN == 1)
  6359                           	
  6360  002110  A660               	btfss	((c:3936)),c,3	;volatile
  6361  002112  D001               	goto	u2831
  6362  002114  D001               	goto	u2830
  6363  002116                     u2831:
  6364  002116  D00C               	goto	l3434
  6365  002118                     u2830:
  6366                           	line	104
  6367                           	
  6368  002118                     l3430:
  6369                           ;usbdrv.c: 103: {
  6370                           ;usbdrv.c: 104: UCON = 0;
  6371  002118  0E00               	movlw	low(0)
  6372  00211A  6E60               	movwf	((c:3936)),c	;volatile
  6373                           	line	105
  6374                           ;usbdrv.c: 105: UIE = 0;
  6375  00211C  0E00               	movlw	low(0)
  6376  00211E  6E64               	movwf	((c:3940)),c	;volatile
  6377                           	line	106
  6378                           	
  6379  002120                     l3432:
  6380                           ;usbdrv.c: 106: usb_device_state = 0;
  6381  002120  0100               	movlb	0	; () banked
  6382  002122  6FE1               	movwf	(??_USBCheckBusStatus+0+0)&0ffh
  6383  002124  0E00               	movlw	low(0)
  6384  002126  6E1F               	movwf	((c:_usb_device_state)),c
  6385  002128  0100               	movlb	0	; () banked
  6386  00212A  51E1               	movf	(??_USBCheckBusStatus+0+0)&0ffh,w
  6387  00212C  D001               	goto	l3434
  6388                           	line	107
  6389                           	
  6390  00212E                     l433:; BSR set to: 0
  6391                           
  6392  00212E  D000               	goto	l3434
  6393                           	line	108
  6394                           	
  6395  002130                     l432:; BSR set to: 0
  6396                           
  6397                           	line	117
  6398                           	
  6399  002130                     l3434:
  6400                           ;usbdrv.c: 107: }
  6401                           ;usbdrv.c: 108: }
  6402                           ;usbdrv.c: 117: if(usb_device_state == 1)
  6403  002130  041F               	decf	((c:_usb_device_state)),c,w
  6404                           
  6405  002132  A4D8               	btfss	status,2
  6406  002134  D001               	goto	u2841
  6407  002136  D001               	goto	u2840
  6408  002138                     u2841:
  6409  002138  D012               	goto	l436
  6410  00213A                     u2840:
  6411                           	line	119
  6412                           	
  6413  00213A                     l3436:
  6414                           ;usbdrv.c: 118: {
  6415                           ;usbdrv.c: 119: if(!UCONbits.SE0)
  6416                           	
  6417  00213A  BA60               	btfsc	((c:3936)),c,5	;volatile
  6418  00213C  D001               	goto	u2851
  6419  00213E  D001               	goto	u2850
  6420  002140                     u2851:
  6421  002140  D00E               	goto	l436
  6422  002142                     u2850:
  6423                           	line	121
  6424                           	
  6425  002142                     l3438:
  6426                           ;usbdrv.c: 120: {
  6427                           ;usbdrv.c: 121: UIR = 0;
  6428  002142  0E00               	movlw	low(0)
  6429  002144  6E65               	movwf	((c:3941)),c	;volatile
  6430                           	line	122
  6431                           ;usbdrv.c: 122: UIE = 0;
  6432  002146  0E00               	movlw	low(0)
  6433  002148  6E64               	movwf	((c:3940)),c	;volatile
  6434                           	line	123
  6435                           	
  6436  00214A                     l3440:
  6437                           ;usbdrv.c: 123: UIEbits.URSTIE = 1;
  6438  00214A  8064               	bsf	((c:3940)),c,0	;volatile
  6439                           	line	124
  6440                           	
  6441  00214C                     l3442:
  6442                           ;usbdrv.c: 124: UIEbits.IDLEIE = 1;
  6443  00214C  8864               	bsf	((c:3940)),c,4	;volatile
  6444                           	line	125
  6445                           	
  6446  00214E                     l3444:
  6447                           ;usbdrv.c: 125: usb_device_state = 2;
  6448  00214E  0100               	movlb	0	; () banked
  6449  002150  6FE1               	movwf	(??_USBCheckBusStatus+0+0)&0ffh
  6450  002152  0E02               	movlw	low(02h)
  6451  002154  6E1F               	movwf	((c:_usb_device_state)),c
  6452  002156  0100               	movlb	0	; () banked
  6453  002158  51E1               	movf	(??_USBCheckBusStatus+0+0)&0ffh,w
  6454  00215A  D001               	goto	l436
  6455                           	line	126
  6456                           	
  6457  00215C                     l435:; BSR set to: 0
  6458                           
  6459  00215C  D000               	goto	l436
  6460                           	line	127
  6461                           	
  6462  00215E                     l434:; BSR set to: 0
  6463                           
  6464                           	line	129
  6465                           	
  6466  00215E                     l436:
  6467  00215E  0012               	return
  6468                           	opt stack 0
  6469                           GLOBAL	__end_of_USBCheckBusStatus
  6470  002160                     	__end_of_USBCheckBusStatus:
  6471                           	signat	_USBCheckBusStatus,88
  6472                           	global	_USBDriverService
  6473                           
  6474 ;; *************** function _USBDriverService *****************
  6475 ;; Defined at:
  6476 ;;		line 230 in file "../usbdrv.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;		None               void
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6492 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6493 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6494 ;;Total ram usage:        1 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    7
  6497 ;; This function calls:
  6498 ;;		_USBWakeFromSuspend
  6499 ;;		_USBProtocolResetHandler
  6500 ;;		_USBSuspend
  6501 ;;		_USBStallHandler
  6502 ;;		_USBCtrlEPService
  6503 ;; This function is called by:
  6504 ;;		_USBTasks
  6505 ;;		_ProcessIO
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           psect	text9,class=CODE,space=0,reloc=2
  6509                           global __ptext9
  6510  001C1E                     __ptext9:
  6511                           psect	text9
  6512                           	file	"../usbdrv.c"
  6513                           	line	230
  6514                           	global	__size_of_USBDriverService
  6515  0000                     	__size_of_USBDriverService	equ	__end_of_USBDriverService-_USBDriverService
  6516                           	
  6517  001C1E                     _USBDriverService:
  6518                           	opt	stack 22
  6519                           	line	234
  6520                           	
  6521  001C1E                     l3446:
  6522                           ;usbdrv.c: 234: if(usb_device_state == 0) return;
  6523  001C1E  661F               	tstfsz	((c:_usb_device_state)),c
  6524  001C20  D001               	goto	u2861
  6525  001C22  D001               	goto	u2860
  6526  001C24                     u2861:
  6527  001C24  D002               	goto	l442
  6528  001C26                     u2860:
  6529  001C26  D04D               	goto	l443
  6530                           	
  6531  001C28                     l3448:
  6532  001C28  D04C               	goto	l443
  6533                           	
  6534  001C2A                     l442:
  6535                           	line	241
  6536                           ;usbdrv.c: 241: if(UIRbits.ACTVIF) USBWakeFromSuspend();
  6537                           	
  6538  001C2A  A465               	btfss	((c:3941)),c,2	;volatile
  6539  001C2C  D001               	goto	u2871
  6540  001C2E  D001               	goto	u2870
  6541  001C30                     u2871:
  6542  001C30  D003               	goto	l3452
  6543  001C32                     u2870:
  6544                           	
  6545  001C32                     l3450:
  6546  001C32  EC03  F012         	call	_USBWakeFromSuspend	;wreg free
  6547  001C36  D000               	goto	l3452
  6548                           	
  6549  001C38                     l444:
  6550                           	line	246
  6551                           	
  6552  001C38                     l3452:
  6553                           ;usbdrv.c: 246: if(UCONbits.SUSPND==1) return;
  6554                           	
  6555  001C38  A260               	btfss	((c:3936)),c,1	;volatile
  6556  001C3A  D001               	goto	u2881
  6557  001C3C  D001               	goto	u2880
  6558  001C3E                     u2881:
  6559  001C3E  D002               	goto	l445
  6560  001C40                     u2880:
  6561  001C40  D040               	goto	l443
  6562                           	
  6563  001C42                     l3454:
  6564  001C42  D03F               	goto	l443
  6565                           	
  6566  001C44                     l445:
  6567                           	line	255
  6568                           ;usbdrv.c: 255: if(UIRbits.URSTIF) USBProtocolResetHandler();
  6569                           	
  6570  001C44  A065               	btfss	((c:3941)),c,0	;volatile
  6571  001C46  D001               	goto	u2891
  6572  001C48  D001               	goto	u2890
  6573  001C4A                     u2891:
  6574  001C4A  D003               	goto	l3458
  6575  001C4C                     u2890:
  6576                           	
  6577  001C4C                     l3456:
  6578  001C4C  ECB0  F00E         	call	_USBProtocolResetHandler	;wreg free
  6579  001C50  D000               	goto	l3458
  6580                           	
  6581  001C52                     l446:
  6582                           	line	261
  6583                           	
  6584  001C52                     l3458:
  6585                           ;usbdrv.c: 261: if(UIRbits.IDLEIF) USBSuspend();
  6586                           	
  6587  001C52  A865               	btfss	((c:3941)),c,4	;volatile
  6588  001C54  D001               	goto	u2901
  6589  001C56  D001               	goto	u2900
  6590  001C58                     u2901:
  6591  001C58  D003               	goto	l3462
  6592  001C5A                     u2900:
  6593                           	
  6594  001C5A                     l3460:
  6595  001C5A  EC0D  F012         	call	_USBSuspend	;wreg free
  6596  001C5E  D000               	goto	l3462
  6597                           	
  6598  001C60                     l447:
  6599                           	line	265
  6600                           	
  6601  001C60                     l3462:
  6602                           ;usbdrv.c: 265: if(UIRbits.STALLIF) USBStallHandler();
  6603                           	
  6604  001C60  AA65               	btfss	((c:3941)),c,5	;volatile
  6605  001C62  D001               	goto	u2911
  6606  001C64  D001               	goto	u2910
  6607  001C66                     u2911:
  6608  001C66  D003               	goto	l3466
  6609  001C68                     u2910:
  6610                           	
  6611  001C68                     l3464:
  6612  001C68  EC72  F011         	call	_USBStallHandler	;wreg free
  6613  001C6C  D000               	goto	l3466
  6614                           	
  6615  001C6E                     l448:
  6616                           	line	275
  6617                           	
  6618  001C6E                     l3466:
  6619                           ;usbdrv.c: 275: if(usb_device_state < 3) return;
  6620  001C6E  0E03               	movlw	(03h)&0ffh
  6621  001C70  601F               	cpfslt	((c:_usb_device_state)),c
  6622  001C72  D001               	goto	u2921
  6623  001C74  D001               	goto	u2920
  6624  001C76                     u2921:
  6625  001C76  D002               	goto	l3470
  6626  001C78                     u2920:
  6627  001C78  D024               	goto	l443
  6628                           	
  6629  001C7A                     l3468:
  6630  001C7A  D023               	goto	l443
  6631                           	
  6632  001C7C                     l449:
  6633                           	line	280
  6634                           	
  6635  001C7C                     l3470:
  6636                           ;usbdrv.c: 280: for(bTRNIFCount = 0; bTRNIFCount < 4; bTRNIFCount++)
  6637  001C7C  0100               	movlb	0	; () banked
  6638  001C7E  6FEA               	movwf	(??_USBDriverService+0+0)&0ffh
  6639  001C80  0E00               	movlw	low(0)
  6640  001C82  6E1A               	movwf	((c:_bTRNIFCount)),c
  6641  001C84  0100               	movlb	0	; () banked
  6642  001C86  51EA               	movf	(??_USBDriverService+0+0)&0ffh,w
  6643                           	
  6644  001C88                     l3472:; BSR set to: 0
  6645                           
  6646  001C88  0E03               	movlw	(04h-1)
  6647  001C8A  641A               	cpfsgt	((c:_bTRNIFCount)),c
  6648  001C8C  D001               	goto	u2931
  6649  001C8E  D001               	goto	u2930
  6650  001C90                     u2931:
  6651  001C90  D002               	goto	l450
  6652  001C92                     u2930:
  6653  001C92  D017               	goto	l443
  6654                           	
  6655  001C94                     l3474:; BSR set to: 0
  6656                           
  6657  001C94  D016               	goto	l443
  6658                           	line	281
  6659                           	
  6660  001C96                     l450:
  6661                           	line	283
  6662                           ;usbdrv.c: 281: {
  6663                           ;usbdrv.c: 283: if(UIRbits.TRNIF)
  6664                           	
  6665  001C96  A665               	btfss	((c:3941)),c,3	;volatile
  6666  001C98  D001               	goto	u2941
  6667  001C9A  D001               	goto	u2940
  6668  001C9C                     u2941:
  6669  001C9C  D012               	goto	l443
  6670  001C9E                     u2940:
  6671                           	line	289
  6672                           	
  6673  001C9E                     l3476:
  6674                           ;usbdrv.c: 284: {
  6675                           ;usbdrv.c: 289: if(USBCtrlEPService() == 0)
  6676  001C9E  ECEC  F00B         	call	_USBCtrlEPService	;wreg free
  6677  001CA2  0900               	iorlw	0
  6678  001CA4  A4D8               	btfss	status,2
  6679  001CA6  D001               	goto	u2951
  6680  001CA8  D001               	goto	u2950
  6681  001CAA                     u2951:
  6682  001CAA  D004               	goto	l3480
  6683  001CAC                     u2950:
  6684                           	line	301
  6685                           	
  6686  001CAC                     l3478:
  6687                           ;usbdrv.c: 290: {
  6688                           ;usbdrv.c: 301: UIRbits.TRNIF = 0;
  6689  001CAC  9665               	bcf	((c:3941)),c,3	;volatile
  6690  001CAE  D002               	goto	l3480
  6691                           	line	313
  6692                           	
  6693  001CB0                     l453:
  6694                           	line	314
  6695                           ;usbdrv.c: 313: }
  6696                           ;usbdrv.c: 314: }
  6697  001CB0  D001               	goto	l3480
  6698                           	line	315
  6699                           	
  6700  001CB2                     l452:
  6701                           	line	316
  6702                           ;usbdrv.c: 315: else
  6703                           ;usbdrv.c: 316: break;
  6704  001CB2  D007               	goto	l443
  6705                           	
  6706  001CB4                     l454:
  6707                           	line	280
  6708                           	
  6709  001CB4                     l3480:
  6710  001CB4  2A1A               	incf	((c:_bTRNIFCount)),c
  6711                           	
  6712  001CB6                     l3482:
  6713  001CB6  0E03               	movlw	(04h-1)
  6714  001CB8  641A               	cpfsgt	((c:_bTRNIFCount)),c
  6715  001CBA  D001               	goto	u2961
  6716  001CBC  D001               	goto	u2960
  6717  001CBE                     u2961:
  6718  001CBE  D7EB               	goto	l450
  6719  001CC0                     u2960:
  6720  001CC0  D000               	goto	l443
  6721                           	
  6722  001CC2                     l451:
  6723                           	line	319
  6724                           	
  6725  001CC2                     l443:
  6726  001CC2  0012               	return
  6727                           	opt stack 0
  6728                           GLOBAL	__end_of_USBDriverService
  6729  001CC4                     	__end_of_USBDriverService:
  6730                           	signat	_USBDriverService,88
  6731                           	global	_USBCtrlEPService
  6732                           
  6733 ;; *************** function _USBCtrlEPService *****************
  6734 ;; Defined at:
  6735 ;;		line 103 in file "../usbctrltrf.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;		None
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  setup_cnt       1    9[BANK0 ] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      unsigned char 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6749 ;;      Params:         0       0       0       0       0       0       0       0       0
  6750 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6751 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6752 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6753 ;;Total ram usage:        3 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:    6
  6756 ;; This function calls:
  6757 ;;		_USBCtrlTrfSetupHandler
  6758 ;;		_USBCtrlTrfOutHandler
  6759 ;;		_USBCtrlTrfInHandler
  6760 ;; This function is called by:
  6761 ;;		_USBDriverService
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           psect	text10,class=CODE,space=0,reloc=2
  6765                           global __ptext10
  6766  0017D8                     __ptext10:
  6767                           psect	text10
  6768                           	file	"../usbctrltrf.c"
  6769                           	line	103
  6770                           	global	__size_of_USBCtrlEPService
  6771  0000                     	__size_of_USBCtrlEPService	equ	__end_of_USBCtrlEPService-_USBCtrlEPService
  6772                           	
  6773  0017D8                     _USBCtrlEPService:
  6774                           	opt	stack 22
  6775                           	line	104
  6776                           	
  6777  0017D8                     l3628:
  6778                           ;usbctrltrf.c: 104: if(USTAT == ((0x00<<3)|(0<<2)))
  6779  0017D8  6661               	tstfsz	((c:3937)),c	;volatile
  6780  0017DA  D001               	goto	u3131
  6781  0017DC  D001               	goto	u3130
  6782  0017DE                     u3131:
  6783  0017DE  D066               	goto	l3652
  6784  0017E0                     u3130:
  6785                           	line	106
  6786                           	
  6787  0017E0                     l3630:
  6788                           ;usbctrltrf.c: 106: { UIRbits.TRNIF = 0;
  6789  0017E0  9665               	bcf	((c:3941)),c,3	;volatile
  6790                           	line	109
  6791                           	
  6792  0017E2                     l3632:
  6793                           ;usbctrltrf.c: 109: if(ep0Bo.Stat.PID == 0b00001101)
  6794  0017E2  0104               	movlb	4	; () banked
  6795  0017E4  0104               	movlb	4	; () banked
  6796  0017E6  3100               	rrcf	((1024))&0ffh,w	;volatile
  6797  0017E8  32E8               	rrcf	wreg,f
  6798  0017EA  0B0F               	andlw	(1<<4)-1
  6799  0017EC  0A0D               	xorlw	0Dh
  6800  0017EE  A4D8               	btfss	status,2
  6801  0017F0  D001               	goto	u3141
  6802  0017F2  D001               	goto	u3140
  6803  0017F4                     u3141:
  6804  0017F4  D057               	goto	l3650
  6805  0017F6                     u3140:
  6806                           	line	114
  6807                           	
  6808  0017F6                     l3634:; BSR set to: 4
  6809                           
  6810                           ;usbctrltrf.c: 110: {
  6811                           ;usbctrltrf.c: 114: if(ep0Bo.ADR == (byte*)(&CtrlTrfData))
  6812  0017F6  0E00               	movlw	low(1536)	;volatile
  6813  0017F8  0100               	movlb	0	; () banked
  6814  0017FA  6FE7               	movwf	(??_USBCtrlEPService+0+0)&0ffh
  6815  0017FC  0E06               	movlw	high(1536)	;volatile
  6816  0017FE  6FE8               	movwf	(??_USBCtrlEPService+0+0+1)&0ffh
  6817  001800  0104               	movlb	4	; () banked
  6818  001802  EE24 F002          	lfsr	2,1024+02h	;volatile
  6819  001806  0100               	movlb	0	; () banked
  6820  001808  52DE               	movf	postinc2
  6821  00180A  51E8               	movf	(??_USBCtrlEPService+0+1)&0ffh,w
  6822  00180C  18DD               	xorwf	postdec2,w
  6823  00180E  C0E7  FFE8         	movff	??_USBCtrlEPService+0+0,wreg
  6824  001812  B4D8               	btfsc	status,2
  6825  001814  18DF               	xorwf	indf2,w
  6826                           
  6827  001816  A4D8               	btfss	status,2
  6828  001818  D001               	goto	u3151
  6829  00181A  D001               	goto	u3150
  6830  00181C                     u3151:
  6831  00181C  D040               	goto	l3648
  6832  00181E                     u3150:
  6833                           	line	118
  6834                           	
  6835  00181E                     l3636:; BSR set to: 0
  6836                           
  6837                           ;usbctrltrf.c: 115: {
  6838                           ;usbctrltrf.c: 116: unsigned char setup_cnt;
  6839                           ;usbctrltrf.c: 118: ep0Bo.ADR = (byte*)(&SetupPkt);
  6840  00181E  0105               	movlb	5	; () banked
  6841  001820  0E05               	movlw	high(1280)	;volatile
  6842  001822  0104               	movlb	4	; () banked
  6843  001824  0104               	movlb	4	; () banked
  6844  001826  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  6845  001828  0105               	movlb	5	; () banked
  6846  00182A  0E00               	movlw	low(1280)	;volatile
  6847  00182C  0104               	movlb	4	; () banked
  6848  00182E  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  6849                           	line	119
  6850                           	
  6851  001830                     l3638:; BSR set to: 4
  6852                           
  6853                           ;usbctrltrf.c: 119: for(setup_cnt = 0; setup_cnt < sizeof(CTRL_TRF_SETUP); setup_cnt++)
  6854  001830  0100               	movlb	0	; () banked
  6855  001832  6FE7               	movwf	(??_USBCtrlEPService+0+0)&0ffh
  6856  001834  0E00               	movlw	low(0)
  6857  001836  0100               	movlb	0	; () banked
  6858  001838  0100               	movlb	0	; () banked
  6859  00183A  6FE9               	movwf	((USBCtrlEPService@setup_cnt))&0ffh
  6860  00183C  0100               	movlb	0	; () banked
  6861  00183E  51E7               	movf	(??_USBCtrlEPService+0+0)&0ffh,w
  6862  001840  0E07               	movlw	(08h-1)
  6863  001842  0100               	movlb	0	; () banked
  6864  001844  0100               	movlb	0	; () banked
  6865  001846  65E9               	cpfsgt	((USBCtrlEPService@setup_cnt))&0ffh
  6866  001848  D001               	goto	u3161
  6867  00184A  D001               	goto	u3160
  6868  00184C                     u3161:
  6869  00184C  D002               	goto	l3642
  6870  00184E                     u3160:
  6871  00184E  D027               	goto	l3648
  6872                           	
  6873  001850                     l3640:; BSR set to: 0
  6874                           
  6875  001850  D026               	goto	l3648
  6876                           	line	120
  6877                           	
  6878  001852                     l304:; BSR set to: 0
  6879                           
  6880                           	line	121
  6881                           	
  6882  001852                     l3642:; BSR set to: 0
  6883                           
  6884                           ;usbctrltrf.c: 120: {
  6885                           ;usbctrltrf.c: 121: *(((byte*)&SetupPkt)+setup_cnt) = *(((byte*)&CtrlTrfData)+setup_cnt)
                                 ;
  6886  001852  0100               	movlb	0	; () banked
  6887  001854  0100               	movlb	0	; () banked
  6888  001856  51E9               	movf	((USBCtrlEPService@setup_cnt))&0ffh,w
  6889  001858  0D01               	mullw	01h
  6890  00185A  0106               	movlb	6	; () banked
  6891  00185C  0E00               	movlw	low(1536)	;volatile
  6892  00185E  24F3               	addwf	(prodl),c,w
  6893  001860  6ED9               	movwf	c:fsr2l
  6894  001862  0106               	movlb	6	; () banked
  6895  001864  0E06               	movlw	high(1536)	;volatile
  6896  001866  20F4               	addwfc	prod+1,w
  6897  001868  6EDA               	movwf	1+c:fsr2l
  6898  00186A  0100               	movlb	0	; () banked
  6899  00186C  0100               	movlb	0	; () banked
  6900  00186E  51E9               	movf	((USBCtrlEPService@setup_cnt))&0ffh,w
  6901  001870  0D01               	mullw	01h
  6902  001872  0105               	movlb	5	; () banked
  6903  001874  0E00               	movlw	low(1280)	;volatile
  6904  001876  24F3               	addwf	(prodl),c,w
  6905  001878  6EE1               	movwf	c:fsr1l
  6906  00187A  0105               	movlb	5	; () banked
  6907  00187C  0E05               	movlw	high(1280)	;volatile
  6908  00187E  20F4               	addwfc	prod+1,w
  6909  001880  6EE2               	movwf	1+c:fsr1l
  6910  001882  CFDF FFE7          	movff	indf2,indf1
  6911                           	line	119
  6912                           	
  6913  001886                     l3644:; BSR set to: 5
  6914                           
  6915  001886  0100               	movlb	0	; () banked
  6916  001888  0100               	movlb	0	; () banked
  6917  00188A  2BE9               	incf	((USBCtrlEPService@setup_cnt))&0ffh
  6918                           	
  6919  00188C                     l3646:; BSR set to: 0
  6920                           
  6921  00188C  0E07               	movlw	(08h-1)
  6922  00188E  0100               	movlb	0	; () banked
  6923  001890  0100               	movlb	0	; () banked
  6924  001892  65E9               	cpfsgt	((USBCtrlEPService@setup_cnt))&0ffh
  6925  001894  D001               	goto	u3171
  6926  001896  D001               	goto	u3170
  6927  001898                     u3171:
  6928  001898  D7DC               	goto	l3642
  6929  00189A                     u3170:
  6930  00189A  D001               	goto	l3648
  6931                           	
  6932  00189C                     l305:; BSR set to: 0
  6933                           
  6934  00189C  D000               	goto	l3648
  6935                           	line	123
  6936                           	
  6937  00189E                     l303:; BSR set to: 0
  6938                           
  6939                           	line	126
  6940                           	
  6941  00189E                     l3648:; BSR set to: 0
  6942                           
  6943                           ;usbctrltrf.c: 122: }
  6944                           ;usbctrltrf.c: 123: }
  6945                           ;usbctrltrf.c: 126: USBCtrlTrfSetupHandler();
  6946  00189E  ECAE  F00D         	call	_USBCtrlTrfSetupHandler	;wreg free
  6947                           	line	127
  6948                           ;usbctrltrf.c: 127: }
  6949  0018A2  D012               	goto	l3662
  6950                           	line	128
  6951                           	
  6952  0018A4                     l302:
  6953                           	line	131
  6954                           	
  6955  0018A4                     l3650:
  6956                           ;usbctrltrf.c: 128: else
  6957                           ;usbctrltrf.c: 129: {
  6958                           ;usbctrltrf.c: 131: USBCtrlTrfOutHandler();
  6959  0018A4  EC10  F010         	call	_USBCtrlTrfOutHandler	;wreg free
  6960  0018A8  D00F               	goto	l3662
  6961                           	line	132
  6962                           	
  6963  0018AA                     l306:
  6964                           	line	135
  6965                           ;usbctrltrf.c: 132: }
  6966                           ;usbctrltrf.c: 135: }
  6967  0018AA  D00E               	goto	l3662
  6968                           	line	136
  6969                           	
  6970  0018AC                     l301:
  6971                           	
  6972  0018AC                     l3652:
  6973                           ;usbctrltrf.c: 136: else if(USTAT == ((0x00<<3)|(1<<2)))
  6974  0018AC  5061               	movf	((c:3937)),c,w	;volatile
  6975  0018AE  0A04               	xorlw	4
  6976                           
  6977  0018B0  A4D8               	btfss	status,2
  6978  0018B2  D001               	goto	u3181
  6979  0018B4  D001               	goto	u3180
  6980  0018B6                     u3181:
  6981  0018B6  D004               	goto	l3658
  6982  0018B8                     u3180:
  6983                           	line	138
  6984                           	
  6985  0018B8                     l3654:
  6986                           ;usbctrltrf.c: 137: {
  6987                           ;usbctrltrf.c: 138: UIRbits.TRNIF = 0;
  6988  0018B8  9665               	bcf	((c:3941)),c,3	;volatile
  6989                           	line	139
  6990                           	
  6991  0018BA                     l3656:
  6992                           ;usbctrltrf.c: 139: USBCtrlTrfInHandler();
  6993  0018BA  EC46  F00F         	call	_USBCtrlTrfInHandler	;wreg free
  6994                           	line	140
  6995                           ;usbctrltrf.c: 140: }
  6996  0018BE  D004               	goto	l3662
  6997                           	line	141
  6998                           	
  6999  0018C0                     l308:
  7000                           	line	143
  7001                           	
  7002  0018C0                     l3658:
  7003                           ;usbctrltrf.c: 141: else
  7004                           ;usbctrltrf.c: 142: {
  7005                           ;usbctrltrf.c: 143: return 0;
  7006  0018C0  0E00               	movlw	(0)&0ffh
  7007  0018C2  D004               	goto	l310
  7008                           	
  7009  0018C4                     l3660:
  7010  0018C4  D003               	goto	l310
  7011                           	line	144
  7012                           	
  7013  0018C6                     l309:
  7014  0018C6  D000               	goto	l3662
  7015                           	
  7016  0018C8                     l307:
  7017                           	line	145
  7018                           	
  7019  0018C8                     l3662:
  7020                           ;usbctrltrf.c: 144: }
  7021                           ;usbctrltrf.c: 145: return 1;
  7022  0018C8  0E01               	movlw	(01h)&0ffh
  7023  0018CA  D000               	goto	l310
  7024                           	
  7025  0018CC                     l3664:
  7026                           	line	147
  7027                           	
  7028  0018CC                     l310:
  7029  0018CC  0012               	return
  7030                           	opt stack 0
  7031                           GLOBAL	__end_of_USBCtrlEPService
  7032  0018CE                     	__end_of_USBCtrlEPService:
  7033                           	signat	_USBCtrlEPService,89
  7034                           	global	_USBCtrlTrfSetupHandler
  7035                           
  7036 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7037 ;; Defined at:
  7038 ;;		line 191 in file "../usbctrltrf.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  i               1    6[BANK0 ] unsigned char 
  7043 ;; Return value:  Size  Location     Type
  7044 ;;		None               void
  7045 ;; Registers used:
  7046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0
  7053 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7054 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7055 ;;      Totals:         0       2       0       0       0       0       0       0       0
  7056 ;;Total ram usage:        2 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    5
  7059 ;; This function calls:
  7060 ;;		_USBCheckStdRequest
  7061 ;;		_USBCheckHIDRequest
  7062 ;;		_USBCtrlEPServiceComplete
  7063 ;; This function is called by:
  7064 ;;		_USBCtrlEPService
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           psect	text11,class=CODE,space=0,reloc=2
  7068                           global __ptext11
  7069  001B5C                     __ptext11:
  7070                           psect	text11
  7071                           	file	"../usbctrltrf.c"
  7072                           	line	191
  7073                           	global	__size_of_USBCtrlTrfSetupHandler
  7074  0000                     	__size_of_USBCtrlTrfSetupHandler	equ	__end_of_USBCtrlTrfSetupHandler-_USBCtrlTrfSetupHa
                                 ndler
  7075                           	
  7076  001B5C                     _USBCtrlTrfSetupHandler:
  7077                           	opt	stack 22
  7078                           	line	208
  7079                           	
  7080  001B5C                     l3666:
  7081                           ;usbctrltrf.c: 192: byte i;
  7082                           ;usbctrltrf.c: 208: if(ep0Bi.Stat.UOWN != 0)
  7083  001B5C  0104               	movlb	4	; () banked
  7084                           	
  7085  001B5E  0104               	movlb	4	; () banked
  7086  001B60  AF04               	btfss	((1028))&0ffh,7	;volatile
  7087  001B62  D001               	goto	u3191
  7088  001B64  D001               	goto	u3190
  7089  001B66                     u3191:
  7090  001B66  D005               	goto	l3670
  7091  001B68                     u3190:
  7092                           	line	209
  7093                           	
  7094  001B68                     l3668:; BSR set to: 4
  7095                           
  7096                           ;usbctrltrf.c: 209: ep0Bi.Stat._byte = 0x00;
  7097  001B68  0E00               	movlw	low(0)
  7098  001B6A  0104               	movlb	4	; () banked
  7099  001B6C  0104               	movlb	4	; () banked
  7100  001B6E  6F04               	movwf	((1028))&0ffh	;volatile
  7101  001B70  D000               	goto	l3670
  7102                           	
  7103  001B72                     l313:; BSR set to: 4
  7104                           
  7105                           	line	210
  7106                           	
  7107  001B72                     l3670:; BSR set to: 4
  7108                           
  7109                           ;usbctrltrf.c: 210: short_pkt_status = 0;
  7110  001B72  0100               	movlb	0	; () banked
  7111  001B74  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7112  001B76  0E00               	movlw	low(0)
  7113  001B78  6E1E               	movwf	((c:_short_pkt_status)),c
  7114  001B7A  0100               	movlb	0	; () banked
  7115  001B7C  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7116                           	line	214
  7117                           	
  7118  001B7E                     l3672:; BSR set to: 0
  7119                           
  7120                           ;usbctrltrf.c: 214: ctrl_trf_state = 0;
  7121  001B7E  0100               	movlb	0	; () banked
  7122  001B80  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7123  001B82  0E00               	movlw	low(0)
  7124  001B84  6E1C               	movwf	((c:_ctrl_trf_state)),c
  7125  001B86  0100               	movlb	0	; () banked
  7126  001B88  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7127                           	line	215
  7128                           	
  7129  001B8A                     l3674:; BSR set to: 0
  7130                           
  7131                           ;usbctrltrf.c: 215: ctrl_trf_session_owner = 0;
  7132  001B8A  0100               	movlb	0	; () banked
  7133  001B8C  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7134  001B8E  0E00               	movlw	low(0)
  7135  001B90  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7136  001B92  0100               	movlb	0	; () banked
  7137  001B94  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7138                           	line	216
  7139                           	
  7140  001B96                     l3676:; BSR set to: 0
  7141                           
  7142                           ;usbctrltrf.c: 216: wCount._word = 0;
  7143  001B96  0E00               	movlw	high(0)
  7144  001B98  6E22               	movwf	((c:_wCount+1)),c
  7145  001B9A  0E00               	movlw	low(0)
  7146  001B9C  6E21               	movwf	((c:_wCount)),c
  7147                           	line	219
  7148                           	
  7149  001B9E                     l3678:; BSR set to: 0
  7150                           
  7151                           ;usbctrltrf.c: 219: USBCheckStdRequest();
  7152  001B9E  ECC4  F009         	call	_USBCheckStdRequest	;wreg free
  7153                           	line	221
  7154                           	
  7155  001BA2                     l3680:
  7156                           ;usbctrltrf.c: 221: for(i=0;i < (sizeof(ClassReqHandler)/sizeof(pFunc));i++)
  7157  001BA2  0100               	movlb	0	; () banked
  7158  001BA4  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7159  001BA6  0E00               	movlw	low(0)
  7160  001BA8  0100               	movlb	0	; () banked
  7161  001BAA  0100               	movlb	0	; () banked
  7162  001BAC  6FE6               	movwf	((USBCtrlTrfSetupHandler@i))&0ffh
  7163  001BAE  0100               	movlb	0	; () banked
  7164  001BB0  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7165                           	
  7166  001BB2                     l3682:; BSR set to: 0
  7167                           
  7168  001BB2  0100               	movlb	0	; () banked
  7169  001BB4  0100               	movlb	0	; () banked
  7170  001BB6  51E6               	movf	((USBCtrlTrfSetupHandler@i))&0ffh,w
  7171  001BB8  B4D8               	btfsc	status,2
  7172  001BBA  D001               	goto	u3201
  7173  001BBC  D001               	goto	u3200
  7174  001BBE                     u3201:
  7175  001BBE  D002               	goto	l3686
  7176  001BC0                     u3200:
  7177  001BC0  D02B               	goto	l3696
  7178                           	
  7179  001BC2                     l3684:; BSR set to: 0
  7180                           
  7181  001BC2  D02A               	goto	l3696
  7182                           	line	222
  7183                           	
  7184  001BC4                     l314:; BSR set to: 0
  7185                           
  7186                           	line	223
  7187                           	
  7188  001BC4                     l3686:; BSR set to: 0
  7189                           
  7190                           ;usbctrltrf.c: 222: {
  7191                           ;usbctrltrf.c: 223: if(ctrl_trf_session_owner != 0)break;
  7192  001BC4  501B               	movf	((c:_ctrl_trf_session_owner)),c,w
  7193  001BC6  B4D8               	btfsc	status,2
  7194  001BC8  D001               	goto	u3211
  7195  001BCA  D001               	goto	u3210
  7196  001BCC                     u3211:
  7197  001BCC  D002               	goto	l3690
  7198  001BCE                     u3210:
  7199  001BCE  D024               	goto	l3696
  7200                           	
  7201  001BD0                     l3688:; BSR set to: 0
  7202                           
  7203  001BD0  D023               	goto	l3696
  7204                           	
  7205  001BD2                     l316:; BSR set to: 0
  7206                           
  7207                           	line	224
  7208                           	
  7209  001BD2                     l3690:; BSR set to: 0
  7210                           
  7211                           ;usbctrltrf.c: 224: ClassReqHandler[i]();
  7212  001BD2  0100               	movlb	0	; () banked
  7213  001BD4  0100               	movlb	0	; () banked
  7214  001BD6  51E6               	movf	((USBCtrlTrfSetupHandler@i))&0ffh,w
  7215  001BD8  0D02               	mullw	02h
  7216  001BDA  0E0A               	movlw	low((_ClassReqHandler))
  7217  001BDC  24F3               	addwf	(prodl),c,w
  7218  001BDE  6EF6               	movwf	tblptrl
  7219  001BE0  0E08               	movlw	high((_ClassReqHandler))
  7220  001BE2  20F4               	addwfc	(prodh),c,w
  7221  001BE4  6EF7               	movwf	tblptrh
  7222  001BE6  D801               	call	u3228
  7223  001BE8  D00C               	goto	u3229
  7224  001BEA                     u3228:
  7225  001BEA  0005               	push
  7226  001BEC  6EFA               	movwf	pclath
  7227  001BEE  0009               	tblrd	*+
  7228                           	
  7229  001BF0  50F5               	movf	tablat,w
  7230  001BF2  6EFD               	movwf	tosl
  7231  001BF4  0009               	tblrd	*+
  7232                           	
  7233  001BF6  50F5               	movf	tablat,w
  7234  001BF8  6EFE               	movwf	tosl+1
  7235  001BFA  50F8               	movf	tblptru,w
  7236  001BFC  6EFF               	movwf	tosl+2
  7237  001BFE  50FA               	movf	pclath,w
  7238                           	
  7239  001C00  0012               	return	;indir
  7240  001C02                     	u3229:
  7241                           	line	221
  7242                           	
  7243  001C02                     l3692:
  7244  001C02  0100               	movlb	0	; () banked
  7245  001C04  0100               	movlb	0	; () banked
  7246  001C06  2BE6               	incf	((USBCtrlTrfSetupHandler@i))&0ffh
  7247                           	
  7248  001C08                     l3694:; BSR set to: 0
  7249                           
  7250  001C08  0100               	movlb	0	; () banked
  7251  001C0A  0100               	movlb	0	; () banked
  7252  001C0C  51E6               	movf	((USBCtrlTrfSetupHandler@i))&0ffh,w
  7253  001C0E  B4D8               	btfsc	status,2
  7254  001C10  D001               	goto	u3231
  7255  001C12  D001               	goto	u3230
  7256  001C14                     u3231:
  7257  001C14  D7D7               	goto	l3686
  7258  001C16                     u3230:
  7259  001C16  D000               	goto	l3696
  7260                           	
  7261  001C18                     l315:; BSR set to: 0
  7262                           
  7263                           	line	228
  7264                           	
  7265  001C18                     l3696:; BSR set to: 0
  7266                           
  7267                           ;usbctrltrf.c: 225: }
  7268                           ;usbctrltrf.c: 228: USBCtrlEPServiceComplete();
  7269  001C18  EC67  F00C         	call	_USBCtrlEPServiceComplete	;wreg free
  7270                           	line	230
  7271                           	
  7272  001C1C                     l317:
  7273  001C1C  0012               	return
  7274                           	opt stack 0
  7275                           GLOBAL	__end_of_USBCtrlTrfSetupHandler
  7276  001C1E                     	__end_of_USBCtrlTrfSetupHandler:
  7277                           	signat	_USBCtrlTrfSetupHandler,88
  7278                           	global	_USBCheckHIDRequest
  7279                           
  7280 ;; *************** function _USBCheckHIDRequest *****************
  7281 ;; Defined at:
  7282 ;;		line 76 in file "../hid.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;		None
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;		None               void
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7296 ;;      Params:         0       0       0       0       0       0       0       0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7298 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7299 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7300 ;;Total ram usage:        1 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:    3
  7303 ;; This function calls:
  7304 ;;		_HIDGetReportHandler
  7305 ;;		_HIDSetReportHandler
  7306 ;; This function is called by:
  7307 ;;		_USBCtrlTrfSetupHandler
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           psect	text12,class=CODE,space=0,reloc=2
  7311                           global __ptext12
  7312  000F6E                     __ptext12:
  7313                           psect	text12
  7314                           	file	"../hid.c"
  7315                           	line	76
  7316                           	global	__size_of_USBCheckHIDRequest
  7317  0000                     	__size_of_USBCheckHIDRequest	equ	__end_of_USBCheckHIDRequest-_USBCheckHIDRequest
  7318                           	
  7319  000F6E                     _USBCheckHIDRequest:
  7320                           	opt	stack 23
  7321                           	line	77
  7322                           	
  7323  000F6E                     l3070:
  7324                           ;hid.c: 77: if(SetupPkt.Recipient != 1) return;
  7325  000F6E  0105               	movlb	5	; () banked
  7326  000F70  0105               	movlb	5	; () banked
  7327  000F72  5100               	movf	((1280))&0ffh,w	;volatile
  7328  000F74  0B1F               	andlw	(1<<5)-1
  7329  000F76  0100               	movlb	0	; () banked
  7330  000F78  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7331  000F7A  0100               	movlb	0	; () banked
  7332  000F7C  05E0               	decf	((??_USBCheckHIDRequest+0+0))&0ffh,w
  7333  000F7E  B4D8               	btfsc	status,2
  7334  000F80  D001               	goto	u2381
  7335  000F82  D001               	goto	u2380
  7336  000F84                     u2381:
  7337  000F84  D002               	goto	l3074
  7338  000F86                     u2380:
  7339  000F86  D0B7               	goto	l40
  7340                           	
  7341  000F88                     l3072:; BSR set to: 0
  7342                           
  7343  000F88  D0B6               	goto	l40
  7344                           	
  7345  000F8A                     l39:; BSR set to: 0
  7346                           
  7347                           	line	78
  7348                           	
  7349  000F8A                     l3074:; BSR set to: 0
  7350                           
  7351                           ;hid.c: 78: if(SetupPkt.bIntfID != 0x00) return;
  7352  000F8A  0105               	movlb	5	; () banked
  7353  000F8C  0105               	movlb	5	; () banked
  7354  000F8E  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  7355  000F90  B4D8               	btfsc	status,2
  7356  000F92  D001               	goto	u2391
  7357  000F94  D001               	goto	u2390
  7358  000F96                     u2391:
  7359  000F96  D002               	goto	l3078
  7360  000F98                     u2390:
  7361  000F98  D0AE               	goto	l40
  7362                           	
  7363  000F9A                     l3076:; BSR set to: 5
  7364                           
  7365  000F9A  D0AD               	goto	l40
  7366                           	
  7367  000F9C                     l41:; BSR set to: 5
  7368                           
  7369                           	line	85
  7370                           	
  7371  000F9C                     l3078:; BSR set to: 5
  7372                           
  7373                           ;hid.c: 85: if(SetupPkt.bRequest == 6)
  7374  000F9C  0105               	movlb	5	; () banked
  7375  000F9E  0105               	movlb	5	; () banked
  7376  000FA0  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  7377  000FA2  0A06               	xorlw	6
  7378                           
  7379  000FA4  A4D8               	btfss	status,2
  7380  000FA6  D001               	goto	u2401
  7381  000FA8  D001               	goto	u2400
  7382  000FAA                     u2401:
  7383  000FAA  D042               	goto	l3102
  7384  000FAC                     u2400:
  7385  000FAC  D032               	goto	l3100
  7386                           	line	87
  7387                           	
  7388  000FAE                     l3080:; BSR set to: 5
  7389                           
  7390                           ;hid.c: 86: {
  7391                           ;hid.c: 87: switch(SetupPkt.bDscType)
  7392  000FAE  D031               	goto	l3100
  7393                           	line	89
  7394                           ;hid.c: 88: {
  7395                           ;hid.c: 89: case 0x21:
  7396                           	
  7397  000FB0                     l44:; BSR set to: 5
  7398                           
  7399                           	line	90
  7400                           	
  7401  000FB0                     l3082:; BSR set to: 5
  7402                           
  7403                           ;hid.c: 90: ctrl_trf_session_owner = 2;
  7404  000FB0  0100               	movlb	0	; () banked
  7405  000FB2  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7406  000FB4  0E02               	movlw	low(02h)
  7407  000FB6  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7408  000FB8  0100               	movlb	0	; () banked
  7409  000FBA  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7410                           	line	91
  7411                           	
  7412  000FBC                     l3084:; BSR set to: 0
  7413                           
  7414                           ;hid.c: 91: { if(usb_active_cfg == 1) pSrc.bRom = (const byte*)&cfg01.hid_i00a00; };
  7415  000FBC  0425               	decf	((c:_usb_active_cfg)),c,w
  7416                           
  7417  000FBE  A4D8               	btfss	status,2
  7418  000FC0  D001               	goto	u2411
  7419  000FC2  D001               	goto	u2410
  7420  000FC4                     u2411:
  7421  000FC4  D004               	goto	l45
  7422  000FC6                     u2410:
  7423                           	
  7424  000FC6                     l3086:; BSR set to: 0
  7425                           
  7426  000FC6  0E08               	movlw	high(_cfg01+012h)
  7427  000FC8  6E0B               	movwf	((c:_pSrc+1)),c
  7428  000FCA  0E52               	movlw	low(_cfg01+012h)
  7429  000FCC  6E0A               	movwf	((c:_pSrc)),c
  7430                           	
  7431  000FCE                     l45:; BSR set to: 0
  7432                           
  7433                           	line	92
  7434                           ;hid.c: 92: wCount._word = sizeof(USB_HID_DSC);
  7435  000FCE  0E00               	movlw	high(09h)
  7436  000FD0  6E22               	movwf	((c:_wCount+1)),c
  7437  000FD2  0E09               	movlw	low(09h)
  7438  000FD4  6E21               	movwf	((c:_wCount)),c
  7439                           	line	93
  7440                           ;hid.c: 93: break;
  7441  000FD6  D02A               	goto	l46
  7442                           	line	94
  7443                           ;hid.c: 94: case 0x22:
  7444                           	
  7445  000FD8                     l47:; BSR set to: 0
  7446                           
  7447                           	line	95
  7448                           	
  7449  000FD8                     l3088:
  7450                           ;hid.c: 95: ctrl_trf_session_owner = 2;
  7451  000FD8  0100               	movlb	0	; () banked
  7452  000FDA  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7453  000FDC  0E02               	movlw	low(02h)
  7454  000FDE  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7455  000FE0  0100               	movlb	0	; () banked
  7456  000FE2  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7457                           	line	96
  7458                           	
  7459  000FE4                     l3090:; BSR set to: 0
  7460                           
  7461                           ;hid.c: 96: { if(usb_active_cfg == 1) pSrc.bRom = (const byte*)&hid_rpt01; };
  7462  000FE4  0425               	decf	((c:_usb_active_cfg)),c,w
  7463                           
  7464  000FE6  A4D8               	btfss	status,2
  7465  000FE8  D001               	goto	u2421
  7466  000FEA  D001               	goto	u2420
  7467  000FEC                     u2421:
  7468  000FEC  D005               	goto	l3094
  7469  000FEE                     u2420:
  7470                           	
  7471  000FEE                     l3092:; BSR set to: 0
  7472                           
  7473  000FEE  0E08               	movlw	high(_hid_rpt01)
  7474  000FF0  6E0B               	movwf	((c:_pSrc+1)),c
  7475  000FF2  0E8F               	movlw	low(_hid_rpt01)
  7476  000FF4  6E0A               	movwf	((c:_pSrc)),c
  7477  000FF6  D000               	goto	l3094
  7478                           	
  7479  000FF8                     l48:; BSR set to: 0
  7480                           
  7481                           	line	97
  7482                           	
  7483  000FF8                     l3094:; BSR set to: 0
  7484                           
  7485                           ;hid.c: 97: { if(usb_active_cfg == 1) wCount._word = sizeof(hid_rpt01); };
  7486  000FF8  0425               	decf	((c:_usb_active_cfg)),c,w
  7487                           
  7488  000FFA  A4D8               	btfss	status,2
  7489  000FFC  D001               	goto	u2431
  7490  000FFE  D001               	goto	u2430
  7491  001000                     u2431:
  7492  001000  D015               	goto	l46
  7493  001002                     u2430:
  7494                           	
  7495  001002                     l3096:; BSR set to: 0
  7496                           
  7497  001002  0E00               	movlw	high(01Dh)
  7498  001004  6E22               	movwf	((c:_wCount+1)),c
  7499  001006  0E1D               	movlw	low(01Dh)
  7500  001008  6E21               	movwf	((c:_wCount)),c
  7501  00100A  D010               	goto	l46
  7502                           	
  7503  00100C                     l49:; BSR set to: 0
  7504                           
  7505                           	line	98
  7506                           ;hid.c: 98: break;
  7507  00100C  D00F               	goto	l46
  7508                           	line	99
  7509                           ;hid.c: 99: case 0x23:
  7510                           	
  7511  00100E                     l50:; BSR set to: 0
  7512                           
  7513                           	line	101
  7514                           ;hid.c: 101: break;
  7515  00100E  D00E               	goto	l46
  7516                           	line	102
  7517                           	
  7518  001010                     l3098:; BSR set to: 0
  7519                           
  7520                           ;hid.c: 102: }
  7521  001010  D00D               	goto	l46
  7522                           	line	87
  7523                           	
  7524  001012                     l43:; BSR set to: 0
  7525                           
  7526                           	
  7527  001012                     l3100:
  7528  001012  0105               	movlb	5	; () banked
  7529  001014  0105               	movlb	5	; () banked
  7530  001016  5103               	movf	(0+(1280+03h))&0ffh,w	;volatile
  7531                           	; Switch size 1, requested type "space"
  7532                           ; Number of cases is 3, Range of values is 33 to 35
  7533                           ; switch strategies available:
  7534                           ; Name         Instructions Cycles
  7535                           ; simple_byte           10     6 (average)
  7536                           ;	Chosen strategy is simple_byte
  7537                           
  7538  001018  0A21               	xorlw	33^0	; case 33
  7539  00101A  B4D8               	skipnz
  7540  00101C  D7C9               	goto	l3082
  7541  00101E  0A03               	xorlw	34^33	; case 34
  7542  001020  B4D8               	skipnz
  7543  001022  D7DA               	goto	l3088
  7544  001024  0A01               	xorlw	35^34	; case 35
  7545  001026  B4D8               	skipnz
  7546  001028  D001               	goto	l46
  7547  00102A  D000               	goto	l46
  7548                           
  7549                           	line	102
  7550                           	
  7551  00102C                     l46:
  7552                           	line	103
  7553                           ;hid.c: 103: usb_stat.ctrl_trf_mem = 1;
  7554  00102C  8220               	bsf	((c:_usb_stat)),c,1
  7555  00102E  D000               	goto	l3102
  7556                           	line	104
  7557                           	
  7558  001030                     l42:
  7559                           	line	106
  7560                           	
  7561  001030                     l3102:
  7562                           ;hid.c: 104: }
  7563                           ;hid.c: 106: if(SetupPkt.RequestType != 0x01) return;
  7564  001030  0105               	movlb	5	; () banked
  7565  001032  0105               	movlb	5	; () banked
  7566  001034  3900               	swapf	((1280))&0ffh,w	;volatile
  7567  001036  32E8               	rrcf	wreg,f
  7568  001038  0B03               	andlw	(1<<2)-1
  7569  00103A  0100               	movlb	0	; () banked
  7570  00103C  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7571  00103E  0100               	movlb	0	; () banked
  7572  001040  05E0               	decf	((??_USBCheckHIDRequest+0+0))&0ffh,w
  7573  001042  B4D8               	btfsc	status,2
  7574  001044  D001               	goto	u2441
  7575  001046  D001               	goto	u2440
  7576  001048                     u2441:
  7577  001048  D040               	goto	l3136
  7578  00104A                     u2440:
  7579  00104A  D055               	goto	l40
  7580                           	
  7581  00104C                     l3104:; BSR set to: 0
  7582                           
  7583  00104C  D054               	goto	l40
  7584                           	
  7585  00104E                     l51:; BSR set to: 0
  7586                           
  7587                           	line	107
  7588                           ;hid.c: 107: switch(SetupPkt.bRequest)
  7589  00104E  D03D               	goto	l3136
  7590                           	line	109
  7591                           ;hid.c: 108: {
  7592                           ;hid.c: 109: case 0x01:
  7593                           	
  7594  001050                     l53:; BSR set to: 0
  7595                           
  7596                           	line	110
  7597                           	
  7598  001050                     l3106:
  7599                           ;hid.c: 110: HIDGetReportHandler();
  7600  001050  EC1E  F012         	call	_HIDGetReportHandler	;wreg free
  7601                           	line	111
  7602                           ;hid.c: 111: break;
  7603  001054  D050               	goto	l40
  7604                           	line	112
  7605                           ;hid.c: 112: case 0x09:
  7606                           	
  7607  001056                     l55:
  7608                           	line	113
  7609                           	
  7610  001056                     l3108:
  7611                           ;hid.c: 113: HIDSetReportHandler();
  7612  001056  EC1F  F012         	call	_HIDSetReportHandler	;wreg free
  7613                           	line	114
  7614                           ;hid.c: 114: break;
  7615  00105A  D04D               	goto	l40
  7616                           	line	115
  7617                           ;hid.c: 115: case 0x02:
  7618                           	
  7619  00105C                     l56:
  7620                           	line	116
  7621                           	
  7622  00105C                     l3110:
  7623                           ;hid.c: 116: ctrl_trf_session_owner = 2;
  7624  00105C  0100               	movlb	0	; () banked
  7625  00105E  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7626  001060  0E02               	movlw	low(02h)
  7627  001062  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7628  001064  0100               	movlb	0	; () banked
  7629  001066  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7630                           	line	117
  7631                           	
  7632  001068                     l3112:; BSR set to: 0
  7633                           
  7634                           ;hid.c: 117: pSrc.bRam = (byte*)&idle_rate;
  7635  001068  0E00               	movlw	high((c:_idle_rate))
  7636  00106A  6E0B               	movwf	((c:_pSrc+1)),c
  7637  00106C  0E24               	movlw	low((c:_idle_rate))
  7638  00106E  6E0A               	movwf	((c:_pSrc)),c
  7639                           	line	118
  7640                           	
  7641  001070                     l3114:; BSR set to: 0
  7642                           
  7643                           ;hid.c: 118: usb_stat.ctrl_trf_mem = 0;
  7644  001070  9220               	bcf	((c:_usb_stat)),c,1
  7645                           	line	119
  7646                           	
  7647  001072                     l3116:; BSR set to: 0
  7648                           
  7649                           ;hid.c: 119: ((wCount).v[0]) = 1;
  7650  001072  0100               	movlb	0	; () banked
  7651  001074  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7652  001076  0E01               	movlw	low(01h)
  7653  001078  6E21               	movwf	((c:_wCount)),c
  7654  00107A  0100               	movlb	0	; () banked
  7655  00107C  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7656                           	line	120
  7657                           ;hid.c: 120: break;
  7658  00107E  D03B               	goto	l40
  7659                           	line	121
  7660                           ;hid.c: 121: case 0x0A:
  7661                           	
  7662  001080                     l57:; BSR set to: 0
  7663                           
  7664                           	line	122
  7665                           	
  7666  001080                     l3118:
  7667                           ;hid.c: 122: ctrl_trf_session_owner = 2;
  7668  001080  0100               	movlb	0	; () banked
  7669  001082  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7670  001084  0E02               	movlw	low(02h)
  7671  001086  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7672  001088  0100               	movlb	0	; () banked
  7673  00108A  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7674                           	line	123
  7675                           	
  7676  00108C                     l3120:; BSR set to: 0
  7677                           
  7678                           ;hid.c: 123: idle_rate = ((SetupPkt.W_Value).v[1]);
  7679  00108C  C503 F024          	movff	0+(1280+03h),(c:_idle_rate)	;volatile
  7680                           	line	124
  7681                           ;hid.c: 124: break;
  7682  001090  D032               	goto	l40
  7683                           	line	125
  7684                           ;hid.c: 125: case 0x03:
  7685                           	
  7686  001092                     l58:; BSR set to: 0
  7687                           
  7688                           	line	126
  7689                           	
  7690  001092                     l3122:
  7691                           ;hid.c: 126: ctrl_trf_session_owner = 2;
  7692  001092  0100               	movlb	0	; () banked
  7693  001094  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7694  001096  0E02               	movlw	low(02h)
  7695  001098  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7696  00109A  0100               	movlb	0	; () banked
  7697  00109C  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7698                           	line	127
  7699                           	
  7700  00109E                     l3124:; BSR set to: 0
  7701                           
  7702                           ;hid.c: 127: pSrc.bRam = (byte*)&active_protocol;
  7703  00109E  0E00               	movlw	high((c:_active_protocol))
  7704  0010A0  6E0B               	movwf	((c:_pSrc+1)),c
  7705  0010A2  0E23               	movlw	low((c:_active_protocol))
  7706  0010A4  6E0A               	movwf	((c:_pSrc)),c
  7707                           	line	128
  7708                           	
  7709  0010A6                     l3126:; BSR set to: 0
  7710                           
  7711                           ;hid.c: 128: usb_stat.ctrl_trf_mem = 0;
  7712  0010A6  9220               	bcf	((c:_usb_stat)),c,1
  7713                           	line	129
  7714                           	
  7715  0010A8                     l3128:; BSR set to: 0
  7716                           
  7717                           ;hid.c: 129: ((wCount).v[0]) = 1;
  7718  0010A8  0100               	movlb	0	; () banked
  7719  0010AA  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7720  0010AC  0E01               	movlw	low(01h)
  7721  0010AE  6E21               	movwf	((c:_wCount)),c
  7722  0010B0  0100               	movlb	0	; () banked
  7723  0010B2  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7724                           	line	130
  7725                           ;hid.c: 130: break;
  7726  0010B4  D020               	goto	l40
  7727                           	line	131
  7728                           ;hid.c: 131: case 0x0B:
  7729                           	
  7730  0010B6                     l59:; BSR set to: 0
  7731                           
  7732                           	line	132
  7733                           	
  7734  0010B6                     l3130:
  7735                           ;hid.c: 132: ctrl_trf_session_owner = 2;
  7736  0010B6  0100               	movlb	0	; () banked
  7737  0010B8  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7738  0010BA  0E02               	movlw	low(02h)
  7739  0010BC  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7740  0010BE  0100               	movlb	0	; () banked
  7741  0010C0  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7742                           	line	133
  7743                           	
  7744  0010C2                     l3132:; BSR set to: 0
  7745                           
  7746                           ;hid.c: 133: active_protocol = ((SetupPkt.W_Value).v[0]);
  7747  0010C2  C502 F023          	movff	0+(1280+02h),(c:_active_protocol)	;volatile
  7748                           	line	134
  7749                           ;hid.c: 134: break;
  7750  0010C6  D017               	goto	l40
  7751                           	line	135
  7752                           	
  7753  0010C8                     l3134:; BSR set to: 0
  7754                           
  7755                           ;hid.c: 135: }
  7756  0010C8  D016               	goto	l40
  7757                           	line	107
  7758                           	
  7759  0010CA                     l52:; BSR set to: 0
  7760                           
  7761                           	
  7762  0010CA                     l3136:; BSR set to: 0
  7763                           
  7764  0010CA  0105               	movlb	5	; () banked
  7765  0010CC  0105               	movlb	5	; () banked
  7766  0010CE  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  7767                           	; Switch size 1, requested type "space"
  7768                           ; Number of cases is 6, Range of values is 1 to 11
  7769                           ; switch strategies available:
  7770                           ; Name         Instructions Cycles
  7771                           ; simple_byte           19    10 (average)
  7772                           ;	Chosen strategy is simple_byte
  7773                           
  7774  0010D0  0A01               	xorlw	1^0	; case 1
  7775  0010D2  B4D8               	skipnz
  7776  0010D4  D7BD               	goto	l3106
  7777  0010D6  0A03               	xorlw	2^1	; case 2
  7778  0010D8  B4D8               	skipnz
  7779  0010DA  D7C0               	goto	l3110
  7780  0010DC  0A01               	xorlw	3^2	; case 3
  7781  0010DE  B4D8               	skipnz
  7782  0010E0  D7D8               	goto	l3122
  7783  0010E2  0A0A               	xorlw	9^3	; case 9
  7784  0010E4  B4D8               	skipnz
  7785  0010E6  D7B7               	goto	l3108
  7786  0010E8  0A03               	xorlw	10^9	; case 10
  7787  0010EA  B4D8               	skipnz
  7788  0010EC  D7C9               	goto	l3118
  7789  0010EE  0A01               	xorlw	11^10	; case 11
  7790  0010F0  B4D8               	skipnz
  7791  0010F2  D7E1               	goto	l3130
  7792  0010F4  D000               	goto	l40
  7793                           
  7794                           	line	135
  7795                           	
  7796  0010F6                     l54:; BSR set to: 5
  7797                           
  7798                           	line	137
  7799                           	
  7800  0010F6                     l40:
  7801  0010F6  0012               	return
  7802                           	opt stack 0
  7803                           GLOBAL	__end_of_USBCheckHIDRequest
  7804  0010F8                     	__end_of_USBCheckHIDRequest:
  7805                           	signat	_USBCheckHIDRequest,88
  7806                           	global	_HIDGetReportHandler
  7807                           
  7808 ;; *************** function _HIDGetReportHandler *****************
  7809 ;; Defined at:
  7810 ;;		line 140 in file "../hid.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;		None               void
  7817 ;; Registers used:
  7818 ;;		None
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7827 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    2
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_USBCheckHIDRequest
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           psect	text13,class=CODE,space=0,reloc=2
  7838                           global __ptext13
  7839  00243C                     __ptext13:
  7840                           psect	text13
  7841                           	file	"../hid.c"
  7842                           	line	140
  7843                           	global	__size_of_HIDGetReportHandler
  7844  0000                     	__size_of_HIDGetReportHandler	equ	__end_of_HIDGetReportHandler-_HIDGetReportHandler
  7845                           	
  7846  00243C                     _HIDGetReportHandler:
  7847                           	opt	stack 23
  7848                           	line	142
  7849                           	
  7850  00243C                     l62:
  7851  00243C  0012               	return
  7852                           	opt stack 0
  7853                           GLOBAL	__end_of_HIDGetReportHandler
  7854  00243E                     	__end_of_HIDGetReportHandler:
  7855                           	signat	_HIDGetReportHandler,88
  7856                           	global	_HIDSetReportHandler
  7857                           
  7858 ;; *************** function _HIDSetReportHandler *****************
  7859 ;; Defined at:
  7860 ;;		line 145 in file "../hid.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;		None               void
  7867 ;; Registers used:
  7868 ;;		None
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7874 ;;      Params:         0       0       0       0       0       0       0       0       0
  7875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7878 ;;Total ram usage:        0 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    2
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_USBCheckHIDRequest
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           psect	text14,class=CODE,space=0,reloc=2
  7888                           global __ptext14
  7889  00243E                     __ptext14:
  7890                           psect	text14
  7891                           	file	"../hid.c"
  7892                           	line	145
  7893                           	global	__size_of_HIDSetReportHandler
  7894  0000                     	__size_of_HIDSetReportHandler	equ	__end_of_HIDSetReportHandler-_HIDSetReportHandler
  7895                           	
  7896  00243E                     _HIDSetReportHandler:
  7897                           	opt	stack 23
  7898                           	line	148
  7899                           	
  7900  00243E                     l65:
  7901  00243E  0012               	return
  7902                           	opt stack 0
  7903                           GLOBAL	__end_of_HIDSetReportHandler
  7904  002440                     	__end_of_HIDSetReportHandler:
  7905                           	signat	_HIDSetReportHandler,88
  7906                           	global	_USBCheckStdRequest
  7907                           
  7908 ;; *************** function _USBCheckStdRequest *****************
  7909 ;; Defined at:
  7910 ;;		line 73 in file "../usb9.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;		None
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;		None
  7915 ;; Return value:  Size  Location     Type
  7916 ;;		None               void
  7917 ;; Registers used:
  7918 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7924 ;;      Params:         0       0       0       0       0       0       0       0       0
  7925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7926 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7927 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7928 ;;Total ram usage:        1 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    4
  7931 ;; This function calls:
  7932 ;;		_USBStdGetDscHandler
  7933 ;;		_USBStdSetCfgHandler
  7934 ;;		_USBStdGetStatusHandler
  7935 ;;		_USBStdFeatureReqHandler
  7936 ;; This function is called by:
  7937 ;;		_USBCtrlTrfSetupHandler
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           psect	text15,class=CODE,space=0,reloc=2
  7941                           global __ptext15
  7942  001388                     __ptext15:
  7943                           psect	text15
  7944                           	file	"../usb9.c"
  7945                           	line	73
  7946                           	global	__size_of_USBCheckStdRequest
  7947  0000                     	__size_of_USBCheckStdRequest	equ	__end_of_USBCheckStdRequest-_USBCheckStdRequest
  7948                           	
  7949  001388                     _USBCheckStdRequest:
  7950                           	opt	stack 22
  7951                           	line	74
  7952                           	
  7953  001388                     l3484:
  7954                           ;usb9.c: 74: if(SetupPkt.RequestType != 0x00) return;
  7955  001388  0105               	movlb	5	; () banked
  7956  00138A  0105               	movlb	5	; () banked
  7957  00138C  3900               	swapf	((1280))&0ffh,w	;volatile
  7958  00138E  32E8               	rrcf	wreg,f
  7959  001390  0B03               	andlw	(1<<2)-1
  7960  001392  0900               	iorlw	0
  7961  001394  B4D8               	btfsc	status,2
  7962  001396  D001               	goto	u2971
  7963  001398  D001               	goto	u2970
  7964  00139A                     u2971:
  7965  00139A  D05F               	goto	l3520
  7966  00139C                     u2970:
  7967  00139C  D083               	goto	l197
  7968                           	
  7969  00139E                     l3486:; BSR set to: 5
  7970                           
  7971  00139E  D082               	goto	l197
  7972                           	
  7973  0013A0                     l196:; BSR set to: 5
  7974                           
  7975                           	line	76
  7976                           ;usb9.c: 76: switch(SetupPkt.bRequest)
  7977  0013A0  D05C               	goto	l3520
  7978                           	line	78
  7979                           ;usb9.c: 77: {
  7980                           ;usb9.c: 78: case 5:
  7981                           	
  7982  0013A2                     l199:; BSR set to: 5
  7983                           
  7984                           	line	79
  7985                           	
  7986  0013A2                     l3488:; BSR set to: 5
  7987                           
  7988                           ;usb9.c: 79: ctrl_trf_session_owner = 1;
  7989  0013A2  0100               	movlb	0	; () banked
  7990  0013A4  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  7991  0013A6  0E01               	movlw	low(01h)
  7992  0013A8  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7993  0013AA  0100               	movlb	0	; () banked
  7994  0013AC  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  7995                           	line	80
  7996                           ;usb9.c: 80: usb_device_state = 4;
  7997  0013AE  0100               	movlb	0	; () banked
  7998  0013B0  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  7999  0013B2  0E04               	movlw	low(04h)
  8000  0013B4  6E1F               	movwf	((c:_usb_device_state)),c
  8001  0013B6  0100               	movlb	0	; () banked
  8002  0013B8  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8003                           	line	82
  8004                           ;usb9.c: 82: break;
  8005  0013BA  D074               	goto	l197
  8006                           	line	83
  8007                           ;usb9.c: 83: case 6:
  8008                           	
  8009  0013BC                     l201:; BSR set to: 0
  8010                           
  8011                           	line	84
  8012                           	
  8013  0013BC                     l3490:
  8014                           ;usb9.c: 84: USBStdGetDscHandler();
  8015  0013BC  EC53  F00A         	call	_USBStdGetDscHandler	;wreg free
  8016                           	line	85
  8017                           ;usb9.c: 85: break;
  8018  0013C0  D071               	goto	l197
  8019                           	line	86
  8020                           ;usb9.c: 86: case 9:
  8021                           	
  8022  0013C2                     l202:
  8023                           	line	87
  8024                           	
  8025  0013C2                     l3492:
  8026                           ;usb9.c: 87: USBStdSetCfgHandler();
  8027  0013C2  EC8A  F00F         	call	_USBStdSetCfgHandler	;wreg free
  8028                           	line	88
  8029                           ;usb9.c: 88: break;
  8030  0013C6  D06E               	goto	l197
  8031                           	line	89
  8032                           ;usb9.c: 89: case 8:
  8033                           	
  8034  0013C8                     l203:
  8035                           	line	90
  8036                           	
  8037  0013C8                     l3494:
  8038                           ;usb9.c: 90: ctrl_trf_session_owner = 1;
  8039  0013C8  0100               	movlb	0	; () banked
  8040  0013CA  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8041  0013CC  0E01               	movlw	low(01h)
  8042  0013CE  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8043  0013D0  0100               	movlb	0	; () banked
  8044  0013D2  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8045                           	line	91
  8046                           	
  8047  0013D4                     l3496:; BSR set to: 0
  8048                           
  8049                           ;usb9.c: 91: pSrc.bRam = (byte*)&usb_active_cfg;
  8050  0013D4  0E00               	movlw	high((c:_usb_active_cfg))
  8051  0013D6  6E0B               	movwf	((c:_pSrc+1)),c
  8052  0013D8  0E25               	movlw	low((c:_usb_active_cfg))
  8053  0013DA  6E0A               	movwf	((c:_pSrc)),c
  8054                           	line	92
  8055                           	
  8056  0013DC                     l3498:; BSR set to: 0
  8057                           
  8058                           ;usb9.c: 92: usb_stat.ctrl_trf_mem = 0;
  8059  0013DC  9220               	bcf	((c:_usb_stat)),c,1
  8060                           	line	93
  8061                           	
  8062  0013DE                     l3500:; BSR set to: 0
  8063                           
  8064                           ;usb9.c: 93: ((wCount).v[0]) = 1;
  8065  0013DE  0100               	movlb	0	; () banked
  8066  0013E0  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8067  0013E2  0E01               	movlw	low(01h)
  8068  0013E4  6E21               	movwf	((c:_wCount)),c
  8069  0013E6  0100               	movlb	0	; () banked
  8070  0013E8  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8071                           	line	94
  8072                           ;usb9.c: 94: break;
  8073  0013EA  D05C               	goto	l197
  8074                           	line	95
  8075                           ;usb9.c: 95: case 0:
  8076                           	
  8077  0013EC                     l204:; BSR set to: 0
  8078                           
  8079                           	line	96
  8080                           	
  8081  0013EC                     l3502:
  8082                           ;usb9.c: 96: USBStdGetStatusHandler();
  8083  0013EC  EC69  F00B         	call	_USBStdGetStatusHandler	;wreg free
  8084                           	line	97
  8085                           ;usb9.c: 97: break;
  8086  0013F0  D059               	goto	l197
  8087                           	line	98
  8088                           ;usb9.c: 98: case 1:
  8089                           	
  8090  0013F2                     l205:
  8091  0013F2  D000               	goto	l3504
  8092                           	line	99
  8093                           	
  8094  0013F4                     l206:
  8095                           	line	100
  8096                           	
  8097  0013F4                     l3504:
  8098                           ;usb9.c: 99: case 3:
  8099                           ;usb9.c: 100: USBStdFeatureReqHandler();
  8100  0013F4  ECDE  F00A         	call	_USBStdFeatureReqHandler	;wreg free
  8101                           	line	101
  8102                           ;usb9.c: 101: break;
  8103  0013F8  D055               	goto	l197
  8104                           	line	102
  8105                           ;usb9.c: 102: case 10:
  8106                           	
  8107  0013FA                     l207:
  8108                           	line	103
  8109                           	
  8110  0013FA                     l3506:
  8111                           ;usb9.c: 103: ctrl_trf_session_owner = 1;
  8112  0013FA  0100               	movlb	0	; () banked
  8113  0013FC  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8114  0013FE  0E01               	movlw	low(01h)
  8115  001400  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8116  001402  0100               	movlb	0	; () banked
  8117  001404  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8118                           	line	104
  8119                           	
  8120  001406                     l3508:; BSR set to: 0
  8121                           
  8122                           ;usb9.c: 104: pSrc.bRam = (byte*)&usb_alt_intf+SetupPkt.bIntfID;
  8123  001406  0105               	movlb	5	; () banked
  8124  001408  0105               	movlb	5	; () banked
  8125  00140A  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  8126  00140C  0D01               	mullw	01h
  8127  00140E  0E26               	movlw	low((c:_usb_alt_intf))
  8128  001410  24F3               	addwf	(prodl),c,w
  8129                           	
  8130  001412  6E0A               	movwf	((c:_pSrc)),c
  8131  001414  0E00               	movlw	high((c:_usb_alt_intf))
  8132  001416  20F4               	addwfc	prod+1,w
  8133  001418  6E0B               	movwf	1+((c:_pSrc)),c
  8134                           	line	105
  8135                           	
  8136  00141A                     l3510:; BSR set to: 5
  8137                           
  8138                           ;usb9.c: 105: usb_stat.ctrl_trf_mem = 0;
  8139  00141A  9220               	bcf	((c:_usb_stat)),c,1
  8140                           	line	106
  8141                           	
  8142  00141C                     l3512:; BSR set to: 5
  8143                           
  8144                           ;usb9.c: 106: ((wCount).v[0]) = 1;
  8145  00141C  0100               	movlb	0	; () banked
  8146  00141E  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8147  001420  0E01               	movlw	low(01h)
  8148  001422  6E21               	movwf	((c:_wCount)),c
  8149  001424  0100               	movlb	0	; () banked
  8150  001426  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8151                           	line	107
  8152                           ;usb9.c: 107: break;
  8153  001428  D03D               	goto	l197
  8154                           	line	108
  8155                           ;usb9.c: 108: case 11:
  8156                           	
  8157  00142A                     l208:; BSR set to: 0
  8158                           
  8159                           	line	109
  8160                           	
  8161  00142A                     l3514:
  8162                           ;usb9.c: 109: ctrl_trf_session_owner = 1;
  8163  00142A  0100               	movlb	0	; () banked
  8164  00142C  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8165  00142E  0E01               	movlw	low(01h)
  8166  001430  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8167  001432  0100               	movlb	0	; () banked
  8168  001434  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8169                           	line	110
  8170                           	
  8171  001436                     l3516:; BSR set to: 0
  8172                           
  8173                           ;usb9.c: 110: usb_alt_intf[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8174  001436  0105               	movlb	5	; () banked
  8175  001438  0105               	movlb	5	; () banked
  8176  00143A  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  8177  00143C  0D01               	mullw	01h
  8178  00143E  0E26               	movlw	low((c:_usb_alt_intf))
  8179  001440  24F3               	addwf	(prodl),c,w
  8180  001442  6ED9               	movwf	c:fsr2l
  8181  001444  0E00               	movlw	high((c:_usb_alt_intf))
  8182  001446  20F4               	addwfc	prod+1,w
  8183  001448  6EDA               	movwf	1+c:fsr2l
  8184  00144A  0105               	movlb	5	; () banked
  8185  00144C  C502 FFDF          	movff	0+(1280+02h),indf2	;volatile
  8186                           
  8187                           	line	111
  8188                           ;usb9.c: 111: break;
  8189  001450  D029               	goto	l197
  8190                           	line	112
  8191                           ;usb9.c: 112: case 7:
  8192                           	
  8193  001452                     l209:; BSR set to: 5
  8194                           
  8195  001452  D028               	goto	l197
  8196                           	line	113
  8197                           	
  8198  001454                     l210:; BSR set to: 5
  8199                           
  8200  001454  D027               	goto	l197
  8201                           	line	114
  8202                           ;usb9.c: 113: case 12:
  8203                           ;usb9.c: 114: default:
  8204                           	
  8205  001456                     l211:; BSR set to: 5
  8206                           
  8207                           	line	115
  8208                           ;usb9.c: 115: break;
  8209  001456  D026               	goto	l197
  8210                           	line	116
  8211                           	
  8212  001458                     l3518:; BSR set to: 5
  8213                           
  8214                           ;usb9.c: 116: }
  8215  001458  D025               	goto	l197
  8216                           	line	76
  8217                           	
  8218  00145A                     l198:; BSR set to: 5
  8219                           
  8220                           	
  8221  00145A                     l3520:; BSR set to: 5
  8222                           
  8223  00145A  0105               	movlb	5	; () banked
  8224  00145C  0105               	movlb	5	; () banked
  8225  00145E  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  8226                           	; Switch size 1, requested type "space"
  8227                           ; Number of cases is 11, Range of values is 0 to 12
  8228                           ; switch strategies available:
  8229                           ; Name         Instructions Cycles
  8230                           ; simple_byte           34    18 (average)
  8231                           ;	Chosen strategy is simple_byte
  8232                           
  8233  001460  0A00               	xorlw	0^0	; case 0
  8234  001462  B4D8               	skipnz
  8235  001464  D7C3               	goto	l3502
  8236  001466  0A01               	xorlw	1^0	; case 1
  8237  001468  B4D8               	skipnz
  8238  00146A  D7C4               	goto	l3504
  8239  00146C  0A02               	xorlw	3^1	; case 3
  8240  00146E  B4D8               	skipnz
  8241  001470  D7C1               	goto	l3504
  8242  001472  0A06               	xorlw	5^3	; case 5
  8243  001474  B4D8               	skipnz
  8244  001476  D795               	goto	l3488
  8245  001478  0A03               	xorlw	6^5	; case 6
  8246  00147A  B4D8               	skipnz
  8247  00147C  D79F               	goto	l3490
  8248  00147E  0A01               	xorlw	7^6	; case 7
  8249  001480  B4D8               	skipnz
  8250  001482  D010               	goto	l197
  8251  001484  0A0F               	xorlw	8^7	; case 8
  8252  001486  B4D8               	skipnz
  8253  001488  D79F               	goto	l3494
  8254  00148A  0A01               	xorlw	9^8	; case 9
  8255  00148C  B4D8               	skipnz
  8256  00148E  D799               	goto	l3492
  8257  001490  0A03               	xorlw	10^9	; case 10
  8258  001492  B4D8               	skipnz
  8259  001494  D7B2               	goto	l3506
  8260  001496  0A01               	xorlw	11^10	; case 11
  8261  001498  B4D8               	skipnz
  8262  00149A  D7C7               	goto	l3514
  8263  00149C  0A07               	xorlw	12^11	; case 12
  8264  00149E  B4D8               	skipnz
  8265  0014A0  D001               	goto	l197
  8266  0014A2  D000               	goto	l197
  8267                           
  8268                           	line	116
  8269                           	
  8270  0014A4                     l200:; BSR set to: 5
  8271                           
  8272                           	line	118
  8273                           	
  8274  0014A4                     l197:
  8275  0014A4  0012               	return
  8276                           	opt stack 0
  8277                           GLOBAL	__end_of_USBCheckStdRequest
  8278  0014A6                     	__end_of_USBCheckStdRequest:
  8279                           	signat	_USBCheckStdRequest,88
  8280                           	global	_USBStdGetDscHandler
  8281                           
  8282 ;; *************** function _USBStdGetDscHandler *****************
  8283 ;; Defined at:
  8284 ;;		line 139 in file "../usb9.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;		None               void
  8291 ;; Registers used:
  8292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8300 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8301 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8302 ;;Total ram usage:        2 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    2
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_USBCheckStdRequest
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           psect	text16,class=CODE,space=0,reloc=2
  8312                           global __ptext16
  8313  0014A6                     __ptext16:
  8314                           psect	text16
  8315                           	file	"../usb9.c"
  8316                           	line	139
  8317                           	global	__size_of_USBStdGetDscHandler
  8318  0000                     	__size_of_USBStdGetDscHandler	equ	__end_of_USBStdGetDscHandler-_USBStdGetDscHandler
  8319                           	
  8320  0014A6                     _USBStdGetDscHandler:
  8321                           	opt	stack 23
  8322                           	line	140
  8323                           	
  8324  0014A6                     l3522:
  8325                           ;usb9.c: 140: if(SetupPkt.bmRequestType == 0x80)
  8326  0014A6  0105               	movlb	5	; () banked
  8327  0014A8  0105               	movlb	5	; () banked
  8328  0014AA  5100               	movf	((1280))&0ffh,w	;volatile
  8329  0014AC  0A80               	xorlw	128
  8330                           
  8331  0014AE  A4D8               	btfss	status,2
  8332  0014B0  D001               	goto	u2981
  8333  0014B2  D001               	goto	u2980
  8334  0014B4                     u2981:
  8335  0014B4  D082               	goto	l220
  8336  0014B6                     u2980:
  8337  0014B6  D072               	goto	l3546
  8338                           	line	142
  8339                           	
  8340  0014B8                     l3524:; BSR set to: 5
  8341                           
  8342                           ;usb9.c: 141: {
  8343                           ;usb9.c: 142: switch(SetupPkt.bDscType)
  8344  0014B8  D071               	goto	l3546
  8345                           	line	144
  8346                           ;usb9.c: 143: {
  8347                           ;usb9.c: 144: case 0x01:
  8348                           	
  8349  0014BA                     l216:; BSR set to: 5
  8350                           
  8351                           	line	145
  8352                           	
  8353  0014BA                     l3526:; BSR set to: 5
  8354                           
  8355                           ;usb9.c: 145: ctrl_trf_session_owner = 1;
  8356  0014BA  0100               	movlb	0	; () banked
  8357  0014BC  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8358  0014BE  0E01               	movlw	low(01h)
  8359  0014C0  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8360  0014C2  0100               	movlb	0	; () banked
  8361  0014C4  51E0               	movf	(??_USBStdGetDscHandler+0+0)&0ffh,w
  8362                           	line	146
  8363                           	
  8364  0014C6                     l3528:; BSR set to: 0
  8365                           
  8366                           ;usb9.c: 146: pSrc.bRom = (const byte*)&device_dsc;
  8367  0014C6  0E08               	movlw	high(_device_dsc)
  8368  0014C8  6E0B               	movwf	((c:_pSrc+1)),c
  8369  0014CA  0EAC               	movlw	low(_device_dsc)
  8370  0014CC  6E0A               	movwf	((c:_pSrc)),c
  8371                           	line	147
  8372                           	
  8373  0014CE                     l3530:; BSR set to: 0
  8374                           
  8375                           ;usb9.c: 147: wCount._word = sizeof(device_dsc);
  8376  0014CE  0E00               	movlw	high(012h)
  8377  0014D0  6E22               	movwf	((c:_wCount+1)),c
  8378  0014D2  0E12               	movlw	low(012h)
  8379  0014D4  6E21               	movwf	((c:_wCount)),c
  8380                           	line	148
  8381                           ;usb9.c: 148: break;
  8382  0014D6  D06F               	goto	l217
  8383                           	line	149
  8384                           ;usb9.c: 149: case 0x02:
  8385                           	
  8386  0014D8                     l218:; BSR set to: 0
  8387                           
  8388                           	line	150
  8389                           	
  8390  0014D8                     l3532:
  8391                           ;usb9.c: 150: ctrl_trf_session_owner = 1;
  8392  0014D8  0100               	movlb	0	; () banked
  8393  0014DA  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8394  0014DC  0E01               	movlw	low(01h)
  8395  0014DE  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8396  0014E0  0100               	movlb	0	; () banked
  8397  0014E2  51E0               	movf	(??_USBStdGetDscHandler+0+0)&0ffh,w
  8398                           	line	151
  8399                           	
  8400  0014E4                     l3534:; BSR set to: 0
  8401                           
  8402                           ;usb9.c: 151: pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8403  0014E4  0105               	movlb	5	; () banked
  8404  0014E6  0105               	movlb	5	; () banked
  8405  0014E8  5102               	movf	(0+(1280+02h))&0ffh,w	;volatile
  8406  0014EA  0D02               	mullw	02h
  8407  0014EC  0E06               	movlw	low((_USB_CD_Ptr))
  8408  0014EE  24F3               	addwf	(prodl),c,w
  8409  0014F0  6EF6               	movwf	tblptrl
  8410  0014F2  0E08               	movlw	high((_USB_CD_Ptr))
  8411  0014F4  20F4               	addwfc	(prodh),c,w
  8412  0014F6  6EF7               	movwf	tblptrh
  8413  0014F8  0009               	tblrd*+
  8414                           	
  8415  0014FA  CFF5 F00A          	movff	tablat,(c:_pSrc)
  8416  0014FE  000A               	tblrd*-
  8417                           	
  8418  001500  CFF5 F00B          	movff	tablat,(c:_pSrc+1)
  8419                           
  8420                           	line	152
  8421                           	
  8422  001504                     l3536:; BSR set to: 5
  8423                           
  8424                           ;usb9.c: 152: wCount._word = *(pSrc.wRom+1);
  8425  001504  0E02               	movlw	02h
  8426  001506  240A               	addwf	((c:_pSrc)),c,w
  8427  001508  0100               	movlb	0	; () banked
  8428  00150A  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8429  00150C  0E00               	movlw	0
  8430  00150E  200B               	addwfc	((c:_pSrc+1)),c,w
  8431  001510  0100               	movlb	0	; () banked
  8432  001512  6FE1               	movwf	(??_USBStdGetDscHandler+0+0+1)&0ffh
  8433  001514  C0E0  FFF6         	movff	??_USBStdGetDscHandler+0+0,tblptrl
  8434  001518  C0E1  FFF7         	movff	??_USBStdGetDscHandler+0+1,tblptrh
  8435  00151C  6AF8               	clrf	tblptru
  8436  00151E  0E07               	movlw	high __ramtop-1
  8437  001520  64F7               	cpfsgt	tblptrh
  8438  001522  D007               	bra	u2997
  8439  001524  0009               	tblrd	*+
  8440                           	
  8441                           
  8442  001526  CFF5 F021          	movff	tablat,(c:_wCount)
  8443  00152A  0009               	tblrd	*+
  8444                           	
  8445  00152C  CFF5 F022          	movff	tablat,1+(c:_wCount)
  8446  001530  D008               	bra	u2990
  8447  001532                     u2997:
  8448  001532  CFF6 FFE9          	movff	tblptrl,fsr0l
  8449  001536  CFF7 FFEA          	movff	tblptrh,fsr0h
  8450  00153A  CFEE F021          	movff	postinc0,(c:_wCount)
  8451  00153E  CFEE F022          	movff	postinc0,1+(c:_wCount)
  8452  001542                     u2990:
  8453                           	
  8454                           	line	153
  8455                           ;usb9.c: 153: break;
  8456  001542  D039               	goto	l217
  8457                           	line	154
  8458                           ;usb9.c: 154: case 0x03:
  8459                           	
  8460  001544                     l219:
  8461                           	line	155
  8462                           	
  8463  001544                     l3538:
  8464                           ;usb9.c: 155: ctrl_trf_session_owner = 1;
  8465  001544  0100               	movlb	0	; () banked
  8466  001546  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8467  001548  0E01               	movlw	low(01h)
  8468  00154A  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8469  00154C  0100               	movlb	0	; () banked
  8470  00154E  51E0               	movf	(??_USBStdGetDscHandler+0+0)&0ffh,w
  8471                           	line	156
  8472                           	
  8473  001550                     l3540:; BSR set to: 0
  8474                           
  8475                           ;usb9.c: 156: pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  8476  001550  0105               	movlb	5	; () banked
  8477  001552  0105               	movlb	5	; () banked
  8478  001554  5102               	movf	(0+(1280+02h))&0ffh,w	;volatile
  8479  001556  0D02               	mullw	02h
  8480  001558  0E00               	movlw	low((_USB_SD_Ptr))
  8481  00155A  24F3               	addwf	(prodl),c,w
  8482  00155C  6EF6               	movwf	tblptrl
  8483  00155E  0E08               	movlw	high((_USB_SD_Ptr))
  8484  001560  20F4               	addwfc	(prodh),c,w
  8485  001562  6EF7               	movwf	tblptrh
  8486  001564  0009               	tblrd*+
  8487                           	
  8488  001566  CFF5 F00A          	movff	tablat,(c:_pSrc)
  8489  00156A  000A               	tblrd*-
  8490                           	
  8491  00156C  CFF5 F00B          	movff	tablat,(c:_pSrc+1)
  8492                           
  8493                           	line	157
  8494                           	
  8495  001570                     l3542:; BSR set to: 5
  8496                           
  8497                           ;usb9.c: 157: wCount._word = *pSrc.bRom;
  8498  001570  500A               	movf	((c:_pSrc)),c,w
  8499  001572  6EF6               	movwf	tblptrl
  8500  001574  6EE9               	movwf	fsr0l
  8501  001576  0E07               	movlw	high __ramtop-1
  8502  001578  6EEA               	movwf	fsr0h
  8503  00157A  500B               	movf	((c:_pSrc+1)),c,w
  8504  00157C  64EA               	cpfsgt	fsr0h
  8505  00157E  D003               	bra	u3007
  8506  001580  6EEA               	movwf	fsr0h
  8507  001582  50EF               	movf	indf0,w
  8508  001584  D003               	bra	u3000
  8509  001586                     u3007:
  8510  001586  6EF7               	movwf	tblptrh
  8511  001588  0008               	tblrd	*
  8512                           	
  8513  00158A  50F5               	movf	tablat,w
  8514  00158C                     u3000:
  8515  00158C  0100               	movlb	0	; () banked
  8516  00158E  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8517  001590  0100               	movlb	0	; () banked
  8518  001592  51E0               	movf	((??_USBStdGetDscHandler+0+0))&0ffh,w
  8519  001594  6E21               	movwf	((c:_wCount)),c
  8520  001596  6A22               	clrf	((c:_wCount+1)),c
  8521                           	line	158
  8522                           ;usb9.c: 158: break;
  8523  001598  D00E               	goto	l217
  8524                           	line	159
  8525                           	
  8526  00159A                     l3544:; BSR set to: 0
  8527                           
  8528                           ;usb9.c: 159: }
  8529  00159A  D00D               	goto	l217
  8530                           	line	142
  8531                           	
  8532  00159C                     l215:; BSR set to: 0
  8533                           
  8534                           	
  8535  00159C                     l3546:
  8536  00159C  0105               	movlb	5	; () banked
  8537  00159E  0105               	movlb	5	; () banked
  8538  0015A0  5103               	movf	(0+(1280+03h))&0ffh,w	;volatile
  8539                           	; Switch size 1, requested type "space"
  8540                           ; Number of cases is 3, Range of values is 1 to 3
  8541                           ; switch strategies available:
  8542                           ; Name         Instructions Cycles
  8543                           ; simple_byte           10     6 (average)
  8544                           ;	Chosen strategy is simple_byte
  8545                           
  8546  0015A2  0A01               	xorlw	1^0	; case 1
  8547  0015A4  B4D8               	skipnz
  8548  0015A6  D789               	goto	l3526
  8549  0015A8  0A03               	xorlw	2^1	; case 2
  8550  0015AA  B4D8               	skipnz
  8551  0015AC  D795               	goto	l3532
  8552  0015AE  0A01               	xorlw	3^2	; case 3
  8553  0015B0  B4D8               	skipnz
  8554  0015B2  D7C8               	goto	l3538
  8555  0015B4  D000               	goto	l217
  8556                           
  8557                           	line	159
  8558                           	
  8559  0015B6                     l217:
  8560                           	line	161
  8561                           ;usb9.c: 161: usb_stat.ctrl_trf_mem = 1;
  8562  0015B6  8220               	bsf	((c:_usb_stat)),c,1
  8563  0015B8  D000               	goto	l220
  8564                           	line	162
  8565                           	
  8566  0015BA                     l214:
  8567                           	line	163
  8568                           	
  8569  0015BA                     l220:
  8570  0015BA  0012               	return
  8571                           	opt stack 0
  8572                           GLOBAL	__end_of_USBStdGetDscHandler
  8573  0015BC                     	__end_of_USBStdGetDscHandler:
  8574                           	signat	_USBStdGetDscHandler,88
  8575                           	global	_USBStdSetCfgHandler
  8576                           
  8577 ;; *************** function _USBStdSetCfgHandler *****************
  8578 ;; Defined at:
  8579 ;;		line 183 in file "../usb9.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;		None
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;		None
  8584 ;; Return value:  Size  Location     Type
  8585 ;;		None               void
  8586 ;; Registers used:
  8587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8593 ;;      Params:         0       0       0       0       0       0       0       0       0
  8594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8595 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8596 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8597 ;;Total ram usage:        1 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    3
  8600 ;; This function calls:
  8601 ;;		_ClearArray
  8602 ;;		_HIDInitEP
  8603 ;; This function is called by:
  8604 ;;		_USBCheckStdRequest
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           psect	text17,class=CODE,space=0,reloc=2
  8608                           global __ptext17
  8609  001F14                     __ptext17:
  8610                           psect	text17
  8611                           	file	"../usb9.c"
  8612                           	line	183
  8613                           	global	__size_of_USBStdSetCfgHandler
  8614  0000                     	__size_of_USBStdSetCfgHandler	equ	__end_of_USBStdSetCfgHandler-_USBStdSetCfgHandler
  8615                           	
  8616  001F14                     _USBStdSetCfgHandler:
  8617                           	opt	stack 22
  8618                           	line	184
  8619                           	
  8620  001F14                     l3548:
  8621                           ;usb9.c: 184: ctrl_trf_session_owner = 1;
  8622  001F14  0100               	movlb	0	; () banked
  8623  001F16  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8624  001F18  0E01               	movlw	low(01h)
  8625  001F1A  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8626  001F1C  0100               	movlb	0	; () banked
  8627  001F1E  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8628                           	line	185
  8629                           	
  8630  001F20                     l3550:; BSR set to: 0
  8631                           
  8632                           ;usb9.c: 185: ClearArray((byte*)&UEP1,15);;
  8633  001F20  0E0F               	movlw	high((c:3947))	;volatile
  8634  001F22  0100               	movlb	0	; () banked
  8635  001F24  0100               	movlb	0	; () banked
  8636  001F26  6FE1               	movwf	((?_ClearArray+1))&0ffh
  8637  001F28  0E6B               	movlw	low((c:3947))	;volatile
  8638  001F2A  0100               	movlb	0	; () banked
  8639  001F2C  6FE0               	movwf	((?_ClearArray))&0ffh
  8640  001F2E  0100               	movlb	0	; () banked
  8641  001F30  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8642  001F32  0E0F               	movlw	low(0Fh)
  8643  001F34  0100               	movlb	0	; () banked
  8644  001F36  0100               	movlb	0	; () banked
  8645  001F38  6FE2               	movwf	(0+(?_ClearArray+02h))&0ffh
  8646  001F3A  0100               	movlb	0	; () banked
  8647  001F3C  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8648  001F3E  0100               	movlb	0	; () banked
  8649  001F40  ECDC  F011         	call	_ClearArray	;wreg free
  8650                           	line	186
  8651                           	
  8652  001F44                     l3552:
  8653                           ;usb9.c: 186: ClearArray((byte*)&usb_alt_intf,1);
  8654  001F44  0E00               	movlw	high((c:_usb_alt_intf))
  8655  001F46  0100               	movlb	0	; () banked
  8656  001F48  0100               	movlb	0	; () banked
  8657  001F4A  6FE1               	movwf	((?_ClearArray+1))&0ffh
  8658  001F4C  0E26               	movlw	low((c:_usb_alt_intf))
  8659  001F4E  0100               	movlb	0	; () banked
  8660  001F50  6FE0               	movwf	((?_ClearArray))&0ffh
  8661  001F52  0100               	movlb	0	; () banked
  8662  001F54  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8663  001F56  0E01               	movlw	low(01h)
  8664  001F58  0100               	movlb	0	; () banked
  8665  001F5A  0100               	movlb	0	; () banked
  8666  001F5C  6FE2               	movwf	(0+(?_ClearArray+02h))&0ffh
  8667  001F5E  0100               	movlb	0	; () banked
  8668  001F60  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8669  001F62  0100               	movlb	0	; () banked
  8670  001F64  ECDC  F011         	call	_ClearArray	;wreg free
  8671                           	line	187
  8672                           	
  8673  001F68                     l3554:
  8674                           ;usb9.c: 187: usb_active_cfg = SetupPkt.bCfgValue;
  8675  001F68  C502 F025          	movff	0+(1280+02h),(c:_usb_active_cfg)	;volatile
  8676                           	line	188
  8677                           	
  8678  001F6C                     l3556:
  8679                           ;usb9.c: 188: if(SetupPkt.bCfgValue == 0)
  8680  001F6C  0105               	movlb	5	; () banked
  8681  001F6E  0105               	movlb	5	; () banked
  8682  001F70  6702               	tstfsz	(0+(1280+02h))&0ffh	;volatile
  8683  001F72  D001               	goto	u3011
  8684  001F74  D001               	goto	u3010
  8685  001F76                     u3011:
  8686  001F76  D007               	goto	l3560
  8687  001F78                     u3010:
  8688                           	line	189
  8689                           	
  8690  001F78                     l3558:; BSR set to: 5
  8691                           
  8692                           ;usb9.c: 189: usb_device_state = 5;
  8693  001F78  0100               	movlb	0	; () banked
  8694  001F7A  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8695  001F7C  0E05               	movlw	low(05h)
  8696  001F7E  6E1F               	movwf	((c:_usb_device_state)),c
  8697  001F80  0100               	movlb	0	; () banked
  8698  001F82  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8699  001F84  D009               	goto	l225
  8700                           	line	190
  8701                           	
  8702  001F86                     l223:; BSR set to: 0
  8703                           
  8704                           	line	192
  8705                           	
  8706  001F86                     l3560:
  8707                           ;usb9.c: 190: else
  8708                           ;usb9.c: 191: {
  8709                           ;usb9.c: 192: usb_device_state = 6;
  8710  001F86  0100               	movlb	0	; () banked
  8711  001F88  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8712  001F8A  0E06               	movlw	low(06h)
  8713  001F8C  6E1F               	movwf	((c:_usb_device_state)),c
  8714  001F8E  0100               	movlb	0	; () banked
  8715  001F90  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8716                           	line	197
  8717                           	
  8718  001F92                     l3562:; BSR set to: 0
  8719                           
  8720                           ;usb9.c: 197: HIDInitEP();
  8721  001F92  EC05  F011         	call	_HIDInitEP	;wreg free
  8722  001F96  D000               	goto	l225
  8723                           	line	202
  8724                           	
  8725  001F98                     l224:
  8726                           	line	203
  8727                           	
  8728  001F98                     l225:
  8729  001F98  0012               	return
  8730                           	opt stack 0
  8731                           GLOBAL	__end_of_USBStdSetCfgHandler
  8732  001F9A                     	__end_of_USBStdSetCfgHandler:
  8733                           	signat	_USBStdSetCfgHandler,88
  8734                           	global	_HIDInitEP
  8735                           
  8736 ;; *************** function _HIDInitEP *****************
  8737 ;; Defined at:
  8738 ;;		line 172 in file "../hid.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;		None
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;		None               void
  8745 ;; Registers used:
  8746 ;;		wreg, status,2
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8754 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8755 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8756 ;;Total ram usage:        1 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    2
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		_USBStdSetCfgHandler
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           psect	text18,class=CODE,space=0,reloc=2
  8766                           global __ptext18
  8767  00220A                     __ptext18:
  8768                           psect	text18
  8769                           	file	"../hid.c"
  8770                           	line	172
  8771                           	global	__size_of_HIDInitEP
  8772  0000                     	__size_of_HIDInitEP	equ	__end_of_HIDInitEP-_HIDInitEP
  8773                           	
  8774  00220A                     _HIDInitEP:
  8775                           	opt	stack 22
  8776                           	line	173
  8777                           	
  8778  00220A                     l3138:
  8779                           ;hid.c: 173: hid_rpt_rx_len =0;
  8780  00220A  0100               	movlb	0	; () banked
  8781  00220C  6FE0               	movwf	(??_HIDInitEP+0+0)&0ffh
  8782  00220E  0E00               	movlw	low(0)
  8783  002210  6E1D               	movwf	((c:_hid_rpt_rx_len)),c
  8784  002212  0100               	movlb	0	; () banked
  8785  002214  51E0               	movf	(??_HIDInitEP+0+0)&0ffh,w
  8786                           	line	175
  8787                           	
  8788  002216                     l3140:; BSR set to: 0
  8789                           
  8790                           ;hid.c: 175: UEP1 = 0x0E|0x10;
  8791  002216  0E1E               	movlw	low(01Eh)
  8792  002218  6E6B               	movwf	((c:3947)),c	;volatile
  8793                           	line	177
  8794                           	
  8795  00221A                     l3142:; BSR set to: 0
  8796                           
  8797                           ;hid.c: 177: ep1Bo.Cnt = sizeof(hid_report_out);
  8798  00221A  0E40               	movlw	low(040h)
  8799  00221C  0104               	movlb	4	; () banked
  8800  00221E  0104               	movlb	4	; () banked
  8801  002220  6F09               	movwf	(0+(1032+01h))&0ffh	;volatile
  8802                           	line	178
  8803                           	
  8804  002222                     l3144:; BSR set to: 4
  8805                           
  8806                           ;hid.c: 178: ep1Bo.ADR = (byte*)&hid_report_out;
  8807  002222  0107               	movlb	7	; () banked
  8808  002224  0E07               	movlw	high(1792)	;volatile
  8809  002226  0104               	movlb	4	; () banked
  8810  002228  0104               	movlb	4	; () banked
  8811  00222A  6F0B               	movwf	(1+(1032+02h))&0ffh	;volatile
  8812  00222C  0107               	movlb	7	; () banked
  8813  00222E  0E00               	movlw	low(1792)	;volatile
  8814  002230  0104               	movlb	4	; () banked
  8815  002232  6F0A               	movwf	(0+(1032+02h))&0ffh	;volatile
  8816                           	line	179
  8817                           	
  8818  002234                     l3146:; BSR set to: 4
  8819                           
  8820                           ;hid.c: 179: ep1Bo.Stat._byte = 0x80|0x00|0x08;
  8821  002234  0E88               	movlw	low(088h)
  8822  002236  0104               	movlb	4	; () banked
  8823  002238  0104               	movlb	4	; () banked
  8824  00223A  6F08               	movwf	((1032))&0ffh	;volatile
  8825                           	line	192
  8826                           	
  8827  00223C                     l3148:; BSR set to: 4
  8828                           
  8829                           ;hid.c: 192: ep1Bi.ADR = (byte*)&hid_report_in;
  8830  00223C  0107               	movlb	7	; () banked
  8831  00223E  0E07               	movlw	high(1856)	;volatile
  8832  002240  0104               	movlb	4	; () banked
  8833  002242  0104               	movlb	4	; () banked
  8834  002244  6F0F               	movwf	(1+(1036+02h))&0ffh	;volatile
  8835  002246  0107               	movlb	7	; () banked
  8836  002248  0E40               	movlw	low(1856)	;volatile
  8837  00224A  0104               	movlb	4	; () banked
  8838  00224C  6F0E               	movwf	(0+(1036+02h))&0ffh	;volatile
  8839                           	line	193
  8840                           	
  8841  00224E                     l3150:; BSR set to: 4
  8842                           
  8843                           ;hid.c: 193: ep1Bi.Stat._byte = 0x00|0x40;
  8844  00224E  0E40               	movlw	low(040h)
  8845  002250  0104               	movlb	4	; () banked
  8846  002252  0104               	movlb	4	; () banked
  8847  002254  6F0C               	movwf	((1036))&0ffh	;volatile
  8848                           	line	195
  8849                           	
  8850  002256                     l68:; BSR set to: 4
  8851                           
  8852  002256  0012               	return
  8853                           	opt stack 0
  8854                           GLOBAL	__end_of_HIDInitEP
  8855  002258                     	__end_of_HIDInitEP:
  8856                           	signat	_HIDInitEP,88
  8857                           	global	_USBStdGetStatusHandler
  8858                           
  8859 ;; *************** function _USBStdGetStatusHandler *****************
  8860 ;; Defined at:
  8861 ;;		line 221 in file "../usb9.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;		None               void
  8868 ;; Registers used:
  8869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8877 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8878 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8879 ;;Total ram usage:        4 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    2
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		_USBCheckStdRequest
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           psect	text19,class=CODE,space=0,reloc=2
  8889                           global __ptext19
  8890  0016D2                     __ptext19:
  8891                           psect	text19
  8892                           	file	"../usb9.c"
  8893                           	line	221
  8894                           	global	__size_of_USBStdGetStatusHandler
  8895  0000                     	__size_of_USBStdGetStatusHandler	equ	__end_of_USBStdGetStatusHandler-_USBStdGetStatusHa
                                 ndler
  8896                           	
  8897  0016D2                     _USBStdGetStatusHandler:; BSR set to: 4
  8898                           
  8899                           	opt	stack 23
  8900                           	line	222
  8901                           	
  8902  0016D2                     l3564:
  8903                           ;usb9.c: 222: CtrlTrfData._byte0 = 0;
  8904  0016D2  0E00               	movlw	low(0)
  8905  0016D4  0106               	movlb	6	; () banked
  8906  0016D6  0106               	movlb	6	; () banked
  8907  0016D8  6F00               	movwf	((1536))&0ffh	;volatile
  8908                           	line	223
  8909                           ;usb9.c: 223: CtrlTrfData._byte1 = 0;
  8910  0016DA  0E00               	movlw	low(0)
  8911  0016DC  0106               	movlb	6	; () banked
  8912  0016DE  0106               	movlb	6	; () banked
  8913  0016E0  6F01               	movwf	(0+(1536+01h))&0ffh	;volatile
  8914                           	line	225
  8915                           ;usb9.c: 225: switch(SetupPkt.Recipient)
  8916  0016E2  D058               	goto	l3586
  8917                           	line	227
  8918                           ;usb9.c: 226: {
  8919                           ;usb9.c: 227: case 0:
  8920                           	
  8921  0016E4                     l229:; BSR set to: 6
  8922                           
  8923                           	line	228
  8924                           	
  8925  0016E4                     l3566:
  8926                           ;usb9.c: 240: if(1 == 1)
  8927  0016E4  0100               	movlb	0	; () banked
  8928  0016E6  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  8929  0016E8  0E01               	movlw	low(01h)
  8930  0016EA  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8931  0016EC  0100               	movlb	0	; () banked
  8932  0016EE  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  8933                           	line	241
  8934                           	
  8935  0016F0                     l3568:; BSR set to: 0
  8936                           
  8937                           ;usb9.c: 241: CtrlTrfData._byte0|=0b00000001;
  8938  0016F0  0106               	movlb	6	; () banked
  8939  0016F2  0106               	movlb	6	; () banked
  8940  0016F4  8100               	bsf	(0+(0/8)+(1536))&0ffh,(0)&7	;volatile
  8941  0016F6  D000               	goto	l3570
  8942                           	
  8943  0016F8                     l230:; BSR set to: 6
  8944                           
  8945                           	line	244
  8946                           	
  8947  0016F8                     l3570:; BSR set to: 6
  8948                           
  8949                           ;usb9.c: 244: if(usb_stat.RemoteWakeup == 1)
  8950                           	
  8951  0016F8  A020               	btfss	((c:_usb_stat)),c,0
  8952  0016FA  D001               	goto	u3021
  8953  0016FC  D001               	goto	u3020
  8954  0016FE                     u3021:
  8955  0016FE  D058               	goto	l3588
  8956  001700                     u3020:
  8957                           	line	245
  8958                           	
  8959  001700                     l3572:; BSR set to: 6
  8960                           
  8961                           ;usb9.c: 245: CtrlTrfData._byte0|=0b00000010;
  8962  001700  0106               	movlb	6	; () banked
  8963  001702  0106               	movlb	6	; () banked
  8964  001704  8300               	bsf	(0+(1/8)+(1536))&0ffh,(1)&7	;volatile
  8965  001706  D054               	goto	l3588
  8966                           	
  8967  001708                     l231:; BSR set to: 6
  8968                           
  8969                           	line	246
  8970                           ;usb9.c: 246: break;
  8971  001708  D053               	goto	l3588
  8972                           	line	247
  8973                           ;usb9.c: 247: case 1:
  8974                           	
  8975  00170A                     l233:; BSR set to: 6
  8976                           
  8977                           	line	248
  8978                           	
  8979  00170A                     l3574:
  8980                           ;usb9.c: 248: ctrl_trf_session_owner = 1;
  8981  00170A  0100               	movlb	0	; () banked
  8982  00170C  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  8983  00170E  0E01               	movlw	low(01h)
  8984  001710  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8985  001712  0100               	movlb	0	; () banked
  8986  001714  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  8987                           	line	249
  8988                           ;usb9.c: 249: break;
  8989  001716  D04C               	goto	l3588
  8990                           	line	250
  8991                           ;usb9.c: 250: case 2:
  8992                           	
  8993  001718                     l234:; BSR set to: 0
  8994                           
  8995                           	line	251
  8996                           	
  8997  001718                     l3576:
  8998                           ;usb9.c: 251: ctrl_trf_session_owner = 1;
  8999  001718  0100               	movlb	0	; () banked
  9000  00171A  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  9001  00171C  0E01               	movlw	low(01h)
  9002  00171E  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  9003  001720  0100               	movlb	0	; () banked
  9004  001722  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  9005                           	line	255
  9006                           	
  9007  001724                     l3578:; BSR set to: 0
  9008                           
  9009                           ;usb9.c: 255: pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);
  9010  001724  0105               	movlb	5	; () banked
  9011  001726  0105               	movlb	5	; () banked
  9012  001728  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  9013  00172A  0B0F               	andlw	(1<<4)-1
  9014  00172C  0100               	movlb	0	; () banked
  9015  00172E  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  9016  001730  0100               	movlb	0	; () banked
  9017  001732  51E0               	movf	((??_USBStdGetStatusHandler+0+0))&0ffh,w
  9018  001734  0D08               	mullw	08h
  9019  001736  0104               	movlb	4	; () banked
  9020  001738  0E00               	movlw	low(1024)	;volatile
  9021  00173A  24F3               	addwf	(prodl),c,w
  9022  00173C  0100               	movlb	0	; () banked
  9023  00173E  6FE1               	movwf	(??_USBStdGetStatusHandler+1+0)&0ffh
  9024  001740  0104               	movlb	4	; () banked
  9025  001742  0E04               	movlw	high(1024)	;volatile
  9026  001744  20F4               	addwfc	prod+1,w
  9027  001746  0100               	movlb	0	; () banked
  9028  001748  6FE2               	movwf	1+(??_USBStdGetStatusHandler+1+0)&0ffh
  9029  00174A  0105               	movlb	5	; () banked
  9030  00174C  0105               	movlb	5	; () banked
  9031  00174E  3504               	rlcf	(0+(1280+04h))&0ffh,w	;volatile
  9032  001750  36E8               	rlcf	wreg,f
  9033  001752  0B01               	andlw	1
  9034  001754  0100               	movlb	0	; () banked
  9035  001756  6FE3               	movwf	(??_USBStdGetStatusHandler+3+0)&0ffh
  9036  001758  0100               	movlb	0	; () banked
  9037  00175A  51E3               	movf	((??_USBStdGetStatusHandler+3+0))&0ffh,w
  9038  00175C  0D04               	mullw	04h
  9039  00175E  50F3               	movf	(prodl),c,w
  9040  001760  0100               	movlb	0	; () banked
  9041  001762  25E1               	addwf	(??_USBStdGetStatusHandler+1+0)&0ffh,w
  9042                           	
  9043  001764  6E07               	movwf	((c:_pDst)),c
  9044  001766  50F4               	movf	(prodh),c,w
  9045  001768  0100               	movlb	0	; () banked
  9046  00176A  21E2               	addwfc	(??_USBStdGetStatusHandler+1+1)&0ffh,w
  9047  00176C  6E08               	movwf	1+((c:_pDst)),c
  9048                           	line	256
  9049                           	
  9050  00176E                     l3580:; BSR set to: 0
  9051                           
  9052                           ;usb9.c: 256: if(*pDst.bRam & 0x04)
  9053  00176E  C007  FFD9         	movff	(c:_pDst),fsr2l
  9054  001772  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  9055  001776  50DF               	movf	indf2,w
  9056  001778  0100               	movlb	0	; () banked
  9057  00177A  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  9058  00177C  0100               	movlb	0	; () banked
  9059                           	
  9060  00177E  A5E0               	btfss	((??_USBStdGetStatusHandler+0+0))&0ffh,(2)&7
  9061  001780  D001               	goto	u3031
  9062  001782  D001               	goto	u3030
  9063  001784                     u3031:
  9064  001784  D015               	goto	l3588
  9065  001786                     u3030:
  9066                           	line	257
  9067                           	
  9068  001786                     l3582:; BSR set to: 0
  9069                           
  9070                           ;usb9.c: 257: CtrlTrfData._byte0=0x01;
  9071  001786  0E01               	movlw	low(01h)
  9072  001788  0106               	movlb	6	; () banked
  9073  00178A  0106               	movlb	6	; () banked
  9074  00178C  6F00               	movwf	((1536))&0ffh	;volatile
  9075  00178E  D010               	goto	l3588
  9076                           	
  9077  001790                     l235:; BSR set to: 6
  9078                           
  9079                           	line	258
  9080                           ;usb9.c: 258: break;
  9081  001790  D00F               	goto	l3588
  9082                           	line	259
  9083                           	
  9084  001792                     l3584:; BSR set to: 6
  9085                           
  9086                           ;usb9.c: 259: }
  9087  001792  D00E               	goto	l3588
  9088                           	line	225
  9089                           	
  9090  001794                     l228:; BSR set to: 6
  9091                           
  9092                           	
  9093  001794                     l3586:; BSR set to: 6
  9094                           
  9095  001794  0105               	movlb	5	; () banked
  9096  001796  0105               	movlb	5	; () banked
  9097  001798  5100               	movf	((1280))&0ffh,w	;volatile
  9098  00179A  0B1F               	andlw	(1<<5)-1
  9099                           	; Switch size 1, requested type "space"
  9100                           ; Number of cases is 3, Range of values is 0 to 2
  9101                           ; switch strategies available:
  9102                           ; Name         Instructions Cycles
  9103                           ; simple_byte           10     6 (average)
  9104                           ;	Chosen strategy is simple_byte
  9105                           
  9106  00179C  0A00               	xorlw	0^0	; case 0
  9107  00179E  B4D8               	skipnz
  9108  0017A0  D7A1               	goto	l3566
  9109  0017A2  0A01               	xorlw	1^0	; case 1
  9110  0017A4  B4D8               	skipnz
  9111  0017A6  D7B1               	goto	l3574
  9112  0017A8  0A03               	xorlw	2^1	; case 2
  9113  0017AA  B4D8               	skipnz
  9114  0017AC  D7B5               	goto	l3576
  9115  0017AE  D000               	goto	l3588
  9116                           
  9117                           	line	259
  9118                           	
  9119  0017B0                     l232:; BSR set to: 5
  9120                           
  9121                           	line	261
  9122                           	
  9123  0017B0                     l3588:
  9124                           ;usb9.c: 261: if(ctrl_trf_session_owner == 1)
  9125  0017B0  041B               	decf	((c:_ctrl_trf_session_owner)),c,w
  9126                           
  9127  0017B2  A4D8               	btfss	status,2
  9128  0017B4  D001               	goto	u3041
  9129  0017B6  D001               	goto	u3040
  9130  0017B8                     u3041:
  9131  0017B8  D00E               	goto	l237
  9132  0017BA                     u3040:
  9133                           	line	263
  9134                           	
  9135  0017BA                     l3590:
  9136                           ;usb9.c: 262: {
  9137                           ;usb9.c: 263: pSrc.bRam = (byte*)&CtrlTrfData;
  9138  0017BA  0106               	movlb	6	; () banked
  9139  0017BC  0E06               	movlw	high(1536)	;volatile
  9140  0017BE  6E0B               	movwf	((c:_pSrc+1)),c
  9141  0017C0  0106               	movlb	6	; () banked
  9142  0017C2  0E00               	movlw	low(1536)	;volatile
  9143  0017C4  6E0A               	movwf	((c:_pSrc)),c
  9144                           	line	264
  9145                           	
  9146  0017C6                     l3592:; BSR set to: 6
  9147                           
  9148                           ;usb9.c: 264: usb_stat.ctrl_trf_mem = 0;
  9149  0017C6  9220               	bcf	((c:_usb_stat)),c,1
  9150                           	line	265
  9151                           	
  9152  0017C8                     l3594:; BSR set to: 6
  9153                           
  9154                           ;usb9.c: 265: ((wCount).v[0]) = 2;
  9155  0017C8  0100               	movlb	0	; () banked
  9156  0017CA  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  9157  0017CC  0E02               	movlw	low(02h)
  9158  0017CE  6E21               	movwf	((c:_wCount)),c
  9159  0017D0  0100               	movlb	0	; () banked
  9160  0017D2  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  9161  0017D4  D000               	goto	l237
  9162                           	line	266
  9163                           	
  9164  0017D6                     l236:; BSR set to: 0
  9165                           
  9166                           	line	267
  9167                           	
  9168  0017D6                     l237:
  9169  0017D6  0012               	return
  9170                           	opt stack 0
  9171                           GLOBAL	__end_of_USBStdGetStatusHandler
  9172  0017D8                     	__end_of_USBStdGetStatusHandler:
  9173                           	signat	_USBStdGetStatusHandler,88
  9174                           	global	_USBStdFeatureReqHandler
  9175                           
  9176 ;; *************** function _USBStdFeatureReqHandler *****************
  9177 ;; Defined at:
  9178 ;;		line 286 in file "../usb9.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;		None               void
  9185 ;; Registers used:
  9186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9194 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9195 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9196 ;;Total ram usage:        4 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    2
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_USBCheckStdRequest
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           psect	text20,class=CODE,space=0,reloc=2
  9206                           global __ptext20
  9207  0015BC                     __ptext20:
  9208                           psect	text20
  9209                           	file	"../usb9.c"
  9210                           	line	286
  9211                           	global	__size_of_USBStdFeatureReqHandler
  9212  0000                     	__size_of_USBStdFeatureReqHandler	equ	__end_of_USBStdFeatureReqHandler-_USBStdFeatureRe
                                 qHandler
  9213                           	
  9214  0015BC                     _USBStdFeatureReqHandler:
  9215                           	opt	stack 23
  9216                           	line	288
  9217                           	
  9218  0015BC                     l3596:
  9219                           ;usb9.c: 287: if((SetupPkt.bFeature == 0x01)&&
  9220                           ;usb9.c: 288: (SetupPkt.Recipient == 0))
  9221  0015BC  0105               	movlb	5	; () banked
  9222  0015BE  0105               	movlb	5	; () banked
  9223  0015C0  0502               	decf	(0+(1280+02h))&0ffh,w	;volatile
  9224                           
  9225  0015C2  A4D8               	btfss	status,2
  9226  0015C4  D001               	goto	u3051
  9227  0015C6  D001               	goto	u3050
  9228  0015C8                     u3051:
  9229  0015C8  D01B               	goto	l240
  9230  0015CA                     u3050:
  9231                           	
  9232  0015CA                     l3598:; BSR set to: 5
  9233                           
  9234  0015CA  0105               	movlb	5	; () banked
  9235  0015CC  0105               	movlb	5	; () banked
  9236  0015CE  5100               	movf	((1280))&0ffh,w	;volatile
  9237  0015D0  0B1F               	andlw	(1<<5)-1
  9238  0015D2  0900               	iorlw	0
  9239  0015D4  A4D8               	btfss	status,2
  9240  0015D6  D001               	goto	u3061
  9241  0015D8  D001               	goto	u3060
  9242  0015DA                     u3061:
  9243  0015DA  D012               	goto	l240
  9244  0015DC                     u3060:
  9245                           	line	290
  9246                           	
  9247  0015DC                     l3600:; BSR set to: 5
  9248                           
  9249                           ;usb9.c: 289: {
  9250                           ;usb9.c: 290: ctrl_trf_session_owner = 1;
  9251  0015DC  0100               	movlb	0	; () banked
  9252  0015DE  6FE0               	movwf	(??_USBStdFeatureReqHandler+0+0)&0ffh
  9253  0015E0  0E01               	movlw	low(01h)
  9254  0015E2  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  9255  0015E4  0100               	movlb	0	; () banked
  9256  0015E6  51E0               	movf	(??_USBStdFeatureReqHandler+0+0)&0ffh,w
  9257                           	line	291
  9258                           	
  9259  0015E8                     l3602:; BSR set to: 0
  9260                           
  9261                           ;usb9.c: 291: if(SetupPkt.bRequest == 3)
  9262  0015E8  0105               	movlb	5	; () banked
  9263  0015EA  0105               	movlb	5	; () banked
  9264  0015EC  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  9265  0015EE  0A03               	xorlw	3
  9266                           
  9267  0015F0  A4D8               	btfss	status,2
  9268  0015F2  D001               	goto	u3071
  9269  0015F4  D001               	goto	u3070
  9270  0015F6                     u3071:
  9271  0015F6  D002               	goto	l241
  9272  0015F8                     u3070:
  9273                           	line	292
  9274                           	
  9275  0015F8                     l3604:; BSR set to: 5
  9276                           
  9277                           ;usb9.c: 292: usb_stat.RemoteWakeup = 1;
  9278  0015F8  8020               	bsf	((c:_usb_stat)),c,0
  9279  0015FA  D002               	goto	l240
  9280                           	line	293
  9281                           	
  9282  0015FC                     l241:; BSR set to: 5
  9283                           
  9284                           	line	294
  9285                           ;usb9.c: 293: else
  9286                           ;usb9.c: 294: usb_stat.RemoteWakeup = 0;
  9287  0015FC  9020               	bcf	((c:_usb_stat)),c,0
  9288  0015FE  D000               	goto	l240
  9289                           	
  9290  001600                     l242:; BSR set to: 5
  9291                           
  9292                           	line	295
  9293                           	
  9294  001600                     l240:; BSR set to: 5
  9295                           
  9296                           	line	299
  9297                           ;usb9.c: 295: }
  9298                           ;usb9.c: 297: if((SetupPkt.bFeature == 0x00)&&
  9299                           ;usb9.c: 298: (SetupPkt.Recipient == 2)&&
  9300                           ;usb9.c: 299: (SetupPkt.EPNum != 0))
  9301  001600  0105               	movlb	5	; () banked
  9302  001602  0105               	movlb	5	; () banked
  9303  001604  6702               	tstfsz	(0+(1280+02h))&0ffh	;volatile
  9304  001606  D001               	goto	u3081
  9305  001608  D001               	goto	u3080
  9306  00160A                     u3081:
  9307  00160A  D062               	goto	l248
  9308  00160C                     u3080:
  9309                           	
  9310  00160C                     l3606:; BSR set to: 5
  9311                           
  9312  00160C  0105               	movlb	5	; () banked
  9313  00160E  0105               	movlb	5	; () banked
  9314  001610  5100               	movf	((1280))&0ffh,w	;volatile
  9315  001612  0B1F               	andlw	(1<<5)-1
  9316  001614  0A02               	xorlw	02h
  9317  001616  A4D8               	btfss	status,2
  9318  001618  D001               	goto	u3091
  9319  00161A  D001               	goto	u3090
  9320  00161C                     u3091:
  9321  00161C  D059               	goto	l248
  9322  00161E                     u3090:
  9323                           	
  9324  00161E                     l3608:; BSR set to: 5
  9325                           
  9326  00161E  0105               	movlb	5	; () banked
  9327  001620  0105               	movlb	5	; () banked
  9328  001622  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  9329  001624  0B0F               	andlw	(1<<4)-1
  9330  001626  0900               	iorlw	0
  9331  001628  B4D8               	btfsc	status,2
  9332  00162A  D001               	goto	u3101
  9333  00162C  D001               	goto	u3100
  9334  00162E                     u3101:
  9335  00162E  D050               	goto	l248
  9336  001630                     u3100:
  9337                           	line	301
  9338                           	
  9339  001630                     l3610:; BSR set to: 5
  9340                           
  9341                           ;usb9.c: 300: {
  9342                           ;usb9.c: 301: ctrl_trf_session_owner = 1;
  9343  001630  0100               	movlb	0	; () banked
  9344  001632  6FE0               	movwf	(??_USBStdFeatureReqHandler+0+0)&0ffh
  9345  001634  0E01               	movlw	low(01h)
  9346  001636  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  9347  001638  0100               	movlb	0	; () banked
  9348  00163A  51E0               	movf	(??_USBStdFeatureReqHandler+0+0)&0ffh,w
  9349                           	line	303
  9350                           	
  9351  00163C                     l3612:; BSR set to: 0
  9352                           
  9353                           ;usb9.c: 303: pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);
  9354  00163C  0105               	movlb	5	; () banked
  9355  00163E  0105               	movlb	5	; () banked
  9356  001640  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  9357  001642  0B0F               	andlw	(1<<4)-1
  9358  001644  0100               	movlb	0	; () banked
  9359  001646  6FE0               	movwf	(??_USBStdFeatureReqHandler+0+0)&0ffh
  9360  001648  0100               	movlb	0	; () banked
  9361  00164A  51E0               	movf	((??_USBStdFeatureReqHandler+0+0))&0ffh,w
  9362  00164C  0D08               	mullw	08h
  9363  00164E  0104               	movlb	4	; () banked
  9364  001650  0E00               	movlw	low(1024)	;volatile
  9365  001652  24F3               	addwf	(prodl),c,w
  9366  001654  0100               	movlb	0	; () banked
  9367  001656  6FE1               	movwf	(??_USBStdFeatureReqHandler+1+0)&0ffh
  9368  001658  0104               	movlb	4	; () banked
  9369  00165A  0E04               	movlw	high(1024)	;volatile
  9370  00165C  20F4               	addwfc	prod+1,w
  9371  00165E  0100               	movlb	0	; () banked
  9372  001660  6FE2               	movwf	1+(??_USBStdFeatureReqHandler+1+0)&0ffh
  9373  001662  0105               	movlb	5	; () banked
  9374  001664  0105               	movlb	5	; () banked
  9375  001666  3504               	rlcf	(0+(1280+04h))&0ffh,w	;volatile
  9376  001668  36E8               	rlcf	wreg,f
  9377  00166A  0B01               	andlw	1
  9378  00166C  0100               	movlb	0	; () banked
  9379  00166E  6FE3               	movwf	(??_USBStdFeatureReqHandler+3+0)&0ffh
  9380  001670  0100               	movlb	0	; () banked
  9381  001672  51E3               	movf	((??_USBStdFeatureReqHandler+3+0))&0ffh,w
  9382  001674  0D04               	mullw	04h
  9383  001676  50F3               	movf	(prodl),c,w
  9384  001678  0100               	movlb	0	; () banked
  9385  00167A  25E1               	addwf	(??_USBStdFeatureReqHandler+1+0)&0ffh,w
  9386                           	
  9387  00167C  6E07               	movwf	((c:_pDst)),c
  9388  00167E  50F4               	movf	(prodh),c,w
  9389  001680  0100               	movlb	0	; () banked
  9390  001682  21E2               	addwfc	(??_USBStdFeatureReqHandler+1+1)&0ffh,w
  9391  001684  6E08               	movwf	1+((c:_pDst)),c
  9392                           	line	305
  9393                           	
  9394  001686                     l3614:; BSR set to: 0
  9395                           
  9396                           ;usb9.c: 305: if(SetupPkt.bRequest == 3)
  9397  001686  0105               	movlb	5	; () banked
  9398  001688  0105               	movlb	5	; () banked
  9399  00168A  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  9400  00168C  0A03               	xorlw	3
  9401                           
  9402  00168E  A4D8               	btfss	status,2
  9403  001690  D001               	goto	u3111
  9404  001692  D001               	goto	u3110
  9405  001694                     u3111:
  9406  001694  D007               	goto	l244
  9407  001696                     u3110:
  9408                           	line	306
  9409                           	
  9410  001696                     l3616:; BSR set to: 5
  9411                           
  9412                           ;usb9.c: 306: *pDst.bRam = 0x80|0x04;
  9413  001696  C007  FFD9         	movff	(c:_pDst),fsr2l
  9414  00169A  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  9415  00169E  0E84               	movlw	low(084h)
  9416  0016A0  6EDF               	movwf	indf2
  9417  0016A2  D016               	goto	l248
  9418                           	line	307
  9419                           	
  9420  0016A4                     l244:; BSR set to: 5
  9421                           
  9422                           	line	315
  9423                           ;usb9.c: 307: else
  9424                           ;usb9.c: 308: {
  9425                           ;usb9.c: 315: if(SetupPkt.EPDir == 1)
  9426  0016A4  0105               	movlb	5	; () banked
  9427                           	
  9428  0016A6  0105               	movlb	5	; () banked
  9429  0016A8  AF04               	btfss	(0+(1280+04h))&0ffh,7	;volatile
  9430  0016AA  D001               	goto	u3121
  9431  0016AC  D001               	goto	u3120
  9432  0016AE                     u3121:
  9433  0016AE  D007               	goto	l3620
  9434  0016B0                     u3120:
  9435                           	line	316
  9436                           	
  9437  0016B0                     l3618:; BSR set to: 5
  9438                           
  9439                           ;usb9.c: 316: *pDst.bRam = 0x00|0x40;
  9440  0016B0  C007  FFD9         	movff	(c:_pDst),fsr2l
  9441  0016B4  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  9442  0016B8  0E40               	movlw	low(040h)
  9443  0016BA  6EDF               	movwf	indf2
  9444  0016BC  D009               	goto	l248
  9445                           	line	317
  9446                           	
  9447  0016BE                     l246:; BSR set to: 5
  9448                           
  9449                           	line	318
  9450                           	
  9451  0016BE                     l3620:; BSR set to: 5
  9452                           
  9453                           ;usb9.c: 317: else
  9454                           ;usb9.c: 318: *pDst.bRam = 0x80|0x00|0x08;
  9455  0016BE  C007  FFD9         	movff	(c:_pDst),fsr2l
  9456  0016C2  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  9457  0016C6  0E88               	movlw	low(088h)
  9458  0016C8  6EDF               	movwf	indf2
  9459  0016CA  D002               	goto	l248
  9460                           	
  9461  0016CC                     l247:; BSR set to: 5
  9462                           
  9463  0016CC  D001               	goto	l248
  9464                           	line	320
  9465                           	
  9466  0016CE                     l245:; BSR set to: 5
  9467                           
  9468  0016CE  D000               	goto	l248
  9469                           	line	321
  9470                           	
  9471  0016D0                     l243:; BSR set to: 5
  9472                           
  9473                           	line	322
  9474                           	
  9475  0016D0                     l248:; BSR set to: 5
  9476                           
  9477  0016D0  0012               	return
  9478                           	opt stack 0
  9479                           GLOBAL	__end_of_USBStdFeatureReqHandler
  9480  0016D2                     	__end_of_USBStdFeatureReqHandler:
  9481                           	signat	_USBStdFeatureReqHandler,88
  9482                           	global	_USBCtrlTrfOutHandler
  9483                           
  9484 ;; *************** function _USBCtrlTrfOutHandler *****************
  9485 ;; Defined at:
  9486 ;;		line 253 in file "../usbctrltrf.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;		None
  9491 ;; Return value:  Size  Location     Type
  9492 ;;		None               void
  9493 ;; Registers used:
  9494 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0
  9501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9504 ;;Total ram usage:        0 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; Hardware stack levels required when called:    3
  9507 ;; This function calls:
  9508 ;;		_USBCtrlTrfRxService
  9509 ;;		_USBPrepareForNextSetupTrf
  9510 ;; This function is called by:
  9511 ;;		_USBCtrlEPService
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           psect	text21,class=CODE,space=0,reloc=2
  9515                           global __ptext21
  9516  002020                     __ptext21:
  9517                           psect	text21
  9518                           	file	"../usbctrltrf.c"
  9519                           	line	253
  9520                           	global	__size_of_USBCtrlTrfOutHandler
  9521  0000                     	__size_of_USBCtrlTrfOutHandler	equ	__end_of_USBCtrlTrfOutHandler-_USBCtrlTrfOutHandler
  9522                           	
  9523  002020                     _USBCtrlTrfOutHandler:; BSR set to: 5
  9524                           
  9525                           	opt	stack 24
  9526                           	line	254
  9527                           	
  9528  002020                     l3698:
  9529                           ;usbctrltrf.c: 254: if(ctrl_trf_state == 2)
  9530  002020  501C               	movf	((c:_ctrl_trf_state)),c,w
  9531  002022  0A02               	xorlw	2
  9532                           
  9533  002024  A4D8               	btfss	status,2
  9534  002026  D001               	goto	u3241
  9535  002028  D001               	goto	u3240
  9536  00202A                     u3241:
  9537  00202A  D020               	goto	l3712
  9538  00202C                     u3240:
  9539                           	line	256
  9540                           	
  9541  00202C                     l3700:
  9542                           ;usbctrltrf.c: 255: {
  9543                           ;usbctrltrf.c: 256: USBCtrlTrfRxService();
  9544  00202C  ECCD  F00F         	call	_USBCtrlTrfRxService	;wreg free
  9545                           	line	263
  9546                           	
  9547  002030                     l3702:
  9548                           ;usbctrltrf.c: 263: ep0Bo.ADR = (byte*)(&CtrlTrfData);
  9549  002030  0106               	movlb	6	; () banked
  9550  002032  0E06               	movlw	high(1536)	;volatile
  9551  002034  0104               	movlb	4	; () banked
  9552  002036  0104               	movlb	4	; () banked
  9553  002038  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  9554  00203A  0106               	movlb	6	; () banked
  9555  00203C  0E00               	movlw	low(1536)	;volatile
  9556  00203E  0104               	movlb	4	; () banked
  9557  002040  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  9558                           	line	264
  9559                           	
  9560  002042                     l3704:; BSR set to: 4
  9561                           
  9562                           ;usbctrltrf.c: 264: ep0Bo.Cnt = 8;
  9563  002042  0E08               	movlw	low(08h)
  9564  002044  0104               	movlb	4	; () banked
  9565  002046  0104               	movlb	4	; () banked
  9566  002048  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
  9567                           	line	265
  9568                           	
  9569  00204A                     l3706:; BSR set to: 4
  9570                           
  9571                           ;usbctrltrf.c: 265: if(ep0Bo.Stat.DTS == 0)
  9572  00204A  0104               	movlb	4	; () banked
  9573                           	
  9574  00204C  0104               	movlb	4	; () banked
  9575  00204E  BD00               	btfsc	((1024))&0ffh,6	;volatile
  9576  002050  D001               	goto	u3251
  9577  002052  D001               	goto	u3250
  9578  002054                     u3251:
  9579  002054  D005               	goto	l3710
  9580  002056                     u3250:
  9581                           	line	266
  9582                           	
  9583  002056                     l3708:; BSR set to: 4
  9584                           
  9585                           ;usbctrltrf.c: 266: ep0Bo.Stat._byte = 0x80|0x40|0x08;
  9586  002056  0EC8               	movlw	low(0C8h)
  9587  002058  0104               	movlb	4	; () banked
  9588  00205A  0104               	movlb	4	; () banked
  9589  00205C  6F00               	movwf	((1024))&0ffh	;volatile
  9590  00205E  D01A               	goto	l324
  9591                           	line	267
  9592                           	
  9593  002060                     l321:; BSR set to: 4
  9594                           
  9595                           	line	268
  9596                           	
  9597  002060                     l3710:; BSR set to: 4
  9598                           
  9599                           ;usbctrltrf.c: 267: else
  9600                           ;usbctrltrf.c: 268: ep0Bo.Stat._byte = 0x80|0x00|0x08;
  9601  002060  0E88               	movlw	low(088h)
  9602  002062  0104               	movlb	4	; () banked
  9603  002064  0104               	movlb	4	; () banked
  9604  002066  6F00               	movwf	((1024))&0ffh	;volatile
  9605  002068  D015               	goto	l324
  9606                           	
  9607  00206A                     l322:; BSR set to: 4
  9608                           
  9609                           	line	269
  9610                           ;usbctrltrf.c: 269: }
  9611  00206A  D014               	goto	l324
  9612                           	line	270
  9613                           	
  9614  00206C                     l320:; BSR set to: 4
  9615                           
  9616                           	line	273
  9617                           	
  9618  00206C                     l3712:
  9619                           ;usbctrltrf.c: 270: else
  9620                           ;usbctrltrf.c: 271: {
  9621                           ;usbctrltrf.c: 273: USBPrepareForNextSetupTrf();
  9622  00206C  ECF8  F011         	call	_USBPrepareForNextSetupTrf	;wreg free
  9623                           	line	274
  9624                           	
  9625  002070                     l3714:
  9626                           ;usbctrltrf.c: 274: ep0Bo.Cnt = 8;
  9627  002070  0E08               	movlw	low(08h)
  9628  002072  0104               	movlb	4	; () banked
  9629  002074  0104               	movlb	4	; () banked
  9630  002076  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
  9631                           	line	275
  9632                           	
  9633  002078                     l3716:; BSR set to: 4
  9634                           
  9635                           ;usbctrltrf.c: 275: ep0Bo.ADR = (byte*)(&SetupPkt);
  9636  002078  0105               	movlb	5	; () banked
  9637  00207A  0E05               	movlw	high(1280)	;volatile
  9638  00207C  0104               	movlb	4	; () banked
  9639  00207E  0104               	movlb	4	; () banked
  9640  002080  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  9641  002082  0105               	movlb	5	; () banked
  9642  002084  0E00               	movlw	low(1280)	;volatile
  9643  002086  0104               	movlb	4	; () banked
  9644  002088  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  9645                           	line	276
  9646                           	
  9647  00208A                     l3718:; BSR set to: 4
  9648                           
  9649                           ;usbctrltrf.c: 276: ep0Bo.Stat._byte = 0x80|0x00|0x08|0x04;
  9650  00208A  0E8C               	movlw	low(08Ch)
  9651  00208C  0104               	movlb	4	; () banked
  9652  00208E  0104               	movlb	4	; () banked
  9653  002090  6F00               	movwf	((1024))&0ffh	;volatile
  9654  002092  D000               	goto	l324
  9655                           	line	277
  9656                           	
  9657  002094                     l323:; BSR set to: 4
  9658                           
  9659                           	line	281
  9660                           	
  9661  002094                     l324:; BSR set to: 4
  9662                           
  9663  002094  0012               	return
  9664                           	opt stack 0
  9665                           GLOBAL	__end_of_USBCtrlTrfOutHandler
  9666  002096                     	__end_of_USBCtrlTrfOutHandler:
  9667                           	signat	_USBCtrlTrfOutHandler,88
  9668                           	global	_USBCtrlTrfInHandler
  9669                           
  9670 ;; *************** function _USBCtrlTrfInHandler *****************
  9671 ;; Defined at:
  9672 ;;		line 308 in file "../usbctrltrf.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;		None
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;		None               void
  9679 ;; Registers used:
  9680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9686 ;;      Params:         0       0       0       0       0       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9688 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9689 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9690 ;;Total ram usage:        1 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    3
  9693 ;; This function calls:
  9694 ;;		_USBCtrlTrfTxService
  9695 ;;		_USBPrepareForNextSetupTrf
  9696 ;; This function is called by:
  9697 ;;		_USBCtrlEPService
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           psect	text22,class=CODE,space=0,reloc=2
  9701                           global __ptext22
  9702  001E8C                     __ptext22:
  9703                           psect	text22
  9704                           	file	"../usbctrltrf.c"
  9705                           	line	308
  9706                           	global	__size_of_USBCtrlTrfInHandler
  9707  0000                     	__size_of_USBCtrlTrfInHandler	equ	__end_of_USBCtrlTrfInHandler-_USBCtrlTrfInHandler
  9708                           	
  9709  001E8C                     _USBCtrlTrfInHandler:; BSR set to: 4
  9710                           
  9711                           	opt	stack 24
  9712                           	line	309
  9713                           	
  9714  001E8C                     l3720:
  9715                           ;usbctrltrf.c: 309: if(usb_device_state==4) { UADDR = SetupPkt.bDevADR._byte; if(UADDR >
                                  0) usb_device_state=5; else usb_device_state=3; };
  9716  001E8C  501F               	movf	((c:_usb_device_state)),c,w
  9717  001E8E  0A04               	xorlw	4
  9718                           
  9719  001E90  A4D8               	btfss	status,2
  9720  001E92  D001               	goto	u3261
  9721  001E94  D001               	goto	u3260
  9722  001E96                     u3261:
  9723  001E96  D016               	goto	l3730
  9724  001E98                     u3260:
  9725                           	
  9726  001E98                     l3722:
  9727  001E98  C502 FF63          	movff	0+(1280+02h),(c:3939)	;volatile
  9728                           	
  9729  001E9C                     l3724:
  9730  001E9C  5063               	movf	((c:3939)),c,w	;volatile
  9731  001E9E  B4D8               	btfsc	status,2
  9732  001EA0  D001               	goto	u3271
  9733  001EA2  D001               	goto	u3270
  9734  001EA4                     u3271:
  9735  001EA4  D007               	goto	l3728
  9736  001EA6                     u3270:
  9737                           	
  9738  001EA6                     l3726:
  9739  001EA6  0100               	movlb	0	; () banked
  9740  001EA8  6FE4               	movwf	(??_USBCtrlTrfInHandler+0+0)&0ffh
  9741  001EAA  0E05               	movlw	low(05h)
  9742  001EAC  6E1F               	movwf	((c:_usb_device_state)),c
  9743  001EAE  0100               	movlb	0	; () banked
  9744  001EB0  51E4               	movf	(??_USBCtrlTrfInHandler+0+0)&0ffh,w
  9745  001EB2  D008               	goto	l3730
  9746                           	
  9747  001EB4                     l328:; BSR set to: 0
  9748                           
  9749                           	
  9750  001EB4                     l3728:
  9751  001EB4  0100               	movlb	0	; () banked
  9752  001EB6  6FE4               	movwf	(??_USBCtrlTrfInHandler+0+0)&0ffh
  9753  001EB8  0E03               	movlw	low(03h)
  9754  001EBA  6E1F               	movwf	((c:_usb_device_state)),c
  9755  001EBC  0100               	movlb	0	; () banked
  9756  001EBE  51E4               	movf	(??_USBCtrlTrfInHandler+0+0)&0ffh,w
  9757  001EC0  D001               	goto	l3730
  9758                           	
  9759  001EC2                     l329:; BSR set to: 0
  9760                           
  9761  001EC2  D000               	goto	l3730
  9762                           	
  9763  001EC4                     l327:; BSR set to: 0
  9764                           
  9765                           	line	311
  9766                           	
  9767  001EC4                     l3730:
  9768                           ;usbctrltrf.c: 311: if(ctrl_trf_state == 1)
  9769  001EC4  041C               	decf	((c:_ctrl_trf_state)),c,w
  9770                           
  9771  001EC6  A4D8               	btfss	status,2
  9772  001EC8  D001               	goto	u3281
  9773  001ECA  D001               	goto	u3280
  9774  001ECC                     u3281:
  9775  001ECC  D01F               	goto	l3742
  9776  001ECE                     u3280:
  9777                           	line	313
  9778                           	
  9779  001ECE                     l3732:
  9780                           ;usbctrltrf.c: 312: {
  9781                           ;usbctrltrf.c: 313: USBCtrlTrfTxService();
  9782  001ECE  EC7C  F008         	call	_USBCtrlTrfTxService	;wreg free
  9783                           	line	329
  9784                           	
  9785  001ED2                     l3734:
  9786                           ;usbctrltrf.c: 329: if(short_pkt_status == 2)
  9787  001ED2  501E               	movf	((c:_short_pkt_status)),c,w
  9788  001ED4  0A02               	xorlw	2
  9789                           
  9790  001ED6  A4D8               	btfss	status,2
  9791  001ED8  D001               	goto	u3291
  9792  001EDA  D001               	goto	u3290
  9793  001EDC                     u3291:
  9794  001EDC  D005               	goto	l331
  9795  001EDE                     u3290:
  9796                           	line	333
  9797                           	
  9798  001EDE                     l3736:
  9799                           ;usbctrltrf.c: 330: {
  9800                           ;usbctrltrf.c: 333: ep0Bi.Stat._byte = 0x80|0x04;
  9801  001EDE  0E84               	movlw	low(084h)
  9802  001EE0  0104               	movlb	4	; () banked
  9803  001EE2  0104               	movlb	4	; () banked
  9804  001EE4  6F04               	movwf	((1028))&0ffh	;volatile
  9805                           	line	334
  9806                           ;usbctrltrf.c: 334: }
  9807  001EE6  D015               	goto	l336
  9808                           	line	336
  9809                           	
  9810  001EE8                     l331:
  9811                           	line	338
  9812                           ;usbctrltrf.c: 336: else
  9813                           ;usbctrltrf.c: 337: {
  9814                           ;usbctrltrf.c: 338: if(ep0Bi.Stat.DTS == 0)
  9815  001EE8  0104               	movlb	4	; () banked
  9816                           	
  9817  001EEA  0104               	movlb	4	; () banked
  9818  001EEC  BD04               	btfsc	((1028))&0ffh,6	;volatile
  9819  001EEE  D001               	goto	u3301
  9820  001EF0  D001               	goto	u3300
  9821  001EF2                     u3301:
  9822  001EF2  D005               	goto	l3740
  9823  001EF4                     u3300:
  9824                           	line	339
  9825                           	
  9826  001EF4                     l3738:; BSR set to: 4
  9827                           
  9828                           ;usbctrltrf.c: 339: ep0Bi.Stat._byte = 0x80|0x40|0x08;
  9829  001EF4  0EC8               	movlw	low(0C8h)
  9830  001EF6  0104               	movlb	4	; () banked
  9831  001EF8  0104               	movlb	4	; () banked
  9832  001EFA  6F04               	movwf	((1028))&0ffh	;volatile
  9833  001EFC  D00A               	goto	l336
  9834                           	line	340
  9835                           	
  9836  001EFE                     l333:; BSR set to: 4
  9837                           
  9838                           	line	341
  9839                           	
  9840  001EFE                     l3740:; BSR set to: 4
  9841                           
  9842                           ;usbctrltrf.c: 340: else
  9843                           ;usbctrltrf.c: 341: ep0Bi.Stat._byte = 0x80|0x00|0x08;
  9844  001EFE  0E88               	movlw	low(088h)
  9845  001F00  0104               	movlb	4	; () banked
  9846  001F02  0104               	movlb	4	; () banked
  9847  001F04  6F04               	movwf	((1028))&0ffh	;volatile
  9848  001F06  D005               	goto	l336
  9849                           	
  9850  001F08                     l334:; BSR set to: 4
  9851                           
  9852  001F08  D004               	goto	l336
  9853                           	line	342
  9854                           	
  9855  001F0A                     l332:; BSR set to: 4
  9856                           
  9857                           	line	343
  9858                           ;usbctrltrf.c: 342: }
  9859                           ;usbctrltrf.c: 343: }
  9860  001F0A  D003               	goto	l336
  9861                           	line	344
  9862                           	
  9863  001F0C                     l330:; BSR set to: 4
  9864                           
  9865                           	line	345
  9866                           	
  9867  001F0C                     l3742:
  9868                           ;usbctrltrf.c: 344: else
  9869                           ;usbctrltrf.c: 345: USBPrepareForNextSetupTrf();
  9870  001F0C  ECF8  F011         	call	_USBPrepareForNextSetupTrf	;wreg free
  9871  001F10  D000               	goto	l336
  9872                           	
  9873  001F12                     l335:
  9874                           	line	347
  9875                           	
  9876  001F12                     l336:
  9877  001F12  0012               	return
  9878                           	opt stack 0
  9879                           GLOBAL	__end_of_USBCtrlTrfInHandler
  9880  001F14                     	__end_of_USBCtrlTrfInHandler:
  9881                           	signat	_USBCtrlTrfInHandler,88
  9882                           	global	_USBCtrlEPServiceComplete
  9883                           
  9884 ;; *************** function _USBCtrlEPServiceComplete *****************
  9885 ;; Defined at:
  9886 ;;		line 518 in file "../usbctrltrf.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;		None
  9891 ;; Return value:  Size  Location     Type
  9892 ;;		None               void
  9893 ;; Registers used:
  9894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9902 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9903 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9904 ;;Total ram usage:        1 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:    3
  9907 ;; This function calls:
  9908 ;;		_USBCtrlTrfTxService
  9909 ;; This function is called by:
  9910 ;;		_USBCtrlTrfSetupHandler
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           psect	text23,class=CODE,space=0,reloc=2
  9914                           global __ptext23
  9915  0018CE                     __ptext23:
  9916                           psect	text23
  9917                           	file	"../usbctrltrf.c"
  9918                           	line	518
  9919                           	global	__size_of_USBCtrlEPServiceComplete
  9920  0000                     	__size_of_USBCtrlEPServiceComplete	equ	__end_of_USBCtrlEPServiceComplete-_USBCtrlEPServ
                                 iceComplete
  9921                           	
  9922  0018CE                     _USBCtrlEPServiceComplete:
  9923                           	opt	stack 23
  9924                           	line	529
  9925                           	
  9926  0018CE                     l3744:
  9927                           ;usbctrltrf.c: 529: UCONbits.PKTDIS = 0;
  9928  0018CE  9860               	bcf	((c:3936)),c,4	;volatile
  9929                           	line	532
  9930                           ;usbctrltrf.c: 532: if(ctrl_trf_session_owner == 0)
  9931  0018D0  661B               	tstfsz	((c:_ctrl_trf_session_owner)),c
  9932  0018D2  D001               	goto	u3311
  9933  0018D4  D001               	goto	u3310
  9934  0018D6                     u3311:
  9935  0018D6  D016               	goto	l361
  9936  0018D8                     u3310:
  9937                           	line	538
  9938                           	
  9939  0018D8                     l3746:
  9940                           ;usbctrltrf.c: 533: {
  9941                           ;usbctrltrf.c: 538: ep0Bo.Cnt = 8;
  9942  0018D8  0E08               	movlw	low(08h)
  9943  0018DA  0104               	movlb	4	; () banked
  9944  0018DC  0104               	movlb	4	; () banked
  9945  0018DE  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
  9946                           	line	539
  9947                           ;usbctrltrf.c: 539: ep0Bo.ADR = (byte*)&SetupPkt;
  9948  0018E0  0105               	movlb	5	; () banked
  9949  0018E2  0E05               	movlw	high(1280)	;volatile
  9950  0018E4  0104               	movlb	4	; () banked
  9951  0018E6  0104               	movlb	4	; () banked
  9952  0018E8  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  9953  0018EA  0105               	movlb	5	; () banked
  9954  0018EC  0E00               	movlw	low(1280)	;volatile
  9955  0018EE  0104               	movlb	4	; () banked
  9956  0018F0  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  9957                           	line	541
  9958                           ;usbctrltrf.c: 541: ep0Bo.Stat._byte = 0x80|0x04;
  9959  0018F2  0E84               	movlw	low(084h)
  9960  0018F4  0104               	movlb	4	; () banked
  9961  0018F6  0104               	movlb	4	; () banked
  9962  0018F8  6F00               	movwf	((1024))&0ffh	;volatile
  9963                           	line	542
  9964                           ;usbctrltrf.c: 542: ep0Bi.Stat._byte = 0x80|0x04;
  9965  0018FA  0E84               	movlw	low(084h)
  9966  0018FC  0104               	movlb	4	; () banked
  9967  0018FE  0104               	movlb	4	; () banked
  9968  001900  6F04               	movwf	((1028))&0ffh	;volatile
  9969                           	line	543
  9970                           ;usbctrltrf.c: 543: }
  9971  001902  D05F               	goto	l366
  9972                           	line	544
  9973                           	
  9974  001904                     l361:
  9975                           	line	546
  9976                           ;usbctrltrf.c: 544: else
  9977                           ;usbctrltrf.c: 545: {
  9978                           ;usbctrltrf.c: 546: if(SetupPkt.DataDir == 1)
  9979  001904  0105               	movlb	5	; () banked
  9980                           	
  9981  001906  0105               	movlb	5	; () banked
  9982  001908  AF00               	btfss	((1280))&0ffh,7	;volatile
  9983  00190A  D001               	goto	u3321
  9984  00190C  D001               	goto	u3320
  9985  00190E                     u3321:
  9986  00190E  D038               	goto	l3766
  9987  001910                     u3320:
  9988                           	line	548
  9989                           	
  9990  001910                     l3748:; BSR set to: 5
  9991                           
  9992                           ;usbctrltrf.c: 547: {
  9993                           ;usbctrltrf.c: 548: if(SetupPkt.wLength < wCount._word)
  9994  001910  5021               	movf	((c:_wCount)),c,w
  9995  001912  0105               	movlb	5	; () banked
  9996  001914  0105               	movlb	5	; () banked
  9997  001916  5D06               	subwf	(0+(1280+06h))&0ffh,w	;volatile
  9998  001918  5022               	movf	((c:_wCount+1)),c,w
  9999  00191A  0105               	movlb	5	; () banked
 10000  00191C  0105               	movlb	5	; () banked
 10001  00191E  5907               	subwfb	(1+(1280+06h))&0ffh,w	;volatile
 10002  001920  B0D8               	btfsc	status,0
 10003  001922  D001               	goto	u3331
 10004  001924  D001               	goto	u3330
 10005  001926                     u3331:
 10006  001926  D005               	goto	l3752
 10007  001928                     u3330:
 10008                           	line	549
 10009                           	
 10010  001928                     l3750:; BSR set to: 5
 10011                           
 10012                           ;usbctrltrf.c: 549: wCount._word = SetupPkt.wLength;
 10013  001928  C506 F021          	movff	0+(1280+06h),(c:_wCount)	;volatile
 10014  00192C  C507 F022          	movff	1+(1280+06h),(c:_wCount+1)	;volatile
 10015  001930  D000               	goto	l3752
 10016                           	
 10017  001932                     l364:; BSR set to: 5
 10018                           
 10019                           	line	550
 10020                           	
 10021  001932                     l3752:; BSR set to: 5
 10022                           
 10023                           ;usbctrltrf.c: 550: USBCtrlTrfTxService();
 10024  001932  EC7C  F008         	call	_USBCtrlTrfTxService	;wreg free
 10025                           	line	551
 10026                           	
 10027  001936                     l3754:
 10028                           ;usbctrltrf.c: 551: ctrl_trf_state = 1;
 10029  001936  0100               	movlb	0	; () banked
 10030  001938  6FE4               	movwf	(??_USBCtrlEPServiceComplete+0+0)&0ffh
 10031  00193A  0E01               	movlw	low(01h)
 10032  00193C  6E1C               	movwf	((c:_ctrl_trf_state)),c
 10033  00193E  0100               	movlb	0	; () banked
 10034  001940  51E4               	movf	(??_USBCtrlEPServiceComplete+0+0)&0ffh,w
 10035                           	line	579
 10036                           	
 10037  001942                     l3756:; BSR set to: 0
 10038                           
 10039                           ;usbctrltrf.c: 579: ep0Bo.Cnt = 8;
 10040  001942  0E08               	movlw	low(08h)
 10041  001944  0104               	movlb	4	; () banked
 10042  001946  0104               	movlb	4	; () banked
 10043  001948  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
 10044                           	line	580
 10045                           	
 10046  00194A                     l3758:; BSR set to: 4
 10047                           
 10048                           ;usbctrltrf.c: 580: ep0Bo.ADR = (byte*)&SetupPkt;
 10049  00194A  0105               	movlb	5	; () banked
 10050  00194C  0E05               	movlw	high(1280)	;volatile
 10051  00194E  0104               	movlb	4	; () banked
 10052  001950  0104               	movlb	4	; () banked
 10053  001952  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
 10054  001954  0105               	movlb	5	; () banked
 10055  001956  0E00               	movlw	low(1280)	;volatile
 10056  001958  0104               	movlb	4	; () banked
 10057  00195A  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
 10058                           	line	581
 10059                           	
 10060  00195C                     l3760:; BSR set to: 4
 10061                           
 10062                           ;usbctrltrf.c: 581: ep0Bo.Stat._byte = 0x80;
 10063  00195C  0E80               	movlw	low(080h)
 10064  00195E  0104               	movlb	4	; () banked
 10065  001960  0104               	movlb	4	; () banked
 10066  001962  6F00               	movwf	((1024))&0ffh	;volatile
 10067                           	line	587
 10068                           	
 10069  001964                     l3762:; BSR set to: 4
 10070                           
 10071                           ;usbctrltrf.c: 587: ep0Bi.ADR = (byte*)&CtrlTrfData;
 10072  001964  0106               	movlb	6	; () banked
 10073  001966  0E06               	movlw	high(1536)	;volatile
 10074  001968  0104               	movlb	4	; () banked
 10075  00196A  0104               	movlb	4	; () banked
 10076  00196C  6F07               	movwf	(1+(1028+02h))&0ffh	;volatile
 10077  00196E  0106               	movlb	6	; () banked
 10078  001970  0E00               	movlw	low(1536)	;volatile
 10079  001972  0104               	movlb	4	; () banked
 10080  001974  6F06               	movwf	(0+(1028+02h))&0ffh	;volatile
 10081                           	line	588
 10082                           	
 10083  001976                     l3764:; BSR set to: 4
 10084                           
 10085                           ;usbctrltrf.c: 588: ep0Bi.Stat._byte = 0x80|0x40|0x08;
 10086  001976  0EC8               	movlw	low(0C8h)
 10087  001978  0104               	movlb	4	; () banked
 10088  00197A  0104               	movlb	4	; () banked
 10089  00197C  6F04               	movwf	((1028))&0ffh	;volatile
 10090                           	line	589
 10091                           ;usbctrltrf.c: 589: }
 10092  00197E  D021               	goto	l366
 10093                           	line	590
 10094                           	
 10095  001980                     l363:; BSR set to: 4
 10096                           
 10097                           	line	592
 10098                           	
 10099  001980                     l3766:
 10100                           ;usbctrltrf.c: 590: else
 10101                           ;usbctrltrf.c: 591: {
 10102                           ;usbctrltrf.c: 592: ctrl_trf_state = 2;
 10103  001980  0100               	movlb	0	; () banked
 10104  001982  6FE4               	movwf	(??_USBCtrlEPServiceComplete+0+0)&0ffh
 10105  001984  0E02               	movlw	low(02h)
 10106  001986  6E1C               	movwf	((c:_ctrl_trf_state)),c
 10107  001988  0100               	movlb	0	; () banked
 10108  00198A  51E4               	movf	(??_USBCtrlEPServiceComplete+0+0)&0ffh,w
 10109                           	line	602
 10110                           	
 10111  00198C                     l3768:; BSR set to: 0
 10112                           
 10113                           ;usbctrltrf.c: 602: ep0Bi.Cnt = 0;
 10114  00198C  0E00               	movlw	low(0)
 10115  00198E  0104               	movlb	4	; () banked
 10116  001990  0104               	movlb	4	; () banked
 10117  001992  6F05               	movwf	(0+(1028+01h))&0ffh	;volatile
 10118                           	line	603
 10119                           	
 10120  001994                     l3770:; BSR set to: 4
 10121                           
 10122                           ;usbctrltrf.c: 603: ep0Bi.Stat._byte = 0x80|0x40|0x08;
 10123  001994  0EC8               	movlw	low(0C8h)
 10124  001996  0104               	movlb	4	; () banked
 10125  001998  0104               	movlb	4	; () banked
 10126  00199A  6F04               	movwf	((1028))&0ffh	;volatile
 10127                           	line	608
 10128                           	
 10129  00199C                     l3772:; BSR set to: 4
 10130                           
 10131                           ;usbctrltrf.c: 608: ep0Bo.Cnt = 8;
 10132  00199C  0E08               	movlw	low(08h)
 10133  00199E  0104               	movlb	4	; () banked
 10134  0019A0  0104               	movlb	4	; () banked
 10135  0019A2  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
 10136                           	line	609
 10137                           	
 10138  0019A4                     l3774:; BSR set to: 4
 10139                           
 10140                           ;usbctrltrf.c: 609: ep0Bo.ADR = (byte*)&CtrlTrfData;
 10141  0019A4  0106               	movlb	6	; () banked
 10142  0019A6  0E06               	movlw	high(1536)	;volatile
 10143  0019A8  0104               	movlb	4	; () banked
 10144  0019AA  0104               	movlb	4	; () banked
 10145  0019AC  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
 10146  0019AE  0106               	movlb	6	; () banked
 10147  0019B0  0E00               	movlw	low(1536)	;volatile
 10148  0019B2  0104               	movlb	4	; () banked
 10149  0019B4  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
 10150                           	line	610
 10151                           	
 10152  0019B6                     l3776:; BSR set to: 4
 10153                           
 10154                           ;usbctrltrf.c: 610: ep0Bo.Stat._byte = 0x80|0x40|0x08;
 10155  0019B6  0EC8               	movlw	low(0C8h)
 10156  0019B8  0104               	movlb	4	; () banked
 10157  0019BA  0104               	movlb	4	; () banked
 10158  0019BC  6F00               	movwf	((1024))&0ffh	;volatile
 10159  0019BE  D001               	goto	l366
 10160                           	line	611
 10161                           	
 10162  0019C0                     l365:; BSR set to: 4
 10163                           
 10164  0019C0  D000               	goto	l366
 10165                           	line	612
 10166                           	
 10167  0019C2                     l362:; BSR set to: 4
 10168                           
 10169                           	line	614
 10170                           	
 10171  0019C2                     l366:; BSR set to: 4
 10172                           
 10173  0019C2  0012               	return
 10174                           	opt stack 0
 10175                           GLOBAL	__end_of_USBCtrlEPServiceComplete
 10176  0019C4                     	__end_of_USBCtrlEPServiceComplete:
 10177                           	signat	_USBCtrlEPServiceComplete,88
 10178                           	global	_USBCtrlTrfRxService
 10179                           
 10180 ;; *************** function _USBCtrlTrfRxService *****************
 10181 ;; Defined at:
 10182 ;;		line 466 in file "../usbctrltrf.c"
 10183 ;; Parameters:    Size  Location     Type
 10184 ;;		None
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  byte_to_read    2    0[BANK0 ] struct _WORD
 10187 ;; Return value:  Size  Location     Type
 10188 ;;		None               void
 10189 ;; Registers used:
 10190 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10196 ;;      Params:         0       0       0       0       0       0       0       0       0
 10197 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10198 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10199 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10200 ;;Total ram usage:        2 bytes
 10201 ;; Hardware stack levels used:    1
 10202 ;; Hardware stack levels required when called:    2
 10203 ;; This function calls:
 10204 ;;		Nothing
 10205 ;; This function is called by:
 10206 ;;		_USBCtrlTrfOutHandler
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           psect	text24,class=CODE,space=0,reloc=2
 10210                           global __ptext24
 10211  001F9A                     __ptext24:
 10212                           psect	text24
 10213                           	file	"../usbctrltrf.c"
 10214                           	line	466
 10215                           	global	__size_of_USBCtrlTrfRxService
 10216  0000                     	__size_of_USBCtrlTrfRxService	equ	__end_of_USBCtrlTrfRxService-_USBCtrlTrfRxService
 10217                           	
 10218  001F9A                     _USBCtrlTrfRxService:; BSR set to: 4
 10219                           
 10220                           	opt	stack 24
 10221                           	line	469
 10222                           	
 10223  001F9A                     l3778:
 10224                           ;usbctrltrf.c: 467: WORD_t byte_to_read;
 10225                           ;usbctrltrf.c: 469: ((byte_to_read).v[1]) = 0x03 & ep0Bo.Stat._byte;
 10226  001F9A  0104               	movlb	4	; () banked
 10227  001F9C  0104               	movlb	4	; () banked
 10228  001F9E  5100               	movf	((1024))&0ffh,w	;volatile
 10229  001FA0  0B03               	andlw	low(03h)
 10230  001FA2  0100               	movlb	0	; () banked
 10231  001FA4  0100               	movlb	0	; () banked
 10232  001FA6  6FE1               	movwf	(0+(USBCtrlTrfRxService@byte_to_read+01h))&0ffh
 10233                           	line	470
 10234                           	
 10235  001FA8                     l3780:; BSR set to: 0
 10236                           
 10237                           ;usbctrltrf.c: 470: ((byte_to_read).v[0]) = ep0Bo.Cnt;
 10238  001FA8  C401 F0E0          	movff	0+(1024+01h),(USBCtrlTrfRxService@byte_to_read)	;volatile
 10239                           	line	475
 10240                           ;usbctrltrf.c: 475: wCount._word = wCount._word + byte_to_read._word;
 10241  001FAC  0100               	movlb	0	; () banked
 10242  001FAE  0100               	movlb	0	; () banked
 10243  001FB0  51E0               	movf	((USBCtrlTrfRxService@byte_to_read))&0ffh,w
 10244  001FB2  2421               	addwf	((c:_wCount)),c,w
 10245                           	
 10246  001FB4  6E21               	movwf	((c:_wCount)),c
 10247  001FB6  0100               	movlb	0	; () banked
 10248  001FB8  0100               	movlb	0	; () banked
 10249  001FBA  51E1               	movf	((USBCtrlTrfRxService@byte_to_read+1))&0ffh,w
 10250  001FBC  2022               	addwfc	((c:_wCount+1)),c,w
 10251  001FBE  6E22               	movwf	1+((c:_wCount)),c
 10252                           	line	477
 10253                           	
 10254  001FC0                     l3782:; BSR set to: 0
 10255                           
 10256                           ;usbctrltrf.c: 477: pSrc.bRam = (byte*)&CtrlTrfData;
 10257  001FC0  0106               	movlb	6	; () banked
 10258  001FC2  0E06               	movlw	high(1536)	;volatile
 10259  001FC4  6E0B               	movwf	((c:_pSrc+1)),c
 10260  001FC6  0106               	movlb	6	; () banked
 10261  001FC8  0E00               	movlw	low(1536)	;volatile
 10262  001FCA  6E0A               	movwf	((c:_pSrc)),c
 10263                           	line	479
 10264                           ;usbctrltrf.c: 479: while(byte_to_read._word)
 10265  001FCC  D01F               	goto	l3792
 10266                           	
 10267  001FCE                     l356:; BSR set to: 6
 10268                           
 10269                           	line	481
 10270                           	
 10271  001FCE                     l3784:
 10272                           ;usbctrltrf.c: 480: {
 10273                           ;usbctrltrf.c: 481: *pDst.bRam = *pSrc.bRam;
 10274  001FCE  C00A  FFF6         	movff	(c:_pSrc),tblptrl
 10275  001FD2  C00B  FFF7         	movff	(c:_pSrc+1),tblptrh
 10276  001FD6  6AF8               	clrf	tblptru
 10277  001FD8  C007  FFD9         	movff	(c:_pDst),fsr2l
 10278  001FDC  C008  FFDA         	movff	(c:_pDst+1),fsr2h
 10279  001FE0  0E07               	movlw	high __ramtop-1
 10280  001FE2  64F7               	cpfsgt	tblptrh
 10281  001FE4  D003               	bra	u3347
 10282  001FE6  0008               	tblrd	*
 10283                           	
 10284  001FE8  50F5               	movf	tablat,w
 10285  001FEA  D005               	bra	u3340
 10286  001FEC                     u3347:
 10287  001FEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 10288  001FF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10289  001FF4  50EF               	movf	indf0,w
 10290  001FF6                     u3340:
 10291  001FF6  6EDF               	movwf	indf2
 10292                           	line	482
 10293                           	
 10294  001FF8                     l3786:
 10295                           ;usbctrltrf.c: 482: pDst.bRam++;
 10296  001FF8  4A07               	infsnz	((c:_pDst)),c
 10297  001FFA  2A08               	incf	((c:_pDst+1)),c
 10298                           	line	483
 10299                           	
 10300  001FFC                     l3788:
 10301                           ;usbctrltrf.c: 483: pSrc.bRam++;
 10302  001FFC  4A0A               	infsnz	((c:_pSrc)),c
 10303  001FFE  2A0B               	incf	((c:_pSrc+1)),c
 10304                           	line	484
 10305                           	
 10306  002000                     l3790:
 10307                           ;usbctrltrf.c: 484: byte_to_read._word--;
 10308  002000  0100               	movlb	0	; () banked
 10309  002002  0100               	movlb	0	; () banked
 10310  002004  07E0               	decf	((USBCtrlTrfRxService@byte_to_read))&0ffh
 10311  002006  A0D8               	btfss	status,0
 10312  002008  07E1               	decf	((USBCtrlTrfRxService@byte_to_read+1))&0ffh
 10313  00200A  D000               	goto	l3792
 10314                           	line	485
 10315                           	
 10316  00200C                     l355:; BSR set to: 0
 10317                           
 10318                           	line	479
 10319                           	
 10320  00200C                     l3792:
 10321  00200C  0100               	movlb	0	; () banked
 10322  00200E  0100               	movlb	0	; () banked
 10323  002010  51E1               	movf	((USBCtrlTrfRxService@byte_to_read+1))&0ffh,w
 10324  002012  11E0               	iorwf ((USBCtrlTrfRxService@byte_to_read))&0ffh,w
 10325                           
 10326  002014  A4D8               	btfss	status,2
 10327  002016  D001               	goto	u3351
 10328  002018  D001               	goto	u3350
 10329  00201A                     u3351:
 10330  00201A  D7D9               	goto	l3784
 10331  00201C                     u3350:
 10332  00201C  D000               	goto	l358
 10333                           	
 10334  00201E                     l357:; BSR set to: 0
 10335                           
 10336                           	line	487
 10337                           	
 10338  00201E                     l358:; BSR set to: 0
 10339                           
 10340  00201E  0012               	return
 10341                           	opt stack 0
 10342                           GLOBAL	__end_of_USBCtrlTrfRxService
 10343  002020                     	__end_of_USBCtrlTrfRxService:
 10344                           	signat	_USBCtrlTrfRxService,88
 10345                           	global	_USBCtrlTrfTxService
 10346                           
 10347 ;; *************** function _USBCtrlTrfTxService *****************
 10348 ;; Defined at:
 10349 ;;		line 371 in file "../usbctrltrf.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;		None
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;  byte_to_send    2    2[BANK0 ] struct _WORD
 10354 ;; Return value:  Size  Location     Type
 10355 ;;		None               void
 10356 ;; Registers used:
 10357 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0
 10364 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10365 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10366 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10367 ;;Total ram usage:        4 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    2
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_USBCtrlTrfInHandler
 10374 ;;		_USBCtrlEPServiceComplete
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           psect	text25,class=CODE,space=0,reloc=2
 10378                           global __ptext25
 10379  0010F8                     __ptext25:
 10380                           psect	text25
 10381                           	file	"../usbctrltrf.c"
 10382                           	line	371
 10383                           	global	__size_of_USBCtrlTrfTxService
 10384  0000                     	__size_of_USBCtrlTrfTxService	equ	__end_of_USBCtrlTrfTxService-_USBCtrlTrfTxService
 10385                           	
 10386  0010F8                     _USBCtrlTrfTxService:; BSR set to: 0
 10387                           
 10388                           	opt	stack 24
 10389                           	line	377
 10390                           	
 10391  0010F8                     l3798:
 10392                           ;usbctrltrf.c: 372: WORD_t byte_to_send;
 10393                           ;usbctrltrf.c: 377: if(wCount._word < 8)
 10394  0010F8  0E08               	movlw	08h
 10395  0010FA  5C21               	subwf	((c:_wCount)),c,w
 10396  0010FC  0E00               	movlw	0
 10397  0010FE  5822               	subwfb	((c:_wCount+1)),c,w
 10398  001100  B0D8               	btfsc	status,0
 10399  001102  D001               	goto	u3361
 10400  001104  D001               	goto	u3360
 10401  001106                     u3361:
 10402  001106  D01D               	goto	l3808
 10403  001108                     u3360:
 10404                           	line	379
 10405                           	
 10406  001108                     l3800:
 10407                           ;usbctrltrf.c: 378: {
 10408                           ;usbctrltrf.c: 379: byte_to_send._word = wCount._word;
 10409  001108  C021  F0E2         	movff	(c:_wCount),(USBCtrlTrfTxService@byte_to_send)
 10410  00110C  C022  F0E3         	movff	(c:_wCount+1),(USBCtrlTrfTxService@byte_to_send+1)
 10411                           	line	394
 10412                           ;usbctrltrf.c: 394: if(short_pkt_status == 0)
 10413  001110  661E               	tstfsz	((c:_short_pkt_status)),c
 10414  001112  D001               	goto	u3371
 10415  001114  D001               	goto	u3370
 10416  001116                     u3371:
 10417  001116  D007               	goto	l3804
 10418  001118                     u3370:
 10419                           	line	396
 10420                           	
 10421  001118                     l3802:
 10422                           ;usbctrltrf.c: 395: {
 10423                           ;usbctrltrf.c: 396: short_pkt_status = 1;
 10424  001118  0100               	movlb	0	; () banked
 10425  00111A  6FE0               	movwf	(??_USBCtrlTrfTxService+0+0)&0ffh
 10426  00111C  0E01               	movlw	low(01h)
 10427  00111E  6E1E               	movwf	((c:_short_pkt_status)),c
 10428  001120  0100               	movlb	0	; () banked
 10429  001122  51E0               	movf	(??_USBCtrlTrfTxService+0+0)&0ffh,w
 10430                           	line	397
 10431                           ;usbctrltrf.c: 397: }
 10432  001124  D016               	goto	l3810
 10433                           	line	398
 10434                           	
 10435  001126                     l340:; BSR set to: 0
 10436                           
 10437                           	
 10438  001126                     l3804:
 10439                           ;usbctrltrf.c: 398: else if(short_pkt_status == 1)
 10440  001126  041E               	decf	((c:_short_pkt_status)),c,w
 10441                           
 10442  001128  A4D8               	btfss	status,2
 10443  00112A  D001               	goto	u3381
 10444  00112C  D001               	goto	u3380
 10445  00112E                     u3381:
 10446  00112E  D011               	goto	l3810
 10447  001130                     u3380:
 10448                           	line	400
 10449                           	
 10450  001130                     l3806:
 10451                           ;usbctrltrf.c: 399: {
 10452                           ;usbctrltrf.c: 400: short_pkt_status = 2;
 10453  001130  0100               	movlb	0	; () banked
 10454  001132  6FE0               	movwf	(??_USBCtrlTrfTxService+0+0)&0ffh
 10455  001134  0E02               	movlw	low(02h)
 10456  001136  6E1E               	movwf	((c:_short_pkt_status)),c
 10457  001138  0100               	movlb	0	; () banked
 10458  00113A  51E0               	movf	(??_USBCtrlTrfTxService+0+0)&0ffh,w
 10459  00113C  D00A               	goto	l3810
 10460                           	line	401
 10461                           	
 10462  00113E                     l342:; BSR set to: 0
 10463                           
 10464  00113E  D009               	goto	l3810
 10465                           	line	403
 10466                           	
 10467  001140                     l341:; BSR set to: 0
 10468                           
 10469                           ;usbctrltrf.c: 401: }
 10470                           ;usbctrltrf.c: 403: }
 10471  001140  D008               	goto	l3810
 10472                           	line	404
 10473                           	
 10474  001142                     l339:; BSR set to: 0
 10475                           
 10476                           	line	405
 10477                           	
 10478  001142                     l3808:
 10479                           ;usbctrltrf.c: 404: else
 10480                           ;usbctrltrf.c: 405: byte_to_send._word = 8;
 10481  001142  0E00               	movlw	high(08h)
 10482  001144  0100               	movlb	0	; () banked
 10483  001146  0100               	movlb	0	; () banked
 10484  001148  6FE3               	movwf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh
 10485  00114A  0E08               	movlw	low(08h)
 10486  00114C  0100               	movlb	0	; () banked
 10487  00114E  6FE2               	movwf	((USBCtrlTrfTxService@byte_to_send))&0ffh
 10488  001150  D000               	goto	l3810
 10489                           	
 10490  001152                     l343:; BSR set to: 0
 10491                           
 10492                           	line	410
 10493                           	
 10494  001152                     l3810:
 10495                           ;usbctrltrf.c: 410: ep0Bi.Stat.BC9 = 0;
 10496  001152  0104               	movlb	4	; () banked
 10497  001154  0104               	movlb	4	; () banked
 10498  001156  9304               	bcf	((1028))&0ffh,1	;volatile
 10499                           	line	411
 10500                           	
 10501  001158                     l3812:; BSR set to: 4
 10502                           
 10503                           ;usbctrltrf.c: 411: ep0Bi.Stat.BC8 = 0;
 10504  001158  0104               	movlb	4	; () banked
 10505  00115A  0104               	movlb	4	; () banked
 10506  00115C  9104               	bcf	((1028))&0ffh,0	;volatile
 10507                           	line	412
 10508                           	
 10509  00115E                     l3814:; BSR set to: 4
 10510                           
 10511                           ;usbctrltrf.c: 412: ep0Bi.Stat._byte |= ((byte_to_send).v[1]);
 10512  00115E  0100               	movlb	0	; () banked
 10513  001160  0100               	movlb	0	; () banked
 10514  001162  51E3               	movf	(0+(USBCtrlTrfTxService@byte_to_send+01h))&0ffh,w
 10515  001164  0104               	movlb	4	; () banked
 10516  001166  0104               	movlb	4	; () banked
 10517  001168  1304               	iorwf	((1028))&0ffh	;volatile
 10518                           	line	413
 10519                           	
 10520  00116A                     l3816:; BSR set to: 4
 10521                           
 10522                           ;usbctrltrf.c: 413: ep0Bi.Cnt = ((byte_to_send).v[0]);
 10523  00116A  C0E2  F405         	movff	(USBCtrlTrfTxService@byte_to_send),0+(1028+01h)	;volatile
 10524                           	line	418
 10525                           	
 10526  00116E                     l3818:; BSR set to: 4
 10527                           
 10528                           ;usbctrltrf.c: 418: wCount._word = wCount._word - byte_to_send._word;
 10529  00116E  0100               	movlb	0	; () banked
 10530  001170  C0E2  F0E0         	movff	(USBCtrlTrfTxService@byte_to_send),??_USBCtrlTrfTxService+0+0
 10531  001174  0100               	movlb	0	; () banked
 10532  001176  C0E3  F0E1         	movff	(USBCtrlTrfTxService@byte_to_send+1),??_USBCtrlTrfTxService+0+0+1
 10533  00117A  0100               	movlb	0	; () banked
 10534  00117C  1FE0               	comf	(??_USBCtrlTrfTxService+0+0)&0ffh
 10535  00117E  1FE1               	comf	(??_USBCtrlTrfTxService+0+1)&0ffh
 10536  001180  4BE0               	infsnz	(??_USBCtrlTrfTxService+0+0)&0ffh
 10537  001182  2BE1               	incf	(??_USBCtrlTrfTxService+0+1)&0ffh
 10538  001184  5021               	movf	((c:_wCount)),c,w
 10539  001186  0100               	movlb	0	; () banked
 10540  001188  25E0               	addwf	(??_USBCtrlTrfTxService+0+0)&0ffh,w
 10541                           	
 10542  00118A  6E21               	movwf	((c:_wCount)),c
 10543  00118C  5022               	movf	((c:_wCount+1)),c,w
 10544  00118E  0100               	movlb	0	; () banked
 10545  001190  21E1               	addwfc	(??_USBCtrlTrfTxService+0+1)&0ffh,w
 10546  001192  6E22               	movwf	1+((c:_wCount)),c
 10547                           	line	420
 10548                           ;usbctrltrf.c: 420: pDst.bRam = (byte*)&CtrlTrfData;
 10549  001194  0106               	movlb	6	; () banked
 10550  001196  0E06               	movlw	high(1536)	;volatile
 10551  001198  6E08               	movwf	((c:_pDst+1)),c
 10552  00119A  0106               	movlb	6	; () banked
 10553  00119C  0E00               	movlw	low(1536)	;volatile
 10554  00119E  6E07               	movwf	((c:_pDst)),c
 10555                           	line	422
 10556                           	
 10557  0011A0                     l3820:; BSR set to: 6
 10558                           
 10559                           ;usbctrltrf.c: 422: if(usb_stat.ctrl_trf_mem == 1)
 10560                           	
 10561  0011A0  A220               	btfss	((c:_usb_stat)),c,1
 10562  0011A2  D001               	goto	u3391
 10563  0011A4  D001               	goto	u3390
 10564  0011A6                     u3391:
 10565  0011A6  D04B               	goto	l3842
 10566  0011A8                     u3390:
 10567  0011A8  D020               	goto	l3832
 10568                           	line	424
 10569                           	
 10570  0011AA                     l3822:; BSR set to: 6
 10571                           
 10572                           ;usbctrltrf.c: 423: {
 10573                           ;usbctrltrf.c: 424: while(byte_to_send._word)
 10574  0011AA  D01F               	goto	l3832
 10575                           	
 10576  0011AC                     l346:; BSR set to: 6
 10577                           
 10578                           	line	426
 10579                           	
 10580  0011AC                     l3824:
 10581                           ;usbctrltrf.c: 425: {
 10582                           ;usbctrltrf.c: 426: *pDst.bRam = *pSrc.bRom;
 10583  0011AC  C00A  FFF6         	movff	(c:_pSrc),tblptrl
 10584  0011B0  C00B  FFF7         	movff	(c:_pSrc+1),tblptrh
 10585  0011B4  6AF8               	clrf	tblptru
 10586  0011B6  C007  FFD9         	movff	(c:_pDst),fsr2l
 10587  0011BA  C008  FFDA         	movff	(c:_pDst+1),fsr2h
 10588  0011BE  0E07               	movlw	high __ramtop-1
 10589  0011C0  64F7               	cpfsgt	tblptrh
 10590  0011C2  D003               	bra	u3407
 10591  0011C4  0008               	tblrd	*
 10592                           	
 10593  0011C6  50F5               	movf	tablat,w
 10594  0011C8  D005               	bra	u3400
 10595  0011CA                     u3407:
 10596  0011CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10597  0011CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10598  0011D2  50EF               	movf	indf0,w
 10599  0011D4                     u3400:
 10600  0011D4  6EDF               	movwf	indf2
 10601                           	line	427
 10602                           	
 10603  0011D6                     l3826:
 10604                           ;usbctrltrf.c: 427: pDst.bRam++;
 10605  0011D6  4A07               	infsnz	((c:_pDst)),c
 10606  0011D8  2A08               	incf	((c:_pDst+1)),c
 10607                           	line	428
 10608                           	
 10609  0011DA                     l3828:
 10610                           ;usbctrltrf.c: 428: pSrc.bRom++;
 10611  0011DA  4A0A               	infsnz	((c:_pSrc)),c
 10612  0011DC  2A0B               	incf	((c:_pSrc+1)),c
 10613                           	line	429
 10614                           	
 10615  0011DE                     l3830:
 10616                           ;usbctrltrf.c: 429: byte_to_send._word--;
 10617  0011DE  0100               	movlb	0	; () banked
 10618  0011E0  0100               	movlb	0	; () banked
 10619  0011E2  07E2               	decf	((USBCtrlTrfTxService@byte_to_send))&0ffh
 10620  0011E4  A0D8               	btfss	status,0
 10621  0011E6  07E3               	decf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh
 10622  0011E8  D000               	goto	l3832
 10623                           	line	430
 10624                           	
 10625  0011EA                     l345:; BSR set to: 0
 10626                           
 10627                           	line	424
 10628                           	
 10629  0011EA                     l3832:
 10630  0011EA  0100               	movlb	0	; () banked
 10631  0011EC  0100               	movlb	0	; () banked
 10632  0011EE  51E3               	movf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh,w
 10633  0011F0  11E2               	iorwf ((USBCtrlTrfTxService@byte_to_send))&0ffh,w
 10634                           
 10635  0011F2  A4D8               	btfss	status,2
 10636  0011F4  D001               	goto	u3411
 10637  0011F6  D001               	goto	u3410
 10638  0011F8                     u3411:
 10639  0011F8  D7D9               	goto	l3824
 10640  0011FA                     u3410:
 10641  0011FA  D02B               	goto	l352
 10642                           	
 10643  0011FC                     l347:; BSR set to: 0
 10644                           
 10645                           	line	431
 10646                           ;usbctrltrf.c: 430: }
 10647                           ;usbctrltrf.c: 431: }
 10648  0011FC  D02A               	goto	l352
 10649                           	line	432
 10650                           	
 10651  0011FE                     l344:; BSR set to: 0
 10652                           
 10653                           	line	434
 10654                           ;usbctrltrf.c: 432: else
 10655                           ;usbctrltrf.c: 433: {
 10656                           ;usbctrltrf.c: 434: while(byte_to_send._word)
 10657  0011FE  D01F               	goto	l3842
 10658                           	
 10659  001200                     l350:; BSR set to: 0
 10660                           
 10661                           	line	436
 10662                           	
 10663  001200                     l3834:; BSR set to: 0
 10664                           
 10665                           ;usbctrltrf.c: 435: {
 10666                           ;usbctrltrf.c: 436: *pDst.bRam = *pSrc.bRam;
 10667  001200  C00A  FFF6         	movff	(c:_pSrc),tblptrl
 10668  001204  C00B  FFF7         	movff	(c:_pSrc+1),tblptrh
 10669  001208  6AF8               	clrf	tblptru
 10670  00120A  C007  FFD9         	movff	(c:_pDst),fsr2l
 10671  00120E  C008  FFDA         	movff	(c:_pDst+1),fsr2h
 10672  001212  0E07               	movlw	high __ramtop-1
 10673  001214  64F7               	cpfsgt	tblptrh
 10674  001216  D003               	bra	u3427
 10675  001218  0008               	tblrd	*
 10676                           	
 10677  00121A  50F5               	movf	tablat,w
 10678  00121C  D005               	bra	u3420
 10679  00121E                     u3427:
 10680  00121E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10681  001222  CFF7 FFEA          	movff	tblptrh,fsr0h
 10682  001226  50EF               	movf	indf0,w
 10683  001228                     u3420:
 10684  001228  6EDF               	movwf	indf2
 10685                           	line	437
 10686                           	
 10687  00122A                     l3836:
 10688                           ;usbctrltrf.c: 437: pDst.bRam++;
 10689  00122A  4A07               	infsnz	((c:_pDst)),c
 10690  00122C  2A08               	incf	((c:_pDst+1)),c
 10691                           	line	438
 10692                           	
 10693  00122E                     l3838:
 10694                           ;usbctrltrf.c: 438: pSrc.bRam++;
 10695  00122E  4A0A               	infsnz	((c:_pSrc)),c
 10696  001230  2A0B               	incf	((c:_pSrc+1)),c
 10697                           	line	439
 10698                           	
 10699  001232                     l3840:
 10700                           ;usbctrltrf.c: 439: byte_to_send._word--;
 10701  001232  0100               	movlb	0	; () banked
 10702  001234  0100               	movlb	0	; () banked
 10703  001236  07E2               	decf	((USBCtrlTrfTxService@byte_to_send))&0ffh
 10704  001238  A0D8               	btfss	status,0
 10705  00123A  07E3               	decf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh
 10706  00123C  D000               	goto	l3842
 10707                           	line	440
 10708                           	
 10709  00123E                     l349:; BSR set to: 0
 10710                           
 10711                           	line	434
 10712                           	
 10713  00123E                     l3842:
 10714  00123E  0100               	movlb	0	; () banked
 10715  001240  0100               	movlb	0	; () banked
 10716  001242  51E3               	movf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh,w
 10717  001244  11E2               	iorwf ((USBCtrlTrfTxService@byte_to_send))&0ffh,w
 10718                           
 10719  001246  A4D8               	btfss	status,2
 10720  001248  D001               	goto	u3431
 10721  00124A  D001               	goto	u3430
 10722  00124C                     u3431:
 10723  00124C  D7D9               	goto	l3834
 10724  00124E                     u3430:
 10725  00124E  D001               	goto	l352
 10726                           	
 10727  001250                     l351:; BSR set to: 0
 10728                           
 10729  001250  D000               	goto	l352
 10730                           	line	441
 10731                           	
 10732  001252                     l348:; BSR set to: 0
 10733                           
 10734                           	line	443
 10735                           	
 10736  001252                     l352:; BSR set to: 0
 10737                           
 10738  001252  0012               	return
 10739                           	opt stack 0
 10740                           GLOBAL	__end_of_USBCtrlTrfTxService
 10741  001254                     	__end_of_USBCtrlTrfTxService:
 10742                           	signat	_USBCtrlTrfTxService,88
 10743                           	global	_USBModuleEnable
 10744                           
 10745 ;; *************** function _USBModuleEnable *****************
 10746 ;; Defined at:
 10747 ;;		line 150 in file "../usbdrv.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;		None               void
 10754 ;; Registers used:
 10755 ;;		wreg, status,2
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10763 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10764 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10765 ;;Total ram usage:        1 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    2
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_USBCheckBusStatus
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           psect	text26,class=CODE,space=0,reloc=2
 10775                           global __ptext26
 10776  0023D8                     __ptext26:
 10777                           psect	text26
 10778                           	file	"../usbdrv.c"
 10779                           	line	150
 10780                           	global	__size_of_USBModuleEnable
 10781  0000                     	__size_of_USBModuleEnable	equ	__end_of_USBModuleEnable-_USBModuleEnable
 10782                           	
 10783  0023D8                     _USBModuleEnable:; BSR set to: 0
 10784                           
 10785                           	opt	stack 26
 10786                           	line	151
 10787                           	
 10788  0023D8                     l3844:
 10789                           ;usbdrv.c: 151: UCON = 0;
 10790  0023D8  0E00               	movlw	low(0)
 10791  0023DA  6E60               	movwf	((c:3936)),c	;volatile
 10792                           	line	152
 10793                           ;usbdrv.c: 152: UIE = 0;
 10794  0023DC  0E00               	movlw	low(0)
 10795  0023DE  6E64               	movwf	((c:3940)),c	;volatile
 10796                           	line	153
 10797                           	
 10798  0023E0                     l3846:
 10799                           ;usbdrv.c: 153: UCONbits.USBEN = 1;
 10800  0023E0  8660               	bsf	((c:3936)),c,3	;volatile
 10801                           	line	154
 10802                           	
 10803  0023E2                     l3848:
 10804                           ;usbdrv.c: 154: usb_device_state = 1;
 10805  0023E2  0100               	movlb	0	; () banked
 10806  0023E4  6FE0               	movwf	(??_USBModuleEnable+0+0)&0ffh
 10807  0023E6  0E01               	movlw	low(01h)
 10808  0023E8  6E1F               	movwf	((c:_usb_device_state)),c
 10809  0023EA  0100               	movlb	0	; () banked
 10810  0023EC  51E0               	movf	(??_USBModuleEnable+0+0)&0ffh,w
 10811                           	line	155
 10812                           	
 10813  0023EE                     l439:; BSR set to: 0
 10814                           
 10815  0023EE  0012               	return
 10816                           	opt stack 0
 10817                           GLOBAL	__end_of_USBModuleEnable
 10818  0023F0                     	__end_of_USBModuleEnable:
 10819                           	signat	_USBModuleEnable,88
 10820                           	global	_USBWakeFromSuspend
 10821                           
 10822 ;; *************** function _USBWakeFromSuspend *****************
 10823 ;; Defined at:
 10824 ;;		line 403 in file "../usbdrv.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;		None
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;		None
 10829 ;; Return value:  Size  Location     Type
 10830 ;;		None               void
 10831 ;; Registers used:
 10832 ;;		None
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10838 ;;      Params:         0       0       0       0       0       0       0       0       0
 10839 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10841 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10842 ;;Total ram usage:        0 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:    2
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		_USBDriverService
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           psect	text27,class=CODE,space=0,reloc=2
 10852                           global __ptext27
 10853  002406                     __ptext27:
 10854                           psect	text27
 10855                           	file	"../usbdrv.c"
 10856                           	line	403
 10857                           	global	__size_of_USBWakeFromSuspend
 10858  0000                     	__size_of_USBWakeFromSuspend	equ	__end_of_USBWakeFromSuspend-_USBWakeFromSuspend
 10859                           	
 10860  002406                     _USBWakeFromSuspend:; BSR set to: 0
 10861                           
 10862                           	opt	stack 26
 10863                           	line	408
 10864                           	
 10865  002406                     l3850:
 10866                           ;usbdrv.c: 408: UCONbits.SUSPND = 0;
 10867  002406  9260               	bcf	((c:3936)),c,1	;volatile
 10868                           	line	409
 10869                           ;usbdrv.c: 409: UIEbits.ACTVIE = 0;
 10870  002408  9464               	bcf	((c:3940)),c,2	;volatile
 10871                           	line	425
 10872                           ;usbdrv.c: 425: while(UIRbits.ACTVIF){UIRbits.ACTVIF = 0;}
 10873  00240A  D001               	goto	l460
 10874                           	
 10875  00240C                     l461:
 10876  00240C  9465               	bcf	((c:3941)),c,2	;volatile
 10877                           	
 10878  00240E                     l460:
 10879                           	
 10880  00240E  B465               	btfsc	((c:3941)),c,2	;volatile
 10881  002410  D001               	goto	u3441
 10882  002412  D001               	goto	u3440
 10883  002414                     u3441:
 10884  002414  D7FB               	goto	l461
 10885  002416                     u3440:
 10886  002416  D000               	goto	l463
 10887                           	
 10888  002418                     l462:
 10889                           	line	427
 10890                           	
 10891  002418                     l463:
 10892  002418  0012               	return
 10893                           	opt stack 0
 10894                           GLOBAL	__end_of_USBWakeFromSuspend
 10895  00241A                     	__end_of_USBWakeFromSuspend:
 10896                           	signat	_USBWakeFromSuspend,88
 10897                           	global	_USBProtocolResetHandler
 10898                           
 10899 ;; *************** function _USBProtocolResetHandler *****************
 10900 ;; Defined at:
 10901 ;;		line 680 in file "../usbdrv.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;		None
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;		None
 10906 ;; Return value:  Size  Location     Type
 10907 ;;		None               void
 10908 ;; Registers used:
 10909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10915 ;;      Params:         0       0       0       0       0       0       0       0       0
 10916 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10917 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10918 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10919 ;;Total ram usage:        1 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    3
 10922 ;; This function calls:
 10923 ;;		_ClearArray
 10924 ;;		_USBPrepareForNextSetupTrf
 10925 ;; This function is called by:
 10926 ;;		_USBDriverService
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           psect	text28,class=CODE,space=0,reloc=2
 10930                           global __ptext28
 10931  001D60                     __ptext28:
 10932                           psect	text28
 10933                           	file	"../usbdrv.c"
 10934                           	line	680
 10935                           	global	__size_of_USBProtocolResetHandler
 10936  0000                     	__size_of_USBProtocolResetHandler	equ	__end_of_USBProtocolResetHandler-_USBProtocolRese
                                 tHandler
 10937                           	
 10938  001D60                     _USBProtocolResetHandler:
 10939                           	opt	stack 25
 10940                           	line	681
 10941                           	
 10942  001D60                     l3852:
 10943                           ;usbdrv.c: 681: UEIR = 0;
 10944  001D60  0E00               	movlw	low(0)
 10945  001D62  6E67               	movwf	((c:3943)),c	;volatile
 10946                           	line	682
 10947                           ;usbdrv.c: 682: UIR = 0;
 10948  001D64  0E00               	movlw	low(0)
 10949  001D66  6E65               	movwf	((c:3941)),c	;volatile
 10950                           	line	683
 10951                           ;usbdrv.c: 683: UEIE = 0b10011111;
 10952  001D68  0E9F               	movlw	low(09Fh)
 10953  001D6A  6E66               	movwf	((c:3942)),c	;volatile
 10954                           	line	684
 10955                           ;usbdrv.c: 684: UIE = 0b01111011;
 10956  001D6C  0E7B               	movlw	low(07Bh)
 10957  001D6E  6E64               	movwf	((c:3940)),c	;volatile
 10958                           	line	686
 10959                           ;usbdrv.c: 686: UADDR = 0x00;
 10960  001D70  0E00               	movlw	low(0)
 10961  001D72  6E63               	movwf	((c:3939)),c	;volatile
 10962                           	line	687
 10963                           	
 10964  001D74                     l3854:
 10965                           ;usbdrv.c: 687: ClearArray((byte*)&UEP1,15);;
 10966  001D74  0E0F               	movlw	high((c:3947))	;volatile
 10967  001D76  0100               	movlb	0	; () banked
 10968  001D78  0100               	movlb	0	; () banked
 10969  001D7A  6FE1               	movwf	((?_ClearArray+1))&0ffh
 10970  001D7C  0E6B               	movlw	low((c:3947))	;volatile
 10971  001D7E  0100               	movlb	0	; () banked
 10972  001D80  6FE0               	movwf	((?_ClearArray))&0ffh
 10973  001D82  0100               	movlb	0	; () banked
 10974  001D84  6FE3               	movwf	(??_USBProtocolResetHandler+0+0)&0ffh
 10975  001D86  0E0F               	movlw	low(0Fh)
 10976  001D88  0100               	movlb	0	; () banked
 10977  001D8A  0100               	movlb	0	; () banked
 10978  001D8C  6FE2               	movwf	(0+(?_ClearArray+02h))&0ffh
 10979  001D8E  0100               	movlb	0	; () banked
 10980  001D90  51E3               	movf	(??_USBProtocolResetHandler+0+0)&0ffh,w
 10981  001D92  0100               	movlb	0	; () banked
 10982  001D94  ECDC  F011         	call	_ClearArray	;wreg free
 10983                           	line	688
 10984                           	
 10985  001D98                     l3856:
 10986                           ;usbdrv.c: 688: UEP0 = 0x06|0x10;
 10987  001D98  0E16               	movlw	low(016h)
 10988  001D9A  6E6A               	movwf	((c:3946)),c	;volatile
 10989                           	line	690
 10990                           ;usbdrv.c: 690: while(UIRbits.TRNIF == 1)
 10991  001D9C  D006               	goto	l471
 10992                           	
 10993  001D9E                     l472:
 10994                           	line	692
 10995                           ;usbdrv.c: 691: {
 10996                           ;usbdrv.c: 692: UIRbits.TRNIF = 0;
 10997  001D9E  9665               	bcf	((c:3941)),c,3	;volatile
 10998                           	line	706
 10999                           # 706 "../usbdrv.c"
 11000  001DA0  F000               nop ;# 
 11001                           # 706 "../usbdrv.c"
 11002  001DA2  F000               nop ;# 
 11003                           # 706 "../usbdrv.c"
 11004  001DA4  F000               nop ;# 
 11005                           # 706 "../usbdrv.c"
 11006  001DA6  F000               nop ;# 
 11007                           # 706 "../usbdrv.c"
 11008  001DA8  F000               nop ;# 
 11009                           psect	text28
 11010                           	line	707
 11011                           	
 11012  001DAA                     l471:
 11013                           	line	690
 11014                           	
 11015  001DAA  B665               	btfsc	((c:3941)),c,3	;volatile
 11016  001DAC  D001               	goto	u3451
 11017  001DAE  D001               	goto	u3450
 11018  001DB0                     u3451:
 11019  001DB0  D7F6               	goto	l472
 11020  001DB2                     u3450:
 11021                           	
 11022  001DB2                     l473:
 11023                           	line	709
 11024                           ;usbdrv.c: 707: }
 11025                           ;usbdrv.c: 709: UCONbits.PKTDIS = 0;
 11026  001DB2  9860               	bcf	((c:3936)),c,4	;volatile
 11027                           	line	710
 11028                           	
 11029  001DB4                     l3858:
 11030                           ;usbdrv.c: 710: USBPrepareForNextSetupTrf();
 11031  001DB4  ECF8  F011         	call	_USBPrepareForNextSetupTrf	;wreg free
 11032                           	line	712
 11033                           	
 11034  001DB8                     l3860:
 11035                           ;usbdrv.c: 712: ep0Bo.Cnt = 8;
 11036  001DB8  0E08               	movlw	low(08h)
 11037  001DBA  0104               	movlb	4	; () banked
 11038  001DBC  0104               	movlb	4	; () banked
 11039  001DBE  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
 11040                           	line	713
 11041                           	
 11042  001DC0                     l3862:; BSR set to: 4
 11043                           
 11044                           ;usbdrv.c: 713: ep0Bo.ADR = (byte*)(&SetupPkt);
 11045  001DC0  0105               	movlb	5	; () banked
 11046  001DC2  0E05               	movlw	high(1280)	;volatile
 11047  001DC4  0104               	movlb	4	; () banked
 11048  001DC6  0104               	movlb	4	; () banked
 11049  001DC8  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
 11050  001DCA  0105               	movlb	5	; () banked
 11051  001DCC  0E00               	movlw	low(1280)	;volatile
 11052  001DCE  0104               	movlb	4	; () banked
 11053  001DD0  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
 11054                           	line	714
 11055                           	
 11056  001DD2                     l3864:; BSR set to: 4
 11057                           
 11058                           ;usbdrv.c: 714: ep0Bo.Stat._byte = 0x80|0x00|0x08|0x04;
 11059  001DD2  0E8C               	movlw	low(08Ch)
 11060  001DD4  0104               	movlb	4	; () banked
 11061  001DD6  0104               	movlb	4	; () banked
 11062  001DD8  6F00               	movwf	((1024))&0ffh	;volatile
 11063                           	line	716
 11064                           	
 11065  001DDA                     l3866:; BSR set to: 4
 11066                           
 11067                           ;usbdrv.c: 716: usb_stat.RemoteWakeup = 0;
 11068  001DDA  9020               	bcf	((c:_usb_stat)),c,0
 11069                           	line	717
 11070                           	
 11071  001DDC                     l3868:; BSR set to: 4
 11072                           
 11073                           ;usbdrv.c: 717: usb_active_cfg = 0;
 11074  001DDC  0100               	movlb	0	; () banked
 11075  001DDE  6FE3               	movwf	(??_USBProtocolResetHandler+0+0)&0ffh
 11076  001DE0  0E00               	movlw	low(0)
 11077  001DE2  6E25               	movwf	((c:_usb_active_cfg)),c
 11078  001DE4  0100               	movlb	0	; () banked
 11079  001DE6  51E3               	movf	(??_USBProtocolResetHandler+0+0)&0ffh,w
 11080                           	line	718
 11081                           	
 11082  001DE8                     l3870:; BSR set to: 0
 11083                           
 11084                           ;usbdrv.c: 718: usb_device_state = 3;
 11085  001DE8  0100               	movlb	0	; () banked
 11086  001DEA  6FE3               	movwf	(??_USBProtocolResetHandler+0+0)&0ffh
 11087  001DEC  0E03               	movlw	low(03h)
 11088  001DEE  6E1F               	movwf	((c:_usb_device_state)),c
 11089  001DF0  0100               	movlb	0	; () banked
 11090  001DF2  51E3               	movf	(??_USBProtocolResetHandler+0+0)&0ffh,w
 11091                           	line	719
 11092                           	
 11093  001DF4                     l474:; BSR set to: 0
 11094                           
 11095  001DF4  0012               	return
 11096                           	opt stack 0
 11097                           GLOBAL	__end_of_USBProtocolResetHandler
 11098  001DF6                     	__end_of_USBProtocolResetHandler:
 11099                           	signat	_USBProtocolResetHandler,88
 11100                           	global	_ClearArray
 11101                           
 11102 ;; *************** function _ClearArray *****************
 11103 ;; Defined at:
 11104 ;;		line 724 in file "../usbdrv.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  startAdr        2    0[BANK0 ] PTR unsigned char 
 11107 ;;		 -> usb_alt_intf(1), UEP1(1), 
 11108 ;;  count           1    2[BANK0 ] unsigned char 
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;		None
 11111 ;; Return value:  Size  Location     Type
 11112 ;;		None               void
 11113 ;; Registers used:
 11114 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/0
 11117 ;;		On exit  : 0/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11120 ;;      Params:         0       3       0       0       0       0       0       0       0
 11121 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11122 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11123 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11124 ;;Total ram usage:        3 bytes
 11125 ;; Hardware stack levels used:    1
 11126 ;; Hardware stack levels required when called:    2
 11127 ;; This function calls:
 11128 ;;		Nothing
 11129 ;; This function is called by:
 11130 ;;		_USBStdSetCfgHandler
 11131 ;;		_USBProtocolResetHandler
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           psect	text29,class=CODE,space=0,reloc=2
 11135                           global __ptext29
 11136  0023B8                     __ptext29:
 11137                           psect	text29
 11138                           	file	"../usbdrv.c"
 11139                           	line	724
 11140                           	global	__size_of_ClearArray
 11141  0000                     	__size_of_ClearArray	equ	__end_of_ClearArray-_ClearArray
 11142                           	
 11143  0023B8                     _ClearArray:; BSR set to: 0
 11144                           
 11145                           	opt	stack 22
 11146                           	line	728
 11147                           ;usbdrv.c: 728: do{
 11148                           	
 11149  0023B8                     l477:
 11150                           	line	730
 11151                           	
 11152  0023B8                     l3622:
 11153                           ;usbdrv.c: 730: *startAdr = 0;
 11154  0023B8  C0E0  FFD9         	movff	(ClearArray@startAdr),fsr2l
 11155  0023BC  C0E1  FFDA         	movff	(ClearArray@startAdr+1),fsr2h
 11156  0023C0  0E00               	movlw	low(0)
 11157  0023C2  6EDF               	movwf	indf2
 11158                           	line	731
 11159                           	
 11160  0023C4                     l3624:
 11161                           ;usbdrv.c: 731: startAdr++;
 11162  0023C4  0100               	movlb	0	; () banked
 11163  0023C6  0100               	movlb	0	; () banked
 11164  0023C8  4BE0               	infsnz	((ClearArray@startAdr))&0ffh
 11165  0023CA  2BE1               	incf	((ClearArray@startAdr+1))&0ffh
 11166                           	line	732
 11167                           	
 11168  0023CC                     l3626:; BSR set to: 0
 11169                           
 11170                           ;usbdrv.c: 732: }while(--count);
 11171  0023CC  0100               	movlb	0	; () banked
 11172  0023CE  0100               	movlb	0	; () banked
 11173  0023D0  2FE2               	decfsz	((ClearArray@count))&0ffh
 11174                           	
 11175  0023D2  D7F2               	goto	l477
 11176  0023D4  D000               	goto	l479
 11177                           	
 11178  0023D6                     l478:; BSR set to: 0
 11179                           
 11180                           	line	733
 11181                           	
 11182  0023D6                     l479:; BSR set to: 0
 11183                           
 11184  0023D6  0012               	return
 11185                           	opt stack 0
 11186                           GLOBAL	__end_of_ClearArray
 11187  0023D8                     	__end_of_ClearArray:
 11188                           	signat	_ClearArray,8312
 11189                           	global	_USBPrepareForNextSetupTrf
 11190                           
 11191 ;; *************** function _USBPrepareForNextSetupTrf *****************
 11192 ;; Defined at:
 11193 ;;		line 633 in file "../usbctrltrf.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;		None
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;		None
 11198 ;; Return value:  Size  Location     Type
 11199 ;;		None               void
 11200 ;; Registers used:
 11201 ;;		wreg, status,2
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11207 ;;      Params:         0       0       0       0       0       0       0       0       0
 11208 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11209 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11210 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11211 ;;Total ram usage:        1 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    2
 11214 ;; This function calls:
 11215 ;;		Nothing
 11216 ;; This function is called by:
 11217 ;;		_USBCtrlTrfOutHandler
 11218 ;;		_USBCtrlTrfInHandler
 11219 ;;		_USBProtocolResetHandler
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           psect	text30,class=CODE,space=0,reloc=2
 11223                           global __ptext30
 11224  0023F0                     __ptext30:
 11225                           psect	text30
 11226                           	file	"../usbctrltrf.c"
 11227                           	line	633
 11228                           	global	__size_of_USBPrepareForNextSetupTrf
 11229  0000                     	__size_of_USBPrepareForNextSetupTrf	equ	__end_of_USBPrepareForNextSetupTrf-_USBPrepareF
                                 orNextSetupTrf
 11230                           	
 11231  0023F0                     _USBPrepareForNextSetupTrf:; BSR set to: 0
 11232                           
 11233                           	opt	stack 24
 11234                           	line	634
 11235                           	
 11236  0023F0                     l3794:
 11237                           ;usbctrltrf.c: 634: ctrl_trf_state = 0;
 11238  0023F0  0100               	movlb	0	; () banked
 11239  0023F2  6FE0               	movwf	(??_USBPrepareForNextSetupTrf+0+0)&0ffh
 11240  0023F4  0E00               	movlw	low(0)
 11241  0023F6  6E1C               	movwf	((c:_ctrl_trf_state)),c
 11242  0023F8  0100               	movlb	0	; () banked
 11243  0023FA  51E0               	movf	(??_USBPrepareForNextSetupTrf+0+0)&0ffh,w
 11244                           	line	650
 11245                           	
 11246  0023FC                     l3796:; BSR set to: 0
 11247                           
 11248                           ;usbctrltrf.c: 650: ep0Bi.Stat._byte = 0x00;
 11249  0023FC  0E00               	movlw	low(0)
 11250  0023FE  0104               	movlb	4	; () banked
 11251  002400  0104               	movlb	4	; () banked
 11252  002402  6F04               	movwf	((1028))&0ffh	;volatile
 11253                           	line	654
 11254                           	
 11255  002404                     l369:; BSR set to: 4
 11256                           
 11257  002404  0012               	return
 11258                           	opt stack 0
 11259                           GLOBAL	__end_of_USBPrepareForNextSetupTrf
 11260  002406                     	__end_of_USBPrepareForNextSetupTrf:
 11261                           	signat	_USBPrepareForNextSetupTrf,88
 11262                           	global	_USBSuspend
 11263                           
 11264 ;; *************** function _USBSuspend *****************
 11265 ;; Defined at:
 11266 ;;		line 337 in file "../usbdrv.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;		None
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;		None
 11271 ;; Return value:  Size  Location     Type
 11272 ;;		None               void
 11273 ;; Registers used:
 11274 ;;		None
 11275 ;; Tracked objects:
 11276 ;;		On entry : 0/0
 11277 ;;		On exit  : 0/0
 11278 ;;		Unchanged: 0/0
 11279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11280 ;;      Params:         0       0       0       0       0       0       0       0       0
 11281 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11282 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11283 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11284 ;;Total ram usage:        0 bytes
 11285 ;; Hardware stack levels used:    1
 11286 ;; Hardware stack levels required when called:    2
 11287 ;; This function calls:
 11288 ;;		Nothing
 11289 ;; This function is called by:
 11290 ;;		_USBDriverService
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           psect	text31,class=CODE,space=0,reloc=2
 11294                           global __ptext31
 11295  00241A                     __ptext31:
 11296                           psect	text31
 11297                           	file	"../usbdrv.c"
 11298                           	line	337
 11299                           	global	__size_of_USBSuspend
 11300  0000                     	__size_of_USBSuspend	equ	__end_of_USBSuspend-_USBSuspend
 11301                           	
 11302  00241A                     _USBSuspend:; BSR set to: 4
 11303                           
 11304                           	opt	stack 26
 11305                           	line	361
 11306                           	
 11307  00241A                     l3872:
 11308                           ;usbdrv.c: 361: UIEbits.ACTVIE = 1;
 11309  00241A  8464               	bsf	((c:3940)),c,2	;volatile
 11310                           	line	362
 11311                           ;usbdrv.c: 362: UIRbits.IDLEIF = 0;
 11312  00241C  9865               	bcf	((c:3941)),c,4	;volatile
 11313                           	line	363
 11314                           ;usbdrv.c: 363: UCONbits.SUSPND = 1;
 11315  00241E  8260               	bsf	((c:3936)),c,1	;volatile
 11316                           	line	371
 11317                           ;usbdrv.c: 371: PIR3bits.USBIF = 0;
 11318  002420  94A4               	bcf	((c:4004)),c,2	;volatile
 11319                           	line	373
 11320                           ;usbdrv.c: 373: PIE3bits.USBIE = 1;
 11321  002422  84A3               	bsf	((c:4003)),c,2	;volatile
 11322                           	line	375
 11323                           # 375 "../usbdrv.c"
 11324  002424  0003               sleep ;# 
 11325                           psect	text31
 11326                           	line	381
 11327                           ;usbdrv.c: 381: PIE3bits.USBIE = 0;
 11328  002426  94A3               	bcf	((c:4003)),c,2	;volatile
 11329                           	line	385
 11330                           	
 11331  002428                     l457:
 11332  002428  0012               	return
 11333                           	opt stack 0
 11334                           GLOBAL	__end_of_USBSuspend
 11335  00242A                     	__end_of_USBSuspend:
 11336                           	signat	_USBSuspend,88
 11337                           	global	_USBStallHandler
 11338                           
 11339 ;; *************** function _USBStallHandler *****************
 11340 ;; Defined at:
 11341 ;;		line 570 in file "../usbdrv.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;		None
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;		None               void
 11348 ;; Registers used:
 11349 ;;		wreg, status,2, status,0
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11358 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11359 ;;Total ram usage:        0 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:    2
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_USBDriverService
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           psect	text32,class=CODE,space=0,reloc=2
 11369                           global __ptext32
 11370  0022E4                     __ptext32:
 11371                           psect	text32
 11372                           	file	"../usbdrv.c"
 11373                           	line	570
 11374                           	global	__size_of_USBStallHandler
 11375  0000                     	__size_of_USBStallHandler	equ	__end_of_USBStallHandler-_USBStallHandler
 11376                           	
 11377  0022E4                     _USBStallHandler:
 11378                           	opt	stack 26
 11379                           	line	580
 11380                           	
 11381  0022E4                     l3874:
 11382                           ;usbdrv.c: 580: if(UEP0bits.EPSTALL == 1)
 11383                           	
 11384  0022E4  A06A               	btfss	((c:3946)),c,0	;volatile
 11385  0022E6  D001               	goto	u3461
 11386  0022E8  D001               	goto	u3460
 11387  0022EA                     u3461:
 11388  0022EA  D017               	goto	l3884
 11389  0022EC                     u3460:
 11390                           	line	614
 11391                           	
 11392  0022EC                     l3876:
 11393                           ;usbdrv.c: 581: {
 11394                           ;usbdrv.c: 614: if((ep0Bo.Stat._byte == 0x80) && (ep0Bi.Stat._byte == (0x80|0x04)))
 11395  0022EC  0104               	movlb	4	; () banked
 11396  0022EE  0104               	movlb	4	; () banked
 11397  0022F0  5100               	movf	((1024))&0ffh,w	;volatile
 11398  0022F2  0A80               	xorlw	128
 11399                           
 11400  0022F4  A4D8               	btfss	status,2
 11401  0022F6  D001               	goto	u3471
 11402  0022F8  D001               	goto	u3470
 11403  0022FA                     u3471:
 11404  0022FA  D00D               	goto	l3882
 11405  0022FC                     u3470:
 11406                           	
 11407  0022FC                     l3878:; BSR set to: 4
 11408                           
 11409  0022FC  0104               	movlb	4	; () banked
 11410  0022FE  0104               	movlb	4	; () banked
 11411  002300  5104               	movf	((1028))&0ffh,w	;volatile
 11412  002302  0A84               	xorlw	132
 11413                           
 11414  002304  A4D8               	btfss	status,2
 11415  002306  D001               	goto	u3481
 11416  002308  D001               	goto	u3480
 11417  00230A                     u3481:
 11418  00230A  D005               	goto	l3882
 11419  00230C                     u3480:
 11420                           	line	617
 11421                           	
 11422  00230C                     l3880:; BSR set to: 4
 11423                           
 11424                           ;usbdrv.c: 615: {
 11425                           ;usbdrv.c: 617: ep0Bo.Stat._byte = 0x80|0x00|0x08|0x04;
 11426  00230C  0E8C               	movlw	low(08Ch)
 11427  00230E  0104               	movlb	4	; () banked
 11428  002310  0104               	movlb	4	; () banked
 11429  002312  6F00               	movwf	((1024))&0ffh	;volatile
 11430  002314  D000               	goto	l3882
 11431                           	line	618
 11432                           	
 11433  002316                     l467:; BSR set to: 4
 11434                           
 11435                           	line	621
 11436                           	
 11437  002316                     l3882:; BSR set to: 4
 11438                           
 11439                           ;usbdrv.c: 618: }
 11440                           ;usbdrv.c: 621: UEP0bits.EPSTALL = 0;
 11441  002316  906A               	bcf	((c:3946)),c,0	;volatile
 11442  002318  D000               	goto	l3884
 11443                           	line	622
 11444                           	
 11445  00231A                     l466:; BSR set to: 4
 11446                           
 11447                           	line	623
 11448                           	
 11449  00231A                     l3884:
 11450                           ;usbdrv.c: 622: }
 11451                           ;usbdrv.c: 623: UIRbits.STALLIF = 0;
 11452  00231A  9A65               	bcf	((c:3941)),c,5	;volatile
 11453                           	line	624
 11454                           	
 11455  00231C                     l468:
 11456  00231C  0012               	return
 11457                           	opt stack 0
 11458                           GLOBAL	__end_of_USBStallHandler
 11459  00231E                     	__end_of_USBStallHandler:
 11460                           	signat	_USBStallHandler,88
 11461                           	global	_ClearWatchdog
 11462                           
 11463 ;; *************** function _ClearWatchdog *****************
 11464 ;; Defined at:
 11465 ;;		line 670 in file "../BootPIC18NonJ.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;		None
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;		None
 11470 ;; Return value:  Size  Location     Type
 11471 ;;		None               void
 11472 ;; Registers used:
 11473 ;;		None
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11479 ;;      Params:         0       0       0       0       0       0       0       0       0
 11480 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11481 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11482 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11483 ;;Total ram usage:        0 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; Hardware stack levels required when called:    2
 11486 ;; This function calls:
 11487 ;;		Nothing
 11488 ;; This function is called by:
 11489 ;;		_ProcessIO
 11490 ;; This function uses a non-reentrant model
 11491 ;;
 11492                           psect	text33,class=CODE,space=0,reloc=2
 11493                           global __ptext33
 11494  002434                     __ptext33:
 11495                           psect	text33
 11496                           	file	"../BootPIC18NonJ.c"
 11497                           	line	670
 11498                           	global	__size_of_ClearWatchdog
 11499  0000                     	__size_of_ClearWatchdog	equ	__end_of_ClearWatchdog-_ClearWatchdog
 11500                           	
 11501  002434                     _ClearWatchdog:
 11502                           	opt	stack 27
 11503                           	line	671
 11504                           	
 11505  002434                     l3886:
 11506                           # 671 "../BootPIC18NonJ.c"
 11507  002434  0004               clrwdt ;# 
 11508                           psect	text33
 11509                           	line	672
 11510                           	
 11511  002436                     l698:
 11512  002436  0012               	return
 11513                           	opt stack 0
 11514                           GLOBAL	__end_of_ClearWatchdog
 11515  002438                     	__end_of_ClearWatchdog:
 11516                           	signat	_ClearWatchdog,88
 11517                           	global	_WriteConfigBits
 11518                           
 11519 ;; *************** function _WriteConfigBits *****************
 11520 ;; Defined at:
 11521 ;;		line 582 in file "../BootPIC18NonJ.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;		None
 11524 ;; Auto vars:     Size  Location     Type
 11525 ;;		None
 11526 ;; Return value:  Size  Location     Type
 11527 ;;		None               void
 11528 ;; Registers used:
 11529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11530 ;; Tracked objects:
 11531 ;;		On entry : 0/0
 11532 ;;		On exit  : 0/0
 11533 ;;		Unchanged: 0/0
 11534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11535 ;;      Params:         0       0       0       0       0       0       0       0       0
 11536 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11537 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11538 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11539 ;;Total ram usage:        4 bytes
 11540 ;; Hardware stack levels used:    1
 11541 ;; Hardware stack levels required when called:    3
 11542 ;; This function calls:
 11543 ;;		_UnlockAndActivate
 11544 ;; This function is called by:
 11545 ;;		_ProcessIO
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           psect	text34,class=CODE,space=0,reloc=2
 11549                           global __ptext34
 11550  001CC4                     __ptext34:
 11551                           psect	text34
 11552                           	file	"../BootPIC18NonJ.c"
 11553                           	line	582
 11554                           	global	__size_of_WriteConfigBits
 11555  0000                     	__size_of_WriteConfigBits	equ	__end_of_WriteConfigBits-_WriteConfigBits
 11556                           	
 11557  001CC4                     _WriteConfigBits:
 11558                           	opt	stack 26
 11559                           	line	585
 11560                           	
 11561  001CC4                     l3894:
 11562                           ;BootPIC18NonJ.c: 583: static unsigned char i;
 11563                           ;BootPIC18NonJ.c: 585: TBLPTR = (unsigned short long)PacketFromPC.Address;
 11564  001CC4  C061  FFF6         	movff	0+(_PacketFromPC+01h),(c:4086)	;volatile
 11565  001CC8  C062  FFF7         	movff	1+(_PacketFromPC+01h),(c:4086+1)	;volatile
 11566  001CCC  C063  FFF8         	movff	2+(_PacketFromPC+01h),(c:4086+2)	;volatile
 11567                           	line	587
 11568                           	
 11569  001CD0                     l3896:
 11570                           ;BootPIC18NonJ.c: 587: for(i = 0; i < PacketFromPC.Size; i++)
 11571  001CD0  0100               	movlb	0	; () banked
 11572  001CD2  6FE1               	movwf	(??_WriteConfigBits+0+0)&0ffh
 11573  001CD4  0E00               	movlw	low(0)
 11574  001CD6  6E12               	movwf	((c:WriteConfigBits@i)),c
 11575  001CD8  0100               	movlb	0	; () banked
 11576  001CDA  51E1               	movf	(??_WriteConfigBits+0+0)&0ffh,w
 11577  001CDC  D037               	goto	l3906
 11578                           	line	588
 11579                           	
 11580  001CDE                     l675:; BSR set to: 0
 11581                           
 11582                           	line	589
 11583                           	
 11584  001CDE                     l3898:; BSR set to: 0
 11585                           
 11586                           ;BootPIC18NonJ.c: 588: {
 11587                           ;BootPIC18NonJ.c: 589: TABLAT = PacketFromPC.Data[i+(0x3A-PacketFromPC.Size)];
 11588  001CDE  0100               	movlb	0	; () banked
 11589  001CE0  0100               	movlb	0	; () banked
 11590  001CE2  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11591  001CE4  0100               	movlb	0	; () banked
 11592  001CE6  6FE1               	movwf	(??_WriteConfigBits+0+0)&0ffh
 11593  001CE8  6BE2               	clrf	(??_WriteConfigBits+0+0+1)&0ffh
 11594                           
 11595  001CEA  0100               	movlb	0	; () banked
 11596  001CEC  1FE1               	comf	(??_WriteConfigBits+0+0)&0ffh
 11597  001CEE  1FE2               	comf	(??_WriteConfigBits+0+1)&0ffh
 11598  001CF0  4BE1               	infsnz	(??_WriteConfigBits+0+0)&0ffh
 11599  001CF2  2BE2               	incf	(??_WriteConfigBits+0+1)&0ffh
 11600  001CF4  5012               	movf	((c:WriteConfigBits@i)),c,w
 11601  001CF6  0100               	movlb	0	; () banked
 11602  001CF8  25E1               	addwf	(??_WriteConfigBits+0+0)&0ffh,w
 11603  001CFA  0100               	movlb	0	; () banked
 11604  001CFC  6FE3               	movwf	(??_WriteConfigBits+2+0)&0ffh
 11605  001CFE  0100               	movlb	0	; () banked
 11606  001D00  0100               	movlb	0	; () banked
 11607  001D02  0E00               	movlw	0
 11608  001D04  21E2               	addwfc	(??_WriteConfigBits+0+1)&0ffh,w
 11609  001D06  6FE4               	movwf	1+(??_WriteConfigBits+2+0)&0ffh
 11610  001D08  0E40               	movlw	040h
 11611  001D0A  0100               	movlb	0	; () banked
 11612  001D0C  27E3               	addwf	(??_WriteConfigBits+2+0)&0ffh
 11613  001D0E  0E00               	movlw	0
 11614  001D10  23E4               	addwfc	(??_WriteConfigBits+2+1)&0ffh
 11615  001D12  0100               	movlb	0	; () banked
 11616  001D14  0E60               	movlw	low(_PacketFromPC)
 11617  001D16  0100               	movlb	0	; () banked
 11618  001D18  25E3               	addwf	(??_WriteConfigBits+2+0)&0ffh,w
 11619  001D1A  6ED9               	movwf	c:fsr2l
 11620  001D1C  0100               	movlb	0	; () banked
 11621  001D1E  0E00               	movlw	high(_PacketFromPC)
 11622  001D20  0100               	movlb	0	; () banked
 11623  001D22  21E4               	addwfc	(??_WriteConfigBits+2+1)&0ffh,w
 11624  001D24  6EDA               	movwf	1+c:fsr2l
 11625  001D26  50DF               	movf	indf2,w
 11626  001D28  6EF5               	movwf	((c:4085)),c	;volatile
 11627                           	line	590
 11628                           # 590 "../BootPIC18NonJ.c"
 11629  001D2A  000C               tblwt ;# 
 11630                           psect	text34
 11631                           	line	592
 11632                           	
 11633  001D2C                     l3900:
 11634                           ;BootPIC18NonJ.c: 592: EECON1 = 0b11000100;
 11635  001D2C  0EC4               	movlw	low(0C4h)
 11636  001D2E  6EA6               	movwf	((c:4006)),c	;volatile
 11637                           	line	593
 11638                           	
 11639  001D30                     l3902:
 11640                           ;BootPIC18NonJ.c: 593: UnlockAndActivate(0xB5);
 11641  001D30  0100               	movlb	0	; () banked
 11642  001D32  6FE1               	movwf	(??_WriteConfigBits+0+0)&0ffh
 11643  001D34  0EB5               	movlw	low(0B5h)
 11644  001D36  0100               	movlb	0	; () banked
 11645  001D38  0100               	movlb	0	; () banked
 11646  001D3A  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
 11647  001D3C  0100               	movlb	0	; () banked
 11648  001D3E  51E1               	movf	(??_WriteConfigBits+0+0)&0ffh,w
 11649  001D40  0100               	movlb	0	; () banked
 11650  001D42  ECAA  F011         	call	_UnlockAndActivate	;wreg free
 11651                           	line	595
 11652                           # 595 "../BootPIC18NonJ.c"
 11653  001D46  0009               tblrdpostinc ;# 
 11654                           psect	text34
 11655                           	line	587
 11656                           	
 11657  001D48                     l3904:
 11658  001D48  2A12               	incf	((c:WriteConfigBits@i)),c
 11659  001D4A  D000               	goto	l3906
 11660                           	
 11661  001D4C                     l674:
 11662                           	
 11663  001D4C                     l3906:
 11664  001D4C  0100               	movlb	0	; () banked
 11665  001D4E  0100               	movlb	0	; () banked
 11666  001D50  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11667  001D52  5C12               	subwf	((c:WriteConfigBits@i)),c,w
 11668  001D54  A0D8               	btfss	status,0
 11669  001D56  D001               	goto	u3511
 11670  001D58  D001               	goto	u3510
 11671  001D5A                     u3511:
 11672  001D5A  D7C1               	goto	l3898
 11673  001D5C                     u3510:
 11674  001D5C  D000               	goto	l677
 11675                           	
 11676  001D5E                     l676:; BSR set to: 0
 11677                           
 11678                           	line	597
 11679                           	
 11680  001D5E                     l677:; BSR set to: 0
 11681                           
 11682  001D5E  0012               	return
 11683                           	opt stack 0
 11684                           GLOBAL	__end_of_WriteConfigBits
 11685  001D60                     	__end_of_WriteConfigBits:
 11686                           	signat	_WriteConfigBits,88
 11687                           	global	_WriteEEPROM
 11688                           
 11689 ;; *************** function _WriteEEPROM *****************
 11690 ;; Defined at:
 11691 ;;		line 601 in file "../BootPIC18NonJ.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;		None
 11694 ;; Auto vars:     Size  Location     Type
 11695 ;;		None
 11696 ;; Return value:  Size  Location     Type
 11697 ;;		None               void
 11698 ;; Registers used:
 11699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11700 ;; Tracked objects:
 11701 ;;		On entry : 0/0
 11702 ;;		On exit  : 0/0
 11703 ;;		Unchanged: 0/0
 11704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11705 ;;      Params:         0       0       0       0       0       0       0       0       0
 11706 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11707 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11708 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11709 ;;Total ram usage:        4 bytes
 11710 ;; Hardware stack levels used:    1
 11711 ;; Hardware stack levels required when called:    3
 11712 ;; This function calls:
 11713 ;;		_UnlockAndActivate
 11714 ;; This function is called by:
 11715 ;;		_ProcessIO
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           psect	text35,class=CODE,space=0,reloc=2
 11719                           global __ptext35
 11720  001DF6                     __ptext35:
 11721                           psect	text35
 11722                           	file	"../BootPIC18NonJ.c"
 11723                           	line	601
 11724                           	global	__size_of_WriteEEPROM
 11725  0000                     	__size_of_WriteEEPROM	equ	__end_of_WriteEEPROM-_WriteEEPROM
 11726                           	
 11727  001DF6                     _WriteEEPROM:; BSR set to: 0
 11728                           
 11729                           	opt	stack 26
 11730                           	line	604
 11731                           	
 11732  001DF6                     l3908:
 11733                           ;BootPIC18NonJ.c: 602: static unsigned char i;
 11734                           ;BootPIC18NonJ.c: 604: for(i = 0; i < PacketFromPC.Size; i++)
 11735  001DF6  0100               	movlb	0	; () banked
 11736  001DF8  6FE1               	movwf	(??_WriteEEPROM+0+0)&0ffh
 11737  001DFA  0E00               	movlw	low(0)
 11738  001DFC  6E13               	movwf	((c:WriteEEPROM@i)),c
 11739  001DFE  0100               	movlb	0	; () banked
 11740  001E00  51E1               	movf	(??_WriteEEPROM+0+0)&0ffh,w
 11741  001E02  D03A               	goto	l3920
 11742                           	line	605
 11743                           	
 11744  001E04                     l683:; BSR set to: 0
 11745                           
 11746                           	line	606
 11747                           	
 11748  001E04                     l3910:; BSR set to: 0
 11749                           
 11750                           ;BootPIC18NonJ.c: 605: {
 11751                           ;BootPIC18NonJ.c: 606: EEADR = (((unsigned char)PacketFromPC.Address) + i);
 11752  001E04  0100               	movlb	0	; () banked
 11753  001E06  0100               	movlb	0	; () banked
 11754  001E08  5161               	movf	(0+(_PacketFromPC+01h))&0ffh,w
 11755  001E0A  2413               	addwf	((c:WriteEEPROM@i)),c,w
 11756  001E0C  6EA9               	movwf	((c:4009)),c	;volatile
 11757                           	line	607
 11758                           	
 11759  001E0E                     l3912:; BSR set to: 0
 11760                           
 11761                           ;BootPIC18NonJ.c: 607: EEDATA = PacketFromPC.Data[i+(0x3A-PacketFromPC.Size)];
 11762  001E0E  0100               	movlb	0	; () banked
 11763  001E10  0100               	movlb	0	; () banked
 11764  001E12  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11765  001E14  0100               	movlb	0	; () banked
 11766  001E16  6FE1               	movwf	(??_WriteEEPROM+0+0)&0ffh
 11767  001E18  6BE2               	clrf	(??_WriteEEPROM+0+0+1)&0ffh
 11768                           
 11769  001E1A  0100               	movlb	0	; () banked
 11770  001E1C  1FE1               	comf	(??_WriteEEPROM+0+0)&0ffh
 11771  001E1E  1FE2               	comf	(??_WriteEEPROM+0+1)&0ffh
 11772  001E20  4BE1               	infsnz	(??_WriteEEPROM+0+0)&0ffh
 11773  001E22  2BE2               	incf	(??_WriteEEPROM+0+1)&0ffh
 11774  001E24  5013               	movf	((c:WriteEEPROM@i)),c,w
 11775  001E26  0100               	movlb	0	; () banked
 11776  001E28  25E1               	addwf	(??_WriteEEPROM+0+0)&0ffh,w
 11777  001E2A  0100               	movlb	0	; () banked
 11778  001E2C  6FE3               	movwf	(??_WriteEEPROM+2+0)&0ffh
 11779  001E2E  0100               	movlb	0	; () banked
 11780  001E30  0100               	movlb	0	; () banked
 11781  001E32  0E00               	movlw	0
 11782  001E34  21E2               	addwfc	(??_WriteEEPROM+0+1)&0ffh,w
 11783  001E36  6FE4               	movwf	1+(??_WriteEEPROM+2+0)&0ffh
 11784  001E38  0E40               	movlw	040h
 11785  001E3A  0100               	movlb	0	; () banked
 11786  001E3C  27E3               	addwf	(??_WriteEEPROM+2+0)&0ffh
 11787  001E3E  0E00               	movlw	0
 11788  001E40  23E4               	addwfc	(??_WriteEEPROM+2+1)&0ffh
 11789  001E42  0100               	movlb	0	; () banked
 11790  001E44  0E60               	movlw	low(_PacketFromPC)
 11791  001E46  0100               	movlb	0	; () banked
 11792  001E48  25E3               	addwf	(??_WriteEEPROM+2+0)&0ffh,w
 11793  001E4A  6ED9               	movwf	c:fsr2l
 11794  001E4C  0100               	movlb	0	; () banked
 11795  001E4E  0E00               	movlw	high(_PacketFromPC)
 11796  001E50  0100               	movlb	0	; () banked
 11797  001E52  21E4               	addwfc	(??_WriteEEPROM+2+1)&0ffh,w
 11798  001E54  6EDA               	movwf	1+c:fsr2l
 11799  001E56  50DF               	movf	indf2,w
 11800  001E58  6EA8               	movwf	((c:4008)),c	;volatile
 11801                           	line	609
 11802                           	
 11803  001E5A                     l3914:; BSR set to: 0
 11804                           
 11805                           ;BootPIC18NonJ.c: 609: EECON1 = 0b00000100;
 11806  001E5A  0E04               	movlw	low(04h)
 11807  001E5C  6EA6               	movwf	((c:4006)),c	;volatile
 11808                           	line	610
 11809                           	
 11810  001E5E                     l3916:; BSR set to: 0
 11811                           
 11812                           ;BootPIC18NonJ.c: 610: UnlockAndActivate(0xB5);
 11813  001E5E  0100               	movlb	0	; () banked
 11814  001E60  6FE1               	movwf	(??_WriteEEPROM+0+0)&0ffh
 11815  001E62  0EB5               	movlw	low(0B5h)
 11816  001E64  0100               	movlb	0	; () banked
 11817  001E66  0100               	movlb	0	; () banked
 11818  001E68  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
 11819  001E6A  0100               	movlb	0	; () banked
 11820  001E6C  51E1               	movf	(??_WriteEEPROM+0+0)&0ffh,w
 11821  001E6E  0100               	movlb	0	; () banked
 11822  001E70  ECAA  F011         	call	_UnlockAndActivate	;wreg free
 11823                           	line	604
 11824                           	
 11825  001E74                     l3918:
 11826  001E74  2A13               	incf	((c:WriteEEPROM@i)),c
 11827  001E76  D000               	goto	l3920
 11828                           	
 11829  001E78                     l682:
 11830                           	
 11831  001E78                     l3920:
 11832  001E78  0100               	movlb	0	; () banked
 11833  001E7A  0100               	movlb	0	; () banked
 11834  001E7C  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11835  001E7E  5C13               	subwf	((c:WriteEEPROM@i)),c,w
 11836  001E80  A0D8               	btfss	status,0
 11837  001E82  D001               	goto	u3521
 11838  001E84  D001               	goto	u3520
 11839  001E86                     u3521:
 11840  001E86  D7BE               	goto	l3910
 11841  001E88                     u3520:
 11842  001E88  D000               	goto	l685
 11843                           	
 11844  001E8A                     l684:; BSR set to: 0
 11845                           
 11846                           	line	613
 11847                           	
 11848  001E8A                     l685:; BSR set to: 0
 11849                           
 11850  001E8A  0012               	return
 11851                           	opt stack 0
 11852                           GLOBAL	__end_of_WriteEEPROM
 11853  001E8C                     	__end_of_WriteEEPROM:
 11854                           	signat	_WriteEEPROM,88
 11855                           	global	_WriteFlashBlock
 11856                           
 11857 ;; *************** function _WriteFlashBlock *****************
 11858 ;; Defined at:
 11859 ;;		line 507 in file "../BootPIC18NonJ.c"
 11860 ;; Parameters:    Size  Location     Type
 11861 ;;		None
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;		None
 11864 ;; Return value:  Size  Location     Type
 11865 ;;		None               void
 11866 ;; Registers used:
 11867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11873 ;;      Params:         0       0       0       0       0       0       0       0       0
 11874 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11875 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11876 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11877 ;;Total ram usage:        3 bytes
 11878 ;; Hardware stack levels used:    1
 11879 ;; Hardware stack levels required when called:    3
 11880 ;; This function calls:
 11881 ;;		_UnlockAndActivate
 11882 ;; This function is called by:
 11883 ;;		_ProcessIO
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           psect	text36,class=CODE,space=0,reloc=2
 11887                           global __ptext36
 11888  001254                     __ptext36:
 11889                           psect	text36
 11890                           	file	"../BootPIC18NonJ.c"
 11891                           	line	507
 11892                           	global	__size_of_WriteFlashBlock
 11893  0000                     	__size_of_WriteFlashBlock	equ	__end_of_WriteFlashBlock-_WriteFlashBlock
 11894                           	
 11895  001254                     _WriteFlashBlock:; BSR set to: 0
 11896                           
 11897                           	opt	stack 26
 11898                           	line	512
 11899                           	
 11900  001254                     l3922:
 11901                           ;BootPIC18NonJ.c: 508: static unsigned char i;
 11902                           ;BootPIC18NonJ.c: 509: static unsigned char BytesTakenFromBuffer;
 11903                           ;BootPIC18NonJ.c: 510: static unsigned char CorrectionFactor;
 11904                           ;BootPIC18NonJ.c: 512: BytesTakenFromBuffer = 0;
 11905  001254  0100               	movlb	0	; () banked
 11906  001256  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 11907  001258  0E00               	movlw	low(0)
 11908  00125A  6E14               	movwf	((c:WriteFlashBlock@BytesTakenFromBuffer)),c
 11909  00125C  0100               	movlb	0	; () banked
 11910  00125E  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 11911                           	line	513
 11912                           	
 11913  001260                     l3924:; BSR set to: 0
 11914                           
 11915                           ;BootPIC18NonJ.c: 513: TBLPTR = (ProgrammedPointer - BufferedDataIndex);
 11916  001260  5018               	movf	((c:_BufferedDataIndex)),c,w
 11917  001262  0100               	movlb	0	; () banked
 11918  001264  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 11919  001266  6BE2               	clrf	(??_WriteFlashBlock+0+0+1)&0ffh
 11920  001268  6BE3               	clrf	(??_WriteFlashBlock+0+0+2)&0ffh
 11921  00126A  0100               	movlb	0	; () banked
 11922  00126C  1FE1               	comf	(??_WriteFlashBlock+0+0)&0ffh
 11923  00126E  1FE2               	comf	(??_WriteFlashBlock+0+1)&0ffh
 11924  001270  1FE3               	comf	(??_WriteFlashBlock+0+2)&0ffh
 11925  001272  2BE1               	incf	(??_WriteFlashBlock+0+0)&0ffh
 11926  001274  0E00               	movlw	0
 11927  001276  23E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh
 11928  001278  23E3               	addwfc	(??_WriteFlashBlock+0+2)&0ffh
 11929                           
 11930  00127A  5004               	movf	((c:_ProgrammedPointer)),c,w
 11931  00127C  0100               	movlb	0	; () banked
 11932  00127E  25E1               	addwf	(??_WriteFlashBlock+0+0)&0ffh,w
 11933  001280  6EF6               	movwf	((c:4086)),c	;volatile
 11934  001282  0100               	movlb	0	; () banked
 11935  001284  5005               	movf	((c:_ProgrammedPointer+1)),c,w
 11936  001286  21E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh,w
 11937  001288  6EF7               	movwf	1+((c:4086)),c	;volatile
 11938  00128A  0100               	movlb	0	; () banked
 11939  00128C  5006               	movf	((c:_ProgrammedPointer+2)),c,w
 11940  00128E  21E3               	addwfc	(??_WriteFlashBlock+0+2)&0ffh,w
 11941  001290  6EF8               	movwf	2+((c:4086)),c	;volatile
 11942                           	line	529
 11943                           	
 11944  001292                     l3926:; BSR set to: 0
 11945                           
 11946                           ;BootPIC18NonJ.c: 529: CorrectionFactor = (TBLPTRL & 0b00011111);
 11947  001292  50F6               	movf	((c:4086)),c,w	;volatile
 11948  001294  0B1F               	andlw	low(01Fh)
 11949  001296  6E15               	movwf	((c:WriteFlashBlock@CorrectionFactor)),c
 11950                           	line	530
 11951                           	
 11952  001298                     l3928:; BSR set to: 0
 11953                           
 11954                           ;BootPIC18NonJ.c: 530: TBLPTRL &= 0b11100000;
 11955  001298  0EE0               	movlw	(0E0h)&0ffh
 11956  00129A  16F6               	andwf	((c:4086)),c	;volatile
 11957                           	line	541
 11958                           	
 11959  00129C                     l3930:; BSR set to: 0
 11960                           
 11961                           ;BootPIC18NonJ.c: 541: for(i = 0; i < 0x20; i++)
 11962  00129C  0100               	movlb	0	; () banked
 11963  00129E  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 11964  0012A0  0E00               	movlw	low(0)
 11965  0012A2  6E16               	movwf	((c:WriteFlashBlock@i)),c
 11966  0012A4  0100               	movlb	0	; () banked
 11967  0012A6  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 11968                           	
 11969  0012A8                     l3932:; BSR set to: 0
 11970                           
 11971  0012A8  0E1F               	movlw	(020h-1)
 11972  0012AA  6416               	cpfsgt	((c:WriteFlashBlock@i)),c
 11973  0012AC  D001               	goto	u3531
 11974  0012AE  D001               	goto	u3530
 11975  0012B0                     u3531:
 11976  0012B0  D002               	goto	l660
 11977  0012B2                     u3530:
 11978  0012B2  D027               	goto	l661
 11979                           	
 11980  0012B4                     l3934:; BSR set to: 0
 11981                           
 11982  0012B4  D026               	goto	l661
 11983                           	line	542
 11984                           	
 11985  0012B6                     l660:
 11986                           	line	543
 11987                           ;BootPIC18NonJ.c: 542: {
 11988                           ;BootPIC18NonJ.c: 543: if(CorrectionFactor == 0)
 11989  0012B6  6615               	tstfsz	((c:WriteFlashBlock@CorrectionFactor)),c
 11990  0012B8  D001               	goto	u3541
 11991  0012BA  D001               	goto	u3540
 11992  0012BC                     u3541:
 11993  0012BC  D019               	goto	l662
 11994  0012BE                     u3540:
 11995                           	line	545
 11996                           	
 11997  0012BE                     l3936:
 11998                           ;BootPIC18NonJ.c: 544: {
 11999                           ;BootPIC18NonJ.c: 545: if(BufferedDataIndex != 0)
 12000  0012BE  5018               	movf	((c:_BufferedDataIndex)),c,w
 12001  0012C0  B4D8               	btfsc	status,2
 12002  0012C2  D001               	goto	u3551
 12003  0012C4  D001               	goto	u3550
 12004  0012C6                     u3551:
 12005  0012C6  D010               	goto	l663
 12006  0012C8                     u3550:
 12007                           	line	547
 12008                           	
 12009  0012C8                     l3938:
 12010                           ;BootPIC18NonJ.c: 546: {
 12011                           ;BootPIC18NonJ.c: 547: TABLAT = ProgrammingBuffer[BytesTakenFromBuffer];
 12012  0012C8  5014               	movf	((c:WriteFlashBlock@BytesTakenFromBuffer)),c,w
 12013  0012CA  0D01               	mullw	01h
 12014  0012CC  0101               	movlb	1	; () banked
 12015  0012CE  0E00               	movlw	low(_ProgrammingBuffer)
 12016  0012D0  24F3               	addwf	(prodl),c,w
 12017  0012D2  6ED9               	movwf	c:fsr2l
 12018  0012D4  0101               	movlb	1	; () banked
 12019  0012D6  0E01               	movlw	high(_ProgrammingBuffer)
 12020  0012D8  20F4               	addwfc	prod+1,w
 12021  0012DA  6EDA               	movwf	1+c:fsr2l
 12022  0012DC  50DF               	movf	indf2,w
 12023  0012DE  6EF5               	movwf	((c:4085)),c	;volatile
 12024                           	line	548
 12025                           # 548 "../BootPIC18NonJ.c"
 12026  0012E0  000D               tblwtpostinc ;# 
 12027                           psect	text36
 12028                           	line	549
 12029                           	
 12030  0012E2                     l3940:
 12031                           ;BootPIC18NonJ.c: 549: BytesTakenFromBuffer++;
 12032  0012E2  2A14               	incf	((c:WriteFlashBlock@BytesTakenFromBuffer)),c
 12033                           	line	550
 12034                           	
 12035  0012E4                     l3942:
 12036                           ;BootPIC18NonJ.c: 550: BufferedDataIndex--;
 12037  0012E4  0618               	decf	((c:_BufferedDataIndex)),c
 12038                           	line	551
 12039                           ;BootPIC18NonJ.c: 551: }
 12040  0012E6  D007               	goto	l665
 12041                           	line	552
 12042                           	
 12043  0012E8                     l663:
 12044                           	line	554
 12045                           ;BootPIC18NonJ.c: 552: else
 12046                           ;BootPIC18NonJ.c: 553: {
 12047                           ;BootPIC18NonJ.c: 554: TABLAT = 0xFF;
 12048  0012E8  68F5               	setf	((c:4085)),c	;volatile
 12049                           	line	555
 12050                           # 555 "../BootPIC18NonJ.c"
 12051  0012EA  000D               tblwtpostinc ;# 
 12052                           psect	text36
 12053  0012EC  D004               	goto	l665
 12054                           	line	556
 12055                           	
 12056  0012EE                     l664:
 12057                           	line	557
 12058                           ;BootPIC18NonJ.c: 556: }
 12059                           ;BootPIC18NonJ.c: 557: }
 12060  0012EE  D003               	goto	l665
 12061                           	line	558
 12062                           	
 12063  0012F0                     l662:
 12064                           	line	560
 12065                           ;BootPIC18NonJ.c: 558: else
 12066                           ;BootPIC18NonJ.c: 559: {
 12067                           ;BootPIC18NonJ.c: 560: TABLAT = 0xFF;
 12068  0012F0  68F5               	setf	((c:4085)),c	;volatile
 12069                           	line	561
 12070                           # 561 "../BootPIC18NonJ.c"
 12071  0012F2  000D               tblwtpostinc ;# 
 12072                           psect	text36
 12073                           	line	562
 12074                           	
 12075  0012F4                     l3944:
 12076                           ;BootPIC18NonJ.c: 562: CorrectionFactor--;
 12077  0012F4  0615               	decf	((c:WriteFlashBlock@CorrectionFactor)),c
 12078                           	line	563
 12079                           	
 12080  0012F6                     l665:
 12081                           	line	541
 12082  0012F6  2A16               	incf	((c:WriteFlashBlock@i)),c
 12083                           	
 12084  0012F8                     l3946:
 12085  0012F8  0E1F               	movlw	(020h-1)
 12086  0012FA  6416               	cpfsgt	((c:WriteFlashBlock@i)),c
 12087  0012FC  D001               	goto	u3561
 12088  0012FE  D001               	goto	u3560
 12089  001300                     u3561:
 12090  001300  D7DA               	goto	l660
 12091  001302                     u3560:
 12092                           	
 12093  001302                     l661:
 12094                           	line	566
 12095                           ;BootPIC18NonJ.c: 563: }
 12096                           ;BootPIC18NonJ.c: 564: }
 12097                           ;BootPIC18NonJ.c: 566: TBLPTR--;
 12098  001302  0E01               	movlw	low(01h)
 12099  001304  5EF6               	subwf	((c:4086)),c	;volatile
 12100  001306  0E00               	movlw	high(01h)
 12101  001308  5AF7               	subwfb	((c:4086+1)),c	;volatile
 12102  00130A  0E00               	movlw	low highword(01h)
 12103  00130C  5AF8               	subwfb	((c:4086+2)),c	;volatile
 12104                           
 12105                           	line	569
 12106                           	
 12107  00130E                     l3948:
 12108                           ;BootPIC18NonJ.c: 569: EECON1 = 0b10100100;
 12109  00130E  0EA4               	movlw	low(0A4h)
 12110  001310  6EA6               	movwf	((c:4006)),c	;volatile
 12111                           	line	570
 12112                           	
 12113  001312                     l3950:
 12114                           ;BootPIC18NonJ.c: 570: UnlockAndActivate(0xB5);
 12115  001312  0100               	movlb	0	; () banked
 12116  001314  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 12117  001316  0EB5               	movlw	low(0B5h)
 12118  001318  0100               	movlb	0	; () banked
 12119  00131A  0100               	movlb	0	; () banked
 12120  00131C  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
 12121  00131E  0100               	movlb	0	; () banked
 12122  001320  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 12123  001322  0100               	movlb	0	; () banked
 12124  001324  ECAA  F011         	call	_UnlockAndActivate	;wreg free
 12125                           	line	574
 12126                           	
 12127  001328                     l3952:
 12128                           ;BootPIC18NonJ.c: 574: for(i = 0; i < BufferedDataIndex; i++)
 12129  001328  0100               	movlb	0	; () banked
 12130  00132A  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 12131  00132C  0E00               	movlw	low(0)
 12132  00132E  6E16               	movwf	((c:WriteFlashBlock@i)),c
 12133  001330  0100               	movlb	0	; () banked
 12134  001332  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 12135  001334  D021               	goto	l3958
 12136                           	line	575
 12137                           	
 12138  001336                     l667:; BSR set to: 0
 12139                           
 12140                           	line	576
 12141                           	
 12142  001336                     l3954:
 12143                           ;BootPIC18NonJ.c: 575: {
 12144                           ;BootPIC18NonJ.c: 576: ProgrammingBuffer[i] = ProgrammingBuffer[BytesTakenFromBuffer+i];
 12145  001336  5016               	movf	((c:WriteFlashBlock@i)),c,w
 12146  001338  C014  F0E1         	movff	(c:WriteFlashBlock@BytesTakenFromBuffer),??_WriteFlashBlock+0+0
 12147  00133C  0100               	movlb	0	; () banked
 12148  00133E  6BE2               	clrf	(??_WriteFlashBlock+0+0+1)&0ffh
 12149  001340  0100               	movlb	0	; () banked
 12150  001342  27E1               	addwf	(??_WriteFlashBlock+0+0)&0ffh
 12151  001344  0E00               	movlw	0
 12152  001346  23E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh
 12153  001348  0101               	movlb	1	; () banked
 12154  00134A  0E00               	movlw	low(_ProgrammingBuffer)
 12155  00134C  0100               	movlb	0	; () banked
 12156  00134E  25E1               	addwf	(??_WriteFlashBlock+0+0)&0ffh,w
 12157  001350  6ED9               	movwf	c:fsr2l
 12158  001352  0101               	movlb	1	; () banked
 12159  001354  0E01               	movlw	high(_ProgrammingBuffer)
 12160  001356  0100               	movlb	0	; () banked
 12161  001358  21E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh,w
 12162  00135A  6EDA               	movwf	1+c:fsr2l
 12163  00135C  5016               	movf	((c:WriteFlashBlock@i)),c,w
 12164  00135E  0D01               	mullw	01h
 12165  001360  0101               	movlb	1	; () banked
 12166  001362  0E00               	movlw	low(_ProgrammingBuffer)
 12167  001364  24F3               	addwf	(prodl),c,w
 12168  001366  6EE1               	movwf	c:fsr1l
 12169  001368  0101               	movlb	1	; () banked
 12170  00136A  0E01               	movlw	high(_ProgrammingBuffer)
 12171  00136C  20F4               	addwfc	prod+1,w
 12172  00136E  6EE2               	movwf	1+c:fsr1l
 12173  001370  CFDF FFE7          	movff	indf2,indf1
 12174                           	line	574
 12175                           	
 12176  001374                     l3956:; BSR set to: 1
 12177                           
 12178  001374  2A16               	incf	((c:WriteFlashBlock@i)),c
 12179  001376  D000               	goto	l3958
 12180                           	
 12181  001378                     l666:; BSR set to: 1
 12182                           
 12183                           	
 12184  001378                     l3958:
 12185  001378  5018               	movf	((c:_BufferedDataIndex)),c,w
 12186  00137A  5C16               	subwf	((c:WriteFlashBlock@i)),c,w
 12187  00137C  A0D8               	btfss	status,0
 12188  00137E  D001               	goto	u3571
 12189  001380  D001               	goto	u3570
 12190  001382                     u3571:
 12191  001382  D7D9               	goto	l3954
 12192  001384                     u3570:
 12193  001384  D000               	goto	l669
 12194                           	
 12195  001386                     l668:
 12196                           	line	578
 12197                           	
 12198  001386                     l669:
 12199  001386  0012               	return
 12200                           	opt stack 0
 12201                           GLOBAL	__end_of_WriteFlashBlock
 12202  001388                     	__end_of_WriteFlashBlock:
 12203                           	signat	_WriteFlashBlock,88
 12204                           	global	_UnlockAndActivate
 12205                           
 12206 ;; *************** function _UnlockAndActivate *****************
 12207 ;; Defined at:
 12208 ;;		line 620 in file "../BootPIC18NonJ.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;  UnlockKey       1    0[BANK0 ] unsigned char 
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;		None
 12213 ;; Return value:  Size  Location     Type
 12214 ;;		None               void
 12215 ;; Registers used:
 12216 ;;		wreg, status,2, status,0
 12217 ;; Tracked objects:
 12218 ;;		On entry : 0/0
 12219 ;;		On exit  : 0/0
 12220 ;;		Unchanged: 0/0
 12221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12222 ;;      Params:         0       1       0       0       0       0       0       0       0
 12223 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12225 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12226 ;;Total ram usage:        1 bytes
 12227 ;; Hardware stack levels used:    1
 12228 ;; Hardware stack levels required when called:    2
 12229 ;; This function calls:
 12230 ;;		Nothing
 12231 ;; This function is called by:
 12232 ;;		_ProcessIO
 12233 ;;		_WriteFlashBlock
 12234 ;;		_WriteConfigBits
 12235 ;;		_WriteEEPROM
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           psect	text37,class=CODE,space=0,reloc=2
 12239                           global __ptext37
 12240  002354                     __ptext37:
 12241                           psect	text37
 12242                           	file	"../BootPIC18NonJ.c"
 12243                           	line	620
 12244                           	global	__size_of_UnlockAndActivate
 12245  0000                     	__size_of_UnlockAndActivate	equ	__end_of_UnlockAndActivate-_UnlockAndActivate
 12246                           	
 12247  002354                     _UnlockAndActivate:
 12248                           	opt	stack 26
 12249                           	line	621
 12250                           	
 12251  002354                     l3888:
 12252                           ;BootPIC18NonJ.c: 621: INTCONbits.GIE = 0;
 12253  002354  9EF2               	bcf	((c:4082)),c,7	;volatile
 12254                           	line	625
 12255                           	
 12256  002356                     l3890:
 12257                           ;BootPIC18NonJ.c: 625: if(UnlockKey != 0xB5)
 12258  002356  0100               	movlb	0	; () banked
 12259  002358  0100               	movlb	0	; () banked
 12260  00235A  51E0               	movf	((UnlockAndActivate@UnlockKey))&0ffh,w
 12261  00235C  0AB5               	xorlw	181
 12262                           
 12263  00235E  B4D8               	btfsc	status,2
 12264  002360  D001               	goto	u3491
 12265  002362  D001               	goto	u3490
 12266  002364                     u3491:
 12267  002364  D006               	goto	l688
 12268  002366                     u3490:
 12269                           	line	634
 12270                           	
 12271  002366                     l3892:; BSR set to: 0
 12272                           
 12273                           ;BootPIC18NonJ.c: 626: {
 12274                           ;BootPIC18NonJ.c: 634: OSCCON = 0x03;
 12275  002366  0E03               	movlw	low(03h)
 12276  002368  6ED3               	movwf	((c:4051)),c	;volatile
 12277                           	line	635
 12278                           ;BootPIC18NonJ.c: 635: while(1)
 12279                           	
 12280  00236A                     l689:
 12281                           	line	637
 12282                           # 637 "../BootPIC18NonJ.c"
 12283  00236A  0003               sleep ;# 
 12284                           psect	text37
 12285  00236C  D7FE               	goto	l689
 12286                           	line	638
 12287                           	
 12288  00236E                     l690:
 12289                           	line	635
 12290  00236E  D7FD               	goto	l689
 12291                           	
 12292  002370                     l691:
 12293                           	line	639
 12294                           # 639 "../BootPIC18NonJ.c"
 12295  002370  00FF               reset ;# 
 12296                           psect	text37
 12297                           	line	640
 12298                           	
 12299  002372                     l688:
 12300                           	line	644
 12301                           # 644 "../BootPIC18NonJ.c"
 12302  002372  0E55               MOVLW 0x55 ;# 
 12303                           	line	645
 12304                           # 645 "../BootPIC18NonJ.c"
 12305  002374  6EA7               MOVWF EECON2, 0 ;# 
 12306                           	line	646
 12307                           # 646 "../BootPIC18NonJ.c"
 12308  002376  0EAA               MOVLW 0xAA ;# 
 12309                           	line	647
 12310                           # 647 "../BootPIC18NonJ.c"
 12311  002378  6EA7               MOVWF EECON2, 0 ;# 
 12312                           	line	648
 12313                           # 648 "../BootPIC18NonJ.c"
 12314  00237A  82A6               BSF EECON1, 1, 0 ;# 
 12315                           psect	text37
 12316                           	line	650
 12317                           ;BootPIC18NonJ.c: 650: while(EECON1bits.WR);
 12318  00237C  D000               	goto	l692
 12319                           	
 12320  00237E                     l693:
 12321                           	
 12322  00237E                     l692:
 12323                           	
 12324  00237E  B2A6               	btfsc	((c:4006)),c,1	;volatile
 12325  002380  D001               	goto	u3501
 12326  002382  D001               	goto	u3500
 12327  002384                     u3501:
 12328  002384  D7FC               	goto	l692
 12329  002386                     u3500:
 12330                           	
 12331  002386                     l694:
 12332                           	line	651
 12333                           ;BootPIC18NonJ.c: 651: EECON1bits.WREN = 0;
 12334  002386  94A6               	bcf	((c:4006)),c,2	;volatile
 12335                           	line	652
 12336                           	
 12337  002388                     l695:
 12338  002388  0012               	return
 12339                           	opt stack 0
 12340                           GLOBAL	__end_of_UnlockAndActivate
 12341  00238A                     	__end_of_UnlockAndActivate:
 12342                           	signat	_UnlockAndActivate,4216
 12343                           	global	_TableReadPostIncrement
 12344                           
 12345 ;; *************** function _TableReadPostIncrement *****************
 12346 ;; Defined at:
 12347 ;;		line 674 in file "../BootPIC18NonJ.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;		None               void
 12354 ;; Registers used:
 12355 ;;		None
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12363 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12364 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12365 ;;Total ram usage:        0 bytes
 12366 ;; Hardware stack levels used:    1
 12367 ;; Hardware stack levels required when called:    2
 12368 ;; This function calls:
 12369 ;;		Nothing
 12370 ;; This function is called by:
 12371 ;;		_ProcessIO
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           psect	text38,class=CODE,space=0,reloc=2
 12375                           global __ptext38
 12376  002438                     __ptext38:
 12377                           psect	text38
 12378                           	file	"../BootPIC18NonJ.c"
 12379                           	line	674
 12380                           	global	__size_of_TableReadPostIncrement
 12381  0000                     	__size_of_TableReadPostIncrement	equ	__end_of_TableReadPostIncrement-_TableReadPostIncr
                                 ement
 12382                           	
 12383  002438                     _TableReadPostIncrement:
 12384                           	opt	stack 27
 12385                           	line	675
 12386                           	
 12387  002438                     l3960:
 12388                           # 675 "../BootPIC18NonJ.c"
 12389  002438  0009               tblrdpostinc ;# 
 12390                           psect	text38
 12391                           	line	676
 12392                           	
 12393  00243A                     l701:
 12394  00243A  0012               	return
 12395                           	opt stack 0
 12396                           GLOBAL	__end_of_TableReadPostIncrement
 12397  00243C                     	__end_of_TableReadPostIncrement:
 12398                           	signat	_TableReadPostIncrement,88
 12399                           	global	_ResetDeviceCleanly
 12400                           
 12401 ;; *************** function _ResetDeviceCleanly *****************
 12402 ;; Defined at:
 12403 ;;		line 482 in file "../BootPIC18NonJ.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;		None               void
 12410 ;; Registers used:
 12411 ;;		wreg, status,2, status,0
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12419 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12420 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12421 ;;Total ram usage:        1 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:    2
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_ProcessIO
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           psect	text39,class=CODE,space=0,reloc=2
 12431                           global __ptext39
 12432  002258                     __ptext39:
 12433                           psect	text39
 12434                           	file	"../BootPIC18NonJ.c"
 12435                           	line	482
 12436                           	global	__size_of_ResetDeviceCleanly
 12437  0000                     	__size_of_ResetDeviceCleanly	equ	__end_of_ResetDeviceCleanly-_ResetDeviceCleanly
 12438                           	
 12439  002258                     _ResetDeviceCleanly:
 12440                           	opt	stack 27
 12441                           	line	485
 12442                           	
 12443  002258                     l3962:
 12444                           ;BootPIC18NonJ.c: 483: static unsigned char i;
 12445                           ;BootPIC18NonJ.c: 485: UCONbits.SUSPND = 0;
 12446  002258  9260               	bcf	((c:3936)),c,1	;volatile
 12447                           	line	486
 12448                           	
 12449  00225A                     l3964:
 12450                           ;BootPIC18NonJ.c: 486: UCON = 0x00;
 12451  00225A  0E00               	movlw	low(0)
 12452  00225C  6E60               	movwf	((c:3936)),c	;volatile
 12453                           	line	491
 12454                           	
 12455  00225E                     l3966:
 12456                           ;BootPIC18NonJ.c: 491: for(i = 0; i < 0xFF; i++)
 12457  00225E  0100               	movlb	0	; () banked
 12458  002260  6FE0               	movwf	(??_ResetDeviceCleanly+0+0)&0ffh
 12459  002262  0E00               	movlw	low(0)
 12460  002264  6E11               	movwf	((c:ResetDeviceCleanly@i)),c
 12461  002266  0100               	movlb	0	; () banked
 12462  002268  51E0               	movf	(??_ResetDeviceCleanly+0+0)&0ffh,w
 12463                           	
 12464  00226A                     l3968:; BSR set to: 0
 12465                           
 12466  00226A  2811               	incf	((c:ResetDeviceCleanly@i)),c,w
 12467                           
 12468  00226C  A4D8               	btfss	status,2
 12469  00226E  D001               	goto	u3581
 12470  002270  D001               	goto	u3580
 12471  002272                     u3581:
 12472  002272  D002               	goto	l646
 12473  002274                     u3580:
 12474  002274  D014               	goto	l647
 12475                           	
 12476  002276                     l3970:; BSR set to: 0
 12477                           
 12478  002276  D013               	goto	l647
 12479                           	line	492
 12480                           	
 12481  002278                     l646:
 12482                           	line	493
 12483                           ;BootPIC18NonJ.c: 492: {
 12484                           ;BootPIC18NonJ.c: 493: WREG = 0xFF;
 12485  002278  68E8               	setf	((c:4072)),c	;volatile
 12486                           	line	494
 12487                           ;BootPIC18NonJ.c: 494: while(WREG)
 12488  00227A  D006               	goto	l3974
 12489                           	
 12490  00227C                     l649:
 12491                           	line	496
 12492                           	
 12493  00227C                     l3972:
 12494                           ;BootPIC18NonJ.c: 495: {
 12495                           ;BootPIC18NonJ.c: 496: WREG--;
 12496  00227C  06E8               	decf	((c:4072)),c	;volatile
 12497                           	line	497
 12498                           # 497 "../BootPIC18NonJ.c"
 12499  00227E  F000               nop ;# 
 12500                           # 497 "../BootPIC18NonJ.c"
 12501  002280  F000               nop ;# 
 12502                           # 497 "../BootPIC18NonJ.c"
 12503  002282  F000               nop ;# 
 12504                           # 497 "../BootPIC18NonJ.c"
 12505  002284  F000               nop ;# 
 12506                           psect	text39
 12507  002286  D000               	goto	l3974
 12508                           	line	498
 12509                           	
 12510  002288                     l648:
 12511                           	line	494
 12512                           	
 12513  002288                     l3974:
 12514  002288  66E8               	tstfsz	((c:4072)),c	;volatile
 12515  00228A  D001               	goto	u3591
 12516  00228C  D001               	goto	u3590
 12517  00228E                     u3591:
 12518  00228E  D7F6               	goto	l3972
 12519  002290                     u3590:
 12520  002290  D000               	goto	l3976
 12521                           	
 12522  002292                     l650:
 12523                           	line	491
 12524                           	
 12525  002292                     l3976:
 12526  002292  2A11               	incf	((c:ResetDeviceCleanly@i)),c
 12527                           	
 12528  002294                     l3978:
 12529  002294  2811               	incf	((c:ResetDeviceCleanly@i)),c,w
 12530                           
 12531  002296  A4D8               	btfss	status,2
 12532  002298  D001               	goto	u3601
 12533  00229A  D001               	goto	u3600
 12534  00229C                     u3601:
 12535  00229C  D7ED               	goto	l646
 12536  00229E                     u3600:
 12537                           	
 12538  00229E                     l647:
 12539                           	line	500
 12540                           # 500 "../BootPIC18NonJ.c"
 12541  00229E  00FF               reset ;# 
 12542                           	line	501
 12543                           # 501 "../BootPIC18NonJ.c"
 12544  0022A0  F000               nop ;# 
 12545                           	line	502
 12546                           # 502 "../BootPIC18NonJ.c"
 12547  0022A2  F000               nop ;# 
 12548                           psect	text39
 12549                           	line	503
 12550                           	
 12551  0022A4                     l651:
 12552  0022A4  0012               	return
 12553                           	opt stack 0
 12554                           GLOBAL	__end_of_ResetDeviceCleanly
 12555  0022A6                     	__end_of_ResetDeviceCleanly:
 12556                           	signat	_ResetDeviceCleanly,88
 12557                           	global	_interrupt_at_low_vector
 12558                           
 12559 ;; *************** function _interrupt_at_low_vector *****************
 12560 ;; Defined at:
 12561 ;;		line 151 in file "../main.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;		None
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;		None
 12566 ;; Return value:  Size  Location     Type
 12567 ;;		None               void
 12568 ;; Registers used:
 12569 ;;		None
 12570 ;; Tracked objects:
 12571 ;;		On entry : 0/0
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12575 ;;      Params:         0       0       0       0       0       0       0       0       0
 12576 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12577 ;;      Temps:         17       0       0       0       0       0       0       0       0
 12578 ;;      Totals:        17       0       0       0       0       0       0       0       0
 12579 ;;Total ram usage:       17 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; Hardware stack levels required when called:    1
 12582 ;; This function calls:
 12583 ;;		Nothing
 12584 ;; This function is called by:
 12585 ;;		Interrupt level 1
 12586 ;; This function uses a non-reentrant model
 12587 ;;
 12588                           psect	intcodelo,class=CODE,space=0,reloc=2
 12589                           global __pintcodelo
 12590  000018                     __pintcodelo:
 12591                           psect	intcodelo
 12592                           	file	"../main.c"
 12593                           	line	151
 12594                           	global	__size_of_interrupt_at_low_vector
 12595  0000                     	__size_of_interrupt_at_low_vector	equ	__end_of_interrupt_at_low_vector-_interrupt_at_lo
                                 w_vector
 12596                           	
 12597  000018                     _interrupt_at_low_vector:
 12598                           	opt	stack 22
 12599  000018  CFD8 F027          	movff	status+0,??_interrupt_at_low_vector+0
 12600  00001C  CFE8 F028          	movff	wreg+0,??_interrupt_at_low_vector+1
 12601  000020  CFE0 F029          	movff	bsr+0,??_interrupt_at_low_vector+2
 12602  000024  CFFA F02A          	movff	pclat+0,??_interrupt_at_low_vector+3
 12603  000028  CFFB F02B          	movff	pclat+1,??_interrupt_at_low_vector+4
 12604  00002C  CFE9 F02C          	movff	fsr0l+0,??_interrupt_at_low_vector+5
 12605  000030  CFEA F02D          	movff	fsr0h+0,??_interrupt_at_low_vector+6
 12606  000034  CFE1 F02E          	movff	fsr1l+0,??_interrupt_at_low_vector+7
 12607  000038  CFE2 F02F          	movff	fsr1h+0,??_interrupt_at_low_vector+8
 12608  00003C  CFD9 F030          	movff	fsr2l+0,??_interrupt_at_low_vector+9
 12609  000040  CFDA F031          	movff	fsr2h+0,??_interrupt_at_low_vector+10
 12610  000044  CFF3 F032          	movff	prodl+0,??_interrupt_at_low_vector+11
 12611  000048  CFF4 F033          	movff	prodh+0,??_interrupt_at_low_vector+12
 12612  00004C  CFF6 F034          	movff	tblptrl+0,??_interrupt_at_low_vector+13
 12613  000050  CFF7 F035          	movff	tblptrh+0,??_interrupt_at_low_vector+14
 12614  000054  CFF8 F036          	movff	tblptru+0,??_interrupt_at_low_vector+15
 12615  000058  CFF5 F037          	movff	tablat+0,??_interrupt_at_low_vector+16
 12616                           	line	152
 12617                           	
 12618  00005C                     i1l1434:
 12619                           # 152 "../main.c"
 12620  00005C  EF0C F020          goto 0x4018 ;# 
 12621                           psect	intcodelo
 12622                           	line	153
 12623                           	
 12624  000060                     i1l125:
 12625  000060  C037  FFF5         	movff	??_interrupt_at_low_vector+16,tablat+0
 12626  000064  C036  FFF8         	movff	??_interrupt_at_low_vector+15,tblptru+0
 12627  000068  C035  FFF7         	movff	??_interrupt_at_low_vector+14,tblptrh+0
 12628  00006C  C034  FFF6         	movff	??_interrupt_at_low_vector+13,tblptrl+0
 12629  000070  C033  FFF4         	movff	??_interrupt_at_low_vector+12,prodh+0
 12630  000074  C032  FFF3         	movff	??_interrupt_at_low_vector+11,prodl+0
 12631  000078  C031  FFDA         	movff	??_interrupt_at_low_vector+10,fsr2h+0
 12632  00007C  C030  FFD9         	movff	??_interrupt_at_low_vector+9,fsr2l+0
 12633  000080  C02F  FFE2         	movff	??_interrupt_at_low_vector+8,fsr1h+0
 12634  000084  C02E  FFE1         	movff	??_interrupt_at_low_vector+7,fsr1l+0
 12635  000088  C02D  FFEA         	movff	??_interrupt_at_low_vector+6,fsr0h+0
 12636  00008C  C02C  FFE9         	movff	??_interrupt_at_low_vector+5,fsr0l+0
 12637  000090  C02B  FFFB         	movff	??_interrupt_at_low_vector+4,pclat+1
 12638  000094  C02A  FFFA         	movff	??_interrupt_at_low_vector+3,pclat+0
 12639  000098  C029  FFE0         	movff	??_interrupt_at_low_vector+2,bsr+0
 12640  00009C  C028  FFE8         	movff	??_interrupt_at_low_vector+1,wreg+0
 12641  0000A0  C027  FFD8         	movff	??_interrupt_at_low_vector+0,status+0
 12642  0000A4  0010               	retfie
 12643                           	opt stack 0
 12644                           GLOBAL	__end_of_interrupt_at_low_vector
 12645  0000A6                     	__end_of_interrupt_at_low_vector:
 12646                           	signat	_interrupt_at_low_vector,1112
 12647                           	global	_interrupt_at_high_vector
 12648                           
 12649 ;; *************** function _interrupt_at_high_vector *****************
 12650 ;; Defined at:
 12651 ;;		line 146 in file "../main.c"
 12652 ;; Parameters:    Size  Location     Type
 12653 ;;		None
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;		None
 12656 ;; Return value:  Size  Location     Type
 12657 ;;		None               void
 12658 ;; Registers used:
 12659 ;;		None
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12665 ;;      Params:         0       0       0       0       0       0       0       0       0
 12666 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12667 ;;      Temps:         14       0       0       0       0       0       0       0       0
 12668 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12669 ;;Total ram usage:       14 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; This function calls:
 12672 ;;		Nothing
 12673 ;; This function is called by:
 12674 ;;		Interrupt level 2
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           psect	intcode,class=CODE,space=0,reloc=2
 12678                           global __pintcode
 12679  000008                     __pintcode:
 12680                           psect	intcode
 12681                           	file	"../main.c"
 12682                           	line	146
 12683                           	global	__size_of_interrupt_at_high_vector
 12684  0000                     	__size_of_interrupt_at_high_vector	equ	__end_of_interrupt_at_high_vector-_interrupt_at_
                                 high_vector
 12685                           	
 12686  000008                     _interrupt_at_high_vector:
 12687                           	opt	stack 22
 12688  000008  CFFA F038          	movff	pclat+0,??_interrupt_at_high_vector+0
 12689  00000C  CFFB F039          	movff	pclat+1,??_interrupt_at_high_vector+1
 12690  000010  CFE9 F03A          	movff	fsr0l+0,??_interrupt_at_high_vector+2
 12691                           	global	int_func
 12692  000014  EF4B  F010         	goto	int_func
 12693                           psect	intcode_body,class=CODE,space=0,reloc=2
 12694                           global __pintcode_body
 12695  002096                     __pintcode_body:
 12696  002096                     int_func:
 12697  002096  CFEA F03B          	movff	fsr0h+0,??_interrupt_at_high_vector+3
 12698  00209A  CFE1 F03C          	movff	fsr1l+0,??_interrupt_at_high_vector+4
 12699  00209E  CFE2 F03D          	movff	fsr1h+0,??_interrupt_at_high_vector+5
 12700  0020A2  CFD9 F03E          	movff	fsr2l+0,??_interrupt_at_high_vector+6
 12701  0020A6  CFDA F03F          	movff	fsr2h+0,??_interrupt_at_high_vector+7
 12702  0020AA  CFF3 F040          	movff	prodl+0,??_interrupt_at_high_vector+8
 12703  0020AE  CFF4 F041          	movff	prodh+0,??_interrupt_at_high_vector+9
 12704  0020B2  CFF6 F042          	movff	tblptrl+0,??_interrupt_at_high_vector+10
 12705  0020B6  CFF7 F043          	movff	tblptrh+0,??_interrupt_at_high_vector+11
 12706  0020BA  CFF8 F044          	movff	tblptru+0,??_interrupt_at_high_vector+12
 12707  0020BE  CFF5 F045          	movff	tablat+0,??_interrupt_at_high_vector+13
 12708                           	line	147
 12709                           	
 12710  0020C2                     i2l1432:
 12711                           # 147 "../main.c"
 12712  0020C2  EF04 F020          goto 0x4008 ;# 
 12713                           psect	intcode_body
 12714                           	line	148
 12715                           	
 12716  0020C6                     i2l122:
 12717  0020C6  C045  FFF5         	movff	??_interrupt_at_high_vector+13,tablat+0
 12718  0020CA  C044  FFF8         	movff	??_interrupt_at_high_vector+12,tblptru+0
 12719  0020CE  C043  FFF7         	movff	??_interrupt_at_high_vector+11,tblptrh+0
 12720  0020D2  C042  FFF6         	movff	??_interrupt_at_high_vector+10,tblptrl+0
 12721  0020D6  C041  FFF4         	movff	??_interrupt_at_high_vector+9,prodh+0
 12722  0020DA  C040  FFF3         	movff	??_interrupt_at_high_vector+8,prodl+0
 12723  0020DE  C03F  FFDA         	movff	??_interrupt_at_high_vector+7,fsr2h+0
 12724  0020E2  C03E  FFD9         	movff	??_interrupt_at_high_vector+6,fsr2l+0
 12725  0020E6  C03D  FFE2         	movff	??_interrupt_at_high_vector+5,fsr1h+0
 12726  0020EA  C03C  FFE1         	movff	??_interrupt_at_high_vector+4,fsr1l+0
 12727  0020EE  C03B  FFEA         	movff	??_interrupt_at_high_vector+3,fsr0h+0
 12728  0020F2  C03A  FFE9         	movff	??_interrupt_at_high_vector+2,fsr0l+0
 12729  0020F6  C039  FFFB         	movff	??_interrupt_at_high_vector+1,pclat+1
 12730  0020FA  C038  FFFA         	movff	??_interrupt_at_high_vector+0,pclat+0
 12731  0020FE  0011               	retfie f
 12732                           	opt stack 0
 12733                           GLOBAL	__end_of_interrupt_at_high_vector
 12734  002100                     	__end_of_interrupt_at_high_vector:
 12735                           	signat	_interrupt_at_high_vector,88
 12736                           psect	smallconst
 12737  0008C2  00                 	db 0	; dummy byte at the end
 12738                           	global	__smallconst
 12739                           	global	__mediumconst
 12740                           	GLOBAL	__activetblptr
 12741  0000                     __activetblptr	EQU	2
 12742                           	psect	intsave_regs,class=BIGRAM,space=1
 12743                           	file ""
 12744                           	line	0
 12745                           psect	intcode
 12746  000018                     fp__USBCheckHIDRequest:
 12747                           	PSECT	rparam,class=COMRAM,space=1
 12748                           	GLOBAL	__Lrparam
 12749                           	FNCONF	rparam,??,?
 12750                           GLOBAL	__Lparam, __Hparam
 12751                           GLOBAL	__Lrparam, __Hrparam
 12752  0000                     __Lparam	EQU	__Lrparam
 12753  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    194
    Data        0
    BSS         230
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      69
    BANK0           160     16     144
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4h          239      0       0
    BANK5           248      0       0
    BANK6           248      0       0
    BANK7           128      0       0

Pointer List with Targets:

    ClearArray@startAdr	PTR unsigned char  size(2) Largest target is 1
		 -> usb_alt_intf(COMRAM[1]), UEP1(DATA[1]), 

    ep0Bi.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ClassReqHandler	const PTR FTN()void [1] size(2) Largest target is 0
		 -> USBCheckHIDRequest(), 

    ep0Bo.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep0Bi...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[38]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [2] size(2) Largest target is 41
		 -> cfg01(CODE[41]), 

    ep0Bo...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    pDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    HIDRxReport@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> PacketFromPC(BANK0[64]), 

    HIDTxReport@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> PacketToPC(BANK0[64]), 

    ep1Bi.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep1Bo.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep1Bi...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    S601$ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep1Bo...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    S393_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S393_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S393_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S393_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pSrc.bRam	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_at_high_vector in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ProcessIO
    _InitializeSystem->_UserInit
    _USBTasks->_USBDriverService
    _ProcessIO->_USBDriverService
    _USBCheckBusStatus->_USBModuleEnable
    _USBDriverService->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlTrfSetupHandler->_USBCtrlEPServiceComplete
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBCheckStdRequest->_USBStdGetStatusHandler
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_ClearArray
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlEPServiceComplete->_USBCtrlTrfTxService
    _USBProtocolResetHandler->_ClearArray
    _WriteConfigBits->_UnlockAndActivate
    _WriteEEPROM->_UnlockAndActivate
    _WriteFlashBlock->_UnlockAndActivate

Critical Paths under _interrupt_at_high_vector in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_at_high_vector in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_at_high_vector in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_at_high_vector in BANK3

    None.

Critical Paths under _main in BANK4h

    None.

Critical Paths under _interrupt_at_high_vector in BANK4h

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_at_high_vector in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_at_high_vector in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_at_high_vector in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2410
                   _InitializeSystem
                           _USBTasks
                     _BlinkUSBStatus
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     1     1      0       0
                                              1 BANK0      1     1      0
                           _UserInit
 ---------------------------------------------------------------------------------
 (1) _USBTasks                                             0     0      0     801
                  _USBCheckBusStatus
                   _USBDriverService
 ---------------------------------------------------------------------------------
 (1) _BlinkUSBStatus                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            5     5      0    1609
                                             11 BANK0      5     5      0
                        _HIDRxReport
                        _HIDTxReport
                      _ClearWatchdog
                  _UnlockAndActivate
                   _USBDriverService
                    _WriteConfigBits
                        _WriteEEPROM
                    _WriteFlashBlock
             _TableReadPostIncrement
                 _ResetDeviceCleanly
 ---------------------------------------------------------------------------------
 (2) _HIDTxReport                                          5     2      3     226
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _HIDRxReport                                          4     1      3      96
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBCheckBusStatus                                    1     1      0       0
                                              1 BANK0      1     1      0
                    _USBModuleEnable
 ---------------------------------------------------------------------------------
 (2) _USBDriverService                                     1     1      0     801
                                             10 BANK0      1     1      0
                 _USBWakeFromSuspend
            _USBProtocolResetHandler
                         _USBSuspend
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0     736
                                              7 BANK0      3     3      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               2     2      0     334
                                              5 BANK0      2     2      0
                 _USBCheckStdRequest
                 _USBCheckHIDRequest
           _USBCtrlEPServiceComplete
 ---------------------------------------------------------------------------------
 (5) _USBCheckHIDRequest                                   1     1      0       0
                                              0 BANK0      1     1      0
                _HIDGetReportHandler
                _HIDSetReportHandler
 ---------------------------------------------------------------------------------
 (6) _HIDGetReportHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HIDSetReportHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   1     1      0      65
                                              4 BANK0      1     1      0
                _USBStdGetDscHandler
                _USBStdSetCfgHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  1     1      0      65
                                              3 BANK0      1     1      0
                         _ClearArray
                          _HIDInitEP
 ---------------------------------------------------------------------------------
 (7) _HIDInitEP                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 0     0      0     102
                _USBCtrlTrfRxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  1     1      0     170
                                              4 BANK0      1     1      0
                _USBCtrlTrfTxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             1     1      0     170
                                              4 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  2     2      0     102
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfTxService                                  4     4      0     170
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _USBModuleEnable                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBProtocolResetHandler                              1     1      0      65
                                              3 BANK0      1     1      0
                         _ClearArray
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (7) _ClearArray                                           3     0      3      65
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) _USBPrepareForNextSetupTrf                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearWatchdog                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _WriteConfigBits                                      4     4      0      31
                                              1 BANK0      4     4      0
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROM                                          4     4      0      31
                                              1 BANK0      4     4      0
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (2) _WriteFlashBlock                                      3     3      0      31
                                              1 BANK0      3     3      0
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _UnlockAndActivate                                    1     0      1      31
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _TableReadPostIncrement                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ResetDeviceCleanly                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _interrupt_at_low_vector                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (9) _interrupt_at_high_vector                            14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _UserInit
   _USBTasks
     _USBCheckBusStatus
       _USBModuleEnable
     _USBDriverService
       _USBWakeFromSuspend
       _USBProtocolResetHandler
         _ClearArray
         _USBPrepareForNextSetupTrf
       _USBSuspend
       _USBStallHandler
       _USBCtrlEPService
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdGetDscHandler
             _USBStdSetCfgHandler
               _ClearArray
               _HIDInitEP
             _USBStdGetStatusHandler
             _USBStdFeatureReqHandler
           _USBCheckHIDRequest
             _HIDGetReportHandler
             _HIDSetReportHandler
           _USBCtrlEPServiceComplete
             _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
           _USBPrepareForNextSetupTrf
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
           _USBPrepareForNextSetupTrf
   _BlinkUSBStatus
   _ProcessIO
     _HIDRxReport
     _HIDTxReport
     _ClearWatchdog
     _UnlockAndActivate
     _USBDriverService
       _USBWakeFromSuspend
       _USBProtocolResetHandler
         _ClearArray
         _USBPrepareForNextSetupTrf
       _USBSuspend
       _USBStallHandler
       _USBCtrlEPService
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdGetDscHandler
             _USBStdSetCfgHandler
               _ClearArray
               _HIDInitEP
             _USBStdGetStatusHandler
             _USBStdFeatureReqHandler
           _USBCheckHIDRequest
             _HIDGetReportHandler
             _HIDSetReportHandler
           _USBCtrlEPServiceComplete
             _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
           _USBPrepareForNextSetupTrf
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
           _USBPrepareForNextSetupTrf
     _WriteConfigBits
       _UnlockAndActivate
     _WriteEEPROM
       _UnlockAndActivate
     _WriteFlashBlock
       _UnlockAndActivate
     _TableReadPostIncrement
     _ResetDeviceCleanly

 _interrupt_at_low_vector (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMlll          3FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BIGRAMhlh           F8      0       0      22        0.0%
BIGRAMhll           F8      0       0      23        0.0%
BITBANK6            F8      0       0      17        0.0%
BANK6               F8      0       0      18        0.0%
BITBANK5            F8      0       0      15        0.0%
BANK5               F8      0       0      16        0.0%
BIGRAMlh            EF      0       0      24        0.0%
BANK4h              EF      0       0      14        0.0%
BITBANK4h           EF      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      90       5       90.0%
BIGRAMhh            80      0       0      21        0.0%
BITBANK7            80      0       0      19        0.0%
BANK7               80      0       0      20        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      45       1       72.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       7       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      12        0.0%
DATA                 0      0     11C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.11 build 48931 
Symbol Table                                                                                   Fri May  3 05:12:13 2013

              __end_of_ClearWatchdog 2438                 __size_of_WriteEEPROM 0096  
                       _usb_alt_intf 0026                           _USB_SD_Ptr 0800  
                       ?_HIDRxReport 00E0                       _BlinkUSBStatus 2160  
                       ?_HIDTxReport 00E0                                   l40 10F6  
                                 l41 0F9C                                   l42 1030  
                                 l50 100E                                   l51 104E  
                                 l43 1012                                   l52 10CA  
                                 l44 0FB0                                   l53 1050  
                                 l45 0FCE                                   l62 243C  
                                 l54 10F6                                   l46 102C  
                                 l55 1056                                   l47 0FD8  
                                 l39 0F8A                                   l71 1AB2  
                                 l56 105C                                   l48 0FF8  
                                 l80 1A36                                   l72 1B04  
                                 l65 243E                                   l57 1080  
                                 l49 100C                                   l81 1A02  
                                 l73 1AC4                                   l58 1092  
                                 l82 1A48                                   l74 1B18  
                                 l59 10B6                                   l83 1A92  
                                 l75 1B5A                                   l68 2256  
                                 l78 1A90                                   l79 19F4  
                                 bsr 000FE0                   _USBCheckHIDRequest 0F6E  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000              ?_TableReadPostIncrement 0027  
                       __CFG_CP3$OFF 000000                                  l200 14A4  
                                l201 13BC                                  l210 1454  
                                l202 13C2                                  l130 22DC  
                                l211 1456                                  l203 13C8  
                                l131 22DE                                  l220 15BA  
                                l204 13EC                                  l132 22E0  
                                l205 13F2                                  l301 18AC  
                                l133 22E0                                  l230 16F8  
                                l214 15BA                                  l206 13F4  
                                l310 18CC                                  l302 18A4  
                                l150 21B4                                  l142 2432  
                                l231 1708                                  l223 1F86  
                                l215 159C                                  l207 13FA  
                                l303 189E                                  l151 21B6  
                                l320 206C                                  l240 1600  
                                l232 17B0                                  l224 1F98  
                                l216 14BA                                  l208 142A  
                                l304 1852                                  l136 21C6  
                                l128 22B4                                  l321 2060  
                                l241 15FC                                  l233 170A  
                                l225 1F98                                  l217 15B6  
                                l209 1452                                  l313 1B72  
                                l305 189C                                  l137 21C6  
                                l129 22B8                                  l330 1F0C  
                                l322 206A                                  l242 1600  
                                l234 1718                                  l218 14D8  
                                l314 1BC4                                  l306 18AA  
                                l138 21D0                                  l331 1EE8  
                                l323 2094                                  l243 16D0  
                                l235 1790                                  l219 1544  
                                l315 1C18                                  l307 18C8  
                                l147 2176                                  l139 2208  
                                l340 1126                                  l332 1F0A  
                                l324 2094                                  l244 16A4  
                                l236 17D6                                  l228 1794  
                                l316 1BD2                                  l308 18C0  
                                l148 218A                                  l341 1140  
                                l333 1EFE                                  l245 16CE  
                                l237 17D6                                  l229 16E4  
                                l317 1C1C                                  l309 18C6  
                                l149 21B6                                  l350 1200  
                                l342 113E                                  l334 1F08  
                                l246 16BE          __end_of_USBStdGetDscHandler 15BC  
                                l430 2110                                  l351 1250  
                                l343 1152                                  l335 1F12  
                                l327 1EC4                                  l247 16CC  
                                l431 210E                                  l344 11FE  
                                l352 1252                                  l336 1F12  
                                l328 1EB4                                  l248 16D0  
                                l432 2130                                  l600 2352  
                                l345 11EA                                  l361 1904  
                                l329 1EC2                                  l433 212E  
                                l346 11AC                                  l362 19C2  
                                l450 1C96                                  l442 1C2A  
                                l434 215E                                  l610 0AF4  
                                l347 11FC                                  l339 1142  
                                l355 200C                                  l363 1980  
                                l451 1CC2                                  l443 1CC2  
                                l435 215C                                  l611 0F6A  
                                l603 0964                                  l460 240E  
                                l348 1252                                  l356 1FCE  
                                l364 1932                                  l196 13A0  
                                l452 1CB2                                  l444 1C38  
                                l436 215E                                  l620 0C4E  
                                l612 0AF6                                  l604 0962  
                                l701 243A                                  l461 240C  
                                l349 123E                                  l357 201E  
                                l365 19C0                                  l197 14A4  
                                l453 1CB0                                  l445 1C44  
                                l621 0C40                                  l613 0B1A  
                                l605 092E                                  l462 2418  
                                l358 201E                                  l366 19C2  
                                l198 145A                                  l454 1CB4  
                                l446 1C52                                  l630 0D96  
                                l622 0C70                                  l614 0B28  
                                l606 0960                                  l471 1DAA  
                                l463 2418                                  l439 23EE  
                                l199 13A2                                  l447 1C60  
                                l607 0F6C                                  l631 0EDA  
                                l623 0C96                                  l615 0B44  
                                l472 1D9E                                  l448 1C6E  
                                l608 0F38                                  l640 0F32  
                                l632 0DD8                                  l624 0D6A  
                                l616 0BAE                                  l457 2428  
                                l369 2404                                  l473 1DB2  
                                l449 1C7C                                  l633 0E4E  
                                l625 0D52                                  l617 0BC0  
                                l609 0966                                  l641 0F6C  
                                l650 2292                                  l466 231A  
                                l474 1DF4                                  l634 0ED2  
                                l626 0CC6                                  l618 0BEE  
                                l651 22A4                                  l467 2316  
                                l635 0E80                                  l627 0D4A  
                                l619 0C22                                  l660 12B6  
                                l468 231C                                  l636 0E6E  
                                l628 0D68                                  l661 1302  
                                l477 23B8                                  l637 0E7E  
                                l629 0D78                                  l646 2278  
                                l662 12F0                                  l478 23D6  
                                l638 0EEE                                  l647 229E  
                                l663 12E8                                  l479 23D6  
                                l639 0F30                                  l648 2288  
                                l664 12EE                                  l649 227C  
                                l665 12F6                                  l690 236E  
                                l666 1378                                  l682 1E78  
                                l674 1D4C                                  l691 2370  
                                l667 1336                                  l683 1E04  
                                l675 1CDE                                  l692 237E  
                                l668 1386                                  l684 1E8A  
                                l676 1D5E                                  l693 237E  
                                l669 1386                                  l685 1E8A  
                                l677 1D5E                                  l694 2386  
                                l695 2388                                  l688 2372  
                                l689 236A                                  l698 2436  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                _UIE 000F64                                  _UIR 000F65  
                         _USBSuspend 241A                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
                ?_USBCheckHIDRequest 0027                ??_USBCtrlTrfRxService 00E0  
                       __CFG_LVP$OFF 000000                                 l3100 1012  
                               l3110 105C                                 l3102 1030  
                               l3120 108C                                 l3112 1068  
                               l3104 104C                                 l3200 22CE  
                               l3130 10B6                                 l3122 1092  
                               l3114 1070                                 l3106 1050  
                               l3210 21E0                                 l3202 22D6  
                               l3140 2216                                 l3132 10C2  
                               l3124 109E                                 l3116 1072  
                               l3108 1056                                 l3300 0B7E  
                               l3220 2160                                 l3212 21EC  
                               l3204 21B8                                 l3150 224E  
                               l3142 221A                                 l3134 10C8  
                               l3126 10A6                                 l3118 1080  
                               l3070 0F6E                                 l3310 0BC0  
                               l3302 0B94                                 l3230 218A  
                               l3222 216C                                 l3214 21F8  
                               l3206 21D0                                 l3144 2222  
                               l3128 10A8                                 l3136 10CA  
                               l3080 0FAE                                 l3072 0F88  
                               l3160 1B04                                 l3152 1A94  
                               l3400 0E7A                                 l3320 0BE4  
                               l3312 0BC4                                 l3304 0B98  
                               l3240 0900                                 l3232 2196  
                               l3224 2176                                 l3216 2204  
                               l3208 21DC                                 l3146 2234  
                               l3138 220A                                 l3090 0FE4  
                               l3082 0FB0                                 l3074 0F8A  
                               l3170 19EE                                 l3162 1B1C  
                               l3154 1AA2                                 l3410 0F22  
                               l3402 0E80                                 l3330 0C32  
                               l3322 0BEE                                 l3314 0BC6  
                               l3306 0B9C                                 l3250 094A  
                               l3242 090C                                 l3234 08C4  
                               l3226 217C                                 l3218 242A  
                               l3148 223C                                 l3500 13DE  
                               l3092 0FEE                                 l3084 0FBC  
                               l3076 0F9A                                 l3420 232E  
                               l3180 1A48                                 l3172 19F4  
                               l3164 19C4                                 l3156 1AC4  
                               l3412 0F32                                 l3404 0ED2  
                               l3340 0C62                                 l3332 0C3A  
                               l3324 0BFE                                 l3316 0BCA  
                               l3308 0BAE                                 l3260 09EA  
                               l3252 0950                                 l3244 091C  
                               l3236 08CC                                 l3228 2186  
                               l3510 141A                                 l3502 13EC  
                               l3094 0FF8                                 l3086 0FC6  
                               l3078 0F9C                                 l3430 2118  
                               l3422 233A                                 l3182 1A50  
                               l3174 1A02                                 l3166 19D0  
                               l3158 1AFC                                 l3406 0EDA  
                               l3350 0CC6                                 l3342 0C70  
                               l3334 0C40                                 l3326 0C14  
                               l3318 0BCE                                 l3270 0A78  
                               l3262 0A04                                 l3254 0966  
                               l3246 092C                                 l3238 08D8  
                               l3414 0F38                                 l3190 22A6  
                               l3600 15DC                                 l3512 141C  
                               l3504 13F4                                 l3520 145A  
                               l3096 1002                                 l3088 0FD8  
                               l3440 214A                                 l3432 2120  
                               l3424 2346                                 l3416 231E  
                               l3184 1A58                                 l3176 1A32  
                               l3168 19DC                                 l3408 0EFA  
                               l3360 0D4A                                 l3352 0D2A  
                               l3344 0C88                                 l3336 0C4E  
                               l3328 0C22                                 l3280 0AE6  
                               l3272 0A92                                 l3264 0A2E  
                               l3256 09A6                                 l3248 092E  
                               l3192 22AE                                 l3610 1630  
                               l3602 15E8                                 l3530 14CE  
                               l3522 14A6                                 l3514 142A  
                               l3506 13FA                                 l3098 1010  
                               l3450 1C32                                 l3442 214C  
                               l3434 2130                                 l3426 2100  
                               l3418 2322                                 l3186 1A86  
                               l3178 1A36                                 l3370 0D88  
                               l3354 0D2C                                 l3362 0D52  
                               l3346 0C96                                 l3338 0C5E  
                               l3290 0B30                                 l3282 0AF6  
                               l3274 0AAC                                 l3266 0A48  
                               l3258 09C0                                 l3194 22B4  
                               l3700 202C                                 l3620 16BE  
                               l3612 163C                                 l3604 15F8  
                               l3540 1550                                 l3532 14D8  
                               l3524 14B8                                 l3516 1436  
                               l3508 1406                                 l3460 1C5A  
                               l3452 1C38                                 l3444 214E  
                               l3436 213A                                 l3428 2108  
                               l3188 1A92                                 l3380 0DD8  
                               l3372 0D96                                 l3356 0D38  
                               l3348 0CB4                                 l3364 0D6A  
                               l3292 0B42                                 l3284 0B02  
                               l3276 0AB2                                 l3268 0A62  
                               l3196 22BE                                 l3622 23B8  
                               l3710 2060                                 l3702 2030  
                               l3614 1686                                 l3606 160C  
                               l3550 1F20                                 l3542 1570  
                               l3534 14E4                                 l3526 14BA  
                               l3518 1458                                 l3630 17E0  
                               l3470 1C7C                                 l3462 1C60  
                               l3454 1C42                                 l3446 1C1E  
                               l3438 2142                                 l3382 0DE8  
                               l3390 0E4E                                 l3374 0DA6  
                               l3366 0D78                                 l3358 0D44  
                               l3294 0B44                                 l3286 0B0E  
                               l3278 0ABE                                 l3198 22C2  
                               l3624 23C4                                 l3800 1108  
                               l3720 1E8C                                 l3704 2042  
                               l3712 206C                                 l3616 1696  
                               l3608 161E                                 l3560 1F86  
                               l3552 1F44                                 l3544 159A  
                               l3536 1504                                 l3528 14C6  
                               l3640 1850                                 l3632 17E2  
                               l3480 1CB4                                 l3472 1C88  
                               l3464 1C68                                 l3456 1C4C  
                               l3448 1C28                                 l3392 0E52  
                               l3384 0DF6                                 l3376 0DB6  
                               l3368 0D7C                                 l3296 0B48  
                               l3288 0B28                                 l3626 23CC  
                               l3810 1152                                 l3802 1118  
                               l3722 1E98                                 l3730 1EC4  
                               l3714 2070                                 l3706 204A  
                               l3618 16B0                                 l3570 16F8  
                               l3562 1F92                                 l3554 1F68  
                               l3538 1544                                 l3546 159C  
                               l3490 13BC                                 l3642 1852  
                               l3634 17F6                                 l3650 18A4  
                               l3482 1CB6                                 l3474 1C94  
                               l3466 1C6E                                 l3458 1C52  
                               l3394 0E5E                                 l3386 0DFA  
                               l3378 0DBA                                 l3298 0B7A  
                               l3900 1D2C                                 l3820 11A0  
                               l3812 1158                                 l3804 1126  
                               l3740 1EFE                                 l3732 1ECE  
                               l3724 1E9C                                 l3716 2078  
                               l3708 2056                                 l3580 176E  
                               l3572 1700                                 l3564 16D2  
                               l3556 1F6C                                 l3548 1F14  
                               l3492 13C2                                 l3484 1388  
                               l3660 18C4                                 l3644 1886  
                               l3636 181E                                 l3652 18AC  
                               l3628 17D8                                 l3476 1C9E  
                               l3468 1C7A                                 l3396 0E6A  
                               l3388 0DFC                                 l3910 1E04  
                               l3902 1D30                                 l3830 11DE  
                               l3822 11AA                                 l3814 115E  
                               l3806 1130                                 l3750 1928  
                               l3734 1ED2                                 l3742 1F0C  
                               l3726 1EA6                                 l3718 208A  
                               l3590 17BA                                 l3582 1786  
                               l3574 170A                                 l3566 16E4  
                               l3558 1F78                                 l3494 13C8  
                               l3486 139E                                 l3670 1B72  
                               l3654 18B8                                 l3662 18C8  
                               l3646 188C                                 l3638 1830  
                               l3478 1CAC                                 l3398 0E6E  
                               l3912 1E0E                                 l3920 1E78  
                               l3904 1D48                                 l3840 1232  
                               l3824 11AC                                 l3832 11EA  
                               l3816 116A                                 l3808 1142  
                               l3760 195C                                 l3752 1932  
                               l3744 18CE                                 l3736 1EDE  
                               l3728 1EB4                                 l3592 17C6  
                               l3584 1792                                 l3576 1718  
                               l3568 16F0                                 l3496 13D4  
                               l3488 13A2                                 l3680 1BA2  
                               l3672 1B7E                                 l3664 18CC  
                               l3656 18BA                                 l3648 189E  
                               l3930 129C                                 l3922 1254  
                               l3914 1E5A                                 l3906 1D4C  
                               l3850 2406                                 l3834 1200  
                               l3826 11D6                                 l3842 123E  
                               l3818 116E                                 l3770 1994  
                               l3762 1964                                 l3754 1936  
                               l3746 18D8                                 l3738 1EF4  
                               l3594 17C8                                 l3578 1724  
                               l3586 1794                                 l3498 13DC  
                               l3690 1BD2                                 l3682 1BB2  
                               l3674 1B8A                                 l3666 1B5C  
                               l3658 18C0                                 l3940 12E2  
                               l3932 12A8                                 l3924 1260  
                               l3916 1E5E                                 l3908 1DF6  
                               l3860 1DB8                                 l3852 1D60  
                               l3844 23D8                                 l3836 122A  
                               l3828 11DA                                 l3780 1FA8  
                               l3772 199C                                 l3764 1976  
                               l3756 1942                                 l3748 1910  
                               l3596 15BC                                 l3588 17B0  
                               l3692 1C02                                 l3684 1BC2  
                               l3676 1B96                                 l3668 1B68  
                               l3950 1312                                 l3942 12E4  
                               l3934 12B4                                 l3926 1292  
                               l3918 1E74                                 l3870 1DE8  
                               l3862 1DC0                                 l3854 1D74  
                               l3846 23E0                                 l3838 122E  
                               l3790 2000                                 l3782 1FC0  
                               l3774 19A4                                 l3758 194A  
                               l3766 1980                                 l3598 15CA  
                               l3694 1C08                                 l3686 1BC4  
                               l3678 1B9E                                 l3960 2438  
                               l3952 1328                                 l3944 12F4  
                               l3936 12BE                                 l3928 1298  
                               l3880 230C                                 l3872 241A  
                               l3864 1DD2                                 l3856 1D98  
                               l3848 23E2                                 l3784 1FCE  
                               l3792 200C                                 l3776 19B6  
                               l3768 198C                                 l3688 1BD0  
                               l3696 1C18                                 l3970 2276  
                               l3962 2258                                 l3890 2356  
                               l3954 1336                                 l3946 12F8  
                               l3938 12C8                                 l3882 2316  
                               l3874 22E4                                 l3794 23F0  
                               l3866 1DDA                                 l3858 1DB4  
                               l3786 1FF8                                 l3778 1F9A  
                               l3698 2020                                 l3972 227C  
                               l3964 225A                                 l3892 2366  
                               l3956 1374                                 l3948 130E  
                               l3876 22EC                                 l3884 231A  
                               l3796 23FC                                 l3868 1DDC  
                               l3788 1FFC                                 l3974 2288  
                               l3966 225E                                 l3958 1378  
                               l3894 1CC4                                 l3886 2434  
                               l3878 22FC                                 l3798 10F8  
                               l3976 2292                                 l3968 226A  
                               l3888 2354                                 l3896 1CD0  
                               l3978 2294                                 l3898 1CDE  
              ??_HIDSetReportHandler 00E0                                 u3000 158C  
                               u3010 1F78                                 u3011 1F76  
                               u3100 1630                                 u3020 1700  
                               u3101 162E                                 u3021 16FE  
                               u3110 1696                                 u3030 1786  
                               u3111 1694                                 u3031 1784  
                               u3007 1586                                 _LATC 000F8B  
                               u3120 16B0                                 u3040 17BA  
                               u2400 0FAC                                 u3200 1BC0  
                               u3121 16AE                                 u3041 17B8  
                               u2401 0FAA                                 u3201 1BBE  
                               u3050 15CA                                 u2410 0FC6  
                               u3210 1BCE                                 u3130 17E0  
                               u3051 15C8                                 u2411 0FC4  
                               u3211 1BCC                                 u3131 17DE  
                               u3300 1EF4                                 u3060 15DC  
                               u2420 0FEE                                 u3140 17F6  
                               u2500 1A46                                 u3301 1EF2  
                               u3061 15DA                                 u2421 0FEC  
                               u3141 17F4                                 u2501 1A44  
                               u3310 18D8                                 u3070 15F8  
                               u2430 1002                                 u3230 1C16  
                               u3150 181E                                 u2510 1A66  
                               u3311 18D6                                 u3071 15F6  
                               u2431 1000                                 u3231 1C14  
                               u3151 181C                                 u2511 1A62  
                               u3400 11D4                                 u3320 1910  
                               u3240 202C                                 u3080 160C  
                               u2440 104A                                 u3160 184E  
                               u2600 08CC                                 u2520 22AE  
                               u3321 190E                                 u3241 202A  
                               u3081 160A                                 u2441 1048  
                               u3161 184C                                 u2601 08CA  
                               u2521 22AC                                 u3410 11FA  
                               u3330 1928                                 u3250 2056  
                               u3090 161E                                 u3170 189A  
                               u2450 1AA2                                 u2610 08D8  
                               u2530 22CE                                 u3411 11F8  
                               u3331 1926                                 u3251 2054  
                               u3091 161C                                 u3171 1898  
                               u2451 1AA0                                 u2611 08D6  
                               u2531 22CC                                 u3500 2386  
                               u3420 1228                                 u3340 1FF6  
                               u3260 1E98                                 u2380 0F86  
                               u3228 1BEA                                 u3180 18B8  
                               u2516 1A68                                 u2460 1B18  
                               u2700 0C3A                                 u2620 092A  
                               u2540 22D6                                 u3501 2384  
                               u3261 1E96                                 u2381 0F84  
                               u3229 1C02                                 u3181 18B6  
                               u2461 1B16                                 u2701 0C38  
                               u2621 0928                                 u2541 22D4  
                               u3510 1D5C                                 u3430 124E  
                               u3350 201C                                 u3270 1EA6  
                               u2390 0F98                                 u3190 1B68  
                               u2470 1B32                                 u2710 0C5E  
                               u2630 095E                                 u2550 21CE  
                               u3511 1D5A                                 u3431 124C  
                               u3407 11CA                                 u3351 201A  
                               u3271 1EA4                                 u2391 0F96  
                               u3191 1B66                                 u2471 1B2E  
                               u2711 0C5C                                 u2631 095C  
                               u2551 21CC                                 u3600 229E  
                               u3520 1E88                                 u3440 2416  
                               u3360 1108                                 u3280 1ECE  
                               u2480 19DC                                 u2800 0EEE  
                               u2720 0C88                                 u2640 0ABE  
                               u2560 216C                                 u3601 229C  
                               u3521 1E86                                 u3441 2414  
                               u3361 1106                                 u3281 1ECC  
                               u2481 19DA                                 u2801 0EEC  
                               u2721 0C86                                 u2641 0ABC  
                               u2561 216A                                 u3530 12B2  
                               u3450 1DB2                                 u3370 1118  
                               u3290 1EDE                                 u2490 19EE  
                               u2810 0EFA                                 u2730 0CB4  
                               u2650 0B0E                                 u2570 2186  
                               u3531 12B0                                 u3451 1DB0  
                               u3427 121E                                 u3371 1116  
                               u3347 1FEC                                 u3291 1EDC  
                               u2491 19EC                                 u2811 0EF8  
                               u2731 0CB2                                 u2651 0B0C  
                               u2571 2184                                 u3540 12BE  
                               u3460 22EC                                 u3380 1130  
                               u2900 1C5A                                 u2820 2108  
                               u2476 1B34                                 u2740 0D44  
                               u2660 0B40                                 u2580 2196  
                               u3541 12BC                                 u3461 22EA  
                               u3381 112E                                 u2901 1C58  
                               u2821 2106                                 u2741 0D42  
                               u2661 0B3E                                 u2581 2194  
                               u3550 12C8                                 u3470 22FC  
                               u3390 11A8                                 u2910 1C68  
                               u2830 2118                                 u2750 0D66  
                               u2670 0B6A                                 u2590 21A0  
                               u3551 12C6                                 u3471 22FA  
                               u3391 11A6                                 u2911 1C66  
                               u2831 2116                                 u2751 0D64  
                               u2735 0CAC                                 u2591 219C  
                               u3560 1302                                 u3480 230C  
                               u2920 1C78                                 u2840 213A  
                               u2760 0DE8                                 u2680 0BAC  
                               u3561 1300                                 u3481 230A  
                               u2921 1C76                                 u2841 2138  
                               u2761 0DE6                                 u2681 0BAA  
                               u3490 2366                                 u3570 1384  
                               u2930 1C92                                 u2850 2142  
                               u2770 0E5E                                 u2690 0C32  
                               u3491 2364                                 u3571 1382  
                               u2931 1C90                                 u2851 2140  
                               u2771 0E5C                                 u2691 0C30  
                               u2675 0B60                                 u3580 2274  
                               u2940 1C9E                                 u2860 1C26  
                               u2780 0E6A                                 u2596 21A2  
                               u3581 2272                                 u2941 1C9C  
                               u2861 1C24                                 u2781 0E68  
                               u3590 2290                                 u2950 1CAC  
                               u2870 1C32                                 u2790 0E7A  
                               u3591 228E                                 u2951 1CAA  
                               u2871 1C30                                 u2791 0E78  
                               u2960 1CC0                                 u2880 1C40  
                               u2961 1CBE                                 u2881 1C3E  
                               u2970 139C                                 u2890 1C4C  
                               u2971 139A                                 u2891 1C4A  
                               u2980 14B6                                 u2981 14B4  
                               u2990 1542                                 u2997 1532  
              ??_USBCtrlTrfTxService 00E0                                 _UCFG 000F62  
                               _UEP0 000F6A                                 _UEP1 000F6B  
                               _UEIE 000F66                                 _UEIR 000F67  
                               _UCON 000F60   __size_of_USBPrepareForNextSetupTrf 0016  
                               _WREG 000FE8                   __size_of_HIDInitEP 004E  
           __size_of_USBModuleEnable 0018                                 _pDst 0007  
                               _pSrc 000A                                 _main 22A6  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$220 000000  
                         _ClearArray 23B8                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A6              BlinkUSBStatus@led_count 000D  
                      __CFG_IESO$OFF 000000                 ??_USBCheckHIDRequest 00E0  
         __end_of_USBCheckStdRequest 14A6               ??_USBCtrlTrfOutHandler 00E2  
                      __CFG_MCLRE$ON 000000            ??_USBStdFeatureReqHandler 00E0  
             __end_of_BlinkUSBStatus 21B8                                EECON1 000FA6  
                              EECON2 000FA7             ??_USBStdGetStatusHandler 00E0  
     __end_of_TableReadPostIncrement 243C                                ?_main 0027  
                              _EEADR 000FA9    __size_of_USBCtrlEPServiceComplete 00F6  
          ?_USBCtrlEPServiceComplete 0027                                i1l125 0060  
                              i2l122 20C6                                _UADDR 000F63  
                              _TRISC 000F94                                _USTAT 000F61  
                  HIDRxReport@buffer 00E0                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                              _ep0Bi 000404                                _ep1Bi 00040C  
                              _ep0Bo 000400                                _ep1Bo 000408  
                              _cfg01 0840                                _sd000 08BE  
                              _sd001 080C                                _sd002 0869  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000             _interrupt_at_high_vector 0008  
                     __CFG_EBTRB$OFF 000000                     _usb_device_state 001F  
                              pclath 000FFA                         HIDTxReport@i 00E4  
                              tablat 000FF5                     __end_of_USBTasks 2434  
                   _ConfigsLockValue 0019                                status 000FD8  
                     __CFG_T3CMX$RB5 000000                       __CFG_ICPRT$OFF 000000  
         __size_of_UnlockAndActivate 0036                    _BufferedDataIndex 0018  
                         _PacketToPC 00A0         __size_of_USBStdSetCfgHandler 0086  
                    __initialization 238A                      ?_BlinkUSBStatus 0027  
                       __end_of_main 22E4              _interrupt_at_low_vector 0018  
              _ProgramMemStopAddress 0001                    __end_of_HIDInitEP 2258  
          __size_of_USBCtrlEPService 00F6                               ??_main 00F0  
          __size_of_InitializeSystem 0052                        __activetblptr 000002  
                        ?_USBSuspend 0027                       __CFG_SDOMX$RC7 000000  
                    __CFG_CCP2MX$RC1 000000                     __end_of_UserInit 2354  
                             _EEDATA 000FA8                               _EECON1 000FA6  
                             i1l1434 005C                               i2l1432 20C2  
                             _TABLAT 000FF5                               _OSCCON 000FD3  
                             _TBLPTR 000FF6                      _ClassReqHandler 080A  
                        ?_ClearArray 00E0                       __CFG_XINST$OFF 000000  
                  ??_USBModuleEnable 00E0                       __CFG_STVREN$ON 000000  
                             _wCount 0021      __size_of_USBStdGetStatusHandler 0106  
                             clear_0 2390                               clear_1 239C  
                             clear_2 23A8         __size_of_HIDGetReportHandler 0002  
               __size_of_HIDRxReport 00D0                           ProcessIO@i 00EF  
               __size_of_HIDTxReport 00C8  WriteFlashBlock@BytesTakenFromBuffer 0014  
                 __size_of_ProcessIO 06AA                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8          __size_of_ResetDeviceCleanly 004E  
                       WriteEEPROM@i 0013                          _CtrlTrfData 000600  
               __CFG_LS48MHZ$SYS48X8 000000                           __accesstop 0060  
            __end_of__initialization 23AE                      __CFG_PBADEN$OFF 000000  
           __size_of_USBStallHandler 003A                          _bTRNIFCount 001A  
         UnlockAndActivate@UnlockKey 00E0                  __size_of_USBSuspend 0010  
          ??_interrupt_at_low_vector 0027                       __pcstackCOMRAM 0027  
                      __end_of_cfg01 0869                     __CFG_nPWRTEN$OFF 000000  
                      __end_of_sd000 08C2                        __end_of_sd001 0840  
                      __end_of_sd002 088F                      _active_protocol 0023  
        __end_of_USBCtrlTrfInHandler 1F14                      __CFG_PCLKEN$OFF 000000  
                          ?_USBTasks 0027             __size_of_WriteFlashBlock 0134  
          __size_of_USBDriverService 00A6                       __CFG_nLPBOR$ON 000000  
                __size_of_ClearArray 0020             __size_of_WriteConfigBits 009C  
            __end_of_ClassReqHandler 080C             ??_USBCtrlTrfSetupHandler 00E5  
             _USBStdGetStatusHandler 16D2                           __pbssBANK0 0060  
                         __pbssBANK1 0100                        ??_WriteEEPROM 00E1  
        __size_of_USBWakeFromSuspend 0014                    __end_of_ProcessIO 0F6E  
   __end_of_USBCtrlEPServiceComplete 19C4             ?_USBProtocolResetHandler 0027  
                  __CFG_PLLSEL$PLL3X 000000                            ?_UserInit 0027  
                         _device_dsc 08AC                     _USBCtrlEPService 17D8  
         ??_interrupt_at_high_vector 0038                           ??_USBTasks 00EB  
                   _InitializeSystem 21B8          __end_of_USBCtrlTrfRxService 2020  
                 _USBCheckStdRequest 1388                      __CFG_WDTEN$SWON 000000  
        __end_of_HIDSetReportHandler 2440          __end_of_USBCtrlTrfTxService 1254  
                _USBStdSetCfgHandler 1F14      __end_of_interrupt_at_low_vector 00A6  
                            _OSCCON2 000FD2                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8                              _OSCTUNE 000F9B  
                ?_USBCheckStdRequest 0027         __size_of_USBStdGetDscHandler 0116  
             __size_of_ClearWatchdog 0004                              _UIEbits 000F64  
                            _UIRbits 000F65                       HIDRxReport@len 00E2  
                   ??_BlinkUSBStatus 00E0                              __Hparam 0000  
               ?_USBStdSetCfgHandler 0027          __size_of_USBCheckHIDRequest 018A  
                            __Lparam 0000                    __end_of_hid_rpt01 08AC  
               ??_USBCheckStdRequest 00E4        __size_of_USBCtrlTrfOutHandler 0076  
                __end_of_WriteEEPROM 1E8C                    ??_USBStallHandler 00E0  
                         ??_UserInit 00E0                         __psmallconst 0800  
                            __pcinit 238A                              __ramtop 0800  
                            __ptext0 22A6                              __ptext1 21B8  
                            __ptext2 242A                              __ptext3 2160  
                            __ptext4 08C4                              __ptext5 1A94  
                            __ptext6 19C4                              __ptext7 231E  
                            __ptext8 2100                              __ptext9 1C1E  
                       ??_USBSuspend 00E0                            _HIDInitEP 220A  
                     _ctrl_trf_state 001C                   __end_of_USB_CD_Ptr 080A  
    __size_of_USBCtrlTrfSetupHandler 00C2                    ??_WriteFlashBlock 00E1  
                     __pintcode_body 2096                 end_of_initialization 23AE  
                    _USBModuleEnable 23D8                    ??_WriteConfigBits 00E1  
                 __end_of_USB_SD_Ptr 0806                  _HIDGetReportHandler 243C  
    __end_of_USBProtocolResetHandler 1DF6                        __Lmediumconst 0000  
                            int_func 2096                         ??_ClearArray 00E3  
                     HIDTxReport@len 00E2             ?_USBStdFeatureReqHandler 0027  
         ?_USBPrepareForNextSetupTrf 0027                ??_USBStdSetCfgHandler 00E3  
                 __end_of_USBSuspend 242A                              postdec2 000FDD  
                      _ClearWatchdog 2434                              postinc0 000FEE  
                            postinc2 000FDE             _USBCtrlEPServiceComplete 18CE  
               ?_HIDGetReportHandler 0027                            _PORTBbits 000F81  
    USBCtrlTrfRxService@byte_to_read 00E0                     _USBDriverService 1C1E  
                         ?_HIDInitEP 0027                   __end_of_ClearArray 23D8  
                       _PacketFromPC 0060      WriteFlashBlock@CorrectionFactor 0015  
             _ctrl_trf_session_owner 001B                          _WriteEEPROM 1DF6  
           ??_TableReadPostIncrement 00E0    __end_of_USBPrepareForNextSetupTrf 2406  
                   _short_pkt_status 001E                       ?_ClearWatchdog 0027  
             _USBCtrlTrfSetupHandler 1B5C                        ??_HIDRxReport 00E3  
                   _ErasePageTracker 000F                        ??_HIDTxReport 00E3  
              ??_HIDGetReportHandler 00E0     __end_of_interrupt_at_high_vector 2100  
                          _BootState 0017           __end_of_ResetDeviceCleanly 22A6  
            __end_of_USBModuleEnable 23F0                  start_initialization 238A  
                  __size_of_USBTasks 000A              ?_USBStdGetStatusHandler 0027  
    __end_of_USBStdFeatureReqHandler 16D2             __end_of_USBCtrlEPService 18CE  
           __end_of_InitializeSystem 220A                  _USBStdGetDscHandler 14A6  
                          _ProcessIO 08C4                      ClearArray@count 00E2  
                  __size_of_UserInit 0036                  __end_of_HIDRxReport 1A94  
     __end_of_USBStdGetStatusHandler 17D8     __size_of_USBProtocolResetHandler 0096  
                __end_of_HIDTxReport 1B5C                    _USBCheckBusStatus 2100  
                        ??_HIDInitEP 00E0                          __pbssCOMRAM 0001  
                      __pcstackBANK0 00E0         __size_of_USBCtrlTrfInHandler 0088  
                 ?_USBCheckBusStatus 0027                    HIDTxReport@buffer 00E0  
               ?_USBStdGetDscHandler 0027           __end_of_USBWakeFromSuspend 241A  
                ??_USBCheckBusStatus 00E1                      _USBStallHandler 22E4  
           ?_interrupt_at_low_vector 0027                      ??_ClearWatchdog 00E0  
    __size_of_TableReadPostIncrement 0004                            __pintcode 0008  
                         ?_ProcessIO 0027                            _hid_rpt01 088F  
                        __pintcodelo 0018                            _idle_rate 0024  
                    _WriteFlashBlock 1254            __end_of_USBCheckBusStatus 2160  
                    _WriteConfigBits 1CC4                          __smallconst 0800  
                ResetDeviceCleanly@i 0011                     ?_USBModuleEnable 0027  
       __end_of_USBCtrlTrfOutHandler 2096                ??_USBStdGetDscHandler 00E0  
       __size_of_USBCtrlTrfRxService 0086              USBCtrlTrfSetupHandler@i 00E6  
  __size_of_interrupt_at_high_vector 20F8         __size_of_HIDSetReportHandler 0002  
          ?_interrupt_at_high_vector 0027         __size_of_USBCtrlTrfTxService 015C  
                           _LATCbits 000F8B           __end_of_USBCheckHIDRequest 10F8  
           __end_of_USBDriverService 1CC4           ??_USBCtrlEPServiceComplete 00E4  
                           _PIE3bits 000FA3          ??_USBPrepareForNextSetupTrf 00E0  
                           _PIR3bits 000FA4            USBCtrlEPService@setup_cnt 00E9  
                   __CFG_WDTPS$32768 000000                             _UEP0bits 000F6A  
        __size_of_USBCheckStdRequest 011E                          _HIDRxReport 19C4  
                           _UCONbits 000F60                          _HIDTxReport 1A94  
   __size_of_USBStdFeatureReqHandler 0116                             _USBTasks 242A  
             _TableReadPostIncrement 2438                    __CFG_CFGPLLEN$OFF 000000  
            __end_of_USBStallHandler 231E          __end_of_USBStdSetCfgHandler 1F9A  
                     _hid_report_out 000700                   __end_of_device_dsc 08BE  
                         _EECON1bits 000FA6                         ?_WriteEEPROM 0027  
            ?_USBCtrlTrfSetupHandler 0027                             __Hrparam 0000  
                           __Lrparam 0000              __end_of_WriteFlashBlock 1388  
                 __CFG_BOREN$SBORDIS 000000                             _SetupPkt 000500  
            __end_of_WriteConfigBits 1D60                          ??_ProcessIO 00EB  
                           _UserInit 231E              __size_of_BlinkUSBStatus 0058  
         __size_of_USBCheckBusStatus 0060                       _hid_rpt_rx_len 001D  
            _USBProtocolResetHandler 1D60      USBCtrlTrfTxService@byte_to_send 00E2  
          _USBPrepareForNextSetupTrf 23F0                             __ptext10 17D8  
                           __ptext11 1B5C                             __ptext20 15BC  
                           __ptext12 0F6E                             __ptext21 2020  
                           __ptext13 243C                             __ptext30 23F0  
                           __ptext22 1E8C                             __ptext14 243E  
                           __ptext31 241A                             __ptext23 18CE  
                           __ptext15 1388                             __ptext32 22E4  
                           __ptext24 1F9A                             __ptext16 14A6  
                           __ptext33 2434                             __ptext25 10F8  
                           __ptext17 1F14                             __ptext34 1CC4  
                           __ptext26 23D8                             __ptext18 220A  
                           __ptext35 1DF6                             __ptext27 2406  
                           __ptext19 16D2                             __ptext36 1254  
                           __ptext28 1D60                             __ptext37 2354  
                           __ptext29 23B8                             __ptext38 2438  
                           __ptext39 2258                          _OSCCON2bits 000FD2  
                 _ResetDeviceCleanly 2258       __end_of_USBCtrlTrfSetupHandler 1C1E  
                      __size_of_main 003E                    ?_USBCtrlEPService 0027  
                  ?_InitializeSystem 0027                   ??_USBCtrlEPService 00E7  
        __end_of_HIDGetReportHandler 243E                  _USBCtrlTrfInHandler 1E8C  
              fp__USBCheckHIDRequest 0018                   ??_InitializeSystem 00E1  
                ?_ResetDeviceCleanly 0027                 _USBCtrlTrfOutHandler 2020  
                           _usb_stat 0020                    _ProgrammedPointer 0004  
                      _hid_report_in 000740                           _INTCONbits 000FF2  
               ?_USBCtrlTrfInHandler 0027                     WriteFlashBlock@i 0016  
               ??_ResetDeviceCleanly 00E0                     ?_USBStallHandler 0027  
                           intlevel1 0000                             intlevel2 0000  
                  _ProgrammingBuffer 0100                     WriteConfigBits@i 0012  
                  _UnlockAndActivate 2354                     ?_WriteFlashBlock 0027  
              ?_USBCtrlTrfOutHandler 0027                 __CFG_CPUDIV$NOCLKDIV 000000  
                _USBCtrlTrfRxService 1F9A                   ?_UnlockAndActivate 00E0  
                   ?_WriteConfigBits 0027                   _USBWakeFromSuspend 2406  
          ??_USBProtocolResetHandler 00E3              _USBStdFeatureReqHandler 15BC  
                _HIDSetReportHandler 243E     __size_of_interrupt_at_low_vector 008E  
                _USBCtrlTrfTxService 10F8                  ??_UnlockAndActivate 00E1  
                ?_USBWakeFromSuspend 0027                ??_USBCtrlTrfInHandler 00E4  
               ?_USBCtrlTrfRxService 0027                   __CFG_FOSC$INTOSCIO 000000  
                 ClearArray@startAdr 00E0                 ?_HIDSetReportHandler 0027  
               ?_USBCtrlTrfTxService 0027                 ??_USBWakeFromSuspend 00E0  
          __end_of_UnlockAndActivate 238A                    ?_USBDriverService 0027  
                         _USB_CD_Ptr 0806                       _usb_active_cfg 0025  
                 ??_USBDriverService 00EA  
