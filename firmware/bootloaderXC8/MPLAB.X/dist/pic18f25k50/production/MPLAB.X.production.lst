

Microchip Technology PIC18 LITE Macro Assembler V1.11 build 48931 
                                                                                               Sun Jun 16 03:22:08 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 48931
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 48931"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F25K50
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   109  0000                     SRCON1 equ 0F57h ;# 
   110                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   111  0000                     SRCON0 equ 0F58h ;# 
   112                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   113  0000                     CCPTMRS equ 0F59h ;# 
   114                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   115  0000                     VREGCON equ 0F5Ah ;# 
   116                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   117  0000                     ANSELA equ 0F5Bh ;# 
   118                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   119  0000                     ANSELB equ 0F5Ch ;# 
   120                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   121  0000                     ANSELC equ 0F5Dh ;# 
   122                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   123  0000                     UCON equ 0F60h ;# 
   124                           # 398 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   125  0000                     USTAT equ 0F61h ;# 
   126                           # 457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   127  0000                     UCFG equ 0F62h ;# 
   128                           # 538 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   129  0000                     UADDR equ 0F63h ;# 
   130                           # 601 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   131  0000                     UIE equ 0F64h ;# 
   132                           # 656 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   133  0000                     UIR equ 0F65h ;# 
   134                           # 711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   135  0000                     UEIE equ 0F66h ;# 
   136                           # 761 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   137  0000                     UEIR equ 0F67h ;# 
   138                           # 811 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   139  0000                     UFRM equ 0F68h ;# 
   140                           # 817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   141  0000                     UFRML equ 0F68h ;# 
   142                           # 894 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   143  0000                     UFRMH equ 0F69h ;# 
   144                           # 933 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   145  0000                     UEP0 equ 0F6Ah ;# 
   146                           # 1064 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   147  0000                     UEP1 equ 0F6Bh ;# 
   148                           # 1195 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   149  0000                     UEP2 equ 0F6Ch ;# 
   150                           # 1326 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   151  0000                     UEP3 equ 0F6Dh ;# 
   152                           # 1457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   153  0000                     UEP4 equ 0F6Eh ;# 
   154                           # 1588 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   155  0000                     UEP5 equ 0F6Fh ;# 
   156                           # 1719 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   157  0000                     UEP6 equ 0F70h ;# 
   158                           # 1850 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   159  0000                     UEP7 equ 0F71h ;# 
   160                           # 1981 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   161  0000                     UEP8 equ 0F72h ;# 
   162                           # 2068 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   163  0000                     UEP9 equ 0F73h ;# 
   164                           # 2155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   165  0000                     UEP10 equ 0F74h ;# 
   166                           # 2242 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   167  0000                     UEP11 equ 0F75h ;# 
   168                           # 2329 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   169  0000                     UEP12 equ 0F76h ;# 
   170                           # 2416 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   171  0000                     UEP13 equ 0F77h ;# 
   172                           # 2503 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   173  0000                     UEP14 equ 0F78h ;# 
   174                           # 2590 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   175  0000                     UEP15 equ 0F79h ;# 
   176                           # 2677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   177  0000                     SLRCON equ 0F7Ah ;# 
   178                           # 2708 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   179  0000                     VREFCON2 equ 0F7Bh ;# 
   180                           # 2759 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   181  0000                     VREFCON1 equ 0F7Ch ;# 
   182                           # 2819 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   183  0000                     VREFCON0 equ 0F7Dh ;# 
   184                           # 2878 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   185  0000                     PMD0 equ 0F7Eh ;# 
   186                           # 2962 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   187  0000                     PMD1 equ 0F7Fh ;# 
   188                           # 3043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   189  0000                     PORTA equ 0F80h ;# 
   190                           # 3196 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   191  0000                     PORTB equ 0F81h ;# 
   192                           # 3305 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   193  0000                     PORTC equ 0F82h ;# 
   194                           # 3458 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   195  0000                     PORTE equ 0F84h ;# 
   196                           # 3691 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   197  0000                     IOCB equ 0F86h ;# 
   198                           # 3729 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   199  0000                     IOCC equ 0F87h ;# 
   200                           # 3785 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   201  0000                     CTMUICON equ 0F88h ;# 
   202                           # 3860 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   203  0000                     LATA equ 0F89h ;# 
   204                           # 3992 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   205  0000                     LATB equ 0F8Ah ;# 
   206                           # 4124 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   207  0000                     LATC equ 0F8Bh ;# 
   208                           # 4251 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   209  0000                     CTMUCONL equ 0F8Eh ;# 
   210                           # 4256 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   211  0000                     CTMUCON1 equ 0F8Eh ;# 
   212                           # 4404 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   213  0000                     CTMUCONH equ 0F8Fh ;# 
   214                           # 4409 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   215  0000                     CTMUCON0 equ 0F8Fh ;# 
   216                           # 4559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   217  0000                     CCPR2 equ 0F90h ;# 
   218                           # 4565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   219  0000                     CCPR2L equ 0F90h ;# 
   220                           # 4584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   221  0000                     CCPR2H equ 0F91h ;# 
   222                           # 4603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   223  0000                     TRISA equ 0F92h ;# 
   224                           # 4608 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   225  0000                     DDRA equ 0F92h ;# 
   226                           # 4812 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   227  0000                     TRISB equ 0F93h ;# 
   228                           # 4817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   229  0000                     DDRB equ 0F93h ;# 
   230                           # 5033 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   231  0000                     TRISC equ 0F94h ;# 
   232                           # 5038 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   233  0000                     DDRC equ 0F94h ;# 
   234                           # 5228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   235  0000                     CCP2CON equ 0F97h ;# 
   236                           # 5233 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   237  0000                     ECCP2CON equ 0F97h ;# 
   238                           # 5383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   239  0000                     CM1CON0 equ 0F98h ;# 
   240                           # 5505 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   241  0000                     CM2CON0 equ 0F99h ;# 
   242                           # 5627 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   243  0000                     CM2CON1 equ 0F9Ah ;# 
   244                           # 5688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   245  0000                     OSCTUNE equ 0F9Bh ;# 
   246                           # 5757 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   247  0000                     HLVDCON equ 0F9Ch ;# 
   248                           # 5826 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   249  0000                     PIE1 equ 0F9Dh ;# 
   250                           # 5924 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   251  0000                     PIR1 equ 0F9Eh ;# 
   252                           # 6022 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   253  0000                     IPR1 equ 0F9Fh ;# 
   254                           # 6120 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   255  0000                     PIE2 equ 0FA0h ;# 
   256                           # 6218 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   257  0000                     PIR2 equ 0FA1h ;# 
   258                           # 6316 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   259  0000                     IPR2 equ 0FA2h ;# 
   260                           # 6414 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   261  0000                     PIE3 equ 0FA3h ;# 
   262                           # 6495 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   263  0000                     PIR3 equ 0FA4h ;# 
   264                           # 6541 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   265  0000                     IPR3 equ 0FA5h ;# 
   266                           # 6587 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   267  0000                     EECON1 equ 0FA6h ;# 
   268                           # 6652 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   269  0000                     EECON2 equ 0FA7h ;# 
   270                           # 6671 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   271  0000                     EEDATA equ 0FA8h ;# 
   272                           # 6677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   273  0000                     EEADR equ 0FA9h ;# 
   274                           # 6683 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   275  0000                     RCSTA1 equ 0FABh ;# 
   276                           # 6688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   277  0000                     RCSTA equ 0FABh ;# 
   278                           # 6892 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   279  0000                     TXSTA1 equ 0FACh ;# 
   280                           # 6897 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   281  0000                     TXSTA equ 0FACh ;# 
   282                           # 7189 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   283  0000                     TXREG1 equ 0FADh ;# 
   284                           # 7194 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   285  0000                     TXREG equ 0FADh ;# 
   286                           # 7226 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   287  0000                     RCREG1 equ 0FAEh ;# 
   288                           # 7231 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   289  0000                     RCREG equ 0FAEh ;# 
   290                           # 7263 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   291  0000                     SPBRG1 equ 0FAFh ;# 
   292                           # 7268 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   293  0000                     SPBRG equ 0FAFh ;# 
   294                           # 7400 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   295  0000                     SPBRGH1 equ 0FB0h ;# 
   296                           # 7405 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   297  0000                     SPBRGH equ 0FB0h ;# 
   298                           # 7537 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   299  0000                     T3CON equ 0FB1h ;# 
   300                           # 7667 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   301  0000                     TMR3 equ 0FB2h ;# 
   302                           # 7673 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   303  0000                     TMR3L equ 0FB2h ;# 
   304                           # 7692 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   305  0000                     TMR3H equ 0FB3h ;# 
   306                           # 7711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   307  0000                     T3GCON equ 0FB4h ;# 
   308                           # 7841 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   309  0000                     ACTCON equ 0FB5h ;# 
   310                           # 7846 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   311  0000                     STCON equ 0FB5h ;# 
   312                           # 8046 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   313  0000                     ECCP1AS equ 0FB6h ;# 
   314                           # 8179 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   315  0000                     PWM1CON equ 0FB7h ;# 
   316                           # 8184 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   317  0000                     ECCP1DEL equ 0FB7h ;# 
   318                           # 8328 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   319  0000                     BAUDCON1 equ 0FB8h ;# 
   320                           # 8333 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   321  0000                     BAUDCON equ 0FB8h ;# 
   322                           # 8337 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   323  0000                     BAUDCTL equ 0FB8h ;# 
   324                           # 8879 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   325  0000                     PSTR1CON equ 0FB9h ;# 
   326                           # 8954 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   327  0000                     T2CON equ 0FBAh ;# 
   328                           # 9024 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   329  0000                     PR2 equ 0FBBh ;# 
   330                           # 9043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   331  0000                     TMR2 equ 0FBCh ;# 
   332                           # 9062 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   333  0000                     CCP1CON equ 0FBDh ;# 
   334                           # 9067 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   335  0000                     ECCP1CON equ 0FBDh ;# 
   336                           # 9253 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   337  0000                     CCPR1 equ 0FBEh ;# 
   338                           # 9259 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   339  0000                     CCPR1L equ 0FBEh ;# 
   340                           # 9278 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   341  0000                     CCPR1H equ 0FBFh ;# 
   342                           # 9297 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   343  0000                     ADCON2 equ 0FC0h ;# 
   344                           # 9367 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   345  0000                     ADCON1 equ 0FC1h ;# 
   346                           # 9434 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   347  0000                     ADCON0 equ 0FC2h ;# 
   348                           # 9519 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   349  0000                     ADRESL equ 0FC3h ;# 
   350                           # 9525 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   351  0000                     ADRESH equ 0FC4h ;# 
   352                           # 9531 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   353  0000                     SSP1CON2 equ 0FC5h ;# 
   354                           # 9536 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   355  0000                     SSPCON2 equ 0FC5h ;# 
   356                           # 9974 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   357  0000                     SSP1CON1 equ 0FC6h ;# 
   358                           # 9979 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   359  0000                     SSPCON equ 0FC6h ;# 
   360                           # 9983 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   361  0000                     SSP1CON equ 0FC6h ;# 
   362                           # 9987 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   363  0000                     SSPCON1 equ 0FC6h ;# 
   364                           # 10527 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   365  0000                     SSP1STAT equ 0FC7h ;# 
   366                           # 10532 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   367  0000                     SSPSTAT equ 0FC7h ;# 
   368                           # 11186 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   369  0000                     SSP1ADD equ 0FC8h ;# 
   370                           # 11191 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   371  0000                     SSPADD equ 0FC8h ;# 
   372                           # 11607 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   373  0000                     SSP1BUF equ 0FC9h ;# 
   374                           # 11612 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   375  0000                     SSPBUF equ 0FC9h ;# 
   376                           # 11644 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   377  0000                     SSP1MSK equ 0FCAh ;# 
   378                           # 11649 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   379  0000                     SSPMSK equ 0FCAh ;# 
   380                           # 11781 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   381  0000                     SSP1CON3 equ 0FCBh ;# 
   382                           # 11786 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   383  0000                     SSPCON3 equ 0FCBh ;# 
   384                           # 11902 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   385  0000                     T1GCON equ 0FCCh ;# 
   386                           # 12032 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   387  0000                     T1CON equ 0FCDh ;# 
   388                           # 12144 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   389  0000                     TMR1 equ 0FCEh ;# 
   390                           # 12150 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   391  0000                     TMR1L equ 0FCEh ;# 
   392                           # 12169 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   393  0000                     TMR1H equ 0FCFh ;# 
   394                           # 12188 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   395  0000                     RCON equ 0FD0h ;# 
   396                           # 12320 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   397  0000                     WDTCON equ 0FD1h ;# 
   398                           # 12347 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   399  0000                     OSCCON2 equ 0FD2h ;# 
   400                           # 12408 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   401  0000                     OSCCON equ 0FD3h ;# 
   402                           # 12490 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   403  0000                     T0CON equ 0FD5h ;# 
   404                           # 12559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   405  0000                     TMR0 equ 0FD6h ;# 
   406                           # 12565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   407  0000                     TMR0L equ 0FD6h ;# 
   408                           # 12584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   409  0000                     TMR0H equ 0FD7h ;# 
   410                           # 12603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   411  0000                     STATUS equ 0FD8h ;# 
   412                           # 12681 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   413  0000                     FSR2 equ 0FD9h ;# 
   414                           # 12687 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   415  0000                     FSR2L equ 0FD9h ;# 
   416                           # 12706 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   417  0000                     FSR2H equ 0FDAh ;# 
   418                           # 12712 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   419  0000                     BSR equ 0FE0h ;# 
   420                           # 12718 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   421  0000                     FSR1 equ 0FE1h ;# 
   422                           # 12724 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   423  0000                     FSR1L equ 0FE1h ;# 
   424                           # 12743 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   425  0000                     FSR1H equ 0FE2h ;# 
   426                           # 12749 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   427  0000                     WREG equ 0FE8h ;# 
   428                           # 12768 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   429  0000                     FSR0 equ 0FE9h ;# 
   430                           # 12774 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   431  0000                     FSR0L equ 0FE9h ;# 
   432                           # 12793 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   433  0000                     FSR0H equ 0FEAh ;# 
   434                           # 12799 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   435  0000                     INDF0 equ 0FEFh ;# 
   436                           # 12818 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   437  0000                     INTCON3 equ 0FF0h ;# 
   438                           # 12909 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   439  0000                     INTCON2 equ 0FF1h ;# 
   440                           # 12985 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   441  0000                     INTCON equ 0FF2h ;# 
   442                           # 13111 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   443  0000                     PROD equ 0FF3h ;# 
   444                           # 13117 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   445  0000                     PRODL equ 0FF3h ;# 
   446                           # 13136 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   447  0000                     PRODH equ 0FF4h ;# 
   448                           # 13155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   449  0000                     TABLAT equ 0FF5h ;# 
   450                           # 13176 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   451  0000                     TBLPTR equ 0FF6h ;# 
   452                           # 13182 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   453  0000                     TBLPTRL equ 0FF6h ;# 
   454                           # 13201 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   455  0000                     TBLPTRH equ 0FF7h ;# 
   456                           # 13220 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   457  0000                     TBLPTRU equ 0FF8h ;# 
   458                           # 13228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   459  0000                     PCLAT equ 0FF9h ;# 
   460                           # 13235 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   461  0000                     PC equ 0FF9h ;# 
   462                           # 13241 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   463  0000                     PCL equ 0FF9h ;# 
   464                           # 13260 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   465  0000                     PCLATH equ 0FFAh ;# 
   466                           # 13279 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   467  0000                     PCLATU equ 0FFBh ;# 
   468                           # 13285 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   469  0000                     STKPTR equ 0FFCh ;# 
   470                           # 13358 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   471  0000                     TOS equ 0FFDh ;# 
   472                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   473  0000                     TOSL equ 0FFDh ;# 
   474                           # 13383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   475  0000                     TOSH equ 0FFEh ;# 
   476                           # 13402 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   477  0000                     TOSU equ 0FFFh ;# 
   478                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   479  0000                     SRCON1 equ 0F57h ;# 
   480                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   481  0000                     SRCON0 equ 0F58h ;# 
   482                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   483  0000                     CCPTMRS equ 0F59h ;# 
   484                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   485  0000                     VREGCON equ 0F5Ah ;# 
   486                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   487  0000                     ANSELA equ 0F5Bh ;# 
   488                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   489  0000                     ANSELB equ 0F5Ch ;# 
   490                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   491  0000                     ANSELC equ 0F5Dh ;# 
   492                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   493  0000                     UCON equ 0F60h ;# 
   494                           # 398 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   495  0000                     USTAT equ 0F61h ;# 
   496                           # 457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   497  0000                     UCFG equ 0F62h ;# 
   498                           # 538 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   499  0000                     UADDR equ 0F63h ;# 
   500                           # 601 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   501  0000                     UIE equ 0F64h ;# 
   502                           # 656 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   503  0000                     UIR equ 0F65h ;# 
   504                           # 711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   505  0000                     UEIE equ 0F66h ;# 
   506                           # 761 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   507  0000                     UEIR equ 0F67h ;# 
   508                           # 811 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   509  0000                     UFRM equ 0F68h ;# 
   510                           # 817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   511  0000                     UFRML equ 0F68h ;# 
   512                           # 894 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   513  0000                     UFRMH equ 0F69h ;# 
   514                           # 933 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   515  0000                     UEP0 equ 0F6Ah ;# 
   516                           # 1064 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   517  0000                     UEP1 equ 0F6Bh ;# 
   518                           # 1195 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   519  0000                     UEP2 equ 0F6Ch ;# 
   520                           # 1326 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   521  0000                     UEP3 equ 0F6Dh ;# 
   522                           # 1457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   523  0000                     UEP4 equ 0F6Eh ;# 
   524                           # 1588 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   525  0000                     UEP5 equ 0F6Fh ;# 
   526                           # 1719 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   527  0000                     UEP6 equ 0F70h ;# 
   528                           # 1850 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   529  0000                     UEP7 equ 0F71h ;# 
   530                           # 1981 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   531  0000                     UEP8 equ 0F72h ;# 
   532                           # 2068 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   533  0000                     UEP9 equ 0F73h ;# 
   534                           # 2155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   535  0000                     UEP10 equ 0F74h ;# 
   536                           # 2242 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   537  0000                     UEP11 equ 0F75h ;# 
   538                           # 2329 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   539  0000                     UEP12 equ 0F76h ;# 
   540                           # 2416 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   541  0000                     UEP13 equ 0F77h ;# 
   542                           # 2503 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   543  0000                     UEP14 equ 0F78h ;# 
   544                           # 2590 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   545  0000                     UEP15 equ 0F79h ;# 
   546                           # 2677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   547  0000                     SLRCON equ 0F7Ah ;# 
   548                           # 2708 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   549  0000                     VREFCON2 equ 0F7Bh ;# 
   550                           # 2759 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   551  0000                     VREFCON1 equ 0F7Ch ;# 
   552                           # 2819 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   553  0000                     VREFCON0 equ 0F7Dh ;# 
   554                           # 2878 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   555  0000                     PMD0 equ 0F7Eh ;# 
   556                           # 2962 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   557  0000                     PMD1 equ 0F7Fh ;# 
   558                           # 3043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   559  0000                     PORTA equ 0F80h ;# 
   560                           # 3196 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   561  0000                     PORTB equ 0F81h ;# 
   562                           # 3305 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   563  0000                     PORTC equ 0F82h ;# 
   564                           # 3458 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   565  0000                     PORTE equ 0F84h ;# 
   566                           # 3691 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   567  0000                     IOCB equ 0F86h ;# 
   568                           # 3729 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   569  0000                     IOCC equ 0F87h ;# 
   570                           # 3785 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   571  0000                     CTMUICON equ 0F88h ;# 
   572                           # 3860 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   573  0000                     LATA equ 0F89h ;# 
   574                           # 3992 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   575  0000                     LATB equ 0F8Ah ;# 
   576                           # 4124 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   577  0000                     LATC equ 0F8Bh ;# 
   578                           # 4251 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   579  0000                     CTMUCONL equ 0F8Eh ;# 
   580                           # 4256 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   581  0000                     CTMUCON1 equ 0F8Eh ;# 
   582                           # 4404 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   583  0000                     CTMUCONH equ 0F8Fh ;# 
   584                           # 4409 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   585  0000                     CTMUCON0 equ 0F8Fh ;# 
   586                           # 4559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   587  0000                     CCPR2 equ 0F90h ;# 
   588                           # 4565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   589  0000                     CCPR2L equ 0F90h ;# 
   590                           # 4584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   591  0000                     CCPR2H equ 0F91h ;# 
   592                           # 4603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   593  0000                     TRISA equ 0F92h ;# 
   594                           # 4608 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   595  0000                     DDRA equ 0F92h ;# 
   596                           # 4812 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   597  0000                     TRISB equ 0F93h ;# 
   598                           # 4817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   599  0000                     DDRB equ 0F93h ;# 
   600                           # 5033 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   601  0000                     TRISC equ 0F94h ;# 
   602                           # 5038 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   603  0000                     DDRC equ 0F94h ;# 
   604                           # 5228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   605  0000                     CCP2CON equ 0F97h ;# 
   606                           # 5233 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   607  0000                     ECCP2CON equ 0F97h ;# 
   608                           # 5383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   609  0000                     CM1CON0 equ 0F98h ;# 
   610                           # 5505 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   611  0000                     CM2CON0 equ 0F99h ;# 
   612                           # 5627 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   613  0000                     CM2CON1 equ 0F9Ah ;# 
   614                           # 5688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   615  0000                     OSCTUNE equ 0F9Bh ;# 
   616                           # 5757 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   617  0000                     HLVDCON equ 0F9Ch ;# 
   618                           # 5826 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   619  0000                     PIE1 equ 0F9Dh ;# 
   620                           # 5924 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   621  0000                     PIR1 equ 0F9Eh ;# 
   622                           # 6022 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   623  0000                     IPR1 equ 0F9Fh ;# 
   624                           # 6120 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   625  0000                     PIE2 equ 0FA0h ;# 
   626                           # 6218 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   627  0000                     PIR2 equ 0FA1h ;# 
   628                           # 6316 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   629  0000                     IPR2 equ 0FA2h ;# 
   630                           # 6414 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   631  0000                     PIE3 equ 0FA3h ;# 
   632                           # 6495 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   633  0000                     PIR3 equ 0FA4h ;# 
   634                           # 6541 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   635  0000                     IPR3 equ 0FA5h ;# 
   636                           # 6587 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   637  0000                     EECON1 equ 0FA6h ;# 
   638                           # 6652 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   639  0000                     EECON2 equ 0FA7h ;# 
   640                           # 6671 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   641  0000                     EEDATA equ 0FA8h ;# 
   642                           # 6677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   643  0000                     EEADR equ 0FA9h ;# 
   644                           # 6683 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   645  0000                     RCSTA1 equ 0FABh ;# 
   646                           # 6688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   647  0000                     RCSTA equ 0FABh ;# 
   648                           # 6892 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   649  0000                     TXSTA1 equ 0FACh ;# 
   650                           # 6897 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   651  0000                     TXSTA equ 0FACh ;# 
   652                           # 7189 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   653  0000                     TXREG1 equ 0FADh ;# 
   654                           # 7194 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   655  0000                     TXREG equ 0FADh ;# 
   656                           # 7226 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   657  0000                     RCREG1 equ 0FAEh ;# 
   658                           # 7231 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   659  0000                     RCREG equ 0FAEh ;# 
   660                           # 7263 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   661  0000                     SPBRG1 equ 0FAFh ;# 
   662                           # 7268 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   663  0000                     SPBRG equ 0FAFh ;# 
   664                           # 7400 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   665  0000                     SPBRGH1 equ 0FB0h ;# 
   666                           # 7405 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   667  0000                     SPBRGH equ 0FB0h ;# 
   668                           # 7537 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   669  0000                     T3CON equ 0FB1h ;# 
   670                           # 7667 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   671  0000                     TMR3 equ 0FB2h ;# 
   672                           # 7673 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   673  0000                     TMR3L equ 0FB2h ;# 
   674                           # 7692 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   675  0000                     TMR3H equ 0FB3h ;# 
   676                           # 7711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   677  0000                     T3GCON equ 0FB4h ;# 
   678                           # 7841 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   679  0000                     ACTCON equ 0FB5h ;# 
   680                           # 7846 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   681  0000                     STCON equ 0FB5h ;# 
   682                           # 8046 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   683  0000                     ECCP1AS equ 0FB6h ;# 
   684                           # 8179 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   685  0000                     PWM1CON equ 0FB7h ;# 
   686                           # 8184 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   687  0000                     ECCP1DEL equ 0FB7h ;# 
   688                           # 8328 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   689  0000                     BAUDCON1 equ 0FB8h ;# 
   690                           # 8333 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   691  0000                     BAUDCON equ 0FB8h ;# 
   692                           # 8337 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   693  0000                     BAUDCTL equ 0FB8h ;# 
   694                           # 8879 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   695  0000                     PSTR1CON equ 0FB9h ;# 
   696                           # 8954 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   697  0000                     T2CON equ 0FBAh ;# 
   698                           # 9024 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   699  0000                     PR2 equ 0FBBh ;# 
   700                           # 9043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   701  0000                     TMR2 equ 0FBCh ;# 
   702                           # 9062 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   703  0000                     CCP1CON equ 0FBDh ;# 
   704                           # 9067 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   705  0000                     ECCP1CON equ 0FBDh ;# 
   706                           # 9253 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   707  0000                     CCPR1 equ 0FBEh ;# 
   708                           # 9259 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   709  0000                     CCPR1L equ 0FBEh ;# 
   710                           # 9278 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   711  0000                     CCPR1H equ 0FBFh ;# 
   712                           # 9297 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   713  0000                     ADCON2 equ 0FC0h ;# 
   714                           # 9367 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   715  0000                     ADCON1 equ 0FC1h ;# 
   716                           # 9434 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   717  0000                     ADCON0 equ 0FC2h ;# 
   718                           # 9519 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   719  0000                     ADRESL equ 0FC3h ;# 
   720                           # 9525 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   721  0000                     ADRESH equ 0FC4h ;# 
   722                           # 9531 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   723  0000                     SSP1CON2 equ 0FC5h ;# 
   724                           # 9536 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   725  0000                     SSPCON2 equ 0FC5h ;# 
   726                           # 9974 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   727  0000                     SSP1CON1 equ 0FC6h ;# 
   728                           # 9979 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   729  0000                     SSPCON equ 0FC6h ;# 
   730                           # 9983 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   731  0000                     SSP1CON equ 0FC6h ;# 
   732                           # 9987 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   733  0000                     SSPCON1 equ 0FC6h ;# 
   734                           # 10527 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   735  0000                     SSP1STAT equ 0FC7h ;# 
   736                           # 10532 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   737  0000                     SSPSTAT equ 0FC7h ;# 
   738                           # 11186 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   739  0000                     SSP1ADD equ 0FC8h ;# 
   740                           # 11191 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   741  0000                     SSPADD equ 0FC8h ;# 
   742                           # 11607 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   743  0000                     SSP1BUF equ 0FC9h ;# 
   744                           # 11612 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   745  0000                     SSPBUF equ 0FC9h ;# 
   746                           # 11644 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   747  0000                     SSP1MSK equ 0FCAh ;# 
   748                           # 11649 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   749  0000                     SSPMSK equ 0FCAh ;# 
   750                           # 11781 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   751  0000                     SSP1CON3 equ 0FCBh ;# 
   752                           # 11786 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   753  0000                     SSPCON3 equ 0FCBh ;# 
   754                           # 11902 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   755  0000                     T1GCON equ 0FCCh ;# 
   756                           # 12032 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   757  0000                     T1CON equ 0FCDh ;# 
   758                           # 12144 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   759  0000                     TMR1 equ 0FCEh ;# 
   760                           # 12150 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   761  0000                     TMR1L equ 0FCEh ;# 
   762                           # 12169 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   763  0000                     TMR1H equ 0FCFh ;# 
   764                           # 12188 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   765  0000                     RCON equ 0FD0h ;# 
   766                           # 12320 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   767  0000                     WDTCON equ 0FD1h ;# 
   768                           # 12347 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   769  0000                     OSCCON2 equ 0FD2h ;# 
   770                           # 12408 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   771  0000                     OSCCON equ 0FD3h ;# 
   772                           # 12490 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   773  0000                     T0CON equ 0FD5h ;# 
   774                           # 12559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   775  0000                     TMR0 equ 0FD6h ;# 
   776                           # 12565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   777  0000                     TMR0L equ 0FD6h ;# 
   778                           # 12584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   779  0000                     TMR0H equ 0FD7h ;# 
   780                           # 12603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   781  0000                     STATUS equ 0FD8h ;# 
   782                           # 12681 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   783  0000                     FSR2 equ 0FD9h ;# 
   784                           # 12687 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   785  0000                     FSR2L equ 0FD9h ;# 
   786                           # 12706 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   787  0000                     FSR2H equ 0FDAh ;# 
   788                           # 12712 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   789  0000                     BSR equ 0FE0h ;# 
   790                           # 12718 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   791  0000                     FSR1 equ 0FE1h ;# 
   792                           # 12724 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   793  0000                     FSR1L equ 0FE1h ;# 
   794                           # 12743 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   795  0000                     FSR1H equ 0FE2h ;# 
   796                           # 12749 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   797  0000                     WREG equ 0FE8h ;# 
   798                           # 12768 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   799  0000                     FSR0 equ 0FE9h ;# 
   800                           # 12774 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   801  0000                     FSR0L equ 0FE9h ;# 
   802                           # 12793 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   803  0000                     FSR0H equ 0FEAh ;# 
   804                           # 12799 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   805  0000                     INDF0 equ 0FEFh ;# 
   806                           # 12818 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   807  0000                     INTCON3 equ 0FF0h ;# 
   808                           # 12909 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   809  0000                     INTCON2 equ 0FF1h ;# 
   810                           # 12985 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   811  0000                     INTCON equ 0FF2h ;# 
   812                           # 13111 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   813  0000                     PROD equ 0FF3h ;# 
   814                           # 13117 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   815  0000                     PRODL equ 0FF3h ;# 
   816                           # 13136 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   817  0000                     PRODH equ 0FF4h ;# 
   818                           # 13155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   819  0000                     TABLAT equ 0FF5h ;# 
   820                           # 13176 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   821  0000                     TBLPTR equ 0FF6h ;# 
   822                           # 13182 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   823  0000                     TBLPTRL equ 0FF6h ;# 
   824                           # 13201 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   825  0000                     TBLPTRH equ 0FF7h ;# 
   826                           # 13220 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   827  0000                     TBLPTRU equ 0FF8h ;# 
   828                           # 13228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   829  0000                     PCLAT equ 0FF9h ;# 
   830                           # 13235 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   831  0000                     PC equ 0FF9h ;# 
   832                           # 13241 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   833  0000                     PCL equ 0FF9h ;# 
   834                           # 13260 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   835  0000                     PCLATH equ 0FFAh ;# 
   836                           # 13279 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   837  0000                     PCLATU equ 0FFBh ;# 
   838                           # 13285 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   839  0000                     STKPTR equ 0FFCh ;# 
   840                           # 13358 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   841  0000                     TOS equ 0FFDh ;# 
   842                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   843  0000                     TOSL equ 0FFDh ;# 
   844                           # 13383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   845  0000                     TOSH equ 0FFEh ;# 
   846                           # 13402 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   847  0000                     TOSU equ 0FFFh ;# 
   848                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   849  0000                     SRCON1 equ 0F57h ;# 
   850                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   851  0000                     SRCON0 equ 0F58h ;# 
   852                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   853  0000                     CCPTMRS equ 0F59h ;# 
   854                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   855  0000                     VREGCON equ 0F5Ah ;# 
   856                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   857  0000                     ANSELA equ 0F5Bh ;# 
   858                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   859  0000                     ANSELB equ 0F5Ch ;# 
   860                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   861  0000                     ANSELC equ 0F5Dh ;# 
   862                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   863  0000                     UCON equ 0F60h ;# 
   864                           # 398 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   865  0000                     USTAT equ 0F61h ;# 
   866                           # 457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   867  0000                     UCFG equ 0F62h ;# 
   868                           # 538 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   869  0000                     UADDR equ 0F63h ;# 
   870                           # 601 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   871  0000                     UIE equ 0F64h ;# 
   872                           # 656 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   873  0000                     UIR equ 0F65h ;# 
   874                           # 711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   875  0000                     UEIE equ 0F66h ;# 
   876                           # 761 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   877  0000                     UEIR equ 0F67h ;# 
   878                           # 811 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   879  0000                     UFRM equ 0F68h ;# 
   880                           # 817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   881  0000                     UFRML equ 0F68h ;# 
   882                           # 894 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   883  0000                     UFRMH equ 0F69h ;# 
   884                           # 933 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   885  0000                     UEP0 equ 0F6Ah ;# 
   886                           # 1064 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   887  0000                     UEP1 equ 0F6Bh ;# 
   888                           # 1195 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   889  0000                     UEP2 equ 0F6Ch ;# 
   890                           # 1326 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   891  0000                     UEP3 equ 0F6Dh ;# 
   892                           # 1457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   893  0000                     UEP4 equ 0F6Eh ;# 
   894                           # 1588 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   895  0000                     UEP5 equ 0F6Fh ;# 
   896                           # 1719 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   897  0000                     UEP6 equ 0F70h ;# 
   898                           # 1850 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   899  0000                     UEP7 equ 0F71h ;# 
   900                           # 1981 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   901  0000                     UEP8 equ 0F72h ;# 
   902                           # 2068 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   903  0000                     UEP9 equ 0F73h ;# 
   904                           # 2155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   905  0000                     UEP10 equ 0F74h ;# 
   906                           # 2242 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   907  0000                     UEP11 equ 0F75h ;# 
   908                           # 2329 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   909  0000                     UEP12 equ 0F76h ;# 
   910                           # 2416 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   911  0000                     UEP13 equ 0F77h ;# 
   912                           # 2503 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   913  0000                     UEP14 equ 0F78h ;# 
   914                           # 2590 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   915  0000                     UEP15 equ 0F79h ;# 
   916                           # 2677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   917  0000                     SLRCON equ 0F7Ah ;# 
   918                           # 2708 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   919  0000                     VREFCON2 equ 0F7Bh ;# 
   920                           # 2759 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   921  0000                     VREFCON1 equ 0F7Ch ;# 
   922                           # 2819 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   923  0000                     VREFCON0 equ 0F7Dh ;# 
   924                           # 2878 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   925  0000                     PMD0 equ 0F7Eh ;# 
   926                           # 2962 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   927  0000                     PMD1 equ 0F7Fh ;# 
   928                           # 3043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   929  0000                     PORTA equ 0F80h ;# 
   930                           # 3196 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   931  0000                     PORTB equ 0F81h ;# 
   932                           # 3305 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   933  0000                     PORTC equ 0F82h ;# 
   934                           # 3458 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   935  0000                     PORTE equ 0F84h ;# 
   936                           # 3691 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   937  0000                     IOCB equ 0F86h ;# 
   938                           # 3729 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   939  0000                     IOCC equ 0F87h ;# 
   940                           # 3785 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   941  0000                     CTMUICON equ 0F88h ;# 
   942                           # 3860 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   943  0000                     LATA equ 0F89h ;# 
   944                           # 3992 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   945  0000                     LATB equ 0F8Ah ;# 
   946                           # 4124 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   947  0000                     LATC equ 0F8Bh ;# 
   948                           # 4251 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   949  0000                     CTMUCONL equ 0F8Eh ;# 
   950                           # 4256 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   951  0000                     CTMUCON1 equ 0F8Eh ;# 
   952                           # 4404 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   953  0000                     CTMUCONH equ 0F8Fh ;# 
   954                           # 4409 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   955  0000                     CTMUCON0 equ 0F8Fh ;# 
   956                           # 4559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   957  0000                     CCPR2 equ 0F90h ;# 
   958                           # 4565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   959  0000                     CCPR2L equ 0F90h ;# 
   960                           # 4584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   961  0000                     CCPR2H equ 0F91h ;# 
   962                           # 4603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   963  0000                     TRISA equ 0F92h ;# 
   964                           # 4608 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   965  0000                     DDRA equ 0F92h ;# 
   966                           # 4812 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   967  0000                     TRISB equ 0F93h ;# 
   968                           # 4817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   969  0000                     DDRB equ 0F93h ;# 
   970                           # 5033 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   971  0000                     TRISC equ 0F94h ;# 
   972                           # 5038 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   973  0000                     DDRC equ 0F94h ;# 
   974                           # 5228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   975  0000                     CCP2CON equ 0F97h ;# 
   976                           # 5233 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   977  0000                     ECCP2CON equ 0F97h ;# 
   978                           # 5383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   979  0000                     CM1CON0 equ 0F98h ;# 
   980                           # 5505 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   981  0000                     CM2CON0 equ 0F99h ;# 
   982                           # 5627 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   983  0000                     CM2CON1 equ 0F9Ah ;# 
   984                           # 5688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   985  0000                     OSCTUNE equ 0F9Bh ;# 
   986                           # 5757 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   987  0000                     HLVDCON equ 0F9Ch ;# 
   988                           # 5826 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   989  0000                     PIE1 equ 0F9Dh ;# 
   990                           # 5924 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   991  0000                     PIR1 equ 0F9Eh ;# 
   992                           # 6022 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   993  0000                     IPR1 equ 0F9Fh ;# 
   994                           # 6120 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   995  0000                     PIE2 equ 0FA0h ;# 
   996                           # 6218 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   997  0000                     PIR2 equ 0FA1h ;# 
   998                           # 6316 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
   999  0000                     IPR2 equ 0FA2h ;# 
  1000                           # 6414 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1001  0000                     PIE3 equ 0FA3h ;# 
  1002                           # 6495 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1003  0000                     PIR3 equ 0FA4h ;# 
  1004                           # 6541 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1005  0000                     IPR3 equ 0FA5h ;# 
  1006                           # 6587 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1007  0000                     EECON1 equ 0FA6h ;# 
  1008                           # 6652 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1009  0000                     EECON2 equ 0FA7h ;# 
  1010                           # 6671 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1011  0000                     EEDATA equ 0FA8h ;# 
  1012                           # 6677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1013  0000                     EEADR equ 0FA9h ;# 
  1014                           # 6683 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1015  0000                     RCSTA1 equ 0FABh ;# 
  1016                           # 6688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1017  0000                     RCSTA equ 0FABh ;# 
  1018                           # 6892 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1019  0000                     TXSTA1 equ 0FACh ;# 
  1020                           # 6897 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1021  0000                     TXSTA equ 0FACh ;# 
  1022                           # 7189 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1023  0000                     TXREG1 equ 0FADh ;# 
  1024                           # 7194 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1025  0000                     TXREG equ 0FADh ;# 
  1026                           # 7226 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1027  0000                     RCREG1 equ 0FAEh ;# 
  1028                           # 7231 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1029  0000                     RCREG equ 0FAEh ;# 
  1030                           # 7263 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1031  0000                     SPBRG1 equ 0FAFh ;# 
  1032                           # 7268 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1033  0000                     SPBRG equ 0FAFh ;# 
  1034                           # 7400 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1035  0000                     SPBRGH1 equ 0FB0h ;# 
  1036                           # 7405 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1037  0000                     SPBRGH equ 0FB0h ;# 
  1038                           # 7537 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1039  0000                     T3CON equ 0FB1h ;# 
  1040                           # 7667 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1041  0000                     TMR3 equ 0FB2h ;# 
  1042                           # 7673 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1043  0000                     TMR3L equ 0FB2h ;# 
  1044                           # 7692 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1045  0000                     TMR3H equ 0FB3h ;# 
  1046                           # 7711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1047  0000                     T3GCON equ 0FB4h ;# 
  1048                           # 7841 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1049  0000                     ACTCON equ 0FB5h ;# 
  1050                           # 7846 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1051  0000                     STCON equ 0FB5h ;# 
  1052                           # 8046 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1053  0000                     ECCP1AS equ 0FB6h ;# 
  1054                           # 8179 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1055  0000                     PWM1CON equ 0FB7h ;# 
  1056                           # 8184 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1057  0000                     ECCP1DEL equ 0FB7h ;# 
  1058                           # 8328 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1059  0000                     BAUDCON1 equ 0FB8h ;# 
  1060                           # 8333 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1061  0000                     BAUDCON equ 0FB8h ;# 
  1062                           # 8337 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1063  0000                     BAUDCTL equ 0FB8h ;# 
  1064                           # 8879 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1065  0000                     PSTR1CON equ 0FB9h ;# 
  1066                           # 8954 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1067  0000                     T2CON equ 0FBAh ;# 
  1068                           # 9024 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1069  0000                     PR2 equ 0FBBh ;# 
  1070                           # 9043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1071  0000                     TMR2 equ 0FBCh ;# 
  1072                           # 9062 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1073  0000                     CCP1CON equ 0FBDh ;# 
  1074                           # 9067 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1075  0000                     ECCP1CON equ 0FBDh ;# 
  1076                           # 9253 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1077  0000                     CCPR1 equ 0FBEh ;# 
  1078                           # 9259 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1079  0000                     CCPR1L equ 0FBEh ;# 
  1080                           # 9278 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1081  0000                     CCPR1H equ 0FBFh ;# 
  1082                           # 9297 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1083  0000                     ADCON2 equ 0FC0h ;# 
  1084                           # 9367 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1085  0000                     ADCON1 equ 0FC1h ;# 
  1086                           # 9434 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1087  0000                     ADCON0 equ 0FC2h ;# 
  1088                           # 9519 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1089  0000                     ADRESL equ 0FC3h ;# 
  1090                           # 9525 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1091  0000                     ADRESH equ 0FC4h ;# 
  1092                           # 9531 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1093  0000                     SSP1CON2 equ 0FC5h ;# 
  1094                           # 9536 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1095  0000                     SSPCON2 equ 0FC5h ;# 
  1096                           # 9974 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1097  0000                     SSP1CON1 equ 0FC6h ;# 
  1098                           # 9979 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1099  0000                     SSPCON equ 0FC6h ;# 
  1100                           # 9983 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1101  0000                     SSP1CON equ 0FC6h ;# 
  1102                           # 9987 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1103  0000                     SSPCON1 equ 0FC6h ;# 
  1104                           # 10527 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1105  0000                     SSP1STAT equ 0FC7h ;# 
  1106                           # 10532 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1107  0000                     SSPSTAT equ 0FC7h ;# 
  1108                           # 11186 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1109  0000                     SSP1ADD equ 0FC8h ;# 
  1110                           # 11191 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1111  0000                     SSPADD equ 0FC8h ;# 
  1112                           # 11607 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1113  0000                     SSP1BUF equ 0FC9h ;# 
  1114                           # 11612 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1115  0000                     SSPBUF equ 0FC9h ;# 
  1116                           # 11644 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1117  0000                     SSP1MSK equ 0FCAh ;# 
  1118                           # 11649 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1119  0000                     SSPMSK equ 0FCAh ;# 
  1120                           # 11781 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1121  0000                     SSP1CON3 equ 0FCBh ;# 
  1122                           # 11786 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1123  0000                     SSPCON3 equ 0FCBh ;# 
  1124                           # 11902 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1125  0000                     T1GCON equ 0FCCh ;# 
  1126                           # 12032 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1127  0000                     T1CON equ 0FCDh ;# 
  1128                           # 12144 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1129  0000                     TMR1 equ 0FCEh ;# 
  1130                           # 12150 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1131  0000                     TMR1L equ 0FCEh ;# 
  1132                           # 12169 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1133  0000                     TMR1H equ 0FCFh ;# 
  1134                           # 12188 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1135  0000                     RCON equ 0FD0h ;# 
  1136                           # 12320 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1137  0000                     WDTCON equ 0FD1h ;# 
  1138                           # 12347 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1139  0000                     OSCCON2 equ 0FD2h ;# 
  1140                           # 12408 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1141  0000                     OSCCON equ 0FD3h ;# 
  1142                           # 12490 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1143  0000                     T0CON equ 0FD5h ;# 
  1144                           # 12559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1145  0000                     TMR0 equ 0FD6h ;# 
  1146                           # 12565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1147  0000                     TMR0L equ 0FD6h ;# 
  1148                           # 12584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1149  0000                     TMR0H equ 0FD7h ;# 
  1150                           # 12603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1151  0000                     STATUS equ 0FD8h ;# 
  1152                           # 12681 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1153  0000                     FSR2 equ 0FD9h ;# 
  1154                           # 12687 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1155  0000                     FSR2L equ 0FD9h ;# 
  1156                           # 12706 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1157  0000                     FSR2H equ 0FDAh ;# 
  1158                           # 12712 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1159  0000                     BSR equ 0FE0h ;# 
  1160                           # 12718 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1161  0000                     FSR1 equ 0FE1h ;# 
  1162                           # 12724 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1163  0000                     FSR1L equ 0FE1h ;# 
  1164                           # 12743 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1165  0000                     FSR1H equ 0FE2h ;# 
  1166                           # 12749 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1167  0000                     WREG equ 0FE8h ;# 
  1168                           # 12768 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1169  0000                     FSR0 equ 0FE9h ;# 
  1170                           # 12774 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1171  0000                     FSR0L equ 0FE9h ;# 
  1172                           # 12793 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1173  0000                     FSR0H equ 0FEAh ;# 
  1174                           # 12799 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1175  0000                     INDF0 equ 0FEFh ;# 
  1176                           # 12818 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1177  0000                     INTCON3 equ 0FF0h ;# 
  1178                           # 12909 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1179  0000                     INTCON2 equ 0FF1h ;# 
  1180                           # 12985 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1181  0000                     INTCON equ 0FF2h ;# 
  1182                           # 13111 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1183  0000                     PROD equ 0FF3h ;# 
  1184                           # 13117 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1185  0000                     PRODL equ 0FF3h ;# 
  1186                           # 13136 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1187  0000                     PRODH equ 0FF4h ;# 
  1188                           # 13155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1189  0000                     TABLAT equ 0FF5h ;# 
  1190                           # 13176 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1191  0000                     TBLPTR equ 0FF6h ;# 
  1192                           # 13182 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1193  0000                     TBLPTRL equ 0FF6h ;# 
  1194                           # 13201 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1195  0000                     TBLPTRH equ 0FF7h ;# 
  1196                           # 13220 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1197  0000                     TBLPTRU equ 0FF8h ;# 
  1198                           # 13228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1199  0000                     PCLAT equ 0FF9h ;# 
  1200                           # 13235 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1201  0000                     PC equ 0FF9h ;# 
  1202                           # 13241 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1203  0000                     PCL equ 0FF9h ;# 
  1204                           # 13260 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1205  0000                     PCLATH equ 0FFAh ;# 
  1206                           # 13279 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1207  0000                     PCLATU equ 0FFBh ;# 
  1208                           # 13285 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1209  0000                     STKPTR equ 0FFCh ;# 
  1210                           # 13358 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1211  0000                     TOS equ 0FFDh ;# 
  1212                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1213  0000                     TOSL equ 0FFDh ;# 
  1214                           # 13383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1215  0000                     TOSH equ 0FFEh ;# 
  1216                           # 13402 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1217  0000                     TOSU equ 0FFFh ;# 
  1218                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1219  0000                     SRCON1 equ 0F57h ;# 
  1220                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1221  0000                     SRCON0 equ 0F58h ;# 
  1222                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1223  0000                     CCPTMRS equ 0F59h ;# 
  1224                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1225  0000                     VREGCON equ 0F5Ah ;# 
  1226                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1227  0000                     ANSELA equ 0F5Bh ;# 
  1228                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1229  0000                     ANSELB equ 0F5Ch ;# 
  1230                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1231  0000                     ANSELC equ 0F5Dh ;# 
  1232                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1233  0000                     UCON equ 0F60h ;# 
  1234                           # 398 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1235  0000                     USTAT equ 0F61h ;# 
  1236                           # 457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1237  0000                     UCFG equ 0F62h ;# 
  1238                           # 538 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1239  0000                     UADDR equ 0F63h ;# 
  1240                           # 601 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1241  0000                     UIE equ 0F64h ;# 
  1242                           # 656 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1243  0000                     UIR equ 0F65h ;# 
  1244                           # 711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1245  0000                     UEIE equ 0F66h ;# 
  1246                           # 761 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1247  0000                     UEIR equ 0F67h ;# 
  1248                           # 811 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1249  0000                     UFRM equ 0F68h ;# 
  1250                           # 817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1251  0000                     UFRML equ 0F68h ;# 
  1252                           # 894 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1253  0000                     UFRMH equ 0F69h ;# 
  1254                           # 933 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1255  0000                     UEP0 equ 0F6Ah ;# 
  1256                           # 1064 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1257  0000                     UEP1 equ 0F6Bh ;# 
  1258                           # 1195 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1259  0000                     UEP2 equ 0F6Ch ;# 
  1260                           # 1326 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1261  0000                     UEP3 equ 0F6Dh ;# 
  1262                           # 1457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1263  0000                     UEP4 equ 0F6Eh ;# 
  1264                           # 1588 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1265  0000                     UEP5 equ 0F6Fh ;# 
  1266                           # 1719 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1267  0000                     UEP6 equ 0F70h ;# 
  1268                           # 1850 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1269  0000                     UEP7 equ 0F71h ;# 
  1270                           # 1981 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1271  0000                     UEP8 equ 0F72h ;# 
  1272                           # 2068 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1273  0000                     UEP9 equ 0F73h ;# 
  1274                           # 2155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1275  0000                     UEP10 equ 0F74h ;# 
  1276                           # 2242 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1277  0000                     UEP11 equ 0F75h ;# 
  1278                           # 2329 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1279  0000                     UEP12 equ 0F76h ;# 
  1280                           # 2416 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1281  0000                     UEP13 equ 0F77h ;# 
  1282                           # 2503 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1283  0000                     UEP14 equ 0F78h ;# 
  1284                           # 2590 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1285  0000                     UEP15 equ 0F79h ;# 
  1286                           # 2677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1287  0000                     SLRCON equ 0F7Ah ;# 
  1288                           # 2708 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1289  0000                     VREFCON2 equ 0F7Bh ;# 
  1290                           # 2759 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1291  0000                     VREFCON1 equ 0F7Ch ;# 
  1292                           # 2819 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1293  0000                     VREFCON0 equ 0F7Dh ;# 
  1294                           # 2878 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1295  0000                     PMD0 equ 0F7Eh ;# 
  1296                           # 2962 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1297  0000                     PMD1 equ 0F7Fh ;# 
  1298                           # 3043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1299  0000                     PORTA equ 0F80h ;# 
  1300                           # 3196 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1301  0000                     PORTB equ 0F81h ;# 
  1302                           # 3305 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1303  0000                     PORTC equ 0F82h ;# 
  1304                           # 3458 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1305  0000                     PORTE equ 0F84h ;# 
  1306                           # 3691 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1307  0000                     IOCB equ 0F86h ;# 
  1308                           # 3729 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1309  0000                     IOCC equ 0F87h ;# 
  1310                           # 3785 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1311  0000                     CTMUICON equ 0F88h ;# 
  1312                           # 3860 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1313  0000                     LATA equ 0F89h ;# 
  1314                           # 3992 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1315  0000                     LATB equ 0F8Ah ;# 
  1316                           # 4124 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1317  0000                     LATC equ 0F8Bh ;# 
  1318                           # 4251 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1319  0000                     CTMUCONL equ 0F8Eh ;# 
  1320                           # 4256 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1321  0000                     CTMUCON1 equ 0F8Eh ;# 
  1322                           # 4404 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1323  0000                     CTMUCONH equ 0F8Fh ;# 
  1324                           # 4409 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1325  0000                     CTMUCON0 equ 0F8Fh ;# 
  1326                           # 4559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1327  0000                     CCPR2 equ 0F90h ;# 
  1328                           # 4565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1329  0000                     CCPR2L equ 0F90h ;# 
  1330                           # 4584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1331  0000                     CCPR2H equ 0F91h ;# 
  1332                           # 4603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1333  0000                     TRISA equ 0F92h ;# 
  1334                           # 4608 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1335  0000                     DDRA equ 0F92h ;# 
  1336                           # 4812 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1337  0000                     TRISB equ 0F93h ;# 
  1338                           # 4817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1339  0000                     DDRB equ 0F93h ;# 
  1340                           # 5033 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1341  0000                     TRISC equ 0F94h ;# 
  1342                           # 5038 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1343  0000                     DDRC equ 0F94h ;# 
  1344                           # 5228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1345  0000                     CCP2CON equ 0F97h ;# 
  1346                           # 5233 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1347  0000                     ECCP2CON equ 0F97h ;# 
  1348                           # 5383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1349  0000                     CM1CON0 equ 0F98h ;# 
  1350                           # 5505 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1351  0000                     CM2CON0 equ 0F99h ;# 
  1352                           # 5627 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1353  0000                     CM2CON1 equ 0F9Ah ;# 
  1354                           # 5688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1355  0000                     OSCTUNE equ 0F9Bh ;# 
  1356                           # 5757 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1357  0000                     HLVDCON equ 0F9Ch ;# 
  1358                           # 5826 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1359  0000                     PIE1 equ 0F9Dh ;# 
  1360                           # 5924 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1361  0000                     PIR1 equ 0F9Eh ;# 
  1362                           # 6022 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1363  0000                     IPR1 equ 0F9Fh ;# 
  1364                           # 6120 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1365  0000                     PIE2 equ 0FA0h ;# 
  1366                           # 6218 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1367  0000                     PIR2 equ 0FA1h ;# 
  1368                           # 6316 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1369  0000                     IPR2 equ 0FA2h ;# 
  1370                           # 6414 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1371  0000                     PIE3 equ 0FA3h ;# 
  1372                           # 6495 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1373  0000                     PIR3 equ 0FA4h ;# 
  1374                           # 6541 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1375  0000                     IPR3 equ 0FA5h ;# 
  1376                           # 6587 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1377  0000                     EECON1 equ 0FA6h ;# 
  1378                           # 6652 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1379  0000                     EECON2 equ 0FA7h ;# 
  1380                           # 6671 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1381  0000                     EEDATA equ 0FA8h ;# 
  1382                           # 6677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1383  0000                     EEADR equ 0FA9h ;# 
  1384                           # 6683 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1385  0000                     RCSTA1 equ 0FABh ;# 
  1386                           # 6688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1387  0000                     RCSTA equ 0FABh ;# 
  1388                           # 6892 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1389  0000                     TXSTA1 equ 0FACh ;# 
  1390                           # 6897 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1391  0000                     TXSTA equ 0FACh ;# 
  1392                           # 7189 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1393  0000                     TXREG1 equ 0FADh ;# 
  1394                           # 7194 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1395  0000                     TXREG equ 0FADh ;# 
  1396                           # 7226 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1397  0000                     RCREG1 equ 0FAEh ;# 
  1398                           # 7231 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1399  0000                     RCREG equ 0FAEh ;# 
  1400                           # 7263 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1401  0000                     SPBRG1 equ 0FAFh ;# 
  1402                           # 7268 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1403  0000                     SPBRG equ 0FAFh ;# 
  1404                           # 7400 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1405  0000                     SPBRGH1 equ 0FB0h ;# 
  1406                           # 7405 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1407  0000                     SPBRGH equ 0FB0h ;# 
  1408                           # 7537 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1409  0000                     T3CON equ 0FB1h ;# 
  1410                           # 7667 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1411  0000                     TMR3 equ 0FB2h ;# 
  1412                           # 7673 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1413  0000                     TMR3L equ 0FB2h ;# 
  1414                           # 7692 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1415  0000                     TMR3H equ 0FB3h ;# 
  1416                           # 7711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1417  0000                     T3GCON equ 0FB4h ;# 
  1418                           # 7841 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1419  0000                     ACTCON equ 0FB5h ;# 
  1420                           # 7846 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1421  0000                     STCON equ 0FB5h ;# 
  1422                           # 8046 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1423  0000                     ECCP1AS equ 0FB6h ;# 
  1424                           # 8179 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1425  0000                     PWM1CON equ 0FB7h ;# 
  1426                           # 8184 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1427  0000                     ECCP1DEL equ 0FB7h ;# 
  1428                           # 8328 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1429  0000                     BAUDCON1 equ 0FB8h ;# 
  1430                           # 8333 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1431  0000                     BAUDCON equ 0FB8h ;# 
  1432                           # 8337 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1433  0000                     BAUDCTL equ 0FB8h ;# 
  1434                           # 8879 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1435  0000                     PSTR1CON equ 0FB9h ;# 
  1436                           # 8954 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1437  0000                     T2CON equ 0FBAh ;# 
  1438                           # 9024 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1439  0000                     PR2 equ 0FBBh ;# 
  1440                           # 9043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1441  0000                     TMR2 equ 0FBCh ;# 
  1442                           # 9062 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1443  0000                     CCP1CON equ 0FBDh ;# 
  1444                           # 9067 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1445  0000                     ECCP1CON equ 0FBDh ;# 
  1446                           # 9253 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1447  0000                     CCPR1 equ 0FBEh ;# 
  1448                           # 9259 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1449  0000                     CCPR1L equ 0FBEh ;# 
  1450                           # 9278 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1451  0000                     CCPR1H equ 0FBFh ;# 
  1452                           # 9297 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1453  0000                     ADCON2 equ 0FC0h ;# 
  1454                           # 9367 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1455  0000                     ADCON1 equ 0FC1h ;# 
  1456                           # 9434 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1457  0000                     ADCON0 equ 0FC2h ;# 
  1458                           # 9519 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1459  0000                     ADRESL equ 0FC3h ;# 
  1460                           # 9525 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1461  0000                     ADRESH equ 0FC4h ;# 
  1462                           # 9531 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1463  0000                     SSP1CON2 equ 0FC5h ;# 
  1464                           # 9536 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1465  0000                     SSPCON2 equ 0FC5h ;# 
  1466                           # 9974 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1467  0000                     SSP1CON1 equ 0FC6h ;# 
  1468                           # 9979 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1469  0000                     SSPCON equ 0FC6h ;# 
  1470                           # 9983 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1471  0000                     SSP1CON equ 0FC6h ;# 
  1472                           # 9987 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1473  0000                     SSPCON1 equ 0FC6h ;# 
  1474                           # 10527 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1475  0000                     SSP1STAT equ 0FC7h ;# 
  1476                           # 10532 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1477  0000                     SSPSTAT equ 0FC7h ;# 
  1478                           # 11186 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1479  0000                     SSP1ADD equ 0FC8h ;# 
  1480                           # 11191 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1481  0000                     SSPADD equ 0FC8h ;# 
  1482                           # 11607 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1483  0000                     SSP1BUF equ 0FC9h ;# 
  1484                           # 11612 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1485  0000                     SSPBUF equ 0FC9h ;# 
  1486                           # 11644 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1487  0000                     SSP1MSK equ 0FCAh ;# 
  1488                           # 11649 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1489  0000                     SSPMSK equ 0FCAh ;# 
  1490                           # 11781 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1491  0000                     SSP1CON3 equ 0FCBh ;# 
  1492                           # 11786 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1493  0000                     SSPCON3 equ 0FCBh ;# 
  1494                           # 11902 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1495  0000                     T1GCON equ 0FCCh ;# 
  1496                           # 12032 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1497  0000                     T1CON equ 0FCDh ;# 
  1498                           # 12144 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1499  0000                     TMR1 equ 0FCEh ;# 
  1500                           # 12150 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1501  0000                     TMR1L equ 0FCEh ;# 
  1502                           # 12169 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1503  0000                     TMR1H equ 0FCFh ;# 
  1504                           # 12188 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1505  0000                     RCON equ 0FD0h ;# 
  1506                           # 12320 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1507  0000                     WDTCON equ 0FD1h ;# 
  1508                           # 12347 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1509  0000                     OSCCON2 equ 0FD2h ;# 
  1510                           # 12408 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1511  0000                     OSCCON equ 0FD3h ;# 
  1512                           # 12490 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1513  0000                     T0CON equ 0FD5h ;# 
  1514                           # 12559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1515  0000                     TMR0 equ 0FD6h ;# 
  1516                           # 12565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1517  0000                     TMR0L equ 0FD6h ;# 
  1518                           # 12584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1519  0000                     TMR0H equ 0FD7h ;# 
  1520                           # 12603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1521  0000                     STATUS equ 0FD8h ;# 
  1522                           # 12681 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1523  0000                     FSR2 equ 0FD9h ;# 
  1524                           # 12687 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1525  0000                     FSR2L equ 0FD9h ;# 
  1526                           # 12706 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1527  0000                     FSR2H equ 0FDAh ;# 
  1528                           # 12712 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1529  0000                     BSR equ 0FE0h ;# 
  1530                           # 12718 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1531  0000                     FSR1 equ 0FE1h ;# 
  1532                           # 12724 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1533  0000                     FSR1L equ 0FE1h ;# 
  1534                           # 12743 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1535  0000                     FSR1H equ 0FE2h ;# 
  1536                           # 12749 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1537  0000                     WREG equ 0FE8h ;# 
  1538                           # 12768 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1539  0000                     FSR0 equ 0FE9h ;# 
  1540                           # 12774 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1541  0000                     FSR0L equ 0FE9h ;# 
  1542                           # 12793 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1543  0000                     FSR0H equ 0FEAh ;# 
  1544                           # 12799 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1545  0000                     INDF0 equ 0FEFh ;# 
  1546                           # 12818 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1547  0000                     INTCON3 equ 0FF0h ;# 
  1548                           # 12909 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1549  0000                     INTCON2 equ 0FF1h ;# 
  1550                           # 12985 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1551  0000                     INTCON equ 0FF2h ;# 
  1552                           # 13111 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1553  0000                     PROD equ 0FF3h ;# 
  1554                           # 13117 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1555  0000                     PRODL equ 0FF3h ;# 
  1556                           # 13136 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1557  0000                     PRODH equ 0FF4h ;# 
  1558                           # 13155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1559  0000                     TABLAT equ 0FF5h ;# 
  1560                           # 13176 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1561  0000                     TBLPTR equ 0FF6h ;# 
  1562                           # 13182 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1563  0000                     TBLPTRL equ 0FF6h ;# 
  1564                           # 13201 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1565  0000                     TBLPTRH equ 0FF7h ;# 
  1566                           # 13220 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1567  0000                     TBLPTRU equ 0FF8h ;# 
  1568                           # 13228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1569  0000                     PCLAT equ 0FF9h ;# 
  1570                           # 13235 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1571  0000                     PC equ 0FF9h ;# 
  1572                           # 13241 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1573  0000                     PCL equ 0FF9h ;# 
  1574                           # 13260 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1575  0000                     PCLATH equ 0FFAh ;# 
  1576                           # 13279 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1577  0000                     PCLATU equ 0FFBh ;# 
  1578                           # 13285 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1579  0000                     STKPTR equ 0FFCh ;# 
  1580                           # 13358 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1581  0000                     TOS equ 0FFDh ;# 
  1582                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1583  0000                     TOSL equ 0FFDh ;# 
  1584                           # 13383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1585  0000                     TOSH equ 0FFEh ;# 
  1586                           # 13402 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1587  0000                     TOSU equ 0FFFh ;# 
  1588                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1589  0000                     SRCON1 equ 0F57h ;# 
  1590                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1591  0000                     SRCON0 equ 0F58h ;# 
  1592                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1593  0000                     CCPTMRS equ 0F59h ;# 
  1594                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1595  0000                     VREGCON equ 0F5Ah ;# 
  1596                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1597  0000                     ANSELA equ 0F5Bh ;# 
  1598                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1599  0000                     ANSELB equ 0F5Ch ;# 
  1600                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1601  0000                     ANSELC equ 0F5Dh ;# 
  1602                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1603  0000                     UCON equ 0F60h ;# 
  1604                           # 398 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1605  0000                     USTAT equ 0F61h ;# 
  1606                           # 457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1607  0000                     UCFG equ 0F62h ;# 
  1608                           # 538 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1609  0000                     UADDR equ 0F63h ;# 
  1610                           # 601 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1611  0000                     UIE equ 0F64h ;# 
  1612                           # 656 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1613  0000                     UIR equ 0F65h ;# 
  1614                           # 711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1615  0000                     UEIE equ 0F66h ;# 
  1616                           # 761 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1617  0000                     UEIR equ 0F67h ;# 
  1618                           # 811 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1619  0000                     UFRM equ 0F68h ;# 
  1620                           # 817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1621  0000                     UFRML equ 0F68h ;# 
  1622                           # 894 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1623  0000                     UFRMH equ 0F69h ;# 
  1624                           # 933 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1625  0000                     UEP0 equ 0F6Ah ;# 
  1626                           # 1064 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1627  0000                     UEP1 equ 0F6Bh ;# 
  1628                           # 1195 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1629  0000                     UEP2 equ 0F6Ch ;# 
  1630                           # 1326 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1631  0000                     UEP3 equ 0F6Dh ;# 
  1632                           # 1457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1633  0000                     UEP4 equ 0F6Eh ;# 
  1634                           # 1588 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1635  0000                     UEP5 equ 0F6Fh ;# 
  1636                           # 1719 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1637  0000                     UEP6 equ 0F70h ;# 
  1638                           # 1850 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1639  0000                     UEP7 equ 0F71h ;# 
  1640                           # 1981 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1641  0000                     UEP8 equ 0F72h ;# 
  1642                           # 2068 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1643  0000                     UEP9 equ 0F73h ;# 
  1644                           # 2155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1645  0000                     UEP10 equ 0F74h ;# 
  1646                           # 2242 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1647  0000                     UEP11 equ 0F75h ;# 
  1648                           # 2329 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1649  0000                     UEP12 equ 0F76h ;# 
  1650                           # 2416 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1651  0000                     UEP13 equ 0F77h ;# 
  1652                           # 2503 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1653  0000                     UEP14 equ 0F78h ;# 
  1654                           # 2590 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1655  0000                     UEP15 equ 0F79h ;# 
  1656                           # 2677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1657  0000                     SLRCON equ 0F7Ah ;# 
  1658                           # 2708 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1659  0000                     VREFCON2 equ 0F7Bh ;# 
  1660                           # 2759 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1661  0000                     VREFCON1 equ 0F7Ch ;# 
  1662                           # 2819 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1663  0000                     VREFCON0 equ 0F7Dh ;# 
  1664                           # 2878 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1665  0000                     PMD0 equ 0F7Eh ;# 
  1666                           # 2962 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1667  0000                     PMD1 equ 0F7Fh ;# 
  1668                           # 3043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1669  0000                     PORTA equ 0F80h ;# 
  1670                           # 3196 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1671  0000                     PORTB equ 0F81h ;# 
  1672                           # 3305 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1673  0000                     PORTC equ 0F82h ;# 
  1674                           # 3458 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1675  0000                     PORTE equ 0F84h ;# 
  1676                           # 3691 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1677  0000                     IOCB equ 0F86h ;# 
  1678                           # 3729 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1679  0000                     IOCC equ 0F87h ;# 
  1680                           # 3785 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1681  0000                     CTMUICON equ 0F88h ;# 
  1682                           # 3860 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1683  0000                     LATA equ 0F89h ;# 
  1684                           # 3992 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1685  0000                     LATB equ 0F8Ah ;# 
  1686                           # 4124 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1687  0000                     LATC equ 0F8Bh ;# 
  1688                           # 4251 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1689  0000                     CTMUCONL equ 0F8Eh ;# 
  1690                           # 4256 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1691  0000                     CTMUCON1 equ 0F8Eh ;# 
  1692                           # 4404 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1693  0000                     CTMUCONH equ 0F8Fh ;# 
  1694                           # 4409 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1695  0000                     CTMUCON0 equ 0F8Fh ;# 
  1696                           # 4559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1697  0000                     CCPR2 equ 0F90h ;# 
  1698                           # 4565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1699  0000                     CCPR2L equ 0F90h ;# 
  1700                           # 4584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1701  0000                     CCPR2H equ 0F91h ;# 
  1702                           # 4603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1703  0000                     TRISA equ 0F92h ;# 
  1704                           # 4608 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1705  0000                     DDRA equ 0F92h ;# 
  1706                           # 4812 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1707  0000                     TRISB equ 0F93h ;# 
  1708                           # 4817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1709  0000                     DDRB equ 0F93h ;# 
  1710                           # 5033 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1711  0000                     TRISC equ 0F94h ;# 
  1712                           # 5038 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1713  0000                     DDRC equ 0F94h ;# 
  1714                           # 5228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1715  0000                     CCP2CON equ 0F97h ;# 
  1716                           # 5233 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1717  0000                     ECCP2CON equ 0F97h ;# 
  1718                           # 5383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1719  0000                     CM1CON0 equ 0F98h ;# 
  1720                           # 5505 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1721  0000                     CM2CON0 equ 0F99h ;# 
  1722                           # 5627 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1723  0000                     CM2CON1 equ 0F9Ah ;# 
  1724                           # 5688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1725  0000                     OSCTUNE equ 0F9Bh ;# 
  1726                           # 5757 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1727  0000                     HLVDCON equ 0F9Ch ;# 
  1728                           # 5826 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1729  0000                     PIE1 equ 0F9Dh ;# 
  1730                           # 5924 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1731  0000                     PIR1 equ 0F9Eh ;# 
  1732                           # 6022 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1733  0000                     IPR1 equ 0F9Fh ;# 
  1734                           # 6120 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1735  0000                     PIE2 equ 0FA0h ;# 
  1736                           # 6218 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1737  0000                     PIR2 equ 0FA1h ;# 
  1738                           # 6316 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1739  0000                     IPR2 equ 0FA2h ;# 
  1740                           # 6414 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1741  0000                     PIE3 equ 0FA3h ;# 
  1742                           # 6495 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1743  0000                     PIR3 equ 0FA4h ;# 
  1744                           # 6541 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1745  0000                     IPR3 equ 0FA5h ;# 
  1746                           # 6587 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1747  0000                     EECON1 equ 0FA6h ;# 
  1748                           # 6652 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1749  0000                     EECON2 equ 0FA7h ;# 
  1750                           # 6671 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1751  0000                     EEDATA equ 0FA8h ;# 
  1752                           # 6677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1753  0000                     EEADR equ 0FA9h ;# 
  1754                           # 6683 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1755  0000                     RCSTA1 equ 0FABh ;# 
  1756                           # 6688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1757  0000                     RCSTA equ 0FABh ;# 
  1758                           # 6892 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1759  0000                     TXSTA1 equ 0FACh ;# 
  1760                           # 6897 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1761  0000                     TXSTA equ 0FACh ;# 
  1762                           # 7189 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1763  0000                     TXREG1 equ 0FADh ;# 
  1764                           # 7194 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1765  0000                     TXREG equ 0FADh ;# 
  1766                           # 7226 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1767  0000                     RCREG1 equ 0FAEh ;# 
  1768                           # 7231 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1769  0000                     RCREG equ 0FAEh ;# 
  1770                           # 7263 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1771  0000                     SPBRG1 equ 0FAFh ;# 
  1772                           # 7268 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1773  0000                     SPBRG equ 0FAFh ;# 
  1774                           # 7400 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1775  0000                     SPBRGH1 equ 0FB0h ;# 
  1776                           # 7405 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1777  0000                     SPBRGH equ 0FB0h ;# 
  1778                           # 7537 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1779  0000                     T3CON equ 0FB1h ;# 
  1780                           # 7667 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1781  0000                     TMR3 equ 0FB2h ;# 
  1782                           # 7673 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1783  0000                     TMR3L equ 0FB2h ;# 
  1784                           # 7692 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1785  0000                     TMR3H equ 0FB3h ;# 
  1786                           # 7711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1787  0000                     T3GCON equ 0FB4h ;# 
  1788                           # 7841 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1789  0000                     ACTCON equ 0FB5h ;# 
  1790                           # 7846 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1791  0000                     STCON equ 0FB5h ;# 
  1792                           # 8046 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1793  0000                     ECCP1AS equ 0FB6h ;# 
  1794                           # 8179 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1795  0000                     PWM1CON equ 0FB7h ;# 
  1796                           # 8184 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1797  0000                     ECCP1DEL equ 0FB7h ;# 
  1798                           # 8328 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1799  0000                     BAUDCON1 equ 0FB8h ;# 
  1800                           # 8333 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1801  0000                     BAUDCON equ 0FB8h ;# 
  1802                           # 8337 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1803  0000                     BAUDCTL equ 0FB8h ;# 
  1804                           # 8879 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1805  0000                     PSTR1CON equ 0FB9h ;# 
  1806                           # 8954 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1807  0000                     T2CON equ 0FBAh ;# 
  1808                           # 9024 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1809  0000                     PR2 equ 0FBBh ;# 
  1810                           # 9043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1811  0000                     TMR2 equ 0FBCh ;# 
  1812                           # 9062 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1813  0000                     CCP1CON equ 0FBDh ;# 
  1814                           # 9067 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1815  0000                     ECCP1CON equ 0FBDh ;# 
  1816                           # 9253 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1817  0000                     CCPR1 equ 0FBEh ;# 
  1818                           # 9259 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1819  0000                     CCPR1L equ 0FBEh ;# 
  1820                           # 9278 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1821  0000                     CCPR1H equ 0FBFh ;# 
  1822                           # 9297 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1823  0000                     ADCON2 equ 0FC0h ;# 
  1824                           # 9367 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1825  0000                     ADCON1 equ 0FC1h ;# 
  1826                           # 9434 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1827  0000                     ADCON0 equ 0FC2h ;# 
  1828                           # 9519 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1829  0000                     ADRESL equ 0FC3h ;# 
  1830                           # 9525 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1831  0000                     ADRESH equ 0FC4h ;# 
  1832                           # 9531 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1833  0000                     SSP1CON2 equ 0FC5h ;# 
  1834                           # 9536 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1835  0000                     SSPCON2 equ 0FC5h ;# 
  1836                           # 9974 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1837  0000                     SSP1CON1 equ 0FC6h ;# 
  1838                           # 9979 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1839  0000                     SSPCON equ 0FC6h ;# 
  1840                           # 9983 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1841  0000                     SSP1CON equ 0FC6h ;# 
  1842                           # 9987 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1843  0000                     SSPCON1 equ 0FC6h ;# 
  1844                           # 10527 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1845  0000                     SSP1STAT equ 0FC7h ;# 
  1846                           # 10532 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1847  0000                     SSPSTAT equ 0FC7h ;# 
  1848                           # 11186 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1849  0000                     SSP1ADD equ 0FC8h ;# 
  1850                           # 11191 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1851  0000                     SSPADD equ 0FC8h ;# 
  1852                           # 11607 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1853  0000                     SSP1BUF equ 0FC9h ;# 
  1854                           # 11612 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1855  0000                     SSPBUF equ 0FC9h ;# 
  1856                           # 11644 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1857  0000                     SSP1MSK equ 0FCAh ;# 
  1858                           # 11649 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1859  0000                     SSPMSK equ 0FCAh ;# 
  1860                           # 11781 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1861  0000                     SSP1CON3 equ 0FCBh ;# 
  1862                           # 11786 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1863  0000                     SSPCON3 equ 0FCBh ;# 
  1864                           # 11902 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1865  0000                     T1GCON equ 0FCCh ;# 
  1866                           # 12032 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1867  0000                     T1CON equ 0FCDh ;# 
  1868                           # 12144 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1869  0000                     TMR1 equ 0FCEh ;# 
  1870                           # 12150 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1871  0000                     TMR1L equ 0FCEh ;# 
  1872                           # 12169 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1873  0000                     TMR1H equ 0FCFh ;# 
  1874                           # 12188 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1875  0000                     RCON equ 0FD0h ;# 
  1876                           # 12320 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1877  0000                     WDTCON equ 0FD1h ;# 
  1878                           # 12347 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1879  0000                     OSCCON2 equ 0FD2h ;# 
  1880                           # 12408 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1881  0000                     OSCCON equ 0FD3h ;# 
  1882                           # 12490 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1883  0000                     T0CON equ 0FD5h ;# 
  1884                           # 12559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1885  0000                     TMR0 equ 0FD6h ;# 
  1886                           # 12565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1887  0000                     TMR0L equ 0FD6h ;# 
  1888                           # 12584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1889  0000                     TMR0H equ 0FD7h ;# 
  1890                           # 12603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1891  0000                     STATUS equ 0FD8h ;# 
  1892                           # 12681 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1893  0000                     FSR2 equ 0FD9h ;# 
  1894                           # 12687 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1895  0000                     FSR2L equ 0FD9h ;# 
  1896                           # 12706 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1897  0000                     FSR2H equ 0FDAh ;# 
  1898                           # 12712 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1899  0000                     BSR equ 0FE0h ;# 
  1900                           # 12718 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1901  0000                     FSR1 equ 0FE1h ;# 
  1902                           # 12724 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1903  0000                     FSR1L equ 0FE1h ;# 
  1904                           # 12743 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1905  0000                     FSR1H equ 0FE2h ;# 
  1906                           # 12749 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1907  0000                     WREG equ 0FE8h ;# 
  1908                           # 12768 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1909  0000                     FSR0 equ 0FE9h ;# 
  1910                           # 12774 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1911  0000                     FSR0L equ 0FE9h ;# 
  1912                           # 12793 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1913  0000                     FSR0H equ 0FEAh ;# 
  1914                           # 12799 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1915  0000                     INDF0 equ 0FEFh ;# 
  1916                           # 12818 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1917  0000                     INTCON3 equ 0FF0h ;# 
  1918                           # 12909 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1919  0000                     INTCON2 equ 0FF1h ;# 
  1920                           # 12985 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1921  0000                     INTCON equ 0FF2h ;# 
  1922                           # 13111 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1923  0000                     PROD equ 0FF3h ;# 
  1924                           # 13117 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1925  0000                     PRODL equ 0FF3h ;# 
  1926                           # 13136 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1927  0000                     PRODH equ 0FF4h ;# 
  1928                           # 13155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1929  0000                     TABLAT equ 0FF5h ;# 
  1930                           # 13176 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1931  0000                     TBLPTR equ 0FF6h ;# 
  1932                           # 13182 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1933  0000                     TBLPTRL equ 0FF6h ;# 
  1934                           # 13201 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1935  0000                     TBLPTRH equ 0FF7h ;# 
  1936                           # 13220 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1937  0000                     TBLPTRU equ 0FF8h ;# 
  1938                           # 13228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1939  0000                     PCLAT equ 0FF9h ;# 
  1940                           # 13235 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1941  0000                     PC equ 0FF9h ;# 
  1942                           # 13241 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1943  0000                     PCL equ 0FF9h ;# 
  1944                           # 13260 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1945  0000                     PCLATH equ 0FFAh ;# 
  1946                           # 13279 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1947  0000                     PCLATU equ 0FFBh ;# 
  1948                           # 13285 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1949  0000                     STKPTR equ 0FFCh ;# 
  1950                           # 13358 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1951  0000                     TOS equ 0FFDh ;# 
  1952                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1953  0000                     TOSL equ 0FFDh ;# 
  1954                           # 13383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1955  0000                     TOSH equ 0FFEh ;# 
  1956                           # 13402 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1957  0000                     TOSU equ 0FFFh ;# 
  1958                           # 46 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1959  0000                     SRCON1 equ 0F57h ;# 
  1960                           # 107 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1961  0000                     SRCON0 equ 0F58h ;# 
  1962                           # 177 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1963  0000                     CCPTMRS equ 0F59h ;# 
  1964                           # 203 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1965  0000                     VREGCON equ 0F5Ah ;# 
  1966                           # 222 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1967  0000                     ANSELA equ 0F5Bh ;# 
  1968                           # 266 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1969  0000                     ANSELB equ 0F5Ch ;# 
  1970                           # 315 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1971  0000                     ANSELC equ 0F5Dh ;# 
  1972                           # 348 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1973  0000                     UCON equ 0F60h ;# 
  1974                           # 398 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1975  0000                     USTAT equ 0F61h ;# 
  1976                           # 457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1977  0000                     UCFG equ 0F62h ;# 
  1978                           # 538 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1979  0000                     UADDR equ 0F63h ;# 
  1980                           # 601 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1981  0000                     UIE equ 0F64h ;# 
  1982                           # 656 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1983  0000                     UIR equ 0F65h ;# 
  1984                           # 711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1985  0000                     UEIE equ 0F66h ;# 
  1986                           # 761 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1987  0000                     UEIR equ 0F67h ;# 
  1988                           # 811 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1989  0000                     UFRM equ 0F68h ;# 
  1990                           # 817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1991  0000                     UFRML equ 0F68h ;# 
  1992                           # 894 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1993  0000                     UFRMH equ 0F69h ;# 
  1994                           # 933 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1995  0000                     UEP0 equ 0F6Ah ;# 
  1996                           # 1064 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1997  0000                     UEP1 equ 0F6Bh ;# 
  1998                           # 1195 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  1999  0000                     UEP2 equ 0F6Ch ;# 
  2000                           # 1326 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2001  0000                     UEP3 equ 0F6Dh ;# 
  2002                           # 1457 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2003  0000                     UEP4 equ 0F6Eh ;# 
  2004                           # 1588 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2005  0000                     UEP5 equ 0F6Fh ;# 
  2006                           # 1719 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2007  0000                     UEP6 equ 0F70h ;# 
  2008                           # 1850 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2009  0000                     UEP7 equ 0F71h ;# 
  2010                           # 1981 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2011  0000                     UEP8 equ 0F72h ;# 
  2012                           # 2068 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2013  0000                     UEP9 equ 0F73h ;# 
  2014                           # 2155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2015  0000                     UEP10 equ 0F74h ;# 
  2016                           # 2242 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2017  0000                     UEP11 equ 0F75h ;# 
  2018                           # 2329 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2019  0000                     UEP12 equ 0F76h ;# 
  2020                           # 2416 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2021  0000                     UEP13 equ 0F77h ;# 
  2022                           # 2503 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2023  0000                     UEP14 equ 0F78h ;# 
  2024                           # 2590 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2025  0000                     UEP15 equ 0F79h ;# 
  2026                           # 2677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2027  0000                     SLRCON equ 0F7Ah ;# 
  2028                           # 2708 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2029  0000                     VREFCON2 equ 0F7Bh ;# 
  2030                           # 2759 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2031  0000                     VREFCON1 equ 0F7Ch ;# 
  2032                           # 2819 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2033  0000                     VREFCON0 equ 0F7Dh ;# 
  2034                           # 2878 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2035  0000                     PMD0 equ 0F7Eh ;# 
  2036                           # 2962 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2037  0000                     PMD1 equ 0F7Fh ;# 
  2038                           # 3043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2039  0000                     PORTA equ 0F80h ;# 
  2040                           # 3196 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2041  0000                     PORTB equ 0F81h ;# 
  2042                           # 3305 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2043  0000                     PORTC equ 0F82h ;# 
  2044                           # 3458 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2045  0000                     PORTE equ 0F84h ;# 
  2046                           # 3691 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2047  0000                     IOCB equ 0F86h ;# 
  2048                           # 3729 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2049  0000                     IOCC equ 0F87h ;# 
  2050                           # 3785 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2051  0000                     CTMUICON equ 0F88h ;# 
  2052                           # 3860 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2053  0000                     LATA equ 0F89h ;# 
  2054                           # 3992 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2055  0000                     LATB equ 0F8Ah ;# 
  2056                           # 4124 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2057  0000                     LATC equ 0F8Bh ;# 
  2058                           # 4251 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2059  0000                     CTMUCONL equ 0F8Eh ;# 
  2060                           # 4256 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2061  0000                     CTMUCON1 equ 0F8Eh ;# 
  2062                           # 4404 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2063  0000                     CTMUCONH equ 0F8Fh ;# 
  2064                           # 4409 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2065  0000                     CTMUCON0 equ 0F8Fh ;# 
  2066                           # 4559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2067  0000                     CCPR2 equ 0F90h ;# 
  2068                           # 4565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2069  0000                     CCPR2L equ 0F90h ;# 
  2070                           # 4584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2071  0000                     CCPR2H equ 0F91h ;# 
  2072                           # 4603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2073  0000                     TRISA equ 0F92h ;# 
  2074                           # 4608 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2075  0000                     DDRA equ 0F92h ;# 
  2076                           # 4812 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2077  0000                     TRISB equ 0F93h ;# 
  2078                           # 4817 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2079  0000                     DDRB equ 0F93h ;# 
  2080                           # 5033 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2081  0000                     TRISC equ 0F94h ;# 
  2082                           # 5038 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2083  0000                     DDRC equ 0F94h ;# 
  2084                           # 5228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2085  0000                     CCP2CON equ 0F97h ;# 
  2086                           # 5233 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2087  0000                     ECCP2CON equ 0F97h ;# 
  2088                           # 5383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2089  0000                     CM1CON0 equ 0F98h ;# 
  2090                           # 5505 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2091  0000                     CM2CON0 equ 0F99h ;# 
  2092                           # 5627 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2093  0000                     CM2CON1 equ 0F9Ah ;# 
  2094                           # 5688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2095  0000                     OSCTUNE equ 0F9Bh ;# 
  2096                           # 5757 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2097  0000                     HLVDCON equ 0F9Ch ;# 
  2098                           # 5826 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2099  0000                     PIE1 equ 0F9Dh ;# 
  2100                           # 5924 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2101  0000                     PIR1 equ 0F9Eh ;# 
  2102                           # 6022 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2103  0000                     IPR1 equ 0F9Fh ;# 
  2104                           # 6120 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2105  0000                     PIE2 equ 0FA0h ;# 
  2106                           # 6218 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2107  0000                     PIR2 equ 0FA1h ;# 
  2108                           # 6316 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2109  0000                     IPR2 equ 0FA2h ;# 
  2110                           # 6414 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2111  0000                     PIE3 equ 0FA3h ;# 
  2112                           # 6495 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2113  0000                     PIR3 equ 0FA4h ;# 
  2114                           # 6541 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2115  0000                     IPR3 equ 0FA5h ;# 
  2116                           # 6587 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2117  0000                     EECON1 equ 0FA6h ;# 
  2118                           # 6652 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2119  0000                     EECON2 equ 0FA7h ;# 
  2120                           # 6671 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2121  0000                     EEDATA equ 0FA8h ;# 
  2122                           # 6677 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2123  0000                     EEADR equ 0FA9h ;# 
  2124                           # 6683 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2125  0000                     RCSTA1 equ 0FABh ;# 
  2126                           # 6688 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2127  0000                     RCSTA equ 0FABh ;# 
  2128                           # 6892 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2129  0000                     TXSTA1 equ 0FACh ;# 
  2130                           # 6897 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2131  0000                     TXSTA equ 0FACh ;# 
  2132                           # 7189 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2133  0000                     TXREG1 equ 0FADh ;# 
  2134                           # 7194 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2135  0000                     TXREG equ 0FADh ;# 
  2136                           # 7226 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2137  0000                     RCREG1 equ 0FAEh ;# 
  2138                           # 7231 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2139  0000                     RCREG equ 0FAEh ;# 
  2140                           # 7263 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2141  0000                     SPBRG1 equ 0FAFh ;# 
  2142                           # 7268 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2143  0000                     SPBRG equ 0FAFh ;# 
  2144                           # 7400 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2145  0000                     SPBRGH1 equ 0FB0h ;# 
  2146                           # 7405 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2147  0000                     SPBRGH equ 0FB0h ;# 
  2148                           # 7537 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2149  0000                     T3CON equ 0FB1h ;# 
  2150                           # 7667 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2151  0000                     TMR3 equ 0FB2h ;# 
  2152                           # 7673 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2153  0000                     TMR3L equ 0FB2h ;# 
  2154                           # 7692 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2155  0000                     TMR3H equ 0FB3h ;# 
  2156                           # 7711 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2157  0000                     T3GCON equ 0FB4h ;# 
  2158                           # 7841 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2159  0000                     ACTCON equ 0FB5h ;# 
  2160                           # 7846 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2161  0000                     STCON equ 0FB5h ;# 
  2162                           # 8046 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2163  0000                     ECCP1AS equ 0FB6h ;# 
  2164                           # 8179 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2165  0000                     PWM1CON equ 0FB7h ;# 
  2166                           # 8184 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2167  0000                     ECCP1DEL equ 0FB7h ;# 
  2168                           # 8328 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2169  0000                     BAUDCON1 equ 0FB8h ;# 
  2170                           # 8333 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2171  0000                     BAUDCON equ 0FB8h ;# 
  2172                           # 8337 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2173  0000                     BAUDCTL equ 0FB8h ;# 
  2174                           # 8879 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2175  0000                     PSTR1CON equ 0FB9h ;# 
  2176                           # 8954 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2177  0000                     T2CON equ 0FBAh ;# 
  2178                           # 9024 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2179  0000                     PR2 equ 0FBBh ;# 
  2180                           # 9043 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2181  0000                     TMR2 equ 0FBCh ;# 
  2182                           # 9062 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2183  0000                     CCP1CON equ 0FBDh ;# 
  2184                           # 9067 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2185  0000                     ECCP1CON equ 0FBDh ;# 
  2186                           # 9253 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2187  0000                     CCPR1 equ 0FBEh ;# 
  2188                           # 9259 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2189  0000                     CCPR1L equ 0FBEh ;# 
  2190                           # 9278 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2191  0000                     CCPR1H equ 0FBFh ;# 
  2192                           # 9297 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2193  0000                     ADCON2 equ 0FC0h ;# 
  2194                           # 9367 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2195  0000                     ADCON1 equ 0FC1h ;# 
  2196                           # 9434 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2197  0000                     ADCON0 equ 0FC2h ;# 
  2198                           # 9519 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2199  0000                     ADRESL equ 0FC3h ;# 
  2200                           # 9525 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2201  0000                     ADRESH equ 0FC4h ;# 
  2202                           # 9531 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2203  0000                     SSP1CON2 equ 0FC5h ;# 
  2204                           # 9536 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2205  0000                     SSPCON2 equ 0FC5h ;# 
  2206                           # 9974 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2207  0000                     SSP1CON1 equ 0FC6h ;# 
  2208                           # 9979 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2209  0000                     SSPCON equ 0FC6h ;# 
  2210                           # 9983 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2211  0000                     SSP1CON equ 0FC6h ;# 
  2212                           # 9987 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2213  0000                     SSPCON1 equ 0FC6h ;# 
  2214                           # 10527 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2215  0000                     SSP1STAT equ 0FC7h ;# 
  2216                           # 10532 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2217  0000                     SSPSTAT equ 0FC7h ;# 
  2218                           # 11186 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2219  0000                     SSP1ADD equ 0FC8h ;# 
  2220                           # 11191 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2221  0000                     SSPADD equ 0FC8h ;# 
  2222                           # 11607 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2223  0000                     SSP1BUF equ 0FC9h ;# 
  2224                           # 11612 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2225  0000                     SSPBUF equ 0FC9h ;# 
  2226                           # 11644 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2227  0000                     SSP1MSK equ 0FCAh ;# 
  2228                           # 11649 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2229  0000                     SSPMSK equ 0FCAh ;# 
  2230                           # 11781 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2231  0000                     SSP1CON3 equ 0FCBh ;# 
  2232                           # 11786 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2233  0000                     SSPCON3 equ 0FCBh ;# 
  2234                           # 11902 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2235  0000                     T1GCON equ 0FCCh ;# 
  2236                           # 12032 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2237  0000                     T1CON equ 0FCDh ;# 
  2238                           # 12144 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2239  0000                     TMR1 equ 0FCEh ;# 
  2240                           # 12150 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2241  0000                     TMR1L equ 0FCEh ;# 
  2242                           # 12169 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2243  0000                     TMR1H equ 0FCFh ;# 
  2244                           # 12188 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2245  0000                     RCON equ 0FD0h ;# 
  2246                           # 12320 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2247  0000                     WDTCON equ 0FD1h ;# 
  2248                           # 12347 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2249  0000                     OSCCON2 equ 0FD2h ;# 
  2250                           # 12408 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2251  0000                     OSCCON equ 0FD3h ;# 
  2252                           # 12490 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2253  0000                     T0CON equ 0FD5h ;# 
  2254                           # 12559 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2255  0000                     TMR0 equ 0FD6h ;# 
  2256                           # 12565 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2257  0000                     TMR0L equ 0FD6h ;# 
  2258                           # 12584 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2259  0000                     TMR0H equ 0FD7h ;# 
  2260                           # 12603 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2261  0000                     STATUS equ 0FD8h ;# 
  2262                           # 12681 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2263  0000                     FSR2 equ 0FD9h ;# 
  2264                           # 12687 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2265  0000                     FSR2L equ 0FD9h ;# 
  2266                           # 12706 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2267  0000                     FSR2H equ 0FDAh ;# 
  2268                           # 12712 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2269  0000                     BSR equ 0FE0h ;# 
  2270                           # 12718 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2271  0000                     FSR1 equ 0FE1h ;# 
  2272                           # 12724 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2273  0000                     FSR1L equ 0FE1h ;# 
  2274                           # 12743 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2275  0000                     FSR1H equ 0FE2h ;# 
  2276                           # 12749 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2277  0000                     WREG equ 0FE8h ;# 
  2278                           # 12768 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2279  0000                     FSR0 equ 0FE9h ;# 
  2280                           # 12774 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2281  0000                     FSR0L equ 0FE9h ;# 
  2282                           # 12793 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2283  0000                     FSR0H equ 0FEAh ;# 
  2284                           # 12799 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2285  0000                     INDF0 equ 0FEFh ;# 
  2286                           # 12818 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2287  0000                     INTCON3 equ 0FF0h ;# 
  2288                           # 12909 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2289  0000                     INTCON2 equ 0FF1h ;# 
  2290                           # 12985 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2291  0000                     INTCON equ 0FF2h ;# 
  2292                           # 13111 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2293  0000                     PROD equ 0FF3h ;# 
  2294                           # 13117 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2295  0000                     PRODL equ 0FF3h ;# 
  2296                           # 13136 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2297  0000                     PRODH equ 0FF4h ;# 
  2298                           # 13155 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2299  0000                     TABLAT equ 0FF5h ;# 
  2300                           # 13176 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2301  0000                     TBLPTR equ 0FF6h ;# 
  2302                           # 13182 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2303  0000                     TBLPTRL equ 0FF6h ;# 
  2304                           # 13201 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2305  0000                     TBLPTRH equ 0FF7h ;# 
  2306                           # 13220 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2307  0000                     TBLPTRU equ 0FF8h ;# 
  2308                           # 13228 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2309  0000                     PCLAT equ 0FF9h ;# 
  2310                           # 13235 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2311  0000                     PC equ 0FF9h ;# 
  2312                           # 13241 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2313  0000                     PCL equ 0FF9h ;# 
  2314                           # 13260 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2315  0000                     PCLATH equ 0FFAh ;# 
  2316                           # 13279 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2317  0000                     PCLATU equ 0FFBh ;# 
  2318                           # 13285 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2319  0000                     STKPTR equ 0FFCh ;# 
  2320                           # 13358 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2321  0000                     TOS equ 0FFDh ;# 
  2322                           # 13364 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2323  0000                     TOSL equ 0FFDh ;# 
  2324                           # 13383 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2325  0000                     TOSH equ 0FFEh ;# 
  2326                           # 13402 "/opt/microchip/xc8/v1.11/include/pic18f25k50.h"
  2327  0000                     TOSU equ 0FFFh ;# 
  2328                           	FNCALL	_main,_InitializeSystem
  2329                           	FNCALL	_main,_USBTasks
  2330                           	FNCALL	_main,_BlinkUSBStatus
  2331                           	FNCALL	_main,_ProcessIO
  2332                           	FNCALL	_InitializeSystem,_UserInit
  2333                           	FNCALL	_USBTasks,_USBCheckBusStatus
  2334                           	FNCALL	_USBTasks,_USBDriverService
  2335                           	FNCALL	_ProcessIO,_HIDRxReport
  2336                           	FNCALL	_ProcessIO,_HIDTxReport
  2337                           	FNCALL	_ProcessIO,_ClearWatchdog
  2338                           	FNCALL	_ProcessIO,_UnlockAndActivate
  2339                           	FNCALL	_ProcessIO,_USBDriverService
  2340                           	FNCALL	_ProcessIO,_WriteConfigBits
  2341                           	FNCALL	_ProcessIO,_WriteEEPROM
  2342                           	FNCALL	_ProcessIO,_WriteFlashBlock
  2343                           	FNCALL	_ProcessIO,_TableReadPostIncrement
  2344                           	FNCALL	_ProcessIO,_ResetDeviceCleanly
  2345                           	FNCALL	_USBCheckBusStatus,_USBModuleEnable
  2346                           	FNCALL	_USBDriverService,_USBWakeFromSuspend
  2347                           	FNCALL	_USBDriverService,_USBProtocolResetHandler
  2348                           	FNCALL	_USBDriverService,_USBSuspend
  2349                           	FNCALL	_USBDriverService,_USBStallHandler
  2350                           	FNCALL	_USBDriverService,_USBCtrlEPService
  2351                           	FNCALL	_USBCtrlEPService,_USBCtrlTrfSetupHandler
  2352                           	FNCALL	_USBCtrlEPService,_USBCtrlTrfOutHandler
  2353                           	FNCALL	_USBCtrlEPService,_USBCtrlTrfInHandler
  2354                           	FNCALL	_USBCtrlTrfSetupHandler,_USBCheckStdRequest
  2355                           	FNCALL	_USBCtrlTrfSetupHandler,_USBCheckHIDRequest
  2356                           	FNCALL	_USBCtrlTrfSetupHandler,_USBCtrlEPServiceComplete
  2357                           	FNCALL	_USBCheckHIDRequest,_HIDGetReportHandler
  2358                           	FNCALL	_USBCheckHIDRequest,_HIDSetReportHandler
  2359                           	FNCALL	_USBCheckStdRequest,_USBStdGetDscHandler
  2360                           	FNCALL	_USBCheckStdRequest,_USBStdSetCfgHandler
  2361                           	FNCALL	_USBCheckStdRequest,_USBStdGetStatusHandler
  2362                           	FNCALL	_USBCheckStdRequest,_USBStdFeatureReqHandler
  2363                           	FNCALL	_USBStdSetCfgHandler,_ClearArray
  2364                           	FNCALL	_USBStdSetCfgHandler,_HIDInitEP
  2365                           	FNCALL	_USBCtrlTrfOutHandler,_USBCtrlTrfRxService
  2366                           	FNCALL	_USBCtrlTrfOutHandler,_USBPrepareForNextSetupTrf
  2367                           	FNCALL	_USBCtrlTrfInHandler,_USBCtrlTrfTxService
  2368                           	FNCALL	_USBCtrlTrfInHandler,_USBPrepareForNextSetupTrf
  2369                           	FNCALL	_USBCtrlEPServiceComplete,_USBCtrlTrfTxService
  2370                           	FNCALL	_USBProtocolResetHandler,_ClearArray
  2371                           	FNCALL	_USBProtocolResetHandler,_USBPrepareForNextSetupTrf
  2372                           	FNCALL	_WriteConfigBits,_UnlockAndActivate
  2373                           	FNCALL	_WriteEEPROM,_UnlockAndActivate
  2374                           	FNCALL	_WriteFlashBlock,_UnlockAndActivate
  2375                           	FNROOT	_main
  2376                           	FNCALL	intlevel2,_interrupt_at_high_vector
  2377                           	global	intlevel2
  2378                           	FNROOT	intlevel2
  2379                           	FNCALL	intlevel1,_interrupt_at_low_vector
  2380                           	global	intlevel1
  2381                           	FNROOT	intlevel1
  2382                           	global	_USB_SD_Ptr
  2383                           psect	smallconst,class=SMALLCONST,space=0,reloc=2
  2384                           global __psmallconst
  2385  000800                     __psmallconst:
  2386                           	file	"../usbdsc.c"
  2387                           	line	276
  2388  000800                     _USB_SD_Ptr:
  2389  000800  08BE               	dw	((_sd000))&0ffffh
  2390  000802  080C               	dw	((_sd001))&0ffffh
  2391  000804  0869               	dw	((_sd002))&0ffffh
  2392                           	global __end_of_USB_SD_Ptr
  2393  000806                     __end_of_USB_SD_Ptr:
  2394                           	global	_USB_CD_Ptr
  2395                           psect	smallconst
  2396                           	file	"../usbdsc.c"
  2397                           	line	271
  2398  000806                     _USB_CD_Ptr:
  2399  000806  0840               	dw	((_cfg01))&0ffffh
  2400  000808  0840               	dw	((_cfg01))&0ffffh
  2401                           	global __end_of_USB_CD_Ptr
  2402  00080A                     __end_of_USB_CD_Ptr:
  2403                           	global	_ClassReqHandler
  2404                           psect	smallconst
  2405                           	file	"../usbdsc.c"
  2406                           	line	283
  2407  00080A                     _ClassReqHandler:
  2408  00080A  0F6E               	dw	(_USBCheckHIDRequest)&0ffffh
  2409                           	global __end_of_ClassReqHandler
  2410  00080C                     __end_of_ClassReqHandler:
  2411                           	global	_sd001
  2412                           psect	smallconst
  2413                           	file	"../usbdsc.c"
  2414                           	line	238
  2415  00080C                     _sd001:
  2416  00080C  34                 	db	low(034h)
  2417  00080D  03                 	db	low(03h)
  2418  00080E  004D               	dw	(04Dh)&0ffffh
  2419  000810  0069               	dw	(069h)&0ffffh
  2420  000812  0063               	dw	(063h)&0ffffh
  2421  000814  0072               	dw	(072h)&0ffffh
  2422  000816  006F               	dw	(06Fh)&0ffffh
  2423  000818  0063               	dw	(063h)&0ffffh
  2424  00081A  0068               	dw	(068h)&0ffffh
  2425  00081C  0069               	dw	(069h)&0ffffh
  2426  00081E  0070               	dw	(070h)&0ffffh
  2427  000820  0020               	dw	(020h)&0ffffh
  2428  000822  0054               	dw	(054h)&0ffffh
  2429  000824  0065               	dw	(065h)&0ffffh
  2430  000826  0063               	dw	(063h)&0ffffh
  2431  000828  0068               	dw	(068h)&0ffffh
  2432  00082A  006E               	dw	(06Eh)&0ffffh
  2433  00082C  006F               	dw	(06Fh)&0ffffh
  2434  00082E  006C               	dw	(06Ch)&0ffffh
  2435  000830  006F               	dw	(06Fh)&0ffffh
  2436  000832  0067               	dw	(067h)&0ffffh
  2437  000834  0079               	dw	(079h)&0ffffh
  2438  000836  0020               	dw	(020h)&0ffffh
  2439  000838  0049               	dw	(049h)&0ffffh
  2440  00083A  006E               	dw	(06Eh)&0ffffh
  2441  00083C  0063               	dw	(063h)&0ffffh
  2442  00083E  002E               	dw	(02Eh)&0ffffh
  2443                           	global __end_of_sd001
  2444  000840                     __end_of_sd001:
  2445                           	global	_cfg01
  2446                           psect	smallconst
  2447                           	file	"../usbdsc.c"
  2448                           	line	199
  2449  000840                     _cfg01:
  2450  000840  09                 	db	low(09h)
  2451  000841  02                 	db	low(02h)
  2452  000842  0029               	dw	(029h)&0ffffh
  2453  000844  01                 	db	low(01h)
  2454  000845  01                 	db	low(01h)
  2455  000846  00                 	db	low(0)
  2456  000847  C0                 	db	low(0C0h)
  2457  000848  32                 	db	low(032h)
  2458  000849  09                 	db	low(09h)
  2459  00084A  04                 	db	low(04h)
  2460  00084B  00                 	db	low(0)
  2461  00084C  00                 	db	low(0)
  2462  00084D  02                 	db	low(02h)
  2463  00084E  03                 	db	low(03h)
  2464  00084F  00                 	db	low(0)
  2465  000850  00                 	db	low(0)
  2466  000851  00                 	db	low(0)
  2467  000852  09                 	db	low(09h)
  2468  000853  21                 	db	low(021h)
  2469  000854  0111               	dw	(0111h)&0ffffh
  2470  000856  00                 	db	low(0)
  2471  000857  01                 	db	low(01h)
  2472  000858  22                 	db	low(022h)
  2473  000859  001D               	dw	(01Dh)&0ffffh
  2474  00085B  07                 	db	low(07h)
  2475  00085C  05                 	db	low(05h)
  2476  00085D  81                 	db	low(081h)
  2477  00085E  03                 	db	low(03h)
  2478  00085F  0040               	dw	(040h)&0ffffh
  2479  000861  01                 	db	low(01h)
  2480  000862  07                 	db	low(07h)
  2481  000863  05                 	db	low(05h)
  2482  000864  01                 	db	low(01h)
  2483  000865  03                 	db	low(03h)
  2484  000866  0040               	dw	(040h)&0ffffh
  2485  000868  01                 	db	low(01h)
  2486                           	global __end_of_cfg01
  2487  000869                     __end_of_cfg01:
  2488                           	global	_sd002
  2489                           psect	smallconst
  2490                           	file	"../usbdsc.c"
  2491                           	line	243
  2492  000869                     _sd002:
  2493  000869  26                 	db	low(026h)
  2494  00086A  03                 	db	low(03h)
  2495  00086B  0048               	dw	(048h)&0ffffh
  2496  00086D  0049               	dw	(049h)&0ffffh
  2497  00086F  0044               	dw	(044h)&0ffffh
  2498  000871  0020               	dw	(020h)&0ffffh
  2499  000873  0055               	dw	(055h)&0ffffh
  2500  000875  0053               	dw	(053h)&0ffffh
  2501  000877  0042               	dw	(042h)&0ffffh
  2502  000879  0020               	dw	(020h)&0ffffh
  2503  00087B  0042               	dw	(042h)&0ffffh
  2504  00087D  006F               	dw	(06Fh)&0ffffh
  2505  00087F  006F               	dw	(06Fh)&0ffffh
  2506  000881  0074               	dw	(074h)&0ffffh
  2507  000883  006C               	dw	(06Ch)&0ffffh
  2508  000885  006F               	dw	(06Fh)&0ffffh
  2509  000887  0061               	dw	(061h)&0ffffh
  2510  000889  0064               	dw	(064h)&0ffffh
  2511  00088B  0065               	dw	(065h)&0ffffh
  2512  00088D  0072               	dw	(072h)&0ffffh
  2513                           	global __end_of_sd002
  2514  00088F                     __end_of_sd002:
  2515                           	global	_hid_rpt01
  2516                           psect	smallconst
  2517                           	file	"../usbdsc.c"
  2518                           	line	248
  2519  00088F                     _hid_rpt01:
  2520  00088F  06                 	db	low(06h)
  2521  000890  00                 	db	low(0)
  2522  000891  FF                 	db	low(0FFh)
  2523  000892  09                 	db	low(09h)
  2524  000893  01                 	db	low(01h)
  2525  000894  A1                 	db	low(0A1h)
  2526  000895  01                 	db	low(01h)
  2527  000896  19                 	db	low(019h)
  2528  000897  01                 	db	low(01h)
  2529  000898  29                 	db	low(029h)
  2530  000899  40                 	db	low(040h)
  2531  00089A  15                 	db	low(015h)
  2532  00089B  00                 	db	low(0)
  2533  00089C  26                 	db	low(026h)
  2534  00089D  FF                 	db	low(0FFh)
  2535  00089E  00                 	db	low(0)
  2536  00089F  75                 	db	low(075h)
  2537  0008A0  08                 	db	low(08h)
  2538  0008A1  95                 	db	low(095h)
  2539  0008A2  40                 	db	low(040h)
  2540  0008A3  81                 	db	low(081h)
  2541  0008A4  00                 	db	low(0)
  2542  0008A5  19                 	db	low(019h)
  2543  0008A6  01                 	db	low(01h)
  2544  0008A7  29                 	db	low(029h)
  2545  0008A8  40                 	db	low(040h)
  2546  0008A9  91                 	db	low(091h)
  2547  0008AA  00                 	db	low(0)
  2548  0008AB  C0                 	db	low(0C0h)
  2549                           	global __end_of_hid_rpt01
  2550  0008AC                     __end_of_hid_rpt01:
  2551                           	global	_device_dsc
  2552                           psect	smallconst
  2553                           	file	"../usbdsc.c"
  2554                           	line	180
  2555  0008AC                     _device_dsc:
  2556  0008AC  12                 	db	low(012h)
  2557  0008AD  01                 	db	low(01h)
  2558  0008AE  0200               	dw	(0200h)&0ffffh
  2559  0008B0  00                 	db	low(0)
  2560  0008B1  00                 	db	low(0)
  2561  0008B2  00                 	db	low(0)
  2562  0008B3  08                 	db	low(08h)
  2563  0008B4  04D8               	dw	(04D8h)&0ffffh
  2564  0008B6  003C               	dw	(03Ch)&0ffffh
  2565  0008B8  0002               	dw	(02h)&0ffffh
  2566  0008BA  01                 	db	low(01h)
  2567  0008BB  02                 	db	low(02h)
  2568  0008BC  00                 	db	low(0)
  2569  0008BD  01                 	db	low(01h)
  2570                           	global __end_of_device_dsc
  2571  0008BE                     __end_of_device_dsc:
  2572                           	global	_sd000
  2573                           psect	smallconst
  2574                           	file	"../usbdsc.c"
  2575                           	line	235
  2576  0008BE                     _sd000:
  2577  0008BE  04                 	db	low(04h)
  2578  0008BF  03                 	db	low(03h)
  2579  0008C0  0409               	dw	(0409h)&0ffffh
  2580                           	global __end_of_sd000
  2581  0008C2                     __end_of_sd000:
  2582                           	global	_USB_SD_Ptr
  2583                           	global	_USB_CD_Ptr
  2584                           	global	_ClassReqHandler
  2585                           	global	_sd001
  2586                           	global	_cfg01
  2587                           	global	_sd002
  2588                           	global	_hid_rpt01
  2589                           	global	_device_dsc
  2590                           	global	_sd000
  2591                           	global	_ProgrammedPointer
  2592                           	global	_pDst
  2593                           	global	_pSrc
  2594                           	global	BlinkUSBStatus@led_count
  2595                           	global	_ErasePageTracker
  2596                           	global	ResetDeviceCleanly@i
  2597                           	global	WriteConfigBits@i
  2598                           	global	WriteEEPROM@i
  2599                           	global	WriteFlashBlock@BytesTakenFromBuffer
  2600                           	global	WriteFlashBlock@CorrectionFactor
  2601                           	global	WriteFlashBlock@i
  2602                           	global	_BootState
  2603                           	global	_BufferedDataIndex
  2604                           	global	_ConfigsLockValue
  2605                           	global	_bTRNIFCount
  2606                           	global	_ctrl_trf_session_owner
  2607                           	global	_ctrl_trf_state
  2608                           	global	_hid_rpt_rx_len
  2609                           	global	_short_pkt_status
  2610                           	global	_usb_device_state
  2611                           	global	_usb_stat
  2612                           	global	_wCount
  2613                           	global	_active_protocol
  2614                           	global	_idle_rate
  2615                           	global	_usb_active_cfg
  2616                           	global	_usb_alt_intf
  2617                           	global	_PacketFromPC
  2618                           	global	_PacketToPC
  2619                           	global	_ProgrammingBuffer
  2620                           	global	_ep0Bi
  2621                           	global	_ep0Bi
  2622  0000                     _ep0Bi  equ     1028
  2623                           
  2624                           	DABS	1,1028,4	;_ep0Bi
  2625                           	global	_ep1Bi
  2626                           	global	_ep1Bi
  2627  0000                     _ep1Bi  equ     1036
  2628                           
  2629                           	DABS	1,1036,4	;_ep1Bi
  2630                           	global	_TBLPTR
  2631  0000                     _TBLPTR	set	0xFF6
  2632                           	global	_ANSELB
  2633  0000                     _ANSELB	set	0xF5C
  2634                           	global	_ANSELBbits
  2635  0000                     _ANSELBbits	set	0xF5C
  2636                           	global	_EEADR
  2637  0000                     _EEADR	set	0xFA9
  2638                           	global	_EECON1
  2639  0000                     _EECON1	set	0xFA6
  2640                           	global	_EECON1bits
  2641  0000                     _EECON1bits	set	0xFA6
  2642                           	global	_EEDATA
  2643  0000                     _EEDATA	set	0xFA8
  2644                           	global	_INTCONbits
  2645  0000                     _INTCONbits	set	0xFF2
  2646                           	global	_LATC
  2647  0000                     _LATC	set	0xF8B
  2648                           	global	_LATCbits
  2649  0000                     _LATCbits	set	0xF8B
  2650                           	global	_OSCCON
  2651  0000                     _OSCCON	set	0xFD3
  2652                           	global	_OSCCON2
  2653  0000                     _OSCCON2	set	0xFD2
  2654                           	global	_OSCCON2bits
  2655  0000                     _OSCCON2bits	set	0xFD2
  2656                           	global	_OSCTUNE
  2657  0000                     _OSCTUNE	set	0xF9B
  2658                           	global	_PIE3bits
  2659  0000                     _PIE3bits	set	0xFA3
  2660                           	global	_PIR3bits
  2661  0000                     _PIR3bits	set	0xFA4
  2662                           	global	_PORTBbits
  2663  0000                     _PORTBbits	set	0xF81
  2664                           	global	_TABLAT
  2665  0000                     _TABLAT	set	0xFF5
  2666                           	global	_TBLPTRL
  2667  0000                     _TBLPTRL	set	0xFF6
  2668                           	global	_TBLPTRU
  2669  0000                     _TBLPTRU	set	0xFF8
  2670                           	global	_TRISC
  2671  0000                     _TRISC	set	0xF94
  2672                           	global	_UADDR
  2673  0000                     _UADDR	set	0xF63
  2674                           	global	_UCFG
  2675  0000                     _UCFG	set	0xF62
  2676                           	global	_UCON
  2677  0000                     _UCON	set	0xF60
  2678                           	global	_UCONbits
  2679  0000                     _UCONbits	set	0xF60
  2680                           	global	_UEIE
  2681  0000                     _UEIE	set	0xF66
  2682                           	global	_UEIR
  2683  0000                     _UEIR	set	0xF67
  2684                           	global	_UEP0
  2685  0000                     _UEP0	set	0xF6A
  2686                           	global	_UEP0bits
  2687  0000                     _UEP0bits	set	0xF6A
  2688                           	global	_UIE
  2689  0000                     _UIE	set	0xF64
  2690                           	global	_UIEbits
  2691  0000                     _UIEbits	set	0xF64
  2692                           	global	_UIR
  2693  0000                     _UIR	set	0xF65
  2694                           	global	_UIRbits
  2695  0000                     _UIRbits	set	0xF65
  2696                           	global	_USTAT
  2697  0000                     _USTAT	set	0xF61
  2698                           	global	_WREG
  2699  0000                     _WREG	set	0xFE8
  2700                           	global	_UEP1
  2701  0000                     _UEP1	set	0xF6B
  2702                           	global	_ep1Bo
  2703                           	global	_ep1Bo
  2704  0000                     _ep1Bo  equ     1032
  2705                           
  2706                           	DABS	1,1032,4	;_ep1Bo
  2707                           	global	_SetupPkt
  2708                           	global	_SetupPkt
  2709  0000                     _SetupPkt  equ     1280
  2710                           
  2711                           	DABS	1,1280,8	;_SetupPkt
  2712                           	global	_ep0Bo
  2713                           	global	_ep0Bo
  2714  0000                     _ep0Bo  equ     1024
  2715                           
  2716                           	DABS	1,1024,4	;_ep0Bo
  2717                           	global	_hid_report_out
  2718                           	global	_hid_report_out
  2719  0000                     _hid_report_out  equ     1792
  2720                           
  2721                           	DABS	1,1792,64	;_hid_report_out
  2722                           	global	_CtrlTrfData
  2723                           	global	_CtrlTrfData
  2724  0000                     _CtrlTrfData  equ     1536
  2725                           
  2726                           	DABS	1,1536,8	;_CtrlTrfData
  2727                           	global	_hid_report_in
  2728                           	global	_hid_report_in
  2729  0000                     _hid_report_in  equ     1856
  2730                           
  2731                           	DABS	1,1856,64	;_hid_report_in
  2732                           ; #config settings
  2733                           global __CFG_PLLSEL$PLL3X
  2734  0000                     __CFG_PLLSEL$PLL3X equ 0x0
  2735                           global __CFG_CFGPLLEN$OFF
  2736  0000                     __CFG_CFGPLLEN$OFF equ 0x0
  2737                           global __CFG_CPUDIV$NOCLKDIV
  2738  0000                     __CFG_CPUDIV$NOCLKDIV equ 0x0
  2739                           global __CFG_LS48MHZ$SYS48X8
  2740  0000                     __CFG_LS48MHZ$SYS48X8 equ 0x0
  2741                           global __CFG_IESO$OFF
  2742  0000                     __CFG_IESO$OFF equ 0x0
  2743                           global __CFG_FOSC$INTOSCIO
  2744  0000                     __CFG_FOSC$INTOSCIO equ 0x0
  2745                           global __CFG_FCMEN$OFF
  2746  0000                     __CFG_FCMEN$OFF equ 0x0
  2747                           global __CFG_PCLKEN$OFF
  2748  0000                     __CFG_PCLKEN$OFF equ 0x0
  2749                           global __CFG_BOREN$SBORDIS
  2750  0000                     __CFG_BOREN$SBORDIS equ 0x0
  2751                           global __CFG_nPWRTEN$OFF
  2752  0000                     __CFG_nPWRTEN$OFF equ 0x0
  2753                           global __CFG_nLPBOR$ON
  2754  0000                     __CFG_nLPBOR$ON equ 0x0
  2755                           global __CFG_BORV$220
  2756  0000                     __CFG_BORV$220 equ 0x0
  2757                           global __CFG_WDTPS$32768
  2758  0000                     __CFG_WDTPS$32768 equ 0x0
  2759                           global __CFG_WDTEN$SWON
  2760  0000                     __CFG_WDTEN$SWON equ 0x0
  2761                           global __CFG_CCP2MX$RC1
  2762  0000                     __CFG_CCP2MX$RC1 equ 0x0
  2763                           global __CFG_PBADEN$OFF
  2764  0000                     __CFG_PBADEN$OFF equ 0x0
  2765                           global __CFG_MCLRE$ON
  2766  0000                     __CFG_MCLRE$ON equ 0x0
  2767                           global __CFG_SDOMX$RC7
  2768  0000                     __CFG_SDOMX$RC7 equ 0x0
  2769                           global __CFG_T3CMX$RB5
  2770  0000                     __CFG_T3CMX$RB5 equ 0x0
  2771                           global __CFG_STVREN$ON
  2772  0000                     __CFG_STVREN$ON equ 0x0
  2773                           global __CFG_ICPRT$OFF
  2774  0000                     __CFG_ICPRT$OFF equ 0x0
  2775                           global __CFG_XINST$OFF
  2776  0000                     __CFG_XINST$OFF equ 0x0
  2777                           global __CFG_LVP$OFF
  2778  0000                     __CFG_LVP$OFF equ 0x0
  2779                           global __CFG_CP0$OFF
  2780  0000                     __CFG_CP0$OFF equ 0x0
  2781                           global __CFG_CP1$OFF
  2782  0000                     __CFG_CP1$OFF equ 0x0
  2783                           global __CFG_CP2$OFF
  2784  0000                     __CFG_CP2$OFF equ 0x0
  2785                           global __CFG_CP3$OFF
  2786  0000                     __CFG_CP3$OFF equ 0x0
  2787                           global __CFG_CPD$OFF
  2788  0000                     __CFG_CPD$OFF equ 0x0
  2789                           global __CFG_CPB$OFF
  2790  0000                     __CFG_CPB$OFF equ 0x0
  2791                           global __CFG_WRT0$OFF
  2792  0000                     __CFG_WRT0$OFF equ 0x0
  2793                           global __CFG_WRT1$OFF
  2794  0000                     __CFG_WRT1$OFF equ 0x0
  2795                           global __CFG_WRT2$OFF
  2796  0000                     __CFG_WRT2$OFF equ 0x0
  2797                           global __CFG_WRT3$OFF
  2798  0000                     __CFG_WRT3$OFF equ 0x0
  2799                           global __CFG_WRTB$OFF
  2800  0000                     __CFG_WRTB$OFF equ 0x0
  2801                           global __CFG_WRTC$OFF
  2802  0000                     __CFG_WRTC$OFF equ 0x0
  2803                           global __CFG_WRTD$OFF
  2804  0000                     __CFG_WRTD$OFF equ 0x0
  2805                           global __CFG_EBTR0$OFF
  2806  0000                     __CFG_EBTR0$OFF equ 0x0
  2807                           global __CFG_EBTR1$OFF
  2808  0000                     __CFG_EBTR1$OFF equ 0x0
  2809                           global __CFG_EBTR2$OFF
  2810  0000                     __CFG_EBTR2$OFF equ 0x0
  2811                           global __CFG_EBTR3$OFF
  2812  0000                     __CFG_EBTR3$OFF equ 0x0
  2813                           global __CFG_EBTRB$OFF
  2814  0000                     __CFG_EBTRB$OFF equ 0x0
  2815                           	file	"/tmp/cgtez9HX3"
  2816                           	line	#
  2817                           psect	cinit,class=CODE,delta=1,reloc=2
  2818                           global __pcinit
  2819  002394                     __pcinit:
  2820                           global start_initialization
  2821  002394                     start_initialization:
  2822                           
  2823                           global __initialization
  2824  002394                     __initialization:
  2825                           psect	bssCOMRAM,class=COMRAM,space=1
  2826                           global __pbssCOMRAM
  2827  000001                     __pbssCOMRAM:
  2828                           	global	_ProgramMemStopAddress
  2829                           	global	_ProgramMemStopAddress
  2830  000001                     _ProgramMemStopAddress:
  2831  000001                            ds      3
  2832                           	global	_ProgrammedPointer
  2833  000004                     _ProgrammedPointer:
  2834  000004                            ds      3
  2835                           	global	_pDst
  2836  000007                     _pDst:
  2837  000007                            ds      3
  2838                           	global	_pSrc
  2839  00000A                     _pSrc:
  2840  00000A                            ds      3
  2841  00000D                     BlinkUSBStatus@led_count:
  2842  00000D                            ds      2
  2843                           	global	_ErasePageTracker
  2844  00000F                     _ErasePageTracker:
  2845  00000F                            ds      2
  2846  000011                     ResetDeviceCleanly@i:
  2847  000011                            ds      1
  2848  000012                     WriteConfigBits@i:
  2849  000012                            ds      1
  2850  000013                     WriteEEPROM@i:
  2851  000013                            ds      1
  2852  000014                     WriteFlashBlock@BytesTakenFromBuffer:
  2853  000014                            ds      1
  2854  000015                     WriteFlashBlock@CorrectionFactor:
  2855  000015                            ds      1
  2856  000016                     WriteFlashBlock@i:
  2857  000016                            ds      1
  2858                           	global	_BootState
  2859  000017                     _BootState:
  2860  000017                            ds      1
  2861                           	global	_BufferedDataIndex
  2862  000018                     _BufferedDataIndex:
  2863  000018                            ds      1
  2864                           	global	_ConfigsLockValue
  2865  000019                     _ConfigsLockValue:
  2866  000019                            ds      1
  2867                           	global	_bTRNIFCount
  2868  00001A                     _bTRNIFCount:
  2869  00001A                            ds      1
  2870                           	global	_ctrl_trf_session_owner
  2871  00001B                     _ctrl_trf_session_owner:
  2872  00001B                            ds      1
  2873                           	global	_ctrl_trf_state
  2874  00001C                     _ctrl_trf_state:
  2875  00001C                            ds      1
  2876                           	global	_hid_rpt_rx_len
  2877  00001D                     _hid_rpt_rx_len:
  2878  00001D                            ds      1
  2879                           	global	_short_pkt_status
  2880  00001E                     _short_pkt_status:
  2881  00001E                            ds      1
  2882                           	global	_usb_device_state
  2883  00001F                     _usb_device_state:
  2884  00001F                            ds      1
  2885                           	global	_usb_stat
  2886  000020                     _usb_stat:
  2887  000020                            ds      1
  2888                           	global	_wCount
  2889  000021                     _wCount:
  2890  000021                            ds      2
  2891                           	global	_active_protocol
  2892  000023                     _active_protocol:
  2893  000023                            ds      1
  2894                           	global	_idle_rate
  2895  000024                     _idle_rate:
  2896  000024                            ds      1
  2897                           	global	_usb_active_cfg
  2898  000025                     _usb_active_cfg:
  2899  000025                            ds      1
  2900                           	global	_usb_alt_intf
  2901  000026                     _usb_alt_intf:
  2902  000026                            ds      1
  2903                           psect	bssBANK0,class=BANK0,space=1
  2904                           global __pbssBANK0
  2905  000060                     __pbssBANK0:
  2906                           	global	_PacketFromPC
  2907  000060                     _PacketFromPC:
  2908  000060                            ds      64
  2909                           	global	_PacketToPC
  2910  0000A0                     _PacketToPC:
  2911  0000A0                            ds      64
  2912                           psect	bssBANK1,class=BANK1,space=1
  2913                           global __pbssBANK1
  2914  000100                     __pbssBANK1:
  2915                           	global	_ProgrammingBuffer
  2916  000100                     _ProgrammingBuffer:
  2917  000100                            ds      64
  2918                           psect	cinit
  2919                           ; Clear objects allocated to BANK1 (64 bytes)
  2920                           	global __pbssBANK1
  2921  002394  EE01  F000         lfsr	0,__pbssBANK1
  2922  002398  0E40               movlw	64
  2923  00239A                     clear_0:
  2924  00239A  6AEE               clrf	postinc0,c
  2925  00239C  06E8               decf	wreg
  2926  00239E  E1FD               bnz	clear_0
  2927                           ; Clear objects allocated to BANK0 (128 bytes)
  2928                           	global __pbssBANK0
  2929  0023A0  EE00  F060         lfsr	0,__pbssBANK0
  2930  0023A4  0E80               movlw	128
  2931  0023A6                     clear_1:
  2932  0023A6  6AEE               clrf	postinc0,c
  2933  0023A8  06E8               decf	wreg
  2934  0023AA  E1FD               bnz	clear_1
  2935                           ; Clear objects allocated to COMRAM (38 bytes)
  2936                           	global __pbssCOMRAM
  2937  0023AC  EE00  F001         lfsr	0,__pbssCOMRAM
  2938  0023B0  0E26               movlw	38
  2939  0023B2                     clear_2:
  2940  0023B2  6AEE               clrf	postinc0,c
  2941  0023B4  06E8               decf	wreg
  2942  0023B6  E1FD               bnz	clear_2
  2943                           psect cinit,class=CODE,delta=1
  2944                           global end_of_initialization,__end_of__initialization
  2945                           
  2946                           ;End of C runtime variable initialization code
  2947                           
  2948  0023B8                     end_of_initialization:
  2949  0023B8                     __end_of__initialization:	GLOBAL	__Lmediumconst
  2950  0023B8  0E00               	movlw	low highword(__Lmediumconst)
  2951  0023BA  6EF8               	movwf	tblptru
  2952  0023BC  0100               movlb 0
  2953  0023BE  EF53  F011         goto _main	;jump to C main() function
  2954                           psect	cstackBANK0,class=BANK0,space=1
  2955                           global __pcstackBANK0
  2956  0000E0                     __pcstackBANK0:
  2957  0000E0                     ??_HIDGetReportHandler:	; 0 bytes @ 0x0
  2958  0000E0                     ??_HIDSetReportHandler:	; 0 bytes @ 0x0
  2959  0000E0                     ??_BlinkUSBStatus:	; 0 bytes @ 0x0
  2960  0000E0                     ??_UserInit:	; 0 bytes @ 0x0
  2961  0000E0                     ??_USBStdGetDscHandler:	; 0 bytes @ 0x0
  2962  0000E0                     ??_USBStdGetStatusHandler:	; 0 bytes @ 0x0
  2963  0000E0                     ??_USBStdFeatureReqHandler:	; 0 bytes @ 0x0
  2964                           	global	?_ClearArray
  2965  0000E0                     ?_ClearArray:	; 0 bytes @ 0x0
  2966  0000E0                     ??_USBCtrlTrfRxService:	; 0 bytes @ 0x0
  2967  0000E0                     ??_USBPrepareForNextSetupTrf:	; 0 bytes @ 0x0
  2968  0000E0                     ??_USBCtrlTrfTxService:	; 0 bytes @ 0x0
  2969  0000E0                     ??_USBModuleEnable:	; 0 bytes @ 0x0
  2970  0000E0                     ??_USBWakeFromSuspend:	; 0 bytes @ 0x0
  2971  0000E0                     ??_USBSuspend:	; 0 bytes @ 0x0
  2972  0000E0                     ??_USBStallHandler:	; 0 bytes @ 0x0
  2973  0000E0                     ??_ClearWatchdog:	; 0 bytes @ 0x0
  2974                           	global	?_UnlockAndActivate
  2975  0000E0                     ?_UnlockAndActivate:	; 0 bytes @ 0x0
  2976  0000E0                     ??_TableReadPostIncrement:	; 0 bytes @ 0x0
  2977  0000E0                     ??_ResetDeviceCleanly:	; 0 bytes @ 0x0
  2978  0000E0                     ??_USBCheckHIDRequest:	; 0 bytes @ 0x0
  2979  0000E0                     ??_HIDInitEP:	; 0 bytes @ 0x0
  2980                           	global	?_HIDTxReport
  2981  0000E0                     ?_HIDTxReport:	; 0 bytes @ 0x0
  2982                           	global	?_HIDRxReport
  2983  0000E0                     ?_HIDRxReport:	; 1 bytes @ 0x0
  2984                           	global	UnlockAndActivate@UnlockKey
  2985  0000E0                     UnlockAndActivate@UnlockKey:	; 1 bytes @ 0x0
  2986                           	global	HIDTxReport@buffer
  2987  0000E0                     HIDTxReport@buffer:	; 2 bytes @ 0x0
  2988                           	global	HIDRxReport@buffer
  2989  0000E0                     HIDRxReport@buffer:	; 2 bytes @ 0x0
  2990                           	global	USBCtrlTrfRxService@byte_to_read
  2991  0000E0                     USBCtrlTrfRxService@byte_to_read:	; 2 bytes @ 0x0
  2992                           	global	ClearArray@startAdr
  2993  0000E0                     ClearArray@startAdr:	; 2 bytes @ 0x0
  2994  0000E0                     	ds   1
  2995  0000E1                     ??_InitializeSystem:	; 0 bytes @ 0x1
  2996  0000E1                     ??_USBCheckBusStatus:	; 0 bytes @ 0x1
  2997  0000E1                     ??_UnlockAndActivate:	; 0 bytes @ 0x1
  2998  0000E1                     ??_WriteConfigBits:	; 0 bytes @ 0x1
  2999  0000E1                     ??_WriteEEPROM:	; 0 bytes @ 0x1
  3000  0000E1                     ??_WriteFlashBlock:	; 0 bytes @ 0x1
  3001  0000E1                     	ds   1
  3002  0000E2                     ??_USBCtrlTrfOutHandler:	; 0 bytes @ 0x2
  3003                           	global	HIDTxReport@len
  3004  0000E2                     HIDTxReport@len:	; 1 bytes @ 0x2
  3005                           	global	HIDRxReport@len
  3006  0000E2                     HIDRxReport@len:	; 1 bytes @ 0x2
  3007                           	global	ClearArray@count
  3008  0000E2                     ClearArray@count:	; 1 bytes @ 0x2
  3009                           	global	USBCtrlTrfTxService@byte_to_send
  3010  0000E2                     USBCtrlTrfTxService@byte_to_send:	; 2 bytes @ 0x2
  3011  0000E2                     	ds   1
  3012  0000E3                     ??_USBStdSetCfgHandler:	; 0 bytes @ 0x3
  3013  0000E3                     ??_ClearArray:	; 0 bytes @ 0x3
  3014  0000E3                     ??_USBProtocolResetHandler:	; 0 bytes @ 0x3
  3015  0000E3                     ??_HIDTxReport:	; 0 bytes @ 0x3
  3016  0000E3                     ??_HIDRxReport:	; 0 bytes @ 0x3
  3017  0000E3                     	ds   1
  3018  0000E4                     ??_USBCtrlTrfInHandler:	; 0 bytes @ 0x4
  3019  0000E4                     ??_USBCtrlEPServiceComplete:	; 0 bytes @ 0x4
  3020  0000E4                     ??_USBCheckStdRequest:	; 0 bytes @ 0x4
  3021                           	global	HIDTxReport@i
  3022  0000E4                     HIDTxReport@i:	; 1 bytes @ 0x4
  3023  0000E4                     	ds   1
  3024  0000E5                     ??_USBCtrlTrfSetupHandler:	; 0 bytes @ 0x5
  3025  0000E5                     	ds   1
  3026                           	global	USBCtrlTrfSetupHandler@i
  3027  0000E6                     USBCtrlTrfSetupHandler@i:	; 1 bytes @ 0x6
  3028  0000E6                     	ds   1
  3029  0000E7                     ??_USBCtrlEPService:	; 0 bytes @ 0x7
  3030  0000E7                     	ds   2
  3031                           	global	USBCtrlEPService@setup_cnt
  3032  0000E9                     USBCtrlEPService@setup_cnt:	; 1 bytes @ 0x9
  3033  0000E9                     	ds   1
  3034  0000EA                     ??_USBDriverService:	; 0 bytes @ 0xA
  3035  0000EA                     	ds   1
  3036  0000EB                     ??_USBTasks:	; 0 bytes @ 0xB
  3037  0000EB                     ??_ProcessIO:	; 0 bytes @ 0xB
  3038  0000EB                     	ds   4
  3039                           	global	ProcessIO@i
  3040  0000EF                     ProcessIO@i:	; 1 bytes @ 0xF
  3041  0000EF                     	ds   1
  3042  0000F0                     ??_main:	; 0 bytes @ 0x10
  3043                           	global	main@ANSELBSave
  3044  0000F0                     main@ANSELBSave:	; 1 bytes @ 0x10
  3045  0000F0                     	ds   1
  3046                           psect	cstackCOMRAM,class=COMRAM,space=1
  3047                           global __pcstackCOMRAM
  3048  000027                     __pcstackCOMRAM:
  3049  000027                     ?_HIDGetReportHandler:	; 0 bytes @ 0x0
  3050  000027                     ?_HIDSetReportHandler:	; 0 bytes @ 0x0
  3051  000027                     ?_InitializeSystem:	; 0 bytes @ 0x0
  3052  000027                     ?_USBTasks:	; 0 bytes @ 0x0
  3053  000027                     ?_BlinkUSBStatus:	; 0 bytes @ 0x0
  3054  000027                     ?_ProcessIO:	; 0 bytes @ 0x0
  3055  000027                     ?_UserInit:	; 0 bytes @ 0x0
  3056  000027                     ?_USBCheckBusStatus:	; 0 bytes @ 0x0
  3057  000027                     ?_USBDriverService:	; 0 bytes @ 0x0
  3058  000027                     ?_USBStdGetDscHandler:	; 0 bytes @ 0x0
  3059  000027                     ?_USBStdSetCfgHandler:	; 0 bytes @ 0x0
  3060  000027                     ?_USBStdGetStatusHandler:	; 0 bytes @ 0x0
  3061  000027                     ?_USBStdFeatureReqHandler:	; 0 bytes @ 0x0
  3062  000027                     ?_USBCtrlTrfSetupHandler:	; 0 bytes @ 0x0
  3063  000027                     ?_USBCtrlTrfOutHandler:	; 0 bytes @ 0x0
  3064  000027                     ?_USBCtrlTrfInHandler:	; 0 bytes @ 0x0
  3065  000027                     ?_USBCtrlEPServiceComplete:	; 0 bytes @ 0x0
  3066  000027                     ?_USBCtrlTrfRxService:	; 0 bytes @ 0x0
  3067  000027                     ?_USBPrepareForNextSetupTrf:	; 0 bytes @ 0x0
  3068  000027                     ?_USBCtrlTrfTxService:	; 0 bytes @ 0x0
  3069  000027                     ?_USBModuleEnable:	; 0 bytes @ 0x0
  3070  000027                     ?_USBWakeFromSuspend:	; 0 bytes @ 0x0
  3071  000027                     ?_USBProtocolResetHandler:	; 0 bytes @ 0x0
  3072  000027                     ?_USBSuspend:	; 0 bytes @ 0x0
  3073  000027                     ?_USBStallHandler:	; 0 bytes @ 0x0
  3074  000027                     ?_ClearWatchdog:	; 0 bytes @ 0x0
  3075  000027                     ?_WriteConfigBits:	; 0 bytes @ 0x0
  3076  000027                     ?_WriteEEPROM:	; 0 bytes @ 0x0
  3077  000027                     ?_WriteFlashBlock:	; 0 bytes @ 0x0
  3078  000027                     ?_TableReadPostIncrement:	; 0 bytes @ 0x0
  3079  000027                     ?_ResetDeviceCleanly:	; 0 bytes @ 0x0
  3080  000027                     ?_USBCheckHIDRequest:	; 0 bytes @ 0x0
  3081  000027                     ?_HIDInitEP:	; 0 bytes @ 0x0
  3082  000027                     ?_interrupt_at_high_vector:	; 0 bytes @ 0x0
  3083  000027                     ?_interrupt_at_low_vector:	; 0 bytes @ 0x0
  3084  000027                     ??_interrupt_at_low_vector:	; 0 bytes @ 0x0
  3085  000027                     ?_main:	; 0 bytes @ 0x0
  3086  000027                     ?_USBCheckStdRequest:	; 0 bytes @ 0x0
  3087  000027                     ?_USBCtrlEPService:	; 1 bytes @ 0x0
  3088  000027                     	ds   17
  3089  000038                     ??_interrupt_at_high_vector:	; 0 bytes @ 0x11
  3090  000038                     	ds   14
  3091                           ;!
  3092                           ;!Data Sizes:
  3093                           ;!    Strings     0
  3094                           ;!    Constant    194
  3095                           ;!    Data        0
  3096                           ;!    BSS         230
  3097                           ;!    Persistent  0
  3098                           ;!    Stack       0
  3099                           ;!
  3100                           ;!Auto Spaces:
  3101                           ;!    Space          Size  Autos    Used
  3102                           ;!    COMRAM           95     31      69
  3103                           ;!    BANK0           160     17     145
  3104                           ;!    BANK1           256      0      64
  3105                           ;!    BANK2           256      0       0
  3106                           ;!    BANK3           256      0       0
  3107                           ;!    BANK4h          239      0       0
  3108                           ;!    BANK5           248      0       0
  3109                           ;!    BANK6           248      0       0
  3110                           ;!    BANK7           128      0       0
  3111                           
  3112                           ;!
  3113                           ;!Pointer List with Targets:
  3114                           ;!
  3115                           ;!    ClearArray@startAdr	PTR unsigned char  size(2) Largest target is 1
  3116                           ;!		 -> usb_alt_intf(COMRAM[1]), UEP1(DATA[1]), 
  3117                           ;!
  3118                           ;!    ep0Bi.ADR	PTR unsigned char  size(2) Largest target is 64
  3119                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3120                           ;!
  3121                           ;!    ClassReqHandler	const PTR FTN()void [1] size(2) Largest target is 0
  3122                           ;!		 -> USBCheckHIDRequest(), 
  3123                           ;!
  3124                           ;!    ep0Bo.ADR	PTR unsigned char  size(2) Largest target is 64
  3125                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3126                           ;!
  3127                           ;!    ep0Bi...ADR	PTR unsigned char  size(2) Largest target is 64
  3128                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3129                           ;!
  3130                           ;!    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
  3131                           ;!		 -> sd002(CODE[38]), sd001(CODE[52]), sd000(CODE[4]), 
  3132                           ;!
  3133                           ;!    USB_CD_Ptr	const PTR const unsigned char [2] size(2) Largest target is 41
  3134                           ;!		 -> cfg01(CODE[41]), 
  3135                           ;!
  3136                           ;!    ep0Bo...ADR	PTR unsigned char  size(2) Largest target is 64
  3137                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3138                           ;!
  3139                           ;!    pDst.wRom	PTR const unsigned int  size(2) Largest target is 0
  3140                           ;!
  3141                           ;!    pDst.bRom	PTR const unsigned char  size(2) Largest target is 0
  3142                           ;!
  3143                           ;!    pDst.wRam	PTR unsigned int  size(2) Largest target is 0
  3144                           ;!
  3145                           ;!    pDst.bRam	PTR unsigned char  size(2) Largest target is 0
  3146                           ;!
  3147                           ;!    HIDRxReport@buffer	PTR unsigned char  size(2) Largest target is 64
  3148                           ;!		 -> PacketFromPC(BANK0[64]), 
  3149                           ;!
  3150                           ;!    HIDTxReport@buffer	PTR unsigned char  size(2) Largest target is 64
  3151                           ;!		 -> PacketToPC(BANK0[64]), 
  3152                           ;!
  3153                           ;!    ep1Bi.ADR	PTR unsigned char  size(2) Largest target is 64
  3154                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3155                           ;!
  3156                           ;!    ep1Bo.ADR	PTR unsigned char  size(2) Largest target is 64
  3157                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3158                           ;!
  3159                           ;!    ep1Bi...ADR	PTR unsigned char  size(2) Largest target is 64
  3160                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3161                           ;!
  3162                           ;!    S601$ADR	PTR unsigned char  size(2) Largest target is 64
  3163                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3164                           ;!
  3165                           ;!    ep1Bo...ADR	PTR unsigned char  size(2) Largest target is 64
  3166                           ;!		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll
                                 [64]), SetupPkt(BIGRAMlll[8]), 
  3167                           ;!
  3168                           ;!    S393_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0
  3169                           ;!
  3170                           ;!    pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0
  3171                           ;!
  3172                           ;!    S393_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0
  3173                           ;!
  3174                           ;!    pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0
  3175                           ;!
  3176                           ;!    S393_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0
  3177                           ;!
  3178                           ;!    pSrc.wRam	PTR unsigned int  size(2) Largest target is 0
  3179                           ;!
  3180                           ;!    S393_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0
  3181                           ;!
  3182                           ;!    pSrc.bRam	PTR unsigned char  size(2) Largest target is 0
  3183                           ;!
  3184                           
  3185                           
  3186                           ;!
  3187                           ;!Critical Paths under _main in COMRAM
  3188                           ;!
  3189                           ;!    None.
  3190                           ;!
  3191                           ;!Critical Paths under _interrupt_at_high_vector in COMRAM
  3192                           ;!
  3193                           ;!    None.
  3194                           ;!
  3195                           ;!Critical Paths under _main in BANK0
  3196                           ;!
  3197                           ;!    _main->_ProcessIO
  3198                           ;!    _InitializeSystem->_UserInit
  3199                           ;!    _USBTasks->_USBDriverService
  3200                           ;!    _ProcessIO->_USBDriverService
  3201                           ;!    _USBCheckBusStatus->_USBModuleEnable
  3202                           ;!    _USBDriverService->_USBCtrlEPService
  3203                           ;!    _USBCtrlEPService->_USBCtrlTrfSetupHandler
  3204                           ;!    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
  3205                           ;!    _USBCtrlTrfSetupHandler->_USBCtrlEPServiceComplete
  3206                           ;!    _USBCheckStdRequest->_USBStdSetCfgHandler
  3207                           ;!    _USBCheckStdRequest->_USBStdGetStatusHandler
  3208                           ;!    _USBCheckStdRequest->_USBStdFeatureReqHandler
  3209                           ;!    _USBStdSetCfgHandler->_ClearArray
  3210                           ;!    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
  3211                           ;!    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
  3212                           ;!    _USBCtrlEPServiceComplete->_USBCtrlTrfTxService
  3213                           ;!    _USBProtocolResetHandler->_ClearArray
  3214                           ;!    _WriteConfigBits->_UnlockAndActivate
  3215                           ;!    _WriteEEPROM->_UnlockAndActivate
  3216                           ;!    _WriteFlashBlock->_UnlockAndActivate
  3217                           ;!
  3218                           ;!Critical Paths under _interrupt_at_high_vector in BANK0
  3219                           ;!
  3220                           ;!    None.
  3221                           ;!
  3222                           ;!Critical Paths under _main in BANK1
  3223                           ;!
  3224                           ;!    None.
  3225                           ;!
  3226                           ;!Critical Paths under _interrupt_at_high_vector in BANK1
  3227                           ;!
  3228                           ;!    None.
  3229                           ;!
  3230                           ;!Critical Paths under _main in BANK2
  3231                           ;!
  3232                           ;!    None.
  3233                           ;!
  3234                           ;!Critical Paths under _interrupt_at_high_vector in BANK2
  3235                           ;!
  3236                           ;!    None.
  3237                           ;!
  3238                           ;!Critical Paths under _main in BANK3
  3239                           ;!
  3240                           ;!    None.
  3241                           ;!
  3242                           ;!Critical Paths under _interrupt_at_high_vector in BANK3
  3243                           ;!
  3244                           ;!    None.
  3245                           ;!
  3246                           ;!Critical Paths under _main in BANK4h
  3247                           ;!
  3248                           ;!    None.
  3249                           ;!
  3250                           ;!Critical Paths under _interrupt_at_high_vector in BANK4h
  3251                           ;!
  3252                           ;!    None.
  3253                           ;!
  3254                           ;!Critical Paths under _main in BANK5
  3255                           ;!
  3256                           ;!    None.
  3257                           ;!
  3258                           ;!Critical Paths under _interrupt_at_high_vector in BANK5
  3259                           ;!
  3260                           ;!    None.
  3261                           ;!
  3262                           ;!Critical Paths under _main in BANK6
  3263                           ;!
  3264                           ;!    None.
  3265                           ;!
  3266                           ;!Critical Paths under _interrupt_at_high_vector in BANK6
  3267                           ;!
  3268                           ;!    None.
  3269                           ;!
  3270                           ;!Critical Paths under _main in BANK7
  3271                           ;!
  3272                           ;!    None.
  3273                           ;!
  3274                           ;!Critical Paths under _interrupt_at_high_vector in BANK7
  3275                           ;!
  3276                           ;!    None.
  3277                           
  3278 ;;
  3279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3280 ;;
  3281                           
  3282                           ;!
  3283                           ;!Call Graph Tables:
  3284                           ;!
  3285                           ;! ---------------------------------------------------------------------------------
  3286                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3287                           ;! ---------------------------------------------------------------------------------
  3288                           ;! (0) _main                                                 1     1      0    2413
  3289                           ;!                                             16 BANK0      1     1      0
  3290                           ;!                   _InitializeSystem
  3291                           ;!                           _USBTasks
  3292                           ;!                     _BlinkUSBStatus
  3293                           ;!                          _ProcessIO
  3294                           ;! ---------------------------------------------------------------------------------
  3295                           ;! (1) _InitializeSystem                                     1     1      0       0
  3296                           ;!                                              1 BANK0      1     1      0
  3297                           ;!                           _UserInit
  3298                           ;! ---------------------------------------------------------------------------------
  3299                           ;! (1) _USBTasks                                             0     0      0     801
  3300                           ;!                  _USBCheckBusStatus
  3301                           ;!                   _USBDriverService
  3302                           ;! ---------------------------------------------------------------------------------
  3303                           ;! (1) _BlinkUSBStatus                                       1     1      0       0
  3304                           ;!                                              0 BANK0      1     1      0
  3305                           ;! ---------------------------------------------------------------------------------
  3306                           ;! (1) _ProcessIO                                            5     5      0    1609
  3307                           ;!                                             11 BANK0      5     5      0
  3308                           ;!                        _HIDRxReport
  3309                           ;!                        _HIDTxReport
  3310                           ;!                      _ClearWatchdog
  3311                           ;!                  _UnlockAndActivate
  3312                           ;!                   _USBDriverService
  3313                           ;!                    _WriteConfigBits
  3314                           ;!                        _WriteEEPROM
  3315                           ;!                    _WriteFlashBlock
  3316                           ;!             _TableReadPostIncrement
  3317                           ;!                 _ResetDeviceCleanly
  3318                           ;! ---------------------------------------------------------------------------------
  3319                           ;! (2) _HIDTxReport                                          5     2      3     226
  3320                           ;!                                              0 BANK0      5     2      3
  3321                           ;! ---------------------------------------------------------------------------------
  3322                           ;! (2) _HIDRxReport                                          4     1      3      96
  3323                           ;!                                              0 BANK0      4     1      3
  3324                           ;! ---------------------------------------------------------------------------------
  3325                           ;! (2) _UserInit                                             1     1      0       0
  3326                           ;!                                              0 BANK0      1     1      0
  3327                           ;! ---------------------------------------------------------------------------------
  3328                           ;! (2) _USBCheckBusStatus                                    1     1      0       0
  3329                           ;!                                              1 BANK0      1     1      0
  3330                           ;!                    _USBModuleEnable
  3331                           ;! ---------------------------------------------------------------------------------
  3332                           ;! (2) _USBDriverService                                     1     1      0     801
  3333                           ;!                                             10 BANK0      1     1      0
  3334                           ;!                 _USBWakeFromSuspend
  3335                           ;!            _USBProtocolResetHandler
  3336                           ;!                         _USBSuspend
  3337                           ;!                    _USBStallHandler
  3338                           ;!                   _USBCtrlEPService
  3339                           ;! ---------------------------------------------------------------------------------
  3340                           ;! (3) _USBCtrlEPService                                     3     3      0     736
  3341                           ;!                                              7 BANK0      3     3      0
  3342                           ;!             _USBCtrlTrfSetupHandler
  3343                           ;!               _USBCtrlTrfOutHandler
  3344                           ;!                _USBCtrlTrfInHandler
  3345                           ;! ---------------------------------------------------------------------------------
  3346                           ;! (4) _USBCtrlTrfSetupHandler                               2     2      0     334
  3347                           ;!                                              5 BANK0      2     2      0
  3348                           ;!                 _USBCheckStdRequest
  3349                           ;!                 _USBCheckHIDRequest
  3350                           ;!           _USBCtrlEPServiceComplete
  3351                           ;! ---------------------------------------------------------------------------------
  3352                           ;! (5) _USBCheckHIDRequest                                   1     1      0       0
  3353                           ;!                                              0 BANK0      1     1      0
  3354                           ;!                _HIDGetReportHandler
  3355                           ;!                _HIDSetReportHandler
  3356                           ;! ---------------------------------------------------------------------------------
  3357                           ;! (6) _HIDGetReportHandler                                  0     0      0       0
  3358                           ;! ---------------------------------------------------------------------------------
  3359                           ;! (6) _HIDSetReportHandler                                  0     0      0       0
  3360                           ;! ---------------------------------------------------------------------------------
  3361                           ;! (5) _USBCheckStdRequest                                   1     1      0      65
  3362                           ;!                                              4 BANK0      1     1      0
  3363                           ;!                _USBStdGetDscHandler
  3364                           ;!                _USBStdSetCfgHandler
  3365                           ;!             _USBStdGetStatusHandler
  3366                           ;!            _USBStdFeatureReqHandler
  3367                           ;! ---------------------------------------------------------------------------------
  3368                           ;! (6) _USBStdGetDscHandler                                  2     2      0       0
  3369                           ;!                                              0 BANK0      2     2      0
  3370                           ;! ---------------------------------------------------------------------------------
  3371                           ;! (6) _USBStdSetCfgHandler                                  1     1      0      65
  3372                           ;!                                              3 BANK0      1     1      0
  3373                           ;!                         _ClearArray
  3374                           ;!                          _HIDInitEP
  3375                           ;! ---------------------------------------------------------------------------------
  3376                           ;! (7) _HIDInitEP                                            1     1      0       0
  3377                           ;!                                              0 BANK0      1     1      0
  3378                           ;! ---------------------------------------------------------------------------------
  3379                           ;! (6) _USBStdGetStatusHandler                               4     4      0       0
  3380                           ;!                                              0 BANK0      4     4      0
  3381                           ;! ---------------------------------------------------------------------------------
  3382                           ;! (6) _USBStdFeatureReqHandler                              4     4      0       0
  3383                           ;!                                              0 BANK0      4     4      0
  3384                           ;! ---------------------------------------------------------------------------------
  3385                           ;! (4) _USBCtrlTrfOutHandler                                 0     0      0     102
  3386                           ;!                _USBCtrlTrfRxService
  3387                           ;!          _USBPrepareForNextSetupTrf
  3388                           ;! ---------------------------------------------------------------------------------
  3389                           ;! (4) _USBCtrlTrfInHandler                                  1     1      0     170
  3390                           ;!                                              4 BANK0      1     1      0
  3391                           ;!                _USBCtrlTrfTxService
  3392                           ;!          _USBPrepareForNextSetupTrf
  3393                           ;! ---------------------------------------------------------------------------------
  3394                           ;! (5) _USBCtrlEPServiceComplete                             1     1      0     170
  3395                           ;!                                              4 BANK0      1     1      0
  3396                           ;!                _USBCtrlTrfTxService
  3397                           ;! ---------------------------------------------------------------------------------
  3398                           ;! (5) _USBCtrlTrfRxService                                  2     2      0     102
  3399                           ;!                                              0 BANK0      2     2      0
  3400                           ;! ---------------------------------------------------------------------------------
  3401                           ;! (5) _USBCtrlTrfTxService                                  4     4      0     170
  3402                           ;!                                              0 BANK0      4     4      0
  3403                           ;! ---------------------------------------------------------------------------------
  3404                           ;! (3) _USBModuleEnable                                      1     1      0       0
  3405                           ;!                                              0 BANK0      1     1      0
  3406                           ;! ---------------------------------------------------------------------------------
  3407                           ;! (3) _USBWakeFromSuspend                                   0     0      0       0
  3408                           ;! ---------------------------------------------------------------------------------
  3409                           ;! (3) _USBProtocolResetHandler                              1     1      0      65
  3410                           ;!                                              3 BANK0      1     1      0
  3411                           ;!                         _ClearArray
  3412                           ;!          _USBPrepareForNextSetupTrf
  3413                           ;! ---------------------------------------------------------------------------------
  3414                           ;! (7) _ClearArray                                           3     0      3      65
  3415                           ;!                                              0 BANK0      3     0      3
  3416                           ;! ---------------------------------------------------------------------------------
  3417                           ;! (5) _USBPrepareForNextSetupTrf                            1     1      0       0
  3418                           ;!                                              0 BANK0      1     1      0
  3419                           ;! ---------------------------------------------------------------------------------
  3420                           ;! (3) _USBSuspend                                           0     0      0       0
  3421                           ;! ---------------------------------------------------------------------------------
  3422                           ;! (3) _USBStallHandler                                      0     0      0       0
  3423                           ;! ---------------------------------------------------------------------------------
  3424                           ;! (2) _ClearWatchdog                                        0     0      0       0
  3425                           ;! ---------------------------------------------------------------------------------
  3426                           ;! (2) _WriteConfigBits                                      4     4      0      31
  3427                           ;!                                              1 BANK0      4     4      0
  3428                           ;!                  _UnlockAndActivate
  3429                           ;! ---------------------------------------------------------------------------------
  3430                           ;! (2) _WriteEEPROM                                          4     4      0      31
  3431                           ;!                                              1 BANK0      4     4      0
  3432                           ;!                  _UnlockAndActivate
  3433                           ;! ---------------------------------------------------------------------------------
  3434                           ;! (2) _WriteFlashBlock                                      3     3      0      31
  3435                           ;!                                              1 BANK0      3     3      0
  3436                           ;!                  _UnlockAndActivate
  3437                           ;! ---------------------------------------------------------------------------------
  3438                           ;! (3) _UnlockAndActivate                                    1     0      1      31
  3439                           ;!                                              0 BANK0      1     0      1
  3440                           ;! ---------------------------------------------------------------------------------
  3441                           ;! (2) _TableReadPostIncrement                               0     0      0       0
  3442                           ;! ---------------------------------------------------------------------------------
  3443                           ;! (2) _ResetDeviceCleanly                                   1     1      0       0
  3444                           ;!                                              0 BANK0      1     1      0
  3445                           ;! ---------------------------------------------------------------------------------
  3446                           ;! Estimated maximum stack depth 7
  3447                           ;! ---------------------------------------------------------------------------------
  3448                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3449                           ;! ---------------------------------------------------------------------------------
  3450                           ;! (8) _interrupt_at_low_vector                             17    17      0       0
  3451                           ;!                                              0 COMRAM    17    17      0
  3452                           ;! ---------------------------------------------------------------------------------
  3453                           ;! (9) _interrupt_at_high_vector                            14    14      0       0
  3454                           ;!                                             17 COMRAM    14    14      0
  3455                           ;! ---------------------------------------------------------------------------------
  3456                           ;! Estimated maximum stack depth 9
  3457                           ;! ---------------------------------------------------------------------------------
  3458                           ;!
  3459                           ;! Call Graph Graphs:
  3460                           ;!
  3461                           ;! _main (ROOT)
  3462                           ;!   _InitializeSystem
  3463                           ;!     _UserInit
  3464                           ;!   _USBTasks
  3465                           ;!     _USBCheckBusStatus
  3466                           ;!       _USBModuleEnable
  3467                           ;!     _USBDriverService
  3468                           ;!       _USBWakeFromSuspend
  3469                           ;!       _USBProtocolResetHandler
  3470                           ;!         _ClearArray
  3471                           ;!         _USBPrepareForNextSetupTrf
  3472                           ;!       _USBSuspend
  3473                           ;!       _USBStallHandler
  3474                           ;!       _USBCtrlEPService
  3475                           ;!         _USBCtrlTrfSetupHandler
  3476                           ;!           _USBCheckStdRequest
  3477                           ;!             _USBStdGetDscHandler
  3478                           ;!             _USBStdSetCfgHandler
  3479                           ;!               _ClearArray
  3480                           ;!               _HIDInitEP
  3481                           ;!             _USBStdGetStatusHandler
  3482                           ;!             _USBStdFeatureReqHandler
  3483                           ;!           _USBCheckHIDRequest
  3484                           ;!             _HIDGetReportHandler
  3485                           ;!             _HIDSetReportHandler
  3486                           ;!           _USBCtrlEPServiceComplete
  3487                           ;!             _USBCtrlTrfTxService
  3488                           ;!         _USBCtrlTrfOutHandler
  3489                           ;!           _USBCtrlTrfRxService
  3490                           ;!           _USBPrepareForNextSetupTrf
  3491                           ;!         _USBCtrlTrfInHandler
  3492                           ;!           _USBCtrlTrfTxService
  3493                           ;!           _USBPrepareForNextSetupTrf
  3494                           ;!   _BlinkUSBStatus
  3495                           ;!   _ProcessIO
  3496                           ;!     _HIDRxReport
  3497                           ;!     _HIDTxReport
  3498                           ;!     _ClearWatchdog
  3499                           ;!     _UnlockAndActivate
  3500                           ;!     _USBDriverService
  3501                           ;!       _USBWakeFromSuspend
  3502                           ;!       _USBProtocolResetHandler
  3503                           ;!         _ClearArray
  3504                           ;!         _USBPrepareForNextSetupTrf
  3505                           ;!       _USBSuspend
  3506                           ;!       _USBStallHandler
  3507                           ;!       _USBCtrlEPService
  3508                           ;!         _USBCtrlTrfSetupHandler
  3509                           ;!           _USBCheckStdRequest
  3510                           ;!             _USBStdGetDscHandler
  3511                           ;!             _USBStdSetCfgHandler
  3512                           ;!               _ClearArray
  3513                           ;!               _HIDInitEP
  3514                           ;!             _USBStdGetStatusHandler
  3515                           ;!             _USBStdFeatureReqHandler
  3516                           ;!           _USBCheckHIDRequest
  3517                           ;!             _HIDGetReportHandler
  3518                           ;!             _HIDSetReportHandler
  3519                           ;!           _USBCtrlEPServiceComplete
  3520                           ;!             _USBCtrlTrfTxService
  3521                           ;!         _USBCtrlTrfOutHandler
  3522                           ;!           _USBCtrlTrfRxService
  3523                           ;!           _USBPrepareForNextSetupTrf
  3524                           ;!         _USBCtrlTrfInHandler
  3525                           ;!           _USBCtrlTrfTxService
  3526                           ;!           _USBPrepareForNextSetupTrf
  3527                           ;!     _WriteConfigBits
  3528                           ;!       _UnlockAndActivate
  3529                           ;!     _WriteEEPROM
  3530                           ;!       _UnlockAndActivate
  3531                           ;!     _WriteFlashBlock
  3532                           ;!       _UnlockAndActivate
  3533                           ;!     _TableReadPostIncrement
  3534                           ;!     _ResetDeviceCleanly
  3535                           ;!
  3536                           ;! _interrupt_at_low_vector (ROOT)
  3537                           ;!
  3538                           
  3539                           ;! Address spaces:
  3540                           
  3541                           ;!Name               Size   Autos  Total    Cost      Usage
  3542                           ;!BIGRAMlll          3FF      0       0      25        0.0%
  3543                           ;!EEDATA             100      0       0       0        0.0%
  3544                           ;!BITBANK3           100      0       0      10        0.0%
  3545                           ;!BANK3              100      0       0      11        0.0%
  3546                           ;!BITBANK2           100      0       0       8        0.0%
  3547                           ;!BANK2              100      0       0       9        0.0%
  3548                           ;!BITBANK1           100      0       0       6        0.0%
  3549                           ;!BANK1              100      0      40       7       25.0%
  3550                           ;!BIGRAMhlh           F8      0       0      22        0.0%
  3551                           ;!BIGRAMhll           F8      0       0      23        0.0%
  3552                           ;!BITBANK6            F8      0       0      17        0.0%
  3553                           ;!BANK6               F8      0       0      18        0.0%
  3554                           ;!BITBANK5            F8      0       0      15        0.0%
  3555                           ;!BANK5               F8      0       0      16        0.0%
  3556                           ;!BIGRAMlh            EF      0       0      24        0.0%
  3557                           ;!BANK4h              EF      0       0      14        0.0%
  3558                           ;!BITBANK4h           EF      0       0      13        0.0%
  3559                           ;!BITBANK0            A0      0       0       4        0.0%
  3560                           ;!BANK0               A0     11      91       5       90.6%
  3561                           ;!BIGRAMhh            80      0       0      21        0.0%
  3562                           ;!BITBANK7            80      0       0      19        0.0%
  3563                           ;!BANK7               80      0       0      20        0.0%
  3564                           ;!BITCOMRAM           5F      0       0       0        0.0%
  3565                           ;!COMRAM              5F     1F      45       1       72.6%
  3566                           ;!BITSFR_1             0      0       0      40        0.0%
  3567                           ;!SFR_1                0      0       0      40        0.0%
  3568                           ;!BITSFR               0      0       0      40        0.0%
  3569                           ;!SFR                  0      0       0      40        0.0%
  3570                           ;!STACK                0      0       7       2        0.0%
  3571                           ;!NULL                 0      0       0       0        0.0%
  3572                           ;!ABS                  0      0     116      12        0.0%
  3573                           ;!DATA                 0      0     11D       3        0.0%
  3574                           ;!CODE                 0      0       0       0        0.0%
  3575                           
  3576                           	global	_main
  3577                           
  3578 ;; *************** function _main *****************
  3579 ;; Defined at:
  3580 ;;		line 173 in file "../main.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  ANSELBSave      1   16[BANK0 ] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0
  3595 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3597 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels required when called:    9
  3600 ;; This function calls:
  3601 ;;		_InitializeSystem
  3602 ;;		_USBTasks
  3603 ;;		_BlinkUSBStatus
  3604 ;;		_ProcessIO
  3605 ;; This function is called by:
  3606 ;;		Startup code after reset
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           psect	text0,class=CODE,space=0,reloc=2
  3610                           global __ptext0
  3611  0022A6                     __ptext0:
  3612                           psect	text0
  3613                           	file	"../main.c"
  3614                           	line	173
  3615                           	global	__size_of_main
  3616  0000                     	__size_of_main	equ	__end_of_main-_main
  3617                           	
  3618  0022A6                     _main:
  3619                           	opt	stack 22
  3620                           	line	177
  3621                           	
  3622  0022A6                     l3194:
  3623                           ;main.c: 176: unsigned char ANSELBSave;
  3624                           ;main.c: 177: ANSELBSave = ANSELB;
  3625  0022A6  CF5C F0F0          	movff	(3932),(main@ANSELBSave)	;volatile
  3626                           	line	178
  3627                           ;main.c: 178: ANSELBbits.ANSB4 = 0;
  3628  0022AA  010F               	movlb	15	; () banked
  3629  0022AC  010F               	movlb	15	; () banked
  3630  0022AE  995C               	bcf	((3932))&0ffh,4	;volatile
  3631                           	line	187
  3632                           ;main.c: 187: if ( PORTBbits.RB4 == 1 )
  3633                           	
  3634  0022B0  A881               	btfss	((c:3969)),c,4	;volatile
  3635  0022B2  D001               	goto	u2521
  3636  0022B4  D001               	goto	u2520
  3637  0022B6                     u2521:
  3638  0022B6  D003               	goto	l3198
  3639  0022B8                     u2520:
  3640                           	line	189
  3641                           	
  3642  0022B8                     l3196:; BSR set to: 15
  3643                           
  3644                           # 189 "../main.c"
  3645  0022B8  EF00 F020          goto 0x4000 ;# 
  3646                           psect	text0
  3647  0022BC  D000               	goto	l3198
  3648                           	line	191
  3649                           	
  3650  0022BE                     l132:
  3651                           	line	195
  3652                           	
  3653  0022BE                     l3198:
  3654                           ;main.c: 191: }
  3655                           ;main.c: 195: InitializeSystem();
  3656  0022BE  ECDC  F010         	call	_InitializeSystem	;wreg free
  3657                           	line	198
  3658                           ;main.c: 198: while ( 1 )
  3659                           	
  3660  0022C2                     l133:
  3661                           	line	200
  3662                           # 200 "../main.c"
  3663  0022C2  0004               clrwdt ;# 
  3664                           psect	text0
  3665                           	line	201
  3666                           ;main.c: 201: USBTasks();
  3667  0022C4  EC1A  F012         	call	_USBTasks	;wreg free
  3668                           	line	204
  3669                           	
  3670  0022C8                     l3200:
  3671                           ;main.c: 204: BlinkUSBStatus();
  3672  0022C8  ECB0  F010         	call	_BlinkUSBStatus	;wreg free
  3673                           	line	206
  3674                           	
  3675  0022CC                     l3202:
  3676                           ;main.c: 206: if ( (usb_device_state == 6) && (UCONbits.SUSPND != 1) )
  3677  0022CC  501F               	movf	((c:_usb_device_state)),c,w
  3678  0022CE  0A06               	xorlw	6
  3679                           
  3680  0022D0  A4D8               	btfss	status,2
  3681  0022D2  D001               	goto	u2531
  3682  0022D4  D001               	goto	u2530
  3683  0022D6                     u2531:
  3684  0022D6  D7F5               	goto	l133
  3685  0022D8                     u2530:
  3686                           	
  3687  0022D8                     l3204:
  3688                           	
  3689  0022D8  B260               	btfsc	((c:3936)),c,1	;volatile
  3690  0022DA  D001               	goto	u2541
  3691  0022DC  D001               	goto	u2540
  3692  0022DE                     u2541:
  3693  0022DE  D7F1               	goto	l133
  3694  0022E0                     u2540:
  3695                           	line	208
  3696                           	
  3697  0022E0                     l3206:
  3698                           ;main.c: 207: {
  3699                           ;main.c: 208: ProcessIO();
  3700  0022E0  EC62  F004         	call	_ProcessIO	;wreg free
  3701  0022E4  D7EE               	goto	l133
  3702                           	line	209
  3703                           	
  3704  0022E6                     l134:
  3705  0022E6  D7ED               	goto	l133
  3706                           	line	210
  3707                           	
  3708  0022E8                     l135:
  3709                           	line	198
  3710  0022E8  D7EC               	goto	l133
  3711                           	
  3712  0022EA                     l136:
  3713                           	line	212
  3714                           	
  3715  0022EA                     l137:
  3716                           	global	start
  3717  0022EA  EF53  F000         	goto	start
  3718                           	opt stack 0
  3719                           GLOBAL	__end_of_main
  3720  0022EE                     	__end_of_main:
  3721                           	signat	_main,88
  3722                           	global	_InitializeSystem
  3723                           
  3724 ;; *************** function _InitializeSystem *****************
  3725 ;; Defined at:
  3726 ;;		line 235 in file "../main.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3742 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3743 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3744 ;;Total ram usage:        1 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    3
  3747 ;; This function calls:
  3748 ;;		_UserInit
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           psect	text1,class=CODE,space=0,reloc=2
  3754                           global __ptext1
  3755  0021B8                     __ptext1:
  3756                           psect	text1
  3757                           	file	"../main.c"
  3758                           	line	235
  3759                           	global	__size_of_InitializeSystem
  3760  0000                     	__size_of_InitializeSystem	equ	__end_of_InitializeSystem-_InitializeSystem
  3761                           	
  3762  0021B8                     _InitializeSystem:
  3763                           	opt	stack 27
  3764                           	line	239
  3765                           	
  3766  0021B8                     l3208:
  3767                           ;main.c: 239: OSCTUNE = 0x80;
  3768  0021B8  0E80               	movlw	low(080h)
  3769  0021BA  6E9B               	movwf	((c:3995)),c	;volatile
  3770                           	line	240
  3771                           ;main.c: 240: OSCCON = 0x70;
  3772  0021BC  0E70               	movlw	low(070h)
  3773  0021BE  6ED3               	movwf	((c:4051)),c	;volatile
  3774                           	line	241
  3775                           ;main.c: 241: OSCCON2 = 0x10;
  3776  0021C0  0E10               	movlw	low(010h)
  3777  0021C2  6ED2               	movwf	((c:4050)),c	;volatile
  3778                           	line	242
  3779                           ;main.c: 242: while ( OSCCON2bits.PLLRDY != 1 );
  3780  0021C4  D000               	goto	l140
  3781                           	
  3782  0021C6                     l141:
  3783                           	
  3784  0021C6                     l140:
  3785                           	
  3786  0021C6  AED2               	btfss	((c:4050)),c,7	;volatile
  3787  0021C8  D001               	goto	u2551
  3788  0021CA  D001               	goto	u2550
  3789  0021CC                     u2551:
  3790  0021CC  D7FC               	goto	l140
  3791  0021CE                     u2550:
  3792  0021CE  D000               	goto	l3210
  3793                           	
  3794  0021D0                     l142:
  3795                           	line	243
  3796                           	
  3797  0021D0                     l3210:
  3798                           ;main.c: 243: *((unsigned char*) 0xFB5) = 0x90;
  3799  0021D0  0100               	movlb	0	; () banked
  3800  0021D2  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3801  0021D4  0E90               	movlw	low(090h)
  3802  0021D6  6EB5               	movwf	((c:4021)),c
  3803  0021D8  0100               	movlb	0	; () banked
  3804  0021DA  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3805                           	line	246
  3806                           	
  3807  0021DC                     l3212:; BSR set to: 0
  3808                           
  3809                           ;main.c: 246: {UCFG = 0x10|0x00|0x04|0x00; usb_device_state = 0; usb_stat._byte = 0x00; 
                                 usb_active_cfg = 0x00;};
  3810  0021DC  0E14               	movlw	low(014h)
  3811  0021DE  6E62               	movwf	((c:3938)),c	;volatile
  3812                           	
  3813  0021E0                     l3214:; BSR set to: 0
  3814                           
  3815  0021E0  0100               	movlb	0	; () banked
  3816  0021E2  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3817  0021E4  0E00               	movlw	low(0)
  3818  0021E6  6E1F               	movwf	((c:_usb_device_state)),c
  3819  0021E8  0100               	movlb	0	; () banked
  3820  0021EA  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3821                           	
  3822  0021EC                     l3216:; BSR set to: 0
  3823                           
  3824  0021EC  0100               	movlb	0	; () banked
  3825  0021EE  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3826  0021F0  0E00               	movlw	low(0)
  3827  0021F2  6E20               	movwf	((c:_usb_stat)),c
  3828  0021F4  0100               	movlb	0	; () banked
  3829  0021F6  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3830                           	
  3831  0021F8                     l3218:; BSR set to: 0
  3832                           
  3833  0021F8  0100               	movlb	0	; () banked
  3834  0021FA  6FE1               	movwf	(??_InitializeSystem+0+0)&0ffh
  3835  0021FC  0E00               	movlw	low(0)
  3836  0021FE  6E25               	movwf	((c:_usb_active_cfg)),c
  3837  002200  0100               	movlb	0	; () banked
  3838  002202  51E1               	movf	(??_InitializeSystem+0+0)&0ffh,w
  3839                           	line	248
  3840                           	
  3841  002204                     l3220:; BSR set to: 0
  3842                           
  3843                           ;main.c: 248: UserInit();
  3844  002204  EC94  F011         	call	_UserInit	;wreg free
  3845                           	line	250
  3846                           	
  3847  002208                     l143:
  3848  002208  0012               	return
  3849                           	opt stack 0
  3850                           GLOBAL	__end_of_InitializeSystem
  3851  00220A                     	__end_of_InitializeSystem:
  3852                           	signat	_InitializeSystem,88
  3853                           	global	_USBTasks
  3854                           
  3855 ;; *************** function _USBTasks *****************
  3856 ;; Defined at:
  3857 ;;		line 268 in file "../main.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;		None               void
  3864 ;; Registers used:
  3865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    8
  3878 ;; This function calls:
  3879 ;;		_USBCheckBusStatus
  3880 ;;		_USBDriverService
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           psect	text2,class=CODE,space=0,reloc=2
  3886                           global __ptext2
  3887  002434                     __ptext2:
  3888                           psect	text2
  3889                           	file	"../main.c"
  3890                           	line	268
  3891                           	global	__size_of_USBTasks
  3892  0000                     	__size_of_USBTasks	equ	__end_of_USBTasks-_USBTasks
  3893                           	
  3894  002434                     _USBTasks:
  3895                           	opt	stack 22
  3896                           	line	272
  3897                           	
  3898  002434                     l3222:
  3899                           ;main.c: 272: USBCheckBusStatus();
  3900  002434  EC80  F010         	call	_USBCheckBusStatus	;wreg free
  3901                           	line	273
  3902                           ;main.c: 273: USBDriverService();
  3903  002438  EC0F  F00E         	call	_USBDriverService	;wreg free
  3904                           	line	275
  3905                           	
  3906  00243C                     l146:
  3907  00243C  0012               	return
  3908                           	opt stack 0
  3909                           GLOBAL	__end_of_USBTasks
  3910  00243E                     	__end_of_USBTasks:
  3911                           	signat	_USBTasks,88
  3912                           	global	_BlinkUSBStatus
  3913                           
  3914 ;; *************** function _BlinkUSBStatus *****************
  3915 ;; Defined at:
  3916 ;;		line 296 in file "../main.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;		None               void
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  3930 ;;      Params:         0       0       0       0       0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3932 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3933 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3934 ;;Total ram usage:        1 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    2
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           psect	text3,class=CODE,space=0,reloc=2
  3944                           global __ptext3
  3945  002160                     __ptext3:
  3946                           psect	text3
  3947                           	file	"../main.c"
  3948                           	line	296
  3949                           	global	__size_of_BlinkUSBStatus
  3950  0000                     	__size_of_BlinkUSBStatus	equ	__end_of_BlinkUSBStatus-_BlinkUSBStatus
  3951                           	
  3952  002160                     _BlinkUSBStatus:
  3953                           	opt	stack 28
  3954                           	line	299
  3955                           	
  3956  002160                     l3224:
  3957                           ;main.c: 297: static word led_count = 0;
  3958                           ;main.c: 299: if ( led_count == 0 )led_count = 10000U;
  3959  002160  500E               	movf	((c:BlinkUSBStatus@led_count+1)),c,w
  3960  002162  100D               	iorwf ((c:BlinkUSBStatus@led_count)),c,w
  3961                           
  3962  002164  A4D8               	btfss	status,2
  3963  002166  D001               	goto	u2561
  3964  002168  D001               	goto	u2560
  3965  00216A                     u2561:
  3966  00216A  D005               	goto	l3228
  3967  00216C                     u2560:
  3968                           	
  3969  00216C                     l3226:
  3970  00216C  0E27               	movlw	high(02710h)
  3971  00216E  6E0E               	movwf	((c:BlinkUSBStatus@led_count+1)),c
  3972  002170  0E10               	movlw	low(02710h)
  3973  002172  6E0D               	movwf	((c:BlinkUSBStatus@led_count)),c
  3974  002174  D000               	goto	l3228
  3975                           	
  3976  002176                     l151:
  3977                           	line	300
  3978                           	
  3979  002176                     l3228:
  3980                           ;main.c: 300: led_count--;
  3981  002176  060D               	decf	((c:BlinkUSBStatus@led_count)),c
  3982  002178  A0D8               	btfss	status,0
  3983  00217A  060E               	decf	((c:BlinkUSBStatus@led_count+1)),c
  3984                           	line	302
  3985                           	
  3986  00217C                     l3230:
  3987                           ;main.c: 302: if ( usb_device_state < 6 )
  3988  00217C  0E06               	movlw	(06h)&0ffh
  3989  00217E  601F               	cpfslt	((c:_usb_device_state)),c
  3990  002180  D001               	goto	u2571
  3991  002182  D001               	goto	u2570
  3992  002184                     u2571:
  3993  002184  D002               	goto	l3234
  3994  002186                     u2570:
  3995                           	line	304
  3996                           	
  3997  002186                     l3232:
  3998                           ;main.c: 303: {
  3999                           ;main.c: 304: LATCbits.LATC0 = 1;;
  4000  002186  808B               	bsf	((c:3979)),c,0	;volatile
  4001                           	line	305
  4002                           ;main.c: 305: }
  4003  002188  D016               	goto	l155
  4004                           	line	306
  4005                           	
  4006  00218A                     l152:
  4007                           	line	308
  4008                           	
  4009  00218A                     l3234:
  4010                           ;main.c: 306: else
  4011                           ;main.c: 307: {
  4012                           ;main.c: 308: if ( led_count == 0 )
  4013  00218A  500E               	movf	((c:BlinkUSBStatus@led_count+1)),c,w
  4014  00218C  100D               	iorwf ((c:BlinkUSBStatus@led_count)),c,w
  4015                           
  4016  00218E  A4D8               	btfss	status,2
  4017  002190  D001               	goto	u2581
  4018  002192  D001               	goto	u2580
  4019  002194                     u2581:
  4020  002194  D010               	goto	l155
  4021  002196                     u2580:
  4022                           	line	310
  4023                           	
  4024  002196                     l3236:
  4025                           ;main.c: 309: {
  4026                           ;main.c: 310: LATCbits.LATC0 = !LATCbits.LATC0;;
  4027                           	
  4028  002196  A08B               	btfss	((c:3979)),c,0	;volatile
  4029  002198  D001               	goto	u2591
  4030  00219A  D002               	goto	u2590
  4031  00219C                     u2591:
  4032  00219C  0E01               	movlw	1
  4033  00219E  D001               	goto	u2596
  4034  0021A0                     u2590:
  4035  0021A0  0E00               	movlw	0
  4036  0021A2                     u2596:
  4037  0021A2  0100               	movlb	0	; () banked
  4038  0021A4  6FE0               	movwf	(??_BlinkUSBStatus+0+0)&0ffh
  4039  0021A6  508B               	movf	((c:3979)),c,w	;volatile
  4040  0021A8  0100               	movlb	0	; () banked
  4041  0021AA  19E0               	xorwf	((??_BlinkUSBStatus+0+0))&0ffh,w
  4042  0021AC  0BFE               	andlw	not ((1<<1)-1)
  4043  0021AE  19E0               	xorwf	((??_BlinkUSBStatus+0+0))&0ffh,w
  4044  0021B0  6E8B               	movwf	((c:3979)),c	;volatile
  4045  0021B2  D001               	goto	l155
  4046                           	line	311
  4047                           	
  4048  0021B4                     l154:; BSR set to: 0
  4049                           
  4050  0021B4  D000               	goto	l155
  4051                           	line	312
  4052                           	
  4053  0021B6                     l153:; BSR set to: 0
  4054                           
  4055                           	line	313
  4056                           	
  4057  0021B6                     l155:
  4058  0021B6  0012               	return
  4059                           	opt stack 0
  4060                           GLOBAL	__end_of_BlinkUSBStatus
  4061  0021B8                     	__end_of_BlinkUSBStatus:
  4062                           	signat	_BlinkUSBStatus,88
  4063                           	global	_ProcessIO
  4064                           
  4065 ;; *************** function _ProcessIO *****************
  4066 ;; Defined at:
  4067 ;;		line 285 in file "../BootPIC18NonJ.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  i               1   15[BANK0 ] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;		None               void
  4074 ;; Registers used:
  4075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0
  4082 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4083 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4084 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4085 ;;Total ram usage:        5 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    8
  4088 ;; This function calls:
  4089 ;;		_HIDRxReport
  4090 ;;		_HIDTxReport
  4091 ;;		_ClearWatchdog
  4092 ;;		_UnlockAndActivate
  4093 ;;		_USBDriverService
  4094 ;;		_WriteConfigBits
  4095 ;;		_WriteEEPROM
  4096 ;;		_WriteFlashBlock
  4097 ;;		_TableReadPostIncrement
  4098 ;;		_ResetDeviceCleanly
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           psect	text4,class=CODE,space=0,reloc=2
  4104                           global __ptext4
  4105  0008C4                     __ptext4:
  4106                           psect	text4
  4107                           	file	"../BootPIC18NonJ.c"
  4108                           	line	285
  4109                           	global	__size_of_ProcessIO
  4110  0000                     	__size_of_ProcessIO	equ	__end_of_ProcessIO-_ProcessIO
  4111                           	
  4112  0008C4                     _ProcessIO:
  4113                           	opt	stack 22
  4114                           	line	288
  4115                           	
  4116  0008C4                     l3238:
  4117                           ;BootPIC18NonJ.c: 286: unsigned char i;
  4118                           ;BootPIC18NonJ.c: 288: if(BootState == 0x00)
  4119  0008C4  6617               	tstfsz	((c:_BootState)),c
  4120  0008C6  D001               	goto	u2601
  4121  0008C8  D001               	goto	u2600
  4122  0008CA                     u2601:
  4123  0008CA  D336               	goto	l3418
  4124  0008CC                     u2600:
  4125                           	line	290
  4126                           	
  4127  0008CC                     l3240:
  4128                           ;BootPIC18NonJ.c: 289: {
  4129                           ;BootPIC18NonJ.c: 290: if(!ep1Bo.Stat.UOWN)
  4130  0008CC  0104               	movlb	4	; () banked
  4131                           	
  4132  0008CE  0104               	movlb	4	; () banked
  4133  0008D0  BF08               	btfsc	((1032))&0ffh,7	;volatile
  4134  0008D2  D001               	goto	u2611
  4135  0008D4  D001               	goto	u2610
  4136  0008D6                     u2611:
  4137  0008D6  D34A               	goto	l645
  4138  0008D8                     u2610:
  4139                           	line	292
  4140                           	
  4141  0008D8                     l3242:; BSR set to: 4
  4142                           
  4143                           ;BootPIC18NonJ.c: 291: {
  4144                           ;BootPIC18NonJ.c: 292: HIDRxReport((char *)&PacketFromPC, 64);
  4145  0008D8  0100               	movlb	0	; () banked
  4146  0008DA  0E00               	movlw	high(_PacketFromPC)
  4147  0008DC  0100               	movlb	0	; () banked
  4148  0008DE  0100               	movlb	0	; () banked
  4149  0008E0  6FE1               	movwf	((?_HIDRxReport+1))&0ffh
  4150  0008E2  0100               	movlb	0	; () banked
  4151  0008E4  0E60               	movlw	low(_PacketFromPC)
  4152  0008E6  0100               	movlb	0	; () banked
  4153  0008E8  6FE0               	movwf	((?_HIDRxReport))&0ffh
  4154  0008EA  0100               	movlb	0	; () banked
  4155  0008EC  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4156  0008EE  0E40               	movlw	low(040h)
  4157  0008F0  0100               	movlb	0	; () banked
  4158  0008F2  0100               	movlb	0	; () banked
  4159  0008F4  6FE2               	movwf	(0+(?_HIDRxReport+02h))&0ffh
  4160  0008F6  0100               	movlb	0	; () banked
  4161  0008F8  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4162  0008FA  0100               	movlb	0	; () banked
  4163  0008FC  ECE2  F00C         	call	_HIDRxReport	;wreg free
  4164                           	line	293
  4165                           	
  4166  000900                     l3244:
  4167                           ;BootPIC18NonJ.c: 293: BootState = 0x01;
  4168  000900  0100               	movlb	0	; () banked
  4169  000902  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4170  000904  0E01               	movlw	low(01h)
  4171  000906  6E17               	movwf	((c:_BootState)),c
  4172  000908  0100               	movlb	0	; () banked
  4173  00090A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4174                           	line	295
  4175                           	
  4176  00090C                     l3246:; BSR set to: 0
  4177                           
  4178                           ;BootPIC18NonJ.c: 295: for(i = 0; i < 0x40; i++)
  4179  00090C  0100               	movlb	0	; () banked
  4180  00090E  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4181  000910  0E00               	movlw	low(0)
  4182  000912  0100               	movlb	0	; () banked
  4183  000914  0100               	movlb	0	; () banked
  4184  000916  6FEF               	movwf	((ProcessIO@i))&0ffh
  4185  000918  0100               	movlb	0	; () banked
  4186  00091A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4187                           	
  4188  00091C                     l3248:; BSR set to: 0
  4189                           
  4190  00091C  0E3F               	movlw	(040h-1)
  4191  00091E  0100               	movlb	0	; () banked
  4192  000920  0100               	movlb	0	; () banked
  4193  000922  65EF               	cpfsgt	((ProcessIO@i))&0ffh
  4194  000924  D001               	goto	u2621
  4195  000926  D001               	goto	u2620
  4196  000928                     u2621:
  4197  000928  D002               	goto	l3252
  4198  00092A                     u2620:
  4199  00092A  D320               	goto	l645
  4200                           	
  4201  00092C                     l3250:; BSR set to: 0
  4202                           
  4203  00092C  D31F               	goto	l645
  4204                           	line	296
  4205                           	
  4206  00092E                     l609:; BSR set to: 0
  4207                           
  4208                           	
  4209  00092E                     l3252:; BSR set to: 0
  4210                           
  4211                           ;BootPIC18NonJ.c: 296: PacketToPC.Contents[i] = 0;
  4212  00092E  0100               	movlb	0	; () banked
  4213  000930  0100               	movlb	0	; () banked
  4214  000932  51EF               	movf	((ProcessIO@i))&0ffh,w
  4215  000934  0D01               	mullw	01h
  4216  000936  0100               	movlb	0	; () banked
  4217  000938  0EA0               	movlw	low(_PacketToPC)
  4218  00093A  24F3               	addwf	(prodl),c,w
  4219  00093C  6ED9               	movwf	c:fsr2l
  4220  00093E  0100               	movlb	0	; () banked
  4221  000940  0E00               	movlw	high(_PacketToPC)
  4222  000942  20F4               	addwfc	prod+1,w
  4223  000944  6EDA               	movwf	1+c:fsr2l
  4224  000946  0E00               	movlw	low(0)
  4225  000948  6EDF               	movwf	indf2
  4226                           	line	295
  4227                           	
  4228  00094A                     l3254:; BSR set to: 0
  4229                           
  4230  00094A  0100               	movlb	0	; () banked
  4231  00094C  0100               	movlb	0	; () banked
  4232  00094E  2BEF               	incf	((ProcessIO@i))&0ffh
  4233                           	
  4234  000950                     l3256:; BSR set to: 0
  4235                           
  4236  000950  0E3F               	movlw	(040h-1)
  4237  000952  0100               	movlb	0	; () banked
  4238  000954  0100               	movlb	0	; () banked
  4239  000956  65EF               	cpfsgt	((ProcessIO@i))&0ffh
  4240  000958  D001               	goto	u2631
  4241  00095A  D001               	goto	u2630
  4242  00095C                     u2631:
  4243  00095C  D7E8               	goto	l3252
  4244  00095E                     u2630:
  4245  00095E  D306               	goto	l645
  4246                           	
  4247  000960                     l610:; BSR set to: 0
  4248                           
  4249  000960  D305               	goto	l645
  4250                           	line	297
  4251                           	
  4252  000962                     l608:; BSR set to: 0
  4253                           
  4254                           	line	298
  4255                           ;BootPIC18NonJ.c: 297: }
  4256                           ;BootPIC18NonJ.c: 298: }
  4257  000962  D304               	goto	l645
  4258                           	line	299
  4259                           	
  4260  000964                     l607:; BSR set to: 0
  4261                           
  4262                           	line	301
  4263                           ;BootPIC18NonJ.c: 299: else
  4264                           ;BootPIC18NonJ.c: 300: {
  4265                           ;BootPIC18NonJ.c: 301: switch(PacketFromPC.Command)
  4266  000964  D2E9               	goto	l3418
  4267                           	line	303
  4268                           ;BootPIC18NonJ.c: 302: {
  4269                           ;BootPIC18NonJ.c: 303: case 0x02:
  4270                           	
  4271  000966                     l613:; BSR set to: 0
  4272                           
  4273                           	line	306
  4274                           	
  4275  000966                     l3258:; BSR set to: 0
  4276                           
  4277                           ;BootPIC18NonJ.c: 304: {
  4278                           ;BootPIC18NonJ.c: 306: PacketToPC.Command = 0x02;
  4279  000966  0100               	movlb	0	; () banked
  4280  000968  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4281  00096A  0E02               	movlw	low(02h)
  4282  00096C  0100               	movlb	0	; () banked
  4283  00096E  0100               	movlb	0	; () banked
  4284  000970  6FA0               	movwf	((_PacketToPC))&0ffh
  4285  000972  0100               	movlb	0	; () banked
  4286  000974  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4287                           	line	307
  4288                           ;BootPIC18NonJ.c: 307: PacketToPC.PacketDataFieldSize = 0x3A;
  4289  000976  0100               	movlb	0	; () banked
  4290  000978  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4291  00097A  0E3A               	movlw	low(03Ah)
  4292  00097C  0100               	movlb	0	; () banked
  4293  00097E  0100               	movlb	0	; () banked
  4294  000980  6FA1               	movwf	(0+(_PacketToPC+01h))&0ffh
  4295  000982  0100               	movlb	0	; () banked
  4296  000984  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4297                           	line	308
  4298                           ;BootPIC18NonJ.c: 308: PacketToPC.BytesPerAddress = 0x01;
  4299  000986  0100               	movlb	0	; () banked
  4300  000988  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4301  00098A  0E01               	movlw	low(01h)
  4302  00098C  0100               	movlb	0	; () banked
  4303  00098E  0100               	movlb	0	; () banked
  4304  000990  6FA2               	movwf	(0+(_PacketToPC+02h))&0ffh
  4305  000992  0100               	movlb	0	; () banked
  4306  000994  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4307                           	line	309
  4308                           ;BootPIC18NonJ.c: 309: PacketToPC.Type1 = 0x01;
  4309  000996  0100               	movlb	0	; () banked
  4310  000998  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4311  00099A  0E01               	movlw	low(01h)
  4312  00099C  0100               	movlb	0	; () banked
  4313  00099E  0100               	movlb	0	; () banked
  4314  0009A0  6FA3               	movwf	(0+(_PacketToPC+03h))&0ffh
  4315  0009A2  0100               	movlb	0	; () banked
  4316  0009A4  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4317                           	line	310
  4318                           	
  4319  0009A6                     l3260:; BSR set to: 0
  4320                           
  4321                           ;BootPIC18NonJ.c: 310: PacketToPC.Address1 = (unsigned long)0x004000;
  4322  0009A6  0E00               	movlw	low(04000h)
  4323  0009A8  0100               	movlb	0	; () banked
  4324  0009AA  0100               	movlb	0	; () banked
  4325  0009AC  6FA4               	movwf	(0+(_PacketToPC+04h))&0ffh
  4326  0009AE  0E40               	movlw	high(04000h)
  4327  0009B0  0100               	movlb	0	; () banked
  4328  0009B2  6FA5               	movwf	(1+(_PacketToPC+04h))&0ffh
  4329  0009B4  0E00               	movlw	low highword(04000h)
  4330  0009B6  0100               	movlb	0	; () banked
  4331  0009B8  6FA6               	movwf	(2+(_PacketToPC+04h))&0ffh
  4332  0009BA  0E00               	movlw	high highword(04000h)
  4333  0009BC  0100               	movlb	0	; () banked
  4334  0009BE  6FA7               	movwf	(3+(_PacketToPC+04h))&0ffh
  4335                           	line	311
  4336                           	
  4337  0009C0                     l3262:; BSR set to: 0
  4338                           
  4339                           ;BootPIC18NonJ.c: 311: PacketToPC.Length1 = (unsigned long)(0x008000 - 0x004000);
  4340  0009C0  0E00               	movlw	low(04000h)
  4341  0009C2  0100               	movlb	0	; () banked
  4342  0009C4  0100               	movlb	0	; () banked
  4343  0009C6  6FA8               	movwf	(0+(_PacketToPC+08h))&0ffh
  4344  0009C8  0E40               	movlw	high(04000h)
  4345  0009CA  0100               	movlb	0	; () banked
  4346  0009CC  6FA9               	movwf	(1+(_PacketToPC+08h))&0ffh
  4347  0009CE  0E00               	movlw	low highword(04000h)
  4348  0009D0  0100               	movlb	0	; () banked
  4349  0009D2  6FAA               	movwf	(2+(_PacketToPC+08h))&0ffh
  4350  0009D4  0E00               	movlw	high highword(04000h)
  4351  0009D6  0100               	movlb	0	; () banked
  4352  0009D8  6FAB               	movwf	(3+(_PacketToPC+08h))&0ffh
  4353                           	line	312
  4354                           ;BootPIC18NonJ.c: 312: PacketToPC.Type2 = 0x03;
  4355  0009DA  0100               	movlb	0	; () banked
  4356  0009DC  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4357  0009DE  0E03               	movlw	low(03h)
  4358  0009E0  0100               	movlb	0	; () banked
  4359  0009E2  0100               	movlb	0	; () banked
  4360  0009E4  6FAC               	movwf	(0+(_PacketToPC+0Ch))&0ffh
  4361  0009E6  0100               	movlb	0	; () banked
  4362  0009E8  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4363                           	line	313
  4364                           	
  4365  0009EA                     l3264:; BSR set to: 0
  4366                           
  4367                           ;BootPIC18NonJ.c: 313: PacketToPC.Address2 = (unsigned long)0x300000;
  4368  0009EA  0E00               	movlw	low(0300000h)
  4369  0009EC  0100               	movlb	0	; () banked
  4370  0009EE  0100               	movlb	0	; () banked
  4371  0009F0  6FAD               	movwf	(0+(_PacketToPC+0Dh))&0ffh
  4372  0009F2  0E00               	movlw	high(0300000h)
  4373  0009F4  0100               	movlb	0	; () banked
  4374  0009F6  6FAE               	movwf	(1+(_PacketToPC+0Dh))&0ffh
  4375  0009F8  0E30               	movlw	low highword(0300000h)
  4376  0009FA  0100               	movlb	0	; () banked
  4377  0009FC  6FAF               	movwf	(2+(_PacketToPC+0Dh))&0ffh
  4378  0009FE  0E00               	movlw	high highword(0300000h)
  4379  000A00  0100               	movlb	0	; () banked
  4380  000A02  6FB0               	movwf	(3+(_PacketToPC+0Dh))&0ffh
  4381                           	line	314
  4382                           	
  4383  000A04                     l3266:; BSR set to: 0
  4384                           
  4385                           ;BootPIC18NonJ.c: 314: PacketToPC.Length2 = (unsigned long)14;
  4386  000A04  0E0E               	movlw	low(0Eh)
  4387  000A06  0100               	movlb	0	; () banked
  4388  000A08  0100               	movlb	0	; () banked
  4389  000A0A  6FB1               	movwf	(0+(_PacketToPC+011h))&0ffh
  4390  000A0C  0E00               	movlw	high(0Eh)
  4391  000A0E  0100               	movlb	0	; () banked
  4392  000A10  6FB2               	movwf	(1+(_PacketToPC+011h))&0ffh
  4393  000A12  0E00               	movlw	low highword(0Eh)
  4394  000A14  0100               	movlb	0	; () banked
  4395  000A16  6FB3               	movwf	(2+(_PacketToPC+011h))&0ffh
  4396  000A18  0E00               	movlw	high highword(0Eh)
  4397  000A1A  0100               	movlb	0	; () banked
  4398  000A1C  6FB4               	movwf	(3+(_PacketToPC+011h))&0ffh
  4399                           	line	315
  4400                           ;BootPIC18NonJ.c: 315: PacketToPC.Type3 = 0x01;
  4401  000A1E  0100               	movlb	0	; () banked
  4402  000A20  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4403  000A22  0E01               	movlw	low(01h)
  4404  000A24  0100               	movlb	0	; () banked
  4405  000A26  0100               	movlb	0	; () banked
  4406  000A28  6FB5               	movwf	(0+(_PacketToPC+015h))&0ffh
  4407  000A2A  0100               	movlb	0	; () banked
  4408  000A2C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4409                           	line	316
  4410                           	
  4411  000A2E                     l3268:; BSR set to: 0
  4412                           
  4413                           ;BootPIC18NonJ.c: 316: PacketToPC.Address3 = (unsigned long)0x200000;
  4414  000A2E  0E00               	movlw	low(0200000h)
  4415  000A30  0100               	movlb	0	; () banked
  4416  000A32  0100               	movlb	0	; () banked
  4417  000A34  6FB6               	movwf	(0+(_PacketToPC+016h))&0ffh
  4418  000A36  0E00               	movlw	high(0200000h)
  4419  000A38  0100               	movlb	0	; () banked
  4420  000A3A  6FB7               	movwf	(1+(_PacketToPC+016h))&0ffh
  4421  000A3C  0E20               	movlw	low highword(0200000h)
  4422  000A3E  0100               	movlb	0	; () banked
  4423  000A40  6FB8               	movwf	(2+(_PacketToPC+016h))&0ffh
  4424  000A42  0E00               	movlw	high highword(0200000h)
  4425  000A44  0100               	movlb	0	; () banked
  4426  000A46  6FB9               	movwf	(3+(_PacketToPC+016h))&0ffh
  4427                           	line	317
  4428                           	
  4429  000A48                     l3270:; BSR set to: 0
  4430                           
  4431                           ;BootPIC18NonJ.c: 317: PacketToPC.Length3 = (unsigned long)(8);
  4432  000A48  0E08               	movlw	low(08h)
  4433  000A4A  0100               	movlb	0	; () banked
  4434  000A4C  0100               	movlb	0	; () banked
  4435  000A4E  6FBA               	movwf	(0+(_PacketToPC+01Ah))&0ffh
  4436  000A50  0E00               	movlw	high(08h)
  4437  000A52  0100               	movlb	0	; () banked
  4438  000A54  6FBB               	movwf	(1+(_PacketToPC+01Ah))&0ffh
  4439  000A56  0E00               	movlw	low highword(08h)
  4440  000A58  0100               	movlb	0	; () banked
  4441  000A5A  6FBC               	movwf	(2+(_PacketToPC+01Ah))&0ffh
  4442  000A5C  0E00               	movlw	high highword(08h)
  4443  000A5E  0100               	movlb	0	; () banked
  4444  000A60  6FBD               	movwf	(3+(_PacketToPC+01Ah))&0ffh
  4445                           	line	318
  4446                           	
  4447  000A62                     l3272:; BSR set to: 0
  4448                           
  4449                           ;BootPIC18NonJ.c: 318: PacketToPC.Type4 = 0xFF;
  4450  000A62  0100               	movlb	0	; () banked
  4451  000A64  0100               	movlb	0	; () banked
  4452  000A66  69BE               	setf	(0+(_PacketToPC+01Eh))&0ffh
  4453                           	line	320
  4454                           ;BootPIC18NonJ.c: 320: PacketToPC.Type4 = 0x02;
  4455  000A68  0100               	movlb	0	; () banked
  4456  000A6A  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4457  000A6C  0E02               	movlw	low(02h)
  4458  000A6E  0100               	movlb	0	; () banked
  4459  000A70  0100               	movlb	0	; () banked
  4460  000A72  6FBE               	movwf	(0+(_PacketToPC+01Eh))&0ffh
  4461  000A74  0100               	movlb	0	; () banked
  4462  000A76  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4463                           	line	321
  4464                           	
  4465  000A78                     l3274:; BSR set to: 0
  4466                           
  4467                           ;BootPIC18NonJ.c: 321: PacketToPC.Address4 = (unsigned long)0xF00000;
  4468  000A78  0E00               	movlw	low(0F00000h)
  4469  000A7A  0100               	movlb	0	; () banked
  4470  000A7C  0100               	movlb	0	; () banked
  4471  000A7E  6FBF               	movwf	(0+(_PacketToPC+01Fh))&0ffh
  4472  000A80  0E00               	movlw	high(0F00000h)
  4473  000A82  0100               	movlb	0	; () banked
  4474  000A84  6FC0               	movwf	(1+(_PacketToPC+01Fh))&0ffh
  4475  000A86  0EF0               	movlw	low highword(0F00000h)
  4476  000A88  0100               	movlb	0	; () banked
  4477  000A8A  6FC1               	movwf	(2+(_PacketToPC+01Fh))&0ffh
  4478  000A8C  0E00               	movlw	high highword(0F00000h)
  4479  000A8E  0100               	movlb	0	; () banked
  4480  000A90  6FC2               	movwf	(3+(_PacketToPC+01Fh))&0ffh
  4481                           	line	322
  4482                           	
  4483  000A92                     l3276:; BSR set to: 0
  4484                           
  4485                           ;BootPIC18NonJ.c: 322: PacketToPC.Length4 = (unsigned long)0x100;
  4486  000A92  0E00               	movlw	low(0100h)
  4487  000A94  0100               	movlb	0	; () banked
  4488  000A96  0100               	movlb	0	; () banked
  4489  000A98  6FC3               	movwf	(0+(_PacketToPC+023h))&0ffh
  4490  000A9A  0E01               	movlw	high(0100h)
  4491  000A9C  0100               	movlb	0	; () banked
  4492  000A9E  6FC4               	movwf	(1+(_PacketToPC+023h))&0ffh
  4493  000AA0  0E00               	movlw	low highword(0100h)
  4494  000AA2  0100               	movlb	0	; () banked
  4495  000AA4  6FC5               	movwf	(2+(_PacketToPC+023h))&0ffh
  4496  000AA6  0E00               	movlw	high highword(0100h)
  4497  000AA8  0100               	movlb	0	; () banked
  4498  000AAA  6FC6               	movwf	(3+(_PacketToPC+023h))&0ffh
  4499                           	line	323
  4500                           	
  4501  000AAC                     l3278:; BSR set to: 0
  4502                           
  4503                           ;BootPIC18NonJ.c: 323: PacketToPC.Type5 = 0xFF;
  4504  000AAC  0100               	movlb	0	; () banked
  4505  000AAE  0100               	movlb	0	; () banked
  4506  000AB0  69C7               	setf	(0+(_PacketToPC+027h))&0ffh
  4507                           	line	327
  4508                           	
  4509  000AB2                     l3280:; BSR set to: 0
  4510                           
  4511                           ;BootPIC18NonJ.c: 327: if(!ep1Bi.Stat.UOWN)
  4512  000AB2  0104               	movlb	4	; () banked
  4513                           	
  4514  000AB4  0104               	movlb	4	; () banked
  4515  000AB6  BF0C               	btfsc	((1036))&0ffh,7	;volatile
  4516  000AB8  D001               	goto	u2641
  4517  000ABA  D001               	goto	u2640
  4518  000ABC                     u2641:
  4519  000ABC  D257               	goto	l645
  4520  000ABE                     u2640:
  4521                           	line	329
  4522                           	
  4523  000ABE                     l3282:; BSR set to: 4
  4524                           
  4525                           ;BootPIC18NonJ.c: 328: {
  4526                           ;BootPIC18NonJ.c: 329: HIDTxReport((char *)&PacketToPC, 64);
  4527  000ABE  0100               	movlb	0	; () banked
  4528  000AC0  0E00               	movlw	high(_PacketToPC)
  4529  000AC2  0100               	movlb	0	; () banked
  4530  000AC4  0100               	movlb	0	; () banked
  4531  000AC6  6FE1               	movwf	((?_HIDTxReport+1))&0ffh
  4532  000AC8  0100               	movlb	0	; () banked
  4533  000ACA  0EA0               	movlw	low(_PacketToPC)
  4534  000ACC  0100               	movlb	0	; () banked
  4535  000ACE  6FE0               	movwf	((?_HIDTxReport))&0ffh
  4536  000AD0  0100               	movlb	0	; () banked
  4537  000AD2  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4538  000AD4  0E40               	movlw	low(040h)
  4539  000AD6  0100               	movlb	0	; () banked
  4540  000AD8  0100               	movlb	0	; () banked
  4541  000ADA  6FE2               	movwf	(0+(?_HIDTxReport+02h))&0ffh
  4542  000ADC  0100               	movlb	0	; () banked
  4543  000ADE  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4544  000AE0  0100               	movlb	0	; () banked
  4545  000AE2  EC4A  F00D         	call	_HIDTxReport	;wreg free
  4546                           	line	330
  4547                           	
  4548  000AE6                     l3284:
  4549                           ;BootPIC18NonJ.c: 330: BootState = 0x00;
  4550  000AE6  0100               	movlb	0	; () banked
  4551  000AE8  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4552  000AEA  0E00               	movlw	low(0)
  4553  000AEC  6E17               	movwf	((c:_BootState)),c
  4554  000AEE  0100               	movlb	0	; () banked
  4555  000AF0  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4556  000AF2  D23C               	goto	l645
  4557                           	line	331
  4558                           	
  4559  000AF4                     l614:; BSR set to: 0
  4560                           
  4561                           	line	333
  4562                           ;BootPIC18NonJ.c: 331: }
  4563                           ;BootPIC18NonJ.c: 332: }
  4564                           ;BootPIC18NonJ.c: 333: break;
  4565  000AF4  D23B               	goto	l645
  4566                           	line	334
  4567                           ;BootPIC18NonJ.c: 334: case 0x03:
  4568                           	
  4569  000AF6                     l616:; BSR set to: 0
  4570                           
  4571                           	line	336
  4572                           	
  4573  000AF6                     l3286:; BSR set to: 0
  4574                           
  4575                           ;BootPIC18NonJ.c: 335: {
  4576                           ;BootPIC18NonJ.c: 336: ConfigsLockValue = TRUE;
  4577  000AF6  0100               	movlb	0	; () banked
  4578  000AF8  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4579  000AFA  0E01               	movlw	low(01h)
  4580  000AFC  6E19               	movwf	((c:_ConfigsLockValue)),c
  4581  000AFE  0100               	movlb	0	; () banked
  4582  000B00  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4583                           	line	337
  4584                           	
  4585  000B02                     l3288:; BSR set to: 0
  4586                           
  4587                           ;BootPIC18NonJ.c: 337: if(PacketFromPC.LockValue == 0x00)
  4588  000B02  0100               	movlb	0	; () banked
  4589  000B04  0100               	movlb	0	; () banked
  4590  000B06  6761               	tstfsz	(0+(_PacketFromPC+01h))&0ffh
  4591  000B08  D001               	goto	u2651
  4592  000B0A  D001               	goto	u2650
  4593  000B0C                     u2651:
  4594  000B0C  D006               	goto	l617
  4595  000B0E                     u2650:
  4596                           	line	339
  4597                           	
  4598  000B0E                     l3290:; BSR set to: 0
  4599                           
  4600                           ;BootPIC18NonJ.c: 338: {
  4601                           ;BootPIC18NonJ.c: 339: ConfigsLockValue = FALSE;
  4602  000B0E  0100               	movlb	0	; () banked
  4603  000B10  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4604  000B12  0E00               	movlw	low(0)
  4605  000B14  6E19               	movwf	((c:_ConfigsLockValue)),c
  4606  000B16  0100               	movlb	0	; () banked
  4607  000B18  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4608                           	line	340
  4609                           	
  4610  000B1A                     l617:; BSR set to: 0
  4611                           
  4612                           	line	341
  4613                           ;BootPIC18NonJ.c: 340: }
  4614                           ;BootPIC18NonJ.c: 341: BootState = 0x00;
  4615  000B1A  0100               	movlb	0	; () banked
  4616  000B1C  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4617  000B1E  0E00               	movlw	low(0)
  4618  000B20  6E17               	movwf	((c:_BootState)),c
  4619  000B22  0100               	movlb	0	; () banked
  4620  000B24  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4621                           	line	343
  4622                           ;BootPIC18NonJ.c: 342: }
  4623                           ;BootPIC18NonJ.c: 343: break;
  4624  000B26  D222               	goto	l645
  4625                           	line	344
  4626                           ;BootPIC18NonJ.c: 344: case 0x04:
  4627                           	
  4628  000B28                     l618:; BSR set to: 0
  4629                           
  4630                           	line	347
  4631                           	
  4632  000B28                     l3292:; BSR set to: 0
  4633                           
  4634                           ;BootPIC18NonJ.c: 345: {
  4635                           ;BootPIC18NonJ.c: 347: for(ErasePageTracker = 256; ErasePageTracker < (unsigned int)(511
                                  + 1); ErasePageTracker++)
  4636  000B28  0E01               	movlw	high(0100h)
  4637  000B2A  6E10               	movwf	((c:_ErasePageTracker+1)),c
  4638  000B2C  0E00               	movlw	low(0100h)
  4639  000B2E  6E0F               	movwf	((c:_ErasePageTracker)),c
  4640                           	
  4641  000B30                     l3294:; BSR set to: 0
  4642                           
  4643  000B30  0E00               	movlw	0
  4644  000B32  5C0F               	subwf	((c:_ErasePageTracker)),c,w
  4645  000B34  0E02               	movlw	02h
  4646  000B36  5810               	subwfb	((c:_ErasePageTracker+1)),c,w
  4647  000B38  A0D8               	btfss	status,0
  4648  000B3A  D001               	goto	u2661
  4649  000B3C  D001               	goto	u2660
  4650  000B3E                     u2661:
  4651  000B3E  D002               	goto	l3298
  4652  000B40                     u2660:
  4653  000B40  D036               	goto	l3312
  4654                           	
  4655  000B42                     l3296:; BSR set to: 0
  4656                           
  4657  000B42  D035               	goto	l3312
  4658                           	line	348
  4659                           	
  4660  000B44                     l619:; BSR set to: 0
  4661                           
  4662                           	line	349
  4663                           	
  4664  000B44                     l3298:
  4665                           ;BootPIC18NonJ.c: 348: {
  4666                           ;BootPIC18NonJ.c: 349: ClearWatchdog();
  4667  000B44  EC1F  F012         	call	_ClearWatchdog	;wreg free
  4668                           	line	350
  4669                           	
  4670  000B48                     l3300:
  4671                           ;BootPIC18NonJ.c: 350: TBLPTR = ((unsigned short long)ErasePageTracker << 6);
  4672  000B48  0E06               	movlw	(06h)&0ffh
  4673  000B4A  0100               	movlb	0	; () banked
  4674  000B4C  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4675  000B4E  C00F  F0EC         	movff	(c:_ErasePageTracker),??_ProcessIO+1+0
  4676  000B52  C010  F0ED         	movff	(c:_ErasePageTracker+1),??_ProcessIO+1+0+1
  4677  000B56  0100               	movlb	0	; () banked
  4678  000B58  6BEE               	clrf	(??_ProcessIO+1+0+2)&0ffh
  4679  000B5A  0100               	movlb	0	; () banked
  4680  000B5C  29EB               	incf	((??_ProcessIO+0+0))&0ffh,w
  4681  000B5E  D005               	goto	u2670
  4682  000B60                     u2675:
  4683  000B60  90D8               	bcf	status,0
  4684  000B62  0100               	movlb	0	; () banked
  4685  000B64  37EC               	rlcf	(??_ProcessIO+1+0)&0ffh
  4686  000B66  37ED               	rlcf	(??_ProcessIO+1+1)&0ffh
  4687  000B68  37EE               	rlcf	(??_ProcessIO+1+2)&0ffh
  4688  000B6A                     u2670:
  4689  000B6A  2EE8               	decfsz	wreg
  4690  000B6C  D7F9               	goto	u2675
  4691  000B6E  C0EC  FFF6         	movff	??_ProcessIO+1+0,(c:4086)	;volatile
  4692  000B72  C0ED  FFF7         	movff	??_ProcessIO+1+1,(c:4086+1)	;volatile
  4693  000B76  C0EE  FFF8         	movff	??_ProcessIO+1+2,(c:4086+2)	;volatile
  4694                           	line	351
  4695                           	
  4696  000B7A                     l3302:; BSR set to: 0
  4697                           
  4698                           ;BootPIC18NonJ.c: 351: EECON1 = 0b10010100;
  4699  000B7A  0E94               	movlw	low(094h)
  4700  000B7C  6EA6               	movwf	((c:4006)),c	;volatile
  4701                           	line	352
  4702                           	
  4703  000B7E                     l3304:; BSR set to: 0
  4704                           
  4705                           ;BootPIC18NonJ.c: 352: UnlockAndActivate(0xB5);
  4706  000B7E  0100               	movlb	0	; () banked
  4707  000B80  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4708  000B82  0EB5               	movlw	low(0B5h)
  4709  000B84  0100               	movlb	0	; () banked
  4710  000B86  0100               	movlb	0	; () banked
  4711  000B88  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
  4712  000B8A  0100               	movlb	0	; () banked
  4713  000B8C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4714  000B8E  0100               	movlb	0	; () banked
  4715  000B90  ECAF  F011         	call	_UnlockAndActivate	;wreg free
  4716                           	line	353
  4717                           	
  4718  000B94                     l3306:
  4719                           ;BootPIC18NonJ.c: 353: USBDriverService();
  4720  000B94  EC0F  F00E         	call	_USBDriverService	;wreg free
  4721                           	line	347
  4722                           	
  4723  000B98                     l3308:
  4724  000B98  4A0F               	infsnz	((c:_ErasePageTracker)),c
  4725  000B9A  2A10               	incf	((c:_ErasePageTracker+1)),c
  4726                           	
  4727  000B9C                     l3310:
  4728  000B9C  0E00               	movlw	0
  4729  000B9E  5C0F               	subwf	((c:_ErasePageTracker)),c,w
  4730  000BA0  0E02               	movlw	02h
  4731  000BA2  5810               	subwfb	((c:_ErasePageTracker+1)),c,w
  4732  000BA4  A0D8               	btfss	status,0
  4733  000BA6  D001               	goto	u2681
  4734  000BA8  D001               	goto	u2680
  4735  000BAA                     u2681:
  4736  000BAA  D7CC               	goto	l3298
  4737  000BAC                     u2680:
  4738  000BAC  D000               	goto	l3312
  4739                           	
  4740  000BAE                     l620:
  4741                           	line	358
  4742                           	
  4743  000BAE                     l3312:
  4744                           ;BootPIC18NonJ.c: 354: }
  4745                           ;BootPIC18NonJ.c: 358: i = 0xF00000 & (0x100-1);
  4746  000BAE  0100               	movlb	0	; () banked
  4747  000BB0  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4748  000BB2  0E00               	movlw	low(0)
  4749  000BB4  0100               	movlb	0	; () banked
  4750  000BB6  0100               	movlb	0	; () banked
  4751  000BB8  6FEF               	movwf	((ProcessIO@i))&0ffh
  4752  000BBA  0100               	movlb	0	; () banked
  4753  000BBC  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4754  000BBE  D000               	goto	l3314
  4755                           	line	359
  4756                           ;BootPIC18NonJ.c: 359: do{
  4757                           	
  4758  000BC0                     l621:; BSR set to: 0
  4759                           
  4760                           	line	360
  4761                           	
  4762  000BC0                     l3314:; BSR set to: 0
  4763                           
  4764                           ;BootPIC18NonJ.c: 360: EEADR = i;
  4765  000BC0  C0EF  FFA9         	movff	(ProcessIO@i),(c:4009)	;volatile
  4766                           	line	361
  4767                           	
  4768  000BC4                     l3316:; BSR set to: 0
  4769                           
  4770                           ;BootPIC18NonJ.c: 361: EEDATA = 0xFF;
  4771  000BC4  68A8               	setf	((c:4008)),c	;volatile
  4772                           	line	362
  4773                           	
  4774  000BC6                     l3318:; BSR set to: 0
  4775                           
  4776                           ;BootPIC18NonJ.c: 362: EECON1 = 0b00000100;
  4777  000BC6  0E04               	movlw	low(04h)
  4778  000BC8  6EA6               	movwf	((c:4006)),c	;volatile
  4779                           	line	363
  4780                           	
  4781  000BCA                     l3320:; BSR set to: 0
  4782                           
  4783                           ;BootPIC18NonJ.c: 363: USBDriverService();
  4784  000BCA  EC0F  F00E         	call	_USBDriverService	;wreg free
  4785                           	line	364
  4786                           	
  4787  000BCE                     l3322:
  4788                           ;BootPIC18NonJ.c: 364: UnlockAndActivate(0xB5);
  4789  000BCE  0100               	movlb	0	; () banked
  4790  000BD0  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4791  000BD2  0EB5               	movlw	low(0B5h)
  4792  000BD4  0100               	movlb	0	; () banked
  4793  000BD6  0100               	movlb	0	; () banked
  4794  000BD8  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
  4795  000BDA  0100               	movlb	0	; () banked
  4796  000BDC  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4797  000BDE  0100               	movlb	0	; () banked
  4798  000BE0  ECAF  F011         	call	_UnlockAndActivate	;wreg free
  4799                           	line	365
  4800                           	
  4801  000BE4                     l3324:
  4802                           ;BootPIC18NonJ.c: 365: }while(i++<((0x100-1)+(0xF00000 & (0x100-1))));
  4803  000BE4  0100               	movlb	0	; () banked
  4804  000BE6  0100               	movlb	0	; () banked
  4805  000BE8  3FEF               	incfsz	((ProcessIO@i))&0ffh
  4806                           	
  4807  000BEA  D7EA               	goto	l3314
  4808  000BEC  D000               	goto	l3326
  4809                           	
  4810  000BEE                     l622:; BSR set to: 0
  4811                           
  4812                           	line	369
  4813                           	
  4814  000BEE                     l3326:; BSR set to: 0
  4815                           
  4816                           ;BootPIC18NonJ.c: 369: TBLPTR = 0x200000;
  4817  000BEE  0E00               	movlw	low(0200000h)
  4818  000BF0  6EF6               	movwf	((c:4086)),c	;volatile
  4819  000BF2  0E00               	movlw	high(0200000h)
  4820  000BF4  6EF7               	movwf	((c:4086+1)),c	;volatile
  4821  000BF6  0E20               	movlw	low highword(0200000h)
  4822  000BF8  6EF8               	movwf	((c:4086+2)),c	;volatile
  4823                           
  4824                           	line	370
  4825                           ;BootPIC18NonJ.c: 370: EECON1 = 0b10010100;
  4826  000BFA  0E94               	movlw	low(094h)
  4827  000BFC  6EA6               	movwf	((c:4006)),c	;volatile
  4828                           	line	371
  4829                           	
  4830  000BFE                     l3328:; BSR set to: 0
  4831                           
  4832                           ;BootPIC18NonJ.c: 371: UnlockAndActivate(0xB5);
  4833  000BFE  0100               	movlb	0	; () banked
  4834  000C00  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4835  000C02  0EB5               	movlw	low(0B5h)
  4836  000C04  0100               	movlb	0	; () banked
  4837  000C06  0100               	movlb	0	; () banked
  4838  000C08  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
  4839  000C0A  0100               	movlb	0	; () banked
  4840  000C0C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4841  000C0E  0100               	movlb	0	; () banked
  4842  000C10  ECAF  F011         	call	_UnlockAndActivate	;wreg free
  4843                           	line	373
  4844                           	
  4845  000C14                     l3330:
  4846                           ;BootPIC18NonJ.c: 373: BootState = 0x00;
  4847  000C14  0100               	movlb	0	; () banked
  4848  000C16  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4849  000C18  0E00               	movlw	low(0)
  4850  000C1A  6E17               	movwf	((c:_BootState)),c
  4851  000C1C  0100               	movlb	0	; () banked
  4852  000C1E  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4853                           	line	375
  4854                           ;BootPIC18NonJ.c: 374: }
  4855                           ;BootPIC18NonJ.c: 375: break;
  4856  000C20  D1A5               	goto	l645
  4857                           	line	376
  4858                           ;BootPIC18NonJ.c: 376: case 0x05:
  4859                           	
  4860  000C22                     l623:; BSR set to: 0
  4861                           
  4862                           	line	379
  4863                           	
  4864  000C22                     l3332:; BSR set to: 0
  4865                           
  4866                           ;BootPIC18NonJ.c: 377: {
  4867                           ;BootPIC18NonJ.c: 379: if(PacketFromPC.Contents[3] == 0x30)
  4868  000C22  0100               	movlb	0	; () banked
  4869  000C24  0100               	movlb	0	; () banked
  4870  000C26  5163               	movf	(0+(_PacketFromPC+03h))&0ffh,w
  4871  000C28  0A30               	xorlw	48
  4872                           
  4873  000C2A  A4D8               	btfss	status,2
  4874  000C2C  D001               	goto	u2691
  4875  000C2E  D001               	goto	u2690
  4876  000C30                     u2691:
  4877  000C30  D00E               	goto	l3340
  4878  000C32                     u2690:
  4879                           	line	381
  4880                           	
  4881  000C32                     l3334:; BSR set to: 0
  4882                           
  4883                           ;BootPIC18NonJ.c: 380: {
  4884                           ;BootPIC18NonJ.c: 381: if(ConfigsLockValue == FALSE)
  4885  000C32  6619               	tstfsz	((c:_ConfigsLockValue)),c
  4886  000C34  D001               	goto	u2701
  4887  000C36  D001               	goto	u2700
  4888  000C38                     u2701:
  4889  000C38  D003               	goto	l3338
  4890  000C3A                     u2700:
  4891                           	line	383
  4892                           	
  4893  000C3A                     l3336:; BSR set to: 0
  4894                           
  4895                           ;BootPIC18NonJ.c: 382: {
  4896                           ;BootPIC18NonJ.c: 383: WriteConfigBits();
  4897  000C3A  EC62  F00E         	call	_WriteConfigBits	;wreg free
  4898  000C3E  D000               	goto	l3338
  4899                           	line	384
  4900                           	
  4901  000C40                     l625:
  4902                           	line	385
  4903                           	
  4904  000C40                     l3338:
  4905                           ;BootPIC18NonJ.c: 384: }
  4906                           ;BootPIC18NonJ.c: 385: BootState = 0x00;
  4907  000C40  0100               	movlb	0	; () banked
  4908  000C42  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4909  000C44  0E00               	movlw	low(0)
  4910  000C46  6E17               	movwf	((c:_BootState)),c
  4911  000C48  0100               	movlb	0	; () banked
  4912  000C4A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4913                           	line	386
  4914                           ;BootPIC18NonJ.c: 386: break;
  4915  000C4C  D18F               	goto	l645
  4916                           	line	387
  4917                           	
  4918  000C4E                     l624:; BSR set to: 0
  4919                           
  4920                           	line	391
  4921                           	
  4922  000C4E                     l3340:; BSR set to: 0
  4923                           
  4924                           ;BootPIC18NonJ.c: 387: }
  4925                           ;BootPIC18NonJ.c: 391: if(PacketFromPC.Contents[3] == 0xF0)
  4926  000C4E  0100               	movlb	0	; () banked
  4927  000C50  0100               	movlb	0	; () banked
  4928  000C52  5163               	movf	(0+(_PacketFromPC+03h))&0ffh,w
  4929  000C54  0AF0               	xorlw	240
  4930                           
  4931  000C56  A4D8               	btfss	status,2
  4932  000C58  D001               	goto	u2711
  4933  000C5A  D001               	goto	u2710
  4934  000C5C                     u2711:
  4935  000C5C  D009               	goto	l3346
  4936  000C5E                     u2710:
  4937                           	line	393
  4938                           	
  4939  000C5E                     l3342:; BSR set to: 0
  4940                           
  4941                           ;BootPIC18NonJ.c: 392: {
  4942                           ;BootPIC18NonJ.c: 393: WriteEEPROM();
  4943  000C5E  ECFB  F00E         	call	_WriteEEPROM	;wreg free
  4944                           	line	394
  4945                           	
  4946  000C62                     l3344:
  4947                           ;BootPIC18NonJ.c: 394: BootState = 0x00;
  4948  000C62  0100               	movlb	0	; () banked
  4949  000C64  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  4950  000C66  0E00               	movlw	low(0)
  4951  000C68  6E17               	movwf	((c:_BootState)),c
  4952  000C6A  0100               	movlb	0	; () banked
  4953  000C6C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  4954                           	line	395
  4955                           ;BootPIC18NonJ.c: 395: break;
  4956  000C6E  D17E               	goto	l645
  4957                           	line	396
  4958                           	
  4959  000C70                     l626:; BSR set to: 0
  4960                           
  4961                           	line	399
  4962                           	
  4963  000C70                     l3346:; BSR set to: 0
  4964                           
  4965                           ;BootPIC18NonJ.c: 396: }
  4966                           ;BootPIC18NonJ.c: 399: if(ProgrammedPointer == (unsigned short long)0xFFFFFFFF)
  4967  000C70  0EFF               	movlw	low(0FFFFFFh)
  4968  000C72  1804               	xorwf	((c:_ProgrammedPointer)),c,w
  4969  000C74  0EFF               	movlw	high(0FFFFFFh)
  4970  000C76  B4D8               	btfsc	status,2
  4971  000C78  1805               	xorwf	((c:_ProgrammedPointer+1)),c,w
  4972                           	
  4973  000C7A  0EFF               	movlw	low highword(0FFFFFFh)
  4974  000C7C  B4D8               	btfsc	status,2
  4975  000C7E  1806               	xorwf	((c:_ProgrammedPointer+2)),c,w
  4976  000C80  A4D8               	btfss	status,2
  4977  000C82  D001               	goto	u2721
  4978  000C84  D001               	goto	u2720
  4979  000C86                     u2721:
  4980  000C86  D007               	goto	l3350
  4981  000C88                     u2720:
  4982                           	line	400
  4983                           	
  4984  000C88                     l3348:; BSR set to: 0
  4985                           
  4986                           ;BootPIC18NonJ.c: 400: ProgrammedPointer = PacketFromPC.Address;
  4987  000C88  C061  F004         	movff	0+(_PacketFromPC+01h),(c:_ProgrammedPointer)
  4988  000C8C  C062  F005         	movff	1+(_PacketFromPC+01h),(c:_ProgrammedPointer+1)
  4989  000C90  C063  F006         	movff	2+(_PacketFromPC+01h),(c:_ProgrammedPointer+2)
  4990  000C94  D000               	goto	l3350
  4991                           	
  4992  000C96                     l627:; BSR set to: 0
  4993                           
  4994                           	line	402
  4995                           	
  4996  000C96                     l3350:; BSR set to: 0
  4997                           
  4998                           ;BootPIC18NonJ.c: 402: if(ProgrammedPointer == (unsigned short long)PacketFromPC.Address
                                 )
  4999  000C96  0100               	movlb	0	; () banked
  5000  000C98  EE20  F061         	lfsr	2,_PacketFromPC+01h
  5001  000C9C  5004               	movf	((c:_ProgrammedPointer)),c,w
  5002  000C9E  18DE               	xorwf	postinc2,w
  5003  000CA0  E105               	bnz	u2735
  5004  000CA2  5005               	movf	((c:_ProgrammedPointer+1)),c,w
  5005  000CA4  18DE               	xorwf	postinc2,w
  5006  000CA6  E102               	bnz	u2735
  5007  000CA8  5006               	movf	((c:_ProgrammedPointer+2)),c,w
  5008  000CAA  18DE               	xorwf	postinc2,w
  5009  000CAC                     u2735:
  5010  000CAC  A4D8               	btfss	status,2
  5011  000CAE  D001               	goto	u2731
  5012  000CB0  D001               	goto	u2730
  5013  000CB2                     u2731:
  5014  000CB2  D05B               	goto	l3368
  5015  000CB4                     u2730:
  5016                           	line	404
  5017                           	
  5018  000CB4                     l3352:; BSR set to: 0
  5019                           
  5020                           ;BootPIC18NonJ.c: 403: {
  5021                           ;BootPIC18NonJ.c: 404: for(i = 0; i < PacketFromPC.Size; i++)
  5022  000CB4  0100               	movlb	0	; () banked
  5023  000CB6  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5024  000CB8  0E00               	movlw	low(0)
  5025  000CBA  0100               	movlb	0	; () banked
  5026  000CBC  0100               	movlb	0	; () banked
  5027  000CBE  6FEF               	movwf	((ProcessIO@i))&0ffh
  5028  000CC0  0100               	movlb	0	; () banked
  5029  000CC2  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5030  000CC4  D046               	goto	l3366
  5031                           	line	405
  5032                           	
  5033  000CC6                     l630:; BSR set to: 0
  5034                           
  5035                           	line	406
  5036                           	
  5037  000CC6                     l3354:; BSR set to: 0
  5038                           
  5039                           ;BootPIC18NonJ.c: 405: {
  5040                           ;BootPIC18NonJ.c: 406: ProgrammingBuffer[BufferedDataIndex] = PacketFromPC.Data[i+(0x3A-
                                 PacketFromPC.Size)];
  5041  000CC6  0100               	movlb	0	; () banked
  5042  000CC8  0100               	movlb	0	; () banked
  5043  000CCA  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5044  000CCC  0100               	movlb	0	; () banked
  5045  000CCE  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5046  000CD0  6BEC               	clrf	(??_ProcessIO+0+0+1)&0ffh
  5047                           
  5048  000CD2  0100               	movlb	0	; () banked
  5049  000CD4  1FEB               	comf	(??_ProcessIO+0+0)&0ffh
  5050  000CD6  1FEC               	comf	(??_ProcessIO+0+1)&0ffh
  5051  000CD8  4BEB               	infsnz	(??_ProcessIO+0+0)&0ffh
  5052  000CDA  2BEC               	incf	(??_ProcessIO+0+1)&0ffh
  5053  000CDC  0100               	movlb	0	; () banked
  5054  000CDE  0100               	movlb	0	; () banked
  5055  000CE0  51EF               	movf	((ProcessIO@i))&0ffh,w
  5056  000CE2  0100               	movlb	0	; () banked
  5057  000CE4  25EB               	addwf	(??_ProcessIO+0+0)&0ffh,w
  5058  000CE6  0100               	movlb	0	; () banked
  5059  000CE8  6FED               	movwf	(??_ProcessIO+2+0)&0ffh
  5060  000CEA  0100               	movlb	0	; () banked
  5061  000CEC  0100               	movlb	0	; () banked
  5062  000CEE  0E00               	movlw	0
  5063  000CF0  21EC               	addwfc	(??_ProcessIO+0+1)&0ffh,w
  5064  000CF2  6FEE               	movwf	1+(??_ProcessIO+2+0)&0ffh
  5065  000CF4  0E40               	movlw	040h
  5066  000CF6  0100               	movlb	0	; () banked
  5067  000CF8  27ED               	addwf	(??_ProcessIO+2+0)&0ffh
  5068  000CFA  0E00               	movlw	0
  5069  000CFC  23EE               	addwfc	(??_ProcessIO+2+1)&0ffh
  5070  000CFE  0100               	movlb	0	; () banked
  5071  000D00  0E60               	movlw	low(_PacketFromPC)
  5072  000D02  0100               	movlb	0	; () banked
  5073  000D04  25ED               	addwf	(??_ProcessIO+2+0)&0ffh,w
  5074  000D06  6ED9               	movwf	c:fsr2l
  5075  000D08  0100               	movlb	0	; () banked
  5076  000D0A  0E00               	movlw	high(_PacketFromPC)
  5077  000D0C  0100               	movlb	0	; () banked
  5078  000D0E  21EE               	addwfc	(??_ProcessIO+2+1)&0ffh,w
  5079  000D10  6EDA               	movwf	1+c:fsr2l
  5080  000D12  5018               	movf	((c:_BufferedDataIndex)),c,w
  5081  000D14  0D01               	mullw	01h
  5082  000D16  0101               	movlb	1	; () banked
  5083  000D18  0E00               	movlw	low(_ProgrammingBuffer)
  5084  000D1A  24F3               	addwf	(prodl),c,w
  5085  000D1C  6EE1               	movwf	c:fsr1l
  5086  000D1E  0101               	movlb	1	; () banked
  5087  000D20  0E01               	movlw	high(_ProgrammingBuffer)
  5088  000D22  20F4               	addwfc	prod+1,w
  5089  000D24  6EE2               	movwf	1+c:fsr1l
  5090  000D26  CFDF FFE7          	movff	indf2,indf1
  5091                           	line	407
  5092                           	
  5093  000D2A                     l3356:; BSR set to: 1
  5094                           
  5095                           ;BootPIC18NonJ.c: 407: BufferedDataIndex++;
  5096  000D2A  2A18               	incf	((c:_BufferedDataIndex)),c
  5097                           	line	408
  5098                           	
  5099  000D2C                     l3358:; BSR set to: 1
  5100                           
  5101                           ;BootPIC18NonJ.c: 408: ProgrammedPointer++;
  5102  000D2C  0E01               	movlw	low(01h)
  5103  000D2E  2604               	addwf	((c:_ProgrammedPointer)),c
  5104  000D30  0E00               	movlw	high(01h)
  5105  000D32  2205               	addwfc	((c:_ProgrammedPointer+1)),c
  5106  000D34  0E00               	movlw	low highword(01h)
  5107  000D36  2206               	addwfc	((c:_ProgrammedPointer+2)),c
  5108                           
  5109                           	line	409
  5110                           	
  5111  000D38                     l3360:; BSR set to: 1
  5112                           
  5113                           ;BootPIC18NonJ.c: 409: if(BufferedDataIndex == 0x20)
  5114  000D38  5018               	movf	((c:_BufferedDataIndex)),c,w
  5115  000D3A  0A20               	xorlw	32
  5116                           
  5117  000D3C  A4D8               	btfss	status,2
  5118  000D3E  D001               	goto	u2741
  5119  000D40  D001               	goto	u2740
  5120  000D42                     u2741:
  5121  000D42  D003               	goto	l3364
  5122  000D44                     u2740:
  5123                           	line	411
  5124                           	
  5125  000D44                     l3362:; BSR set to: 1
  5126                           
  5127                           ;BootPIC18NonJ.c: 410: {
  5128                           ;BootPIC18NonJ.c: 411: WriteFlashBlock();
  5129  000D44  EC2A  F009         	call	_WriteFlashBlock	;wreg free
  5130  000D48  D000               	goto	l3364
  5131                           	line	412
  5132                           	
  5133  000D4A                     l631:
  5134                           	line	404
  5135                           	
  5136  000D4A                     l3364:
  5137  000D4A  0100               	movlb	0	; () banked
  5138  000D4C  0100               	movlb	0	; () banked
  5139  000D4E  2BEF               	incf	((ProcessIO@i))&0ffh
  5140  000D50  D000               	goto	l3366
  5141                           	
  5142  000D52                     l629:; BSR set to: 0
  5143                           
  5144                           	
  5145  000D52                     l3366:; BSR set to: 0
  5146                           
  5147  000D52  0100               	movlb	0	; () banked
  5148  000D54  0100               	movlb	0	; () banked
  5149  000D56  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5150  000D58  0100               	movlb	0	; () banked
  5151  000D5A  0100               	movlb	0	; () banked
  5152  000D5C  5DEF               	subwf	((ProcessIO@i))&0ffh,w
  5153  000D5E  A0D8               	btfss	status,0
  5154  000D60  D001               	goto	u2751
  5155  000D62  D001               	goto	u2750
  5156  000D64                     u2751:
  5157  000D64  D7B0               	goto	l3354
  5158  000D66                     u2750:
  5159  000D66  D001               	goto	l3368
  5160                           	
  5161  000D68                     l632:; BSR set to: 0
  5162                           
  5163  000D68  D000               	goto	l3368
  5164                           	line	414
  5165                           	
  5166  000D6A                     l628:; BSR set to: 0
  5167                           
  5168                           	line	416
  5169                           	
  5170  000D6A                     l3368:; BSR set to: 0
  5171                           
  5172                           ;BootPIC18NonJ.c: 412: }
  5173                           ;BootPIC18NonJ.c: 413: }
  5174                           ;BootPIC18NonJ.c: 414: }
  5175                           ;BootPIC18NonJ.c: 416: BootState = 0x00;
  5176  000D6A  0100               	movlb	0	; () banked
  5177  000D6C  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5178  000D6E  0E00               	movlw	low(0)
  5179  000D70  6E17               	movwf	((c:_BootState)),c
  5180  000D72  0100               	movlb	0	; () banked
  5181  000D74  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5182                           	line	418
  5183                           ;BootPIC18NonJ.c: 417: }
  5184                           ;BootPIC18NonJ.c: 418: break;
  5185  000D76  D0FA               	goto	l645
  5186                           	line	419
  5187                           ;BootPIC18NonJ.c: 419: case 0x06:
  5188                           	
  5189  000D78                     l633:; BSR set to: 0
  5190                           
  5191                           	line	421
  5192                           	
  5193  000D78                     l3370:; BSR set to: 0
  5194                           
  5195                           ;BootPIC18NonJ.c: 420: {
  5196                           ;BootPIC18NonJ.c: 421: WriteFlashBlock();
  5197  000D78  EC2A  F009         	call	_WriteFlashBlock	;wreg free
  5198                           	line	422
  5199                           	
  5200  000D7C                     l3372:
  5201                           ;BootPIC18NonJ.c: 422: ProgrammedPointer = 0xFFFFFFFF;
  5202  000D7C  0EFF               	movlw	low(0FFFFFFh)
  5203  000D7E  6E04               	movwf	((c:_ProgrammedPointer)),c
  5204  000D80  0EFF               	movlw	high(0FFFFFFh)
  5205  000D82  6E05               	movwf	((c:_ProgrammedPointer+1)),c
  5206  000D84  0EFF               	movlw	low highword(0FFFFFFh)
  5207  000D86  6E06               	movwf	((c:_ProgrammedPointer+2)),c
  5208                           
  5209                           	line	423
  5210                           	
  5211  000D88                     l3374:
  5212                           ;BootPIC18NonJ.c: 423: BootState = 0x00;
  5213  000D88  0100               	movlb	0	; () banked
  5214  000D8A  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5215  000D8C  0E00               	movlw	low(0)
  5216  000D8E  6E17               	movwf	((c:_BootState)),c
  5217  000D90  0100               	movlb	0	; () banked
  5218  000D92  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5219                           	line	425
  5220                           ;BootPIC18NonJ.c: 424: }
  5221                           ;BootPIC18NonJ.c: 425: break;
  5222  000D94  D0EB               	goto	l645
  5223                           	line	426
  5224                           ;BootPIC18NonJ.c: 426: case 0x07:
  5225                           	
  5226  000D96                     l634:; BSR set to: 0
  5227                           
  5228                           	line	429
  5229                           	
  5230  000D96                     l3376:; BSR set to: 0
  5231                           
  5232                           ;BootPIC18NonJ.c: 427: {
  5233                           ;BootPIC18NonJ.c: 429: PacketToPC.Command = 0x07;
  5234  000D96  0100               	movlb	0	; () banked
  5235  000D98  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5236  000D9A  0E07               	movlw	low(07h)
  5237  000D9C  0100               	movlb	0	; () banked
  5238  000D9E  0100               	movlb	0	; () banked
  5239  000DA0  6FA0               	movwf	((_PacketToPC))&0ffh
  5240  000DA2  0100               	movlb	0	; () banked
  5241  000DA4  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5242                           	line	430
  5243                           	
  5244  000DA6                     l3378:; BSR set to: 0
  5245                           
  5246                           ;BootPIC18NonJ.c: 430: PacketToPC.Address = PacketFromPC.Address;
  5247  000DA6  C061  F0A1         	movff	0+(_PacketFromPC+01h),0+(_PacketToPC+01h)
  5248  000DAA  C062  F0A2         	movff	1+(_PacketFromPC+01h),1+(_PacketToPC+01h)
  5249  000DAE  C063  F0A3         	movff	2+(_PacketFromPC+01h),2+(_PacketToPC+01h)
  5250  000DB2  C064  F0A4         	movff	3+(_PacketFromPC+01h),3+(_PacketToPC+01h)
  5251                           	line	431
  5252                           	
  5253  000DB6                     l3380:; BSR set to: 0
  5254                           
  5255                           ;BootPIC18NonJ.c: 431: PacketToPC.Size = PacketFromPC.Size;
  5256  000DB6  C065  F0A5         	movff	0+(_PacketFromPC+05h),0+(_PacketToPC+05h)
  5257                           	line	434
  5258                           	
  5259  000DBA                     l3382:; BSR set to: 0
  5260                           
  5261                           ;BootPIC18NonJ.c: 434: TBLPTR = (unsigned short long)PacketFromPC.Address;
  5262  000DBA  C061  FFF6         	movff	0+(_PacketFromPC+01h),(c:4086)	;volatile
  5263  000DBE  C062  FFF7         	movff	1+(_PacketFromPC+01h),(c:4086+1)	;volatile
  5264  000DC2  C063  FFF8         	movff	2+(_PacketFromPC+01h),(c:4086+2)	;volatile
  5265                           	line	435
  5266                           ;BootPIC18NonJ.c: 435: for(i = 0; i < PacketFromPC.Size; i++)
  5267  000DC6  0100               	movlb	0	; () banked
  5268  000DC8  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5269  000DCA  0E00               	movlw	low(0)
  5270  000DCC  0100               	movlb	0	; () banked
  5271  000DCE  0100               	movlb	0	; () banked
  5272  000DD0  6FEF               	movwf	((ProcessIO@i))&0ffh
  5273  000DD2  0100               	movlb	0	; () banked
  5274  000DD4  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5275  000DD6  D081               	goto	l3410
  5276                           	line	436
  5277                           	
  5278  000DD8                     l636:; BSR set to: 0
  5279                           
  5280                           	line	437
  5281                           	
  5282  000DD8                     l3384:; BSR set to: 0
  5283                           
  5284                           ;BootPIC18NonJ.c: 436: {
  5285                           ;BootPIC18NonJ.c: 437: if(PacketFromPC.Contents[3] == 0xF0)
  5286  000DD8  0100               	movlb	0	; () banked
  5287  000DDA  0100               	movlb	0	; () banked
  5288  000DDC  5163               	movf	(0+(_PacketFromPC+03h))&0ffh,w
  5289  000DDE  0AF0               	xorlw	240
  5290                           
  5291  000DE0  A4D8               	btfss	status,2
  5292  000DE2  D001               	goto	u2761
  5293  000DE4  D001               	goto	u2760
  5294  000DE6                     u2761:
  5295  000DE6  D033               	goto	l3394
  5296  000DE8                     u2760:
  5297                           	line	440
  5298                           	
  5299  000DE8                     l3386:; BSR set to: 0
  5300                           
  5301                           ;BootPIC18NonJ.c: 438: {
  5302                           ;BootPIC18NonJ.c: 440: EEADR = (((unsigned char)PacketFromPC.Address) + i);
  5303  000DE8  0100               	movlb	0	; () banked
  5304  000DEA  0100               	movlb	0	; () banked
  5305  000DEC  5161               	movf	(0+(_PacketFromPC+01h))&0ffh,w
  5306  000DEE  0100               	movlb	0	; () banked
  5307  000DF0  0100               	movlb	0	; () banked
  5308  000DF2  25EF               	addwf	((ProcessIO@i))&0ffh,w
  5309  000DF4  6EA9               	movwf	((c:4009)),c	;volatile
  5310                           	line	441
  5311                           	
  5312  000DF6                     l3388:; BSR set to: 0
  5313                           
  5314                           ;BootPIC18NonJ.c: 441: EECON1 = 0b00000000;
  5315  000DF6  0E00               	movlw	low(0)
  5316  000DF8  6EA6               	movwf	((c:4006)),c	;volatile
  5317                           	line	442
  5318                           	
  5319  000DFA                     l3390:; BSR set to: 0
  5320                           
  5321                           ;BootPIC18NonJ.c: 442: EECON1bits.RD = 1;
  5322  000DFA  80A6               	bsf	((c:4006)),c,0	;volatile
  5323                           	line	443
  5324                           	
  5325  000DFC                     l3392:; BSR set to: 0
  5326                           
  5327                           ;BootPIC18NonJ.c: 443: PacketToPC.Data[i+((0x40 - 6) - PacketFromPC.Size)] = EEDATA;
  5328  000DFC  0100               	movlb	0	; () banked
  5329  000DFE  0100               	movlb	0	; () banked
  5330  000E00  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5331  000E02  0100               	movlb	0	; () banked
  5332  000E04  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5333  000E06  6BEC               	clrf	(??_ProcessIO+0+0+1)&0ffh
  5334                           
  5335  000E08  0100               	movlb	0	; () banked
  5336  000E0A  1FEB               	comf	(??_ProcessIO+0+0)&0ffh
  5337  000E0C  1FEC               	comf	(??_ProcessIO+0+1)&0ffh
  5338  000E0E  4BEB               	infsnz	(??_ProcessIO+0+0)&0ffh
  5339  000E10  2BEC               	incf	(??_ProcessIO+0+1)&0ffh
  5340  000E12  0100               	movlb	0	; () banked
  5341  000E14  0100               	movlb	0	; () banked
  5342  000E16  51EF               	movf	((ProcessIO@i))&0ffh,w
  5343  000E18  0100               	movlb	0	; () banked
  5344  000E1A  25EB               	addwf	(??_ProcessIO+0+0)&0ffh,w
  5345  000E1C  0100               	movlb	0	; () banked
  5346  000E1E  6FED               	movwf	(??_ProcessIO+2+0)&0ffh
  5347  000E20  0100               	movlb	0	; () banked
  5348  000E22  0100               	movlb	0	; () banked
  5349  000E24  0E00               	movlw	0
  5350  000E26  21EC               	addwfc	(??_ProcessIO+0+1)&0ffh,w
  5351  000E28  6FEE               	movwf	1+(??_ProcessIO+2+0)&0ffh
  5352  000E2A  0E40               	movlw	040h
  5353  000E2C  0100               	movlb	0	; () banked
  5354  000E2E  27ED               	addwf	(??_ProcessIO+2+0)&0ffh
  5355  000E30  0E00               	movlw	0
  5356  000E32  23EE               	addwfc	(??_ProcessIO+2+1)&0ffh
  5357  000E34  0100               	movlb	0	; () banked
  5358  000E36  0EA0               	movlw	low(_PacketToPC)
  5359  000E38  0100               	movlb	0	; () banked
  5360  000E3A  25ED               	addwf	(??_ProcessIO+2+0)&0ffh,w
  5361  000E3C  6ED9               	movwf	c:fsr2l
  5362  000E3E  0100               	movlb	0	; () banked
  5363  000E40  0E00               	movlw	high(_PacketToPC)
  5364  000E42  0100               	movlb	0	; () banked
  5365  000E44  21EE               	addwfc	(??_ProcessIO+2+1)&0ffh,w
  5366  000E46  6EDA               	movwf	1+c:fsr2l
  5367  000E48  CFA8 FFDF          	movff	(c:4008),indf2	;volatile
  5368                           
  5369                           	line	445
  5370                           ;BootPIC18NonJ.c: 445: }
  5371  000E4C  D042               	goto	l3408
  5372                           	line	446
  5373                           	
  5374  000E4E                     l637:; BSR set to: 0
  5375                           
  5376                           	line	448
  5377                           	
  5378  000E4E                     l3394:; BSR set to: 0
  5379                           
  5380                           ;BootPIC18NonJ.c: 446: else
  5381                           ;BootPIC18NonJ.c: 447: {
  5382                           ;BootPIC18NonJ.c: 448: TableReadPostIncrement();
  5383  000E4E  EC21  F012         	call	_TableReadPostIncrement	;wreg free
  5384                           	line	452
  5385                           	
  5386  000E52                     l3396:
  5387                           ;BootPIC18NonJ.c: 452: if(TBLPTRU == 0x30)
  5388  000E52  50F8               	movf	((c:4088)),c,w	;volatile
  5389  000E54  0A30               	xorlw	48
  5390                           
  5391  000E56  A4D8               	btfss	status,2
  5392  000E58  D001               	goto	u2771
  5393  000E5A  D001               	goto	u2770
  5394  000E5C                     u2771:
  5395  000E5C  D011               	goto	l3406
  5396  000E5E                     u2770:
  5397                           	line	454
  5398                           	
  5399  000E5E                     l3398:
  5400                           ;BootPIC18NonJ.c: 453: {
  5401                           ;BootPIC18NonJ.c: 454: if(TBLPTRL == 0x05)
  5402  000E5E  50F6               	movf	((c:4086)),c,w	;volatile
  5403  000E60  0A05               	xorlw	5
  5404                           
  5405  000E62  A4D8               	btfss	status,2
  5406  000E64  D001               	goto	u2781
  5407  000E66  D001               	goto	u2780
  5408  000E68                     u2781:
  5409  000E68  D002               	goto	l3402
  5410  000E6A                     u2780:
  5411                           	line	455
  5412                           	
  5413  000E6A                     l3400:
  5414                           ;BootPIC18NonJ.c: 455: TABLAT = 0xFF;
  5415  000E6A  68F5               	setf	((c:4085)),c	;volatile
  5416  000E6C  D000               	goto	l3402
  5417                           	
  5418  000E6E                     l640:
  5419                           	line	456
  5420                           	
  5421  000E6E                     l3402:
  5422                           ;BootPIC18NonJ.c: 456: if(TBLPTRL == 0x08)
  5423  000E6E  50F6               	movf	((c:4086)),c,w	;volatile
  5424  000E70  0A08               	xorlw	8
  5425                           
  5426  000E72  A4D8               	btfss	status,2
  5427  000E74  D001               	goto	u2791
  5428  000E76  D001               	goto	u2790
  5429  000E78                     u2791:
  5430  000E78  D003               	goto	l3406
  5431  000E7A                     u2790:
  5432                           	line	457
  5433                           	
  5434  000E7A                     l3404:
  5435                           ;BootPIC18NonJ.c: 457: TABLAT = 0xFF;
  5436  000E7A  68F5               	setf	((c:4085)),c	;volatile
  5437  000E7C  D001               	goto	l3406
  5438                           	
  5439  000E7E                     l641:
  5440  000E7E  D000               	goto	l3406
  5441                           	line	458
  5442                           	
  5443  000E80                     l639:
  5444                           	line	459
  5445                           	
  5446  000E80                     l3406:
  5447                           ;BootPIC18NonJ.c: 458: }
  5448                           ;BootPIC18NonJ.c: 459: PacketToPC.Data[i+((0x40 - 6) - PacketFromPC.Size)]=TABLAT;
  5449  000E80  0100               	movlb	0	; () banked
  5450  000E82  0100               	movlb	0	; () banked
  5451  000E84  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5452  000E86  0100               	movlb	0	; () banked
  5453  000E88  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5454  000E8A  6BEC               	clrf	(??_ProcessIO+0+0+1)&0ffh
  5455                           
  5456  000E8C  0100               	movlb	0	; () banked
  5457  000E8E  1FEB               	comf	(??_ProcessIO+0+0)&0ffh
  5458  000E90  1FEC               	comf	(??_ProcessIO+0+1)&0ffh
  5459  000E92  4BEB               	infsnz	(??_ProcessIO+0+0)&0ffh
  5460  000E94  2BEC               	incf	(??_ProcessIO+0+1)&0ffh
  5461  000E96  0100               	movlb	0	; () banked
  5462  000E98  0100               	movlb	0	; () banked
  5463  000E9A  51EF               	movf	((ProcessIO@i))&0ffh,w
  5464  000E9C  0100               	movlb	0	; () banked
  5465  000E9E  25EB               	addwf	(??_ProcessIO+0+0)&0ffh,w
  5466  000EA0  0100               	movlb	0	; () banked
  5467  000EA2  6FED               	movwf	(??_ProcessIO+2+0)&0ffh
  5468  000EA4  0100               	movlb	0	; () banked
  5469  000EA6  0100               	movlb	0	; () banked
  5470  000EA8  0E00               	movlw	0
  5471  000EAA  21EC               	addwfc	(??_ProcessIO+0+1)&0ffh,w
  5472  000EAC  6FEE               	movwf	1+(??_ProcessIO+2+0)&0ffh
  5473  000EAE  0E40               	movlw	040h
  5474  000EB0  0100               	movlb	0	; () banked
  5475  000EB2  27ED               	addwf	(??_ProcessIO+2+0)&0ffh
  5476  000EB4  0E00               	movlw	0
  5477  000EB6  23EE               	addwfc	(??_ProcessIO+2+1)&0ffh
  5478  000EB8  0100               	movlb	0	; () banked
  5479  000EBA  0EA0               	movlw	low(_PacketToPC)
  5480  000EBC  0100               	movlb	0	; () banked
  5481  000EBE  25ED               	addwf	(??_ProcessIO+2+0)&0ffh,w
  5482  000EC0  6ED9               	movwf	c:fsr2l
  5483  000EC2  0100               	movlb	0	; () banked
  5484  000EC4  0E00               	movlw	high(_PacketToPC)
  5485  000EC6  0100               	movlb	0	; () banked
  5486  000EC8  21EE               	addwfc	(??_ProcessIO+2+1)&0ffh,w
  5487  000ECA  6EDA               	movwf	1+c:fsr2l
  5488  000ECC  CFF5 FFDF          	movff	(c:4085),indf2	;volatile
  5489                           
  5490  000ED0  D000               	goto	l3408
  5491                           	line	460
  5492                           	
  5493  000ED2                     l638:; BSR set to: 0
  5494                           
  5495                           	line	435
  5496                           	
  5497  000ED2                     l3408:; BSR set to: 0
  5498                           
  5499  000ED2  0100               	movlb	0	; () banked
  5500  000ED4  0100               	movlb	0	; () banked
  5501  000ED6  2BEF               	incf	((ProcessIO@i))&0ffh
  5502  000ED8  D000               	goto	l3410
  5503                           	
  5504  000EDA                     l635:; BSR set to: 0
  5505                           
  5506                           	
  5507  000EDA                     l3410:; BSR set to: 0
  5508                           
  5509  000EDA  0100               	movlb	0	; () banked
  5510  000EDC  0100               	movlb	0	; () banked
  5511  000EDE  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
  5512  000EE0  0100               	movlb	0	; () banked
  5513  000EE2  0100               	movlb	0	; () banked
  5514  000EE4  5DEF               	subwf	((ProcessIO@i))&0ffh,w
  5515  000EE6  A0D8               	btfss	status,0
  5516  000EE8  D001               	goto	u2801
  5517  000EEA  D001               	goto	u2800
  5518  000EEC                     u2801:
  5519  000EEC  D775               	goto	l3384
  5520  000EEE                     u2800:
  5521                           	
  5522  000EEE                     l642:; BSR set to: 0
  5523                           
  5524                           	line	463
  5525                           ;BootPIC18NonJ.c: 460: }
  5526                           ;BootPIC18NonJ.c: 461: }
  5527                           ;BootPIC18NonJ.c: 463: if(!ep1Bi.Stat.UOWN)
  5528  000EEE  0104               	movlb	4	; () banked
  5529                           	
  5530  000EF0  0104               	movlb	4	; () banked
  5531  000EF2  BF0C               	btfsc	((1036))&0ffh,7	;volatile
  5532  000EF4  D001               	goto	u2811
  5533  000EF6  D001               	goto	u2810
  5534  000EF8                     u2811:
  5535  000EF8  D039               	goto	l645
  5536  000EFA                     u2810:
  5537                           	line	465
  5538                           	
  5539  000EFA                     l3412:; BSR set to: 4
  5540                           
  5541                           ;BootPIC18NonJ.c: 464: {
  5542                           ;BootPIC18NonJ.c: 465: HIDTxReport((char *)&PacketToPC, 64);
  5543  000EFA  0100               	movlb	0	; () banked
  5544  000EFC  0E00               	movlw	high(_PacketToPC)
  5545  000EFE  0100               	movlb	0	; () banked
  5546  000F00  0100               	movlb	0	; () banked
  5547  000F02  6FE1               	movwf	((?_HIDTxReport+1))&0ffh
  5548  000F04  0100               	movlb	0	; () banked
  5549  000F06  0EA0               	movlw	low(_PacketToPC)
  5550  000F08  0100               	movlb	0	; () banked
  5551  000F0A  6FE0               	movwf	((?_HIDTxReport))&0ffh
  5552  000F0C  0100               	movlb	0	; () banked
  5553  000F0E  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5554  000F10  0E40               	movlw	low(040h)
  5555  000F12  0100               	movlb	0	; () banked
  5556  000F14  0100               	movlb	0	; () banked
  5557  000F16  6FE2               	movwf	(0+(?_HIDTxReport+02h))&0ffh
  5558  000F18  0100               	movlb	0	; () banked
  5559  000F1A  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5560  000F1C  0100               	movlb	0	; () banked
  5561  000F1E  EC4A  F00D         	call	_HIDTxReport	;wreg free
  5562                           	line	466
  5563                           	
  5564  000F22                     l3414:
  5565                           ;BootPIC18NonJ.c: 466: BootState = 0x00;
  5566  000F22  0100               	movlb	0	; () banked
  5567  000F24  6FEB               	movwf	(??_ProcessIO+0+0)&0ffh
  5568  000F26  0E00               	movlw	low(0)
  5569  000F28  6E17               	movwf	((c:_BootState)),c
  5570  000F2A  0100               	movlb	0	; () banked
  5571  000F2C  51EB               	movf	(??_ProcessIO+0+0)&0ffh,w
  5572  000F2E  D01E               	goto	l645
  5573                           	line	467
  5574                           	
  5575  000F30                     l643:; BSR set to: 0
  5576                           
  5577                           	line	469
  5578                           ;BootPIC18NonJ.c: 467: }
  5579                           ;BootPIC18NonJ.c: 468: }
  5580                           ;BootPIC18NonJ.c: 469: break;
  5581  000F30  D01D               	goto	l645
  5582                           	line	470
  5583                           ;BootPIC18NonJ.c: 470: case 0x08:
  5584                           	
  5585  000F32                     l644:; BSR set to: 0
  5586                           
  5587                           	line	471
  5588                           	
  5589  000F32                     l3416:; BSR set to: 0
  5590                           
  5591                           ;BootPIC18NonJ.c: 471: ResetDeviceCleanly();
  5592  000F32  EC2C  F011         	call	_ResetDeviceCleanly	;wreg free
  5593                           	line	472
  5594                           ;BootPIC18NonJ.c: 472: }
  5595  000F36  D01A               	goto	l645
  5596                           	line	301
  5597                           	
  5598  000F38                     l612:
  5599                           	
  5600  000F38                     l3418:
  5601  000F38  0100               	movlb	0	; () banked
  5602  000F3A  0100               	movlb	0	; () banked
  5603  000F3C  5160               	movf	((_PacketFromPC))&0ffh,w
  5604                           	; Switch size 1, requested type "space"
  5605                           ; Number of cases is 7, Range of values is 2 to 8
  5606                           ; switch strategies available:
  5607                           ; Name         Instructions Cycles
  5608                           ; simple_byte           22    12 (average)
  5609                           ;	Chosen strategy is simple_byte
  5610                           
  5611  000F3E  0A02               	xorlw	2^0	; case 2
  5612  000F40  B4D8               	skipnz
  5613  000F42  D511               	goto	l3258
  5614  000F44  0A01               	xorlw	3^2	; case 3
  5615  000F46  B4D8               	skipnz
  5616  000F48  D5D6               	goto	l3286
  5617  000F4A  0A07               	xorlw	4^3	; case 4
  5618  000F4C  B4D8               	skipnz
  5619  000F4E  D5EC               	goto	l3292
  5620  000F50  0A01               	xorlw	5^4	; case 5
  5621  000F52  B4D8               	skipnz
  5622  000F54  D666               	goto	l3332
  5623  000F56  0A03               	xorlw	6^5	; case 6
  5624  000F58  B4D8               	skipnz
  5625  000F5A  D70E               	goto	l3370
  5626  000F5C  0A01               	xorlw	7^6	; case 7
  5627  000F5E  B4D8               	skipnz
  5628  000F60  D71A               	goto	l3376
  5629  000F62  0A0F               	xorlw	8^7	; case 8
  5630  000F64  B4D8               	skipnz
  5631  000F66  D7E5               	goto	l3416
  5632  000F68  D001               	goto	l645
  5633                           
  5634                           	line	472
  5635                           	
  5636  000F6A                     l615:; BSR set to: 0
  5637                           
  5638  000F6A  D000               	goto	l645
  5639                           	line	473
  5640                           	
  5641  000F6C                     l611:; BSR set to: 0
  5642                           
  5643                           	line	475
  5644                           	
  5645  000F6C                     l645:
  5646  000F6C  0012               	return
  5647                           	opt stack 0
  5648                           GLOBAL	__end_of_ProcessIO
  5649  000F6E                     	__end_of_ProcessIO:
  5650                           	signat	_ProcessIO,88
  5651                           	global	_HIDTxReport
  5652                           
  5653 ;; *************** function _HIDTxReport *****************
  5654 ;; Defined at:
  5655 ;;		line 228 in file "../hid.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  5658 ;;		 -> PacketToPC(64), 
  5659 ;;  len             1    2[BANK0 ] unsigned char 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  i               1    4[BANK0 ] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;		None               void
  5664 ;; Registers used:
  5665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  5671 ;;      Params:         0       3       0       0       0       0       0       0       0
  5672 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5673 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5674 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5675 ;;Total ram usage:        5 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    2
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_ProcessIO
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           psect	text5,class=CODE,space=0,reloc=2
  5685                           global __ptext5
  5686  001A94                     __ptext5:
  5687                           psect	text5
  5688                           	file	"../hid.c"
  5689                           	line	228
  5690                           	global	__size_of_HIDTxReport
  5691  0000                     	__size_of_HIDTxReport	equ	__end_of_HIDTxReport-_HIDTxReport
  5692                           	
  5693  001A94                     _HIDTxReport:
  5694                           	opt	stack 27
  5695                           	line	235
  5696                           	
  5697  001A94                     l3156:
  5698                           ;hid.c: 229: byte i;
  5699                           ;hid.c: 235: if(len > 64)
  5700  001A94  0E40               	movlw	(041h-1)
  5701  001A96  0100               	movlb	0	; () banked
  5702  001A98  0100               	movlb	0	; () banked
  5703  001A9A  65E2               	cpfsgt	((HIDTxReport@len))&0ffh
  5704  001A9C  D001               	goto	u2451
  5705  001A9E  D001               	goto	u2450
  5706  001AA0                     u2451:
  5707  001AA0  D008               	goto	l71
  5708  001AA2                     u2450:
  5709                           	line	236
  5710                           	
  5711  001AA2                     l3158:; BSR set to: 0
  5712                           
  5713                           ;hid.c: 236: len = 64;
  5714  001AA2  0100               	movlb	0	; () banked
  5715  001AA4  6FE3               	movwf	(??_HIDTxReport+0+0)&0ffh
  5716  001AA6  0E40               	movlw	low(040h)
  5717  001AA8  0100               	movlb	0	; () banked
  5718  001AAA  0100               	movlb	0	; () banked
  5719  001AAC  6FE2               	movwf	((HIDTxReport@len))&0ffh
  5720  001AAE  0100               	movlb	0	; () banked
  5721  001AB0  51E3               	movf	(??_HIDTxReport+0+0)&0ffh,w
  5722                           	
  5723  001AB2                     l71:; BSR set to: 0
  5724                           
  5725                           	line	241
  5726                           ;hid.c: 241: for (i = 0; i < len; i++)
  5727  001AB2  0100               	movlb	0	; () banked
  5728  001AB4  6FE3               	movwf	(??_HIDTxReport+0+0)&0ffh
  5729  001AB6  0E00               	movlw	low(0)
  5730  001AB8  0100               	movlb	0	; () banked
  5731  001ABA  0100               	movlb	0	; () banked
  5732  001ABC  6FE4               	movwf	((HIDTxReport@i))&0ffh
  5733  001ABE  0100               	movlb	0	; () banked
  5734  001AC0  51E3               	movf	(??_HIDTxReport+0+0)&0ffh,w
  5735  001AC2  D020               	goto	l3164
  5736                           	line	242
  5737                           	
  5738  001AC4                     l73:; BSR set to: 0
  5739                           
  5740                           	
  5741  001AC4                     l3160:; BSR set to: 0
  5742                           
  5743                           ;hid.c: 242: hid_report_in[i] = buffer[i];
  5744  001AC4  0100               	movlb	0	; () banked
  5745  001AC6  0100               	movlb	0	; () banked
  5746  001AC8  51E4               	movf	((HIDTxReport@i))&0ffh,w
  5747  001ACA  0D01               	mullw	01h
  5748  001ACC  50F3               	movf	(prodl),c,w
  5749  001ACE  0100               	movlb	0	; () banked
  5750  001AD0  0100               	movlb	0	; () banked
  5751  001AD2  25E0               	addwf	((HIDTxReport@buffer))&0ffh,w
  5752  001AD4  6ED9               	movwf	c:fsr2l
  5753  001AD6  50F4               	movf	(prodh),c,w
  5754  001AD8  0100               	movlb	0	; () banked
  5755  001ADA  0100               	movlb	0	; () banked
  5756  001ADC  21E1               	addwfc	((HIDTxReport@buffer+1))&0ffh,w
  5757  001ADE  6EDA               	movwf	1+c:fsr2l
  5758  001AE0  0100               	movlb	0	; () banked
  5759  001AE2  0100               	movlb	0	; () banked
  5760  001AE4  51E4               	movf	((HIDTxReport@i))&0ffh,w
  5761  001AE6  0D01               	mullw	01h
  5762  001AE8  0107               	movlb	7	; () banked
  5763  001AEA  0E40               	movlw	low(1856)	;volatile
  5764  001AEC  24F3               	addwf	(prodl),c,w
  5765  001AEE  6EE1               	movwf	c:fsr1l
  5766  001AF0  0107               	movlb	7	; () banked
  5767  001AF2  0E07               	movlw	high(1856)	;volatile
  5768  001AF4  20F4               	addwfc	prod+1,w
  5769  001AF6  6EE2               	movwf	1+c:fsr1l
  5770  001AF8  CFDF FFE7          	movff	indf2,indf1
  5771                           	line	241
  5772                           	
  5773  001AFC                     l3162:; BSR set to: 7
  5774                           
  5775  001AFC  0100               	movlb	0	; () banked
  5776  001AFE  0100               	movlb	0	; () banked
  5777  001B00  2BE4               	incf	((HIDTxReport@i))&0ffh
  5778  001B02  D000               	goto	l3164
  5779                           	
  5780  001B04                     l72:; BSR set to: 0
  5781                           
  5782                           	
  5783  001B04                     l3164:; BSR set to: 0
  5784                           
  5785  001B04  0100               	movlb	0	; () banked
  5786  001B06  0100               	movlb	0	; () banked
  5787  001B08  51E2               	movf	((HIDTxReport@len))&0ffh,w
  5788  001B0A  0100               	movlb	0	; () banked
  5789  001B0C  0100               	movlb	0	; () banked
  5790  001B0E  5DE4               	subwf	((HIDTxReport@i))&0ffh,w
  5791  001B10  A0D8               	btfss	status,0
  5792  001B12  D001               	goto	u2461
  5793  001B14  D001               	goto	u2460
  5794  001B16                     u2461:
  5795  001B16  D7D6               	goto	l3160
  5796  001B18                     u2460:
  5797                           	
  5798  001B18                     l74:; BSR set to: 0
  5799                           
  5800                           	line	244
  5801                           ;hid.c: 244: ep1Bi.Cnt = len;
  5802  001B18  C0E2  F40D         	movff	(HIDTxReport@len),0+(1036+01h)	;volatile
  5803                           	line	245
  5804                           	
  5805  001B1C                     l3166:; BSR set to: 0
  5806                           
  5807                           ;hid.c: 245: { ep1Bi.Stat._byte &= 0x40; ep1Bi.Stat.DTS = !ep1Bi.Stat.DTS; ep1Bi.Stat._b
                                 yte |= 0x80|0x08; };
  5808  001B1C  0E40               	movlw	(040h)&0ffh
  5809  001B1E  0104               	movlb	4	; () banked
  5810  001B20  0104               	movlb	4	; () banked
  5811  001B22  170C               	andwf	((1036))&0ffh	;volatile
  5812  001B24  0104               	movlb	4	; () banked
  5813                           	
  5814  001B26  0104               	movlb	4	; () banked
  5815  001B28  AD0C               	btfss	((1036))&0ffh,6	;volatile
  5816  001B2A  D001               	goto	u2471
  5817  001B2C  D002               	goto	u2470
  5818  001B2E                     u2471:
  5819  001B2E  0E01               	movlw	1
  5820  001B30  D001               	goto	u2476
  5821  001B32                     u2470:
  5822  001B32  0E00               	movlw	0
  5823  001B34                     u2476:
  5824  001B34  0100               	movlb	0	; () banked
  5825  001B36  6FE3               	movwf	(??_HIDTxReport+0+0)&0ffh
  5826  001B38  0100               	movlb	0	; () banked
  5827  001B3A  3BE3               	swapf	((??_HIDTxReport+0+0))&0ffh
  5828  001B3C  47E3               	rlncf	((??_HIDTxReport+0+0))&0ffh
  5829  001B3E  47E3               	rlncf	((??_HIDTxReport+0+0))&0ffh
  5830  001B40  0104               	movlb	4	; () banked
  5831  001B42  0104               	movlb	4	; () banked
  5832  001B44  510C               	movf	((1036))&0ffh,w	;volatile
  5833  001B46  19E3               	xorwf	((??_HIDTxReport+0+0))&0ffh,w
  5834  001B48  0BBF               	andlw	not (((1<<1)-1)<<6)
  5835  001B4A  19E3               	xorwf	((??_HIDTxReport+0+0))&0ffh,w
  5836  001B4C  0104               	movlb	4	; () banked
  5837  001B4E  0104               	movlb	4	; () banked
  5838  001B50  6F0C               	movwf	((1036))&0ffh	;volatile
  5839  001B52  0E88               	movlw	(088h)&0ffh
  5840  001B54  0104               	movlb	4	; () banked
  5841  001B56  0104               	movlb	4	; () banked
  5842  001B58  130C               	iorwf	((1036))&0ffh	;volatile
  5843                           	line	247
  5844                           	
  5845  001B5A                     l75:; BSR set to: 4
  5846                           
  5847  001B5A  0012               	return
  5848                           	opt stack 0
  5849                           GLOBAL	__end_of_HIDTxReport
  5850  001B5C                     	__end_of_HIDTxReport:
  5851                           	signat	_HIDTxReport,8312
  5852                           	global	_HIDRxReport
  5853                           
  5854 ;; *************** function _HIDRxReport *****************
  5855 ;; Defined at:
  5856 ;;		line 283 in file "../hid.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  5859 ;;		 -> PacketFromPC(64), 
  5860 ;;  len             1    2[BANK0 ] unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      unsigned char 
  5865 ;; Registers used:
  5866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  5872 ;;      Params:         0       3       0       0       0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5875 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5876 ;;Total ram usage:        4 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    2
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_ProcessIO
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           psect	text6,class=CODE,space=0,reloc=2
  5886                           global __ptext6
  5887  0019C4                     __ptext6:
  5888                           psect	text6
  5889                           	file	"../hid.c"
  5890                           	line	283
  5891                           	global	__size_of_HIDRxReport
  5892  0000                     	__size_of_HIDRxReport	equ	__end_of_HIDRxReport-_HIDRxReport
  5893                           	
  5894  0019C4                     _HIDRxReport:; BSR set to: 4
  5895                           
  5896                           	opt	stack 27
  5897                           	line	284
  5898                           	
  5899  0019C4                     l3168:
  5900                           ;hid.c: 284: hid_rpt_rx_len = 0;
  5901  0019C4  0100               	movlb	0	; () banked
  5902  0019C6  6FE3               	movwf	(??_HIDRxReport+0+0)&0ffh
  5903  0019C8  0E00               	movlw	low(0)
  5904  0019CA  6E1D               	movwf	((c:_hid_rpt_rx_len)),c
  5905  0019CC  0100               	movlb	0	; () banked
  5906  0019CE  51E3               	movf	(??_HIDRxReport+0+0)&0ffh,w
  5907                           	line	286
  5908                           	
  5909  0019D0                     l3170:; BSR set to: 0
  5910                           
  5911                           ;hid.c: 286: if(!ep1Bo.Stat.UOWN)
  5912  0019D0  0104               	movlb	4	; () banked
  5913                           	
  5914  0019D2  0104               	movlb	4	; () banked
  5915  0019D4  BF08               	btfsc	((1032))&0ffh,7	;volatile
  5916  0019D6  D001               	goto	u2481
  5917  0019D8  D001               	goto	u2480
  5918  0019DA                     u2481:
  5919  0019DA  D05B               	goto	l83
  5920  0019DC                     u2480:
  5921                           	line	292
  5922                           	
  5923  0019DC                     l3172:; BSR set to: 4
  5924                           
  5925                           ;hid.c: 287: {
  5926                           ;hid.c: 292: if(len > ep1Bo.Cnt)
  5927  0019DC  0100               	movlb	0	; () banked
  5928  0019DE  0100               	movlb	0	; () banked
  5929  0019E0  51E2               	movf	((HIDRxReport@len))&0ffh,w
  5930  0019E2  0104               	movlb	4	; () banked
  5931  0019E4  0104               	movlb	4	; () banked
  5932  0019E6  6109               	cpfslt	(0+(1032+01h))&0ffh	;volatile
  5933  0019E8  D001               	goto	u2491
  5934  0019EA  D001               	goto	u2490
  5935  0019EC                     u2491:
  5936  0019EC  D003               	goto	l3176
  5937  0019EE                     u2490:
  5938                           	line	293
  5939                           	
  5940  0019EE                     l3174:; BSR set to: 4
  5941                           
  5942                           ;hid.c: 293: len = ep1Bo.Cnt;
  5943  0019EE  C409 F0E2          	movff	0+(1032+01h),(HIDRxReport@len)	;volatile
  5944  0019F2  D000               	goto	l3176
  5945                           	
  5946  0019F4                     l79:; BSR set to: 4
  5947                           
  5948                           	line	298
  5949                           	
  5950  0019F4                     l3176:; BSR set to: 4
  5951                           
  5952                           ;hid.c: 298: for(hid_rpt_rx_len = 0; hid_rpt_rx_len < len; hid_rpt_rx_len++)
  5953  0019F4  0100               	movlb	0	; () banked
  5954  0019F6  6FE3               	movwf	(??_HIDRxReport+0+0)&0ffh
  5955  0019F8  0E00               	movlw	low(0)
  5956  0019FA  6E1D               	movwf	((c:_hid_rpt_rx_len)),c
  5957  0019FC  0100               	movlb	0	; () banked
  5958  0019FE  51E3               	movf	(??_HIDRxReport+0+0)&0ffh,w
  5959  001A00  D01A               	goto	l3182
  5960                           	line	299
  5961                           	
  5962  001A02                     l81:; BSR set to: 0
  5963                           
  5964                           	
  5965  001A02                     l3178:; BSR set to: 0
  5966                           
  5967                           ;hid.c: 299: buffer[hid_rpt_rx_len] = hid_report_out[hid_rpt_rx_len];
  5968  001A02  501D               	movf	((c:_hid_rpt_rx_len)),c,w
  5969  001A04  0D01               	mullw	01h
  5970  001A06  0107               	movlb	7	; () banked
  5971  001A08  0E00               	movlw	low(1792)	;volatile
  5972  001A0A  24F3               	addwf	(prodl),c,w
  5973  001A0C  6ED9               	movwf	c:fsr2l
  5974  001A0E  0107               	movlb	7	; () banked
  5975  001A10  0E07               	movlw	high(1792)	;volatile
  5976  001A12  20F4               	addwfc	prod+1,w
  5977  001A14  6EDA               	movwf	1+c:fsr2l
  5978  001A16  501D               	movf	((c:_hid_rpt_rx_len)),c,w
  5979  001A18  0D01               	mullw	01h
  5980  001A1A  50F3               	movf	(prodl),c,w
  5981  001A1C  0100               	movlb	0	; () banked
  5982  001A1E  0100               	movlb	0	; () banked
  5983  001A20  25E0               	addwf	((HIDRxReport@buffer))&0ffh,w
  5984  001A22  6EE1               	movwf	c:fsr1l
  5985  001A24  50F4               	movf	(prodh),c,w
  5986  001A26  0100               	movlb	0	; () banked
  5987  001A28  0100               	movlb	0	; () banked
  5988  001A2A  21E1               	addwfc	((HIDRxReport@buffer+1))&0ffh,w
  5989  001A2C  6EE2               	movwf	1+c:fsr1l
  5990  001A2E  CFDF FFE7          	movff	indf2,indf1
  5991                           	line	298
  5992                           	
  5993  001A32                     l3180:; BSR set to: 0
  5994                           
  5995  001A32  2A1D               	incf	((c:_hid_rpt_rx_len)),c
  5996  001A34  D000               	goto	l3182
  5997                           	
  5998  001A36                     l80:; BSR set to: 0
  5999                           
  6000                           	
  6001  001A36                     l3182:; BSR set to: 0
  6002                           
  6003  001A36  0100               	movlb	0	; () banked
  6004  001A38  0100               	movlb	0	; () banked
  6005  001A3A  51E2               	movf	((HIDRxReport@len))&0ffh,w
  6006  001A3C  5C1D               	subwf	((c:_hid_rpt_rx_len)),c,w
  6007  001A3E  A0D8               	btfss	status,0
  6008  001A40  D001               	goto	u2501
  6009  001A42  D001               	goto	u2500
  6010  001A44                     u2501:
  6011  001A44  D7DE               	goto	l3178
  6012  001A46                     u2500:
  6013  001A46  D000               	goto	l3184
  6014                           	
  6015  001A48                     l82:; BSR set to: 0
  6016                           
  6017                           	line	304
  6018                           	
  6019  001A48                     l3184:; BSR set to: 0
  6020                           
  6021                           ;hid.c: 304: ep1Bo.Cnt = sizeof(hid_report_out);
  6022  001A48  0E40               	movlw	low(040h)
  6023  001A4A  0104               	movlb	4	; () banked
  6024  001A4C  0104               	movlb	4	; () banked
  6025  001A4E  6F09               	movwf	(0+(1032+01h))&0ffh	;volatile
  6026                           	line	305
  6027                           	
  6028  001A50                     l3186:; BSR set to: 4
  6029                           
  6030                           ;hid.c: 305: { ep1Bo.Stat._byte &= 0x40; ep1Bo.Stat.DTS = !ep1Bo.Stat.DTS; ep1Bo.Stat._b
                                 yte |= 0x80|0x08; };
  6031  001A50  0E40               	movlw	(040h)&0ffh
  6032  001A52  0104               	movlb	4	; () banked
  6033  001A54  0104               	movlb	4	; () banked
  6034  001A56  1708               	andwf	((1032))&0ffh	;volatile
  6035                           	
  6036  001A58                     l3188:; BSR set to: 4
  6037                           
  6038  001A58  0104               	movlb	4	; () banked
  6039                           	
  6040  001A5A  0104               	movlb	4	; () banked
  6041  001A5C  AD08               	btfss	((1032))&0ffh,6	;volatile
  6042  001A5E  D001               	goto	u2511
  6043  001A60  D002               	goto	u2510
  6044  001A62                     u2511:
  6045  001A62  0E01               	movlw	1
  6046  001A64  D001               	goto	u2516
  6047  001A66                     u2510:
  6048  001A66  0E00               	movlw	0
  6049  001A68                     u2516:
  6050  001A68  0100               	movlb	0	; () banked
  6051  001A6A  6FE3               	movwf	(??_HIDRxReport+0+0)&0ffh
  6052  001A6C  0100               	movlb	0	; () banked
  6053  001A6E  3BE3               	swapf	((??_HIDRxReport+0+0))&0ffh
  6054  001A70  47E3               	rlncf	((??_HIDRxReport+0+0))&0ffh
  6055  001A72  47E3               	rlncf	((??_HIDRxReport+0+0))&0ffh
  6056  001A74  0104               	movlb	4	; () banked
  6057  001A76  0104               	movlb	4	; () banked
  6058  001A78  5108               	movf	((1032))&0ffh,w	;volatile
  6059  001A7A  19E3               	xorwf	((??_HIDRxReport+0+0))&0ffh,w
  6060  001A7C  0BBF               	andlw	not (((1<<1)-1)<<6)
  6061  001A7E  19E3               	xorwf	((??_HIDRxReport+0+0))&0ffh,w
  6062  001A80  0104               	movlb	4	; () banked
  6063  001A82  0104               	movlb	4	; () banked
  6064  001A84  6F08               	movwf	((1032))&0ffh	;volatile
  6065                           	
  6066  001A86                     l3190:; BSR set to: 4
  6067                           
  6068  001A86  0E88               	movlw	(088h)&0ffh
  6069  001A88  0104               	movlb	4	; () banked
  6070  001A8A  0104               	movlb	4	; () banked
  6071  001A8C  1308               	iorwf	((1032))&0ffh	;volatile
  6072  001A8E  D001               	goto	l83
  6073                           	line	306
  6074                           	
  6075  001A90                     l78:; BSR set to: 4
  6076                           
  6077  001A90  D000               	goto	l83
  6078                           	line	308
  6079                           	
  6080  001A92                     l3192:; BSR set to: 4
  6081                           
  6082                           	line	310
  6083                           ;hid.c: 306: }
  6084                           ;hid.c: 308: return hid_rpt_rx_len;
  6085                           ;	Return value of _HIDRxReport is never used
  6086                           	
  6087  001A92                     l83:; BSR set to: 4
  6088                           
  6089  001A92  0012               	return
  6090                           	opt stack 0
  6091                           GLOBAL	__end_of_HIDRxReport
  6092  001A94                     	__end_of_HIDRxReport:
  6093                           	signat	_HIDRxReport,8313
  6094                           	global	_UserInit
  6095                           
  6096 ;; *************** function _UserInit *****************
  6097 ;; Defined at:
  6098 ;;		line 257 in file "../BootPIC18NonJ.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6114 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6115 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6116 ;;Total ram usage:        1 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    2
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_InitializeSystem
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           psect	text7,class=CODE,space=0,reloc=2
  6126                           global __ptext7
  6127  002328                     __ptext7:
  6128                           psect	text7
  6129                           	file	"../BootPIC18NonJ.c"
  6130                           	line	257
  6131                           	global	__size_of_UserInit
  6132  0000                     	__size_of_UserInit	equ	__end_of_UserInit-_UserInit
  6133                           	
  6134  002328                     _UserInit:; BSR set to: 4
  6135                           
  6136                           	opt	stack 27
  6137                           	line	258
  6138                           	
  6139  002328                     l3420:
  6140                           ;BootPIC18NonJ.c: 258: LATC &= 0xFE; TRISC &= 0xFE;;
  6141  002328  908B               	bcf	(0+(0/8)+(c:3979)),c,(0)&7	;volatile
  6142  00232A  9094               	bcf	(0+(0/8)+(c:3988)),c,(0)&7	;volatile
  6143                           	line	261
  6144                           	
  6145  00232C                     l3422:
  6146                           ;BootPIC18NonJ.c: 261: BootState = 0x00;
  6147  00232C  0100               	movlb	0	; () banked
  6148  00232E  6FE0               	movwf	(??_UserInit+0+0)&0ffh
  6149  002330  0E00               	movlw	low(0)
  6150  002332  6E17               	movwf	((c:_BootState)),c
  6151  002334  0100               	movlb	0	; () banked
  6152  002336  51E0               	movf	(??_UserInit+0+0)&0ffh,w
  6153                           	line	262
  6154                           	
  6155  002338                     l3424:; BSR set to: 0
  6156                           
  6157                           ;BootPIC18NonJ.c: 262: ProgrammedPointer = 0xFFFFFFFF;
  6158  002338  0EFF               	movlw	low(0FFFFFFh)
  6159  00233A  6E04               	movwf	((c:_ProgrammedPointer)),c
  6160  00233C  0EFF               	movlw	high(0FFFFFFh)
  6161  00233E  6E05               	movwf	((c:_ProgrammedPointer+1)),c
  6162  002340  0EFF               	movlw	low highword(0FFFFFFh)
  6163  002342  6E06               	movwf	((c:_ProgrammedPointer+2)),c
  6164                           
  6165                           	line	263
  6166                           	
  6167  002344                     l3426:; BSR set to: 0
  6168                           
  6169                           ;BootPIC18NonJ.c: 263: BufferedDataIndex = 0;
  6170  002344  0100               	movlb	0	; () banked
  6171  002346  6FE0               	movwf	(??_UserInit+0+0)&0ffh
  6172  002348  0E00               	movlw	low(0)
  6173  00234A  6E18               	movwf	((c:_BufferedDataIndex)),c
  6174  00234C  0100               	movlb	0	; () banked
  6175  00234E  51E0               	movf	(??_UserInit+0+0)&0ffh,w
  6176                           	line	264
  6177                           	
  6178  002350                     l3428:; BSR set to: 0
  6179                           
  6180                           ;BootPIC18NonJ.c: 264: ConfigsLockValue = TRUE;
  6181  002350  0100               	movlb	0	; () banked
  6182  002352  6FE0               	movwf	(??_UserInit+0+0)&0ffh
  6183  002354  0E01               	movlw	low(01h)
  6184  002356  6E19               	movwf	((c:_ConfigsLockValue)),c
  6185  002358  0100               	movlb	0	; () banked
  6186  00235A  51E0               	movf	(??_UserInit+0+0)&0ffh,w
  6187                           	line	265
  6188                           	
  6189  00235C                     l604:; BSR set to: 0
  6190                           
  6191  00235C  0012               	return
  6192                           	opt stack 0
  6193                           GLOBAL	__end_of_UserInit
  6194  00235E                     	__end_of_UserInit:
  6195                           	signat	_UserInit,88
  6196                           	global	_USBCheckBusStatus
  6197                           
  6198 ;; *************** function _USBCheckBusStatus *****************
  6199 ;; Defined at:
  6200 ;;		line 87 in file "../usbdrv.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;		None               void
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6216 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6217 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6218 ;;Total ram usage:        1 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    3
  6221 ;; This function calls:
  6222 ;;		_USBModuleEnable
  6223 ;; This function is called by:
  6224 ;;		_USBTasks
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           psect	text8,class=CODE,space=0,reloc=2
  6228                           global __ptext8
  6229  002100                     __ptext8:
  6230                           psect	text8
  6231                           	file	"../usbdrv.c"
  6232                           	line	87
  6233                           	global	__size_of_USBCheckBusStatus
  6234  0000                     	__size_of_USBCheckBusStatus	equ	__end_of_USBCheckBusStatus-_USBCheckBusStatus
  6235                           	
  6236  002100                     _USBCheckBusStatus:; BSR set to: 0
  6237                           
  6238                           	opt	stack 26
  6239                           	line	97
  6240                           	
  6241  002100                     l3430:
  6242                           ;usbdrv.c: 96: {
  6243                           ;usbdrv.c: 97: if(UCONbits.USBEN == 0)
  6244                           	
  6245  002100  B660               	btfsc	((c:3936)),c,3	;volatile
  6246  002102  D001               	goto	u2821
  6247  002104  D001               	goto	u2820
  6248  002106                     u2821:
  6249  002106  D014               	goto	l3438
  6250  002108                     u2820:
  6251                           	line	98
  6252                           	
  6253  002108                     l3432:
  6254                           ;usbdrv.c: 98: USBModuleEnable();
  6255  002108  ECF1  F011         	call	_USBModuleEnable	;wreg free
  6256  00210C  D011               	goto	l3438
  6257                           	
  6258  00210E                     l435:
  6259                           	line	99
  6260                           ;usbdrv.c: 99: }
  6261  00210E  D010               	goto	l3438
  6262                           	line	100
  6263                           	
  6264  002110                     l434:
  6265                           	line	102
  6266                           ;usbdrv.c: 100: else
  6267                           ;usbdrv.c: 101: {
  6268                           ;usbdrv.c: 102: if(UCONbits.USBEN == 1)
  6269                           	
  6270  002110  A660               	btfss	((c:3936)),c,3	;volatile
  6271  002112  D001               	goto	u2831
  6272  002114  D001               	goto	u2830
  6273  002116                     u2831:
  6274  002116  D00C               	goto	l3438
  6275  002118                     u2830:
  6276                           	line	104
  6277                           	
  6278  002118                     l3434:
  6279                           ;usbdrv.c: 103: {
  6280                           ;usbdrv.c: 104: UCON = 0;
  6281  002118  0E00               	movlw	low(0)
  6282  00211A  6E60               	movwf	((c:3936)),c	;volatile
  6283                           	line	105
  6284                           ;usbdrv.c: 105: UIE = 0;
  6285  00211C  0E00               	movlw	low(0)
  6286  00211E  6E64               	movwf	((c:3940)),c	;volatile
  6287                           	line	106
  6288                           	
  6289  002120                     l3436:
  6290                           ;usbdrv.c: 106: usb_device_state = 0;
  6291  002120  0100               	movlb	0	; () banked
  6292  002122  6FE1               	movwf	(??_USBCheckBusStatus+0+0)&0ffh
  6293  002124  0E00               	movlw	low(0)
  6294  002126  6E1F               	movwf	((c:_usb_device_state)),c
  6295  002128  0100               	movlb	0	; () banked
  6296  00212A  51E1               	movf	(??_USBCheckBusStatus+0+0)&0ffh,w
  6297  00212C  D001               	goto	l3438
  6298                           	line	107
  6299                           	
  6300  00212E                     l437:; BSR set to: 0
  6301                           
  6302  00212E  D000               	goto	l3438
  6303                           	line	108
  6304                           	
  6305  002130                     l436:; BSR set to: 0
  6306                           
  6307                           	line	117
  6308                           	
  6309  002130                     l3438:
  6310                           ;usbdrv.c: 107: }
  6311                           ;usbdrv.c: 108: }
  6312                           ;usbdrv.c: 117: if(usb_device_state == 1)
  6313  002130  041F               	decf	((c:_usb_device_state)),c,w
  6314                           
  6315  002132  A4D8               	btfss	status,2
  6316  002134  D001               	goto	u2841
  6317  002136  D001               	goto	u2840
  6318  002138                     u2841:
  6319  002138  D012               	goto	l440
  6320  00213A                     u2840:
  6321                           	line	119
  6322                           	
  6323  00213A                     l3440:
  6324                           ;usbdrv.c: 118: {
  6325                           ;usbdrv.c: 119: if(!UCONbits.SE0)
  6326                           	
  6327  00213A  BA60               	btfsc	((c:3936)),c,5	;volatile
  6328  00213C  D001               	goto	u2851
  6329  00213E  D001               	goto	u2850
  6330  002140                     u2851:
  6331  002140  D00E               	goto	l440
  6332  002142                     u2850:
  6333                           	line	121
  6334                           	
  6335  002142                     l3442:
  6336                           ;usbdrv.c: 120: {
  6337                           ;usbdrv.c: 121: UIR = 0;
  6338  002142  0E00               	movlw	low(0)
  6339  002144  6E65               	movwf	((c:3941)),c	;volatile
  6340                           	line	122
  6341                           ;usbdrv.c: 122: UIE = 0;
  6342  002146  0E00               	movlw	low(0)
  6343  002148  6E64               	movwf	((c:3940)),c	;volatile
  6344                           	line	123
  6345                           	
  6346  00214A                     l3444:
  6347                           ;usbdrv.c: 123: UIEbits.URSTIE = 1;
  6348  00214A  8064               	bsf	((c:3940)),c,0	;volatile
  6349                           	line	124
  6350                           	
  6351  00214C                     l3446:
  6352                           ;usbdrv.c: 124: UIEbits.IDLEIE = 1;
  6353  00214C  8864               	bsf	((c:3940)),c,4	;volatile
  6354                           	line	125
  6355                           	
  6356  00214E                     l3448:
  6357                           ;usbdrv.c: 125: usb_device_state = 2;
  6358  00214E  0100               	movlb	0	; () banked
  6359  002150  6FE1               	movwf	(??_USBCheckBusStatus+0+0)&0ffh
  6360  002152  0E02               	movlw	low(02h)
  6361  002154  6E1F               	movwf	((c:_usb_device_state)),c
  6362  002156  0100               	movlb	0	; () banked
  6363  002158  51E1               	movf	(??_USBCheckBusStatus+0+0)&0ffh,w
  6364  00215A  D001               	goto	l440
  6365                           	line	126
  6366                           	
  6367  00215C                     l439:; BSR set to: 0
  6368                           
  6369  00215C  D000               	goto	l440
  6370                           	line	127
  6371                           	
  6372  00215E                     l438:; BSR set to: 0
  6373                           
  6374                           	line	129
  6375                           	
  6376  00215E                     l440:
  6377  00215E  0012               	return
  6378                           	opt stack 0
  6379                           GLOBAL	__end_of_USBCheckBusStatus
  6380  002160                     	__end_of_USBCheckBusStatus:
  6381                           	signat	_USBCheckBusStatus,88
  6382                           	global	_USBDriverService
  6383                           
  6384 ;; *************** function _USBDriverService *****************
  6385 ;; Defined at:
  6386 ;;		line 230 in file "../usbdrv.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;		None
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;		None               void
  6393 ;; Registers used:
  6394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6400 ;;      Params:         0       0       0       0       0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6403 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6404 ;;Total ram usage:        1 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    7
  6407 ;; This function calls:
  6408 ;;		_USBWakeFromSuspend
  6409 ;;		_USBProtocolResetHandler
  6410 ;;		_USBSuspend
  6411 ;;		_USBStallHandler
  6412 ;;		_USBCtrlEPService
  6413 ;; This function is called by:
  6414 ;;		_USBTasks
  6415 ;;		_ProcessIO
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           psect	text9,class=CODE,space=0,reloc=2
  6419                           global __ptext9
  6420  001C1E                     __ptext9:
  6421                           psect	text9
  6422                           	file	"../usbdrv.c"
  6423                           	line	230
  6424                           	global	__size_of_USBDriverService
  6425  0000                     	__size_of_USBDriverService	equ	__end_of_USBDriverService-_USBDriverService
  6426                           	
  6427  001C1E                     _USBDriverService:
  6428                           	opt	stack 22
  6429                           	line	234
  6430                           	
  6431  001C1E                     l3450:
  6432                           ;usbdrv.c: 234: if(usb_device_state == 0) return;
  6433  001C1E  661F               	tstfsz	((c:_usb_device_state)),c
  6434  001C20  D001               	goto	u2861
  6435  001C22  D001               	goto	u2860
  6436  001C24                     u2861:
  6437  001C24  D002               	goto	l446
  6438  001C26                     u2860:
  6439  001C26  D04D               	goto	l447
  6440                           	
  6441  001C28                     l3452:
  6442  001C28  D04C               	goto	l447
  6443                           	
  6444  001C2A                     l446:
  6445                           	line	241
  6446                           ;usbdrv.c: 241: if(UIRbits.ACTVIF) USBWakeFromSuspend();
  6447                           	
  6448  001C2A  A465               	btfss	((c:3941)),c,2	;volatile
  6449  001C2C  D001               	goto	u2871
  6450  001C2E  D001               	goto	u2870
  6451  001C30                     u2871:
  6452  001C30  D003               	goto	l3456
  6453  001C32                     u2870:
  6454                           	
  6455  001C32                     l3454:
  6456  001C32  EC08  F012         	call	_USBWakeFromSuspend	;wreg free
  6457  001C36  D000               	goto	l3456
  6458                           	
  6459  001C38                     l448:
  6460                           	line	246
  6461                           	
  6462  001C38                     l3456:
  6463                           ;usbdrv.c: 246: if(UCONbits.SUSPND==1) return;
  6464                           	
  6465  001C38  A260               	btfss	((c:3936)),c,1	;volatile
  6466  001C3A  D001               	goto	u2881
  6467  001C3C  D001               	goto	u2880
  6468  001C3E                     u2881:
  6469  001C3E  D002               	goto	l449
  6470  001C40                     u2880:
  6471  001C40  D040               	goto	l447
  6472                           	
  6473  001C42                     l3458:
  6474  001C42  D03F               	goto	l447
  6475                           	
  6476  001C44                     l449:
  6477                           	line	255
  6478                           ;usbdrv.c: 255: if(UIRbits.URSTIF) USBProtocolResetHandler();
  6479                           	
  6480  001C44  A065               	btfss	((c:3941)),c,0	;volatile
  6481  001C46  D001               	goto	u2891
  6482  001C48  D001               	goto	u2890
  6483  001C4A                     u2891:
  6484  001C4A  D003               	goto	l3462
  6485  001C4C                     u2890:
  6486                           	
  6487  001C4C                     l3460:
  6488  001C4C  ECB0  F00E         	call	_USBProtocolResetHandler	;wreg free
  6489  001C50  D000               	goto	l3462
  6490                           	
  6491  001C52                     l450:
  6492                           	line	261
  6493                           	
  6494  001C52                     l3462:
  6495                           ;usbdrv.c: 261: if(UIRbits.IDLEIF) USBSuspend();
  6496                           	
  6497  001C52  A865               	btfss	((c:3941)),c,4	;volatile
  6498  001C54  D001               	goto	u2901
  6499  001C56  D001               	goto	u2900
  6500  001C58                     u2901:
  6501  001C58  D003               	goto	l3466
  6502  001C5A                     u2900:
  6503                           	
  6504  001C5A                     l3464:
  6505  001C5A  EC12  F012         	call	_USBSuspend	;wreg free
  6506  001C5E  D000               	goto	l3466
  6507                           	
  6508  001C60                     l451:
  6509                           	line	265
  6510                           	
  6511  001C60                     l3466:
  6512                           ;usbdrv.c: 265: if(UIRbits.STALLIF) USBStallHandler();
  6513                           	
  6514  001C60  AA65               	btfss	((c:3941)),c,5	;volatile
  6515  001C62  D001               	goto	u2911
  6516  001C64  D001               	goto	u2910
  6517  001C66                     u2911:
  6518  001C66  D003               	goto	l3470
  6519  001C68                     u2910:
  6520                           	
  6521  001C68                     l3468:
  6522  001C68  EC77  F011         	call	_USBStallHandler	;wreg free
  6523  001C6C  D000               	goto	l3470
  6524                           	
  6525  001C6E                     l452:
  6526                           	line	275
  6527                           	
  6528  001C6E                     l3470:
  6529                           ;usbdrv.c: 275: if(usb_device_state < 3) return;
  6530  001C6E  0E03               	movlw	(03h)&0ffh
  6531  001C70  601F               	cpfslt	((c:_usb_device_state)),c
  6532  001C72  D001               	goto	u2921
  6533  001C74  D001               	goto	u2920
  6534  001C76                     u2921:
  6535  001C76  D002               	goto	l3474
  6536  001C78                     u2920:
  6537  001C78  D024               	goto	l447
  6538                           	
  6539  001C7A                     l3472:
  6540  001C7A  D023               	goto	l447
  6541                           	
  6542  001C7C                     l453:
  6543                           	line	280
  6544                           	
  6545  001C7C                     l3474:
  6546                           ;usbdrv.c: 280: for(bTRNIFCount = 0; bTRNIFCount < 4; bTRNIFCount++)
  6547  001C7C  0100               	movlb	0	; () banked
  6548  001C7E  6FEA               	movwf	(??_USBDriverService+0+0)&0ffh
  6549  001C80  0E00               	movlw	low(0)
  6550  001C82  6E1A               	movwf	((c:_bTRNIFCount)),c
  6551  001C84  0100               	movlb	0	; () banked
  6552  001C86  51EA               	movf	(??_USBDriverService+0+0)&0ffh,w
  6553                           	
  6554  001C88                     l3476:; BSR set to: 0
  6555                           
  6556  001C88  0E03               	movlw	(04h-1)
  6557  001C8A  641A               	cpfsgt	((c:_bTRNIFCount)),c
  6558  001C8C  D001               	goto	u2931
  6559  001C8E  D001               	goto	u2930
  6560  001C90                     u2931:
  6561  001C90  D002               	goto	l454
  6562  001C92                     u2930:
  6563  001C92  D017               	goto	l447
  6564                           	
  6565  001C94                     l3478:; BSR set to: 0
  6566                           
  6567  001C94  D016               	goto	l447
  6568                           	line	281
  6569                           	
  6570  001C96                     l454:
  6571                           	line	283
  6572                           ;usbdrv.c: 281: {
  6573                           ;usbdrv.c: 283: if(UIRbits.TRNIF)
  6574                           	
  6575  001C96  A665               	btfss	((c:3941)),c,3	;volatile
  6576  001C98  D001               	goto	u2941
  6577  001C9A  D001               	goto	u2940
  6578  001C9C                     u2941:
  6579  001C9C  D012               	goto	l447
  6580  001C9E                     u2940:
  6581                           	line	289
  6582                           	
  6583  001C9E                     l3480:
  6584                           ;usbdrv.c: 284: {
  6585                           ;usbdrv.c: 289: if(USBCtrlEPService() == 0)
  6586  001C9E  ECEC  F00B         	call	_USBCtrlEPService	;wreg free
  6587  001CA2  0900               	iorlw	0
  6588  001CA4  A4D8               	btfss	status,2
  6589  001CA6  D001               	goto	u2951
  6590  001CA8  D001               	goto	u2950
  6591  001CAA                     u2951:
  6592  001CAA  D004               	goto	l3484
  6593  001CAC                     u2950:
  6594                           	line	301
  6595                           	
  6596  001CAC                     l3482:
  6597                           ;usbdrv.c: 290: {
  6598                           ;usbdrv.c: 301: UIRbits.TRNIF = 0;
  6599  001CAC  9665               	bcf	((c:3941)),c,3	;volatile
  6600  001CAE  D002               	goto	l3484
  6601                           	line	313
  6602                           	
  6603  001CB0                     l457:
  6604                           	line	314
  6605                           ;usbdrv.c: 313: }
  6606                           ;usbdrv.c: 314: }
  6607  001CB0  D001               	goto	l3484
  6608                           	line	315
  6609                           	
  6610  001CB2                     l456:
  6611                           	line	316
  6612                           ;usbdrv.c: 315: else
  6613                           ;usbdrv.c: 316: break;
  6614  001CB2  D007               	goto	l447
  6615                           	
  6616  001CB4                     l458:
  6617                           	line	280
  6618                           	
  6619  001CB4                     l3484:
  6620  001CB4  2A1A               	incf	((c:_bTRNIFCount)),c
  6621                           	
  6622  001CB6                     l3486:
  6623  001CB6  0E03               	movlw	(04h-1)
  6624  001CB8  641A               	cpfsgt	((c:_bTRNIFCount)),c
  6625  001CBA  D001               	goto	u2961
  6626  001CBC  D001               	goto	u2960
  6627  001CBE                     u2961:
  6628  001CBE  D7EB               	goto	l454
  6629  001CC0                     u2960:
  6630  001CC0  D000               	goto	l447
  6631                           	
  6632  001CC2                     l455:
  6633                           	line	319
  6634                           	
  6635  001CC2                     l447:
  6636  001CC2  0012               	return
  6637                           	opt stack 0
  6638                           GLOBAL	__end_of_USBDriverService
  6639  001CC4                     	__end_of_USBDriverService:
  6640                           	signat	_USBDriverService,88
  6641                           	global	_USBCtrlEPService
  6642                           
  6643 ;; *************** function _USBCtrlEPService *****************
  6644 ;; Defined at:
  6645 ;;		line 103 in file "../usbctrltrf.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  setup_cnt       1    9[BANK0 ] unsigned char 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      unsigned char 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0
  6660 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6661 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6662 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6663 ;;Total ram usage:        3 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    6
  6666 ;; This function calls:
  6667 ;;		_USBCtrlTrfSetupHandler
  6668 ;;		_USBCtrlTrfOutHandler
  6669 ;;		_USBCtrlTrfInHandler
  6670 ;; This function is called by:
  6671 ;;		_USBDriverService
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           psect	text10,class=CODE,space=0,reloc=2
  6675                           global __ptext10
  6676  0017D8                     __ptext10:
  6677                           psect	text10
  6678                           	file	"../usbctrltrf.c"
  6679                           	line	103
  6680                           	global	__size_of_USBCtrlEPService
  6681  0000                     	__size_of_USBCtrlEPService	equ	__end_of_USBCtrlEPService-_USBCtrlEPService
  6682                           	
  6683  0017D8                     _USBCtrlEPService:
  6684                           	opt	stack 22
  6685                           	line	104
  6686                           	
  6687  0017D8                     l3632:
  6688                           ;usbctrltrf.c: 104: if(USTAT == ((0x00<<3)|(0<<2)))
  6689  0017D8  6661               	tstfsz	((c:3937)),c	;volatile
  6690  0017DA  D001               	goto	u3131
  6691  0017DC  D001               	goto	u3130
  6692  0017DE                     u3131:
  6693  0017DE  D066               	goto	l3656
  6694  0017E0                     u3130:
  6695                           	line	106
  6696                           	
  6697  0017E0                     l3634:
  6698                           ;usbctrltrf.c: 106: { UIRbits.TRNIF = 0;
  6699  0017E0  9665               	bcf	((c:3941)),c,3	;volatile
  6700                           	line	109
  6701                           	
  6702  0017E2                     l3636:
  6703                           ;usbctrltrf.c: 109: if(ep0Bo.Stat.PID == 0b00001101)
  6704  0017E2  0104               	movlb	4	; () banked
  6705  0017E4  0104               	movlb	4	; () banked
  6706  0017E6  3100               	rrcf	((1024))&0ffh,w	;volatile
  6707  0017E8  32E8               	rrcf	wreg,f
  6708  0017EA  0B0F               	andlw	(1<<4)-1
  6709  0017EC  0A0D               	xorlw	0Dh
  6710  0017EE  A4D8               	btfss	status,2
  6711  0017F0  D001               	goto	u3141
  6712  0017F2  D001               	goto	u3140
  6713  0017F4                     u3141:
  6714  0017F4  D057               	goto	l3654
  6715  0017F6                     u3140:
  6716                           	line	114
  6717                           	
  6718  0017F6                     l3638:; BSR set to: 4
  6719                           
  6720                           ;usbctrltrf.c: 110: {
  6721                           ;usbctrltrf.c: 114: if(ep0Bo.ADR == (byte*)(&CtrlTrfData))
  6722  0017F6  0E00               	movlw	low(1536)	;volatile
  6723  0017F8  0100               	movlb	0	; () banked
  6724  0017FA  6FE7               	movwf	(??_USBCtrlEPService+0+0)&0ffh
  6725  0017FC  0E06               	movlw	high(1536)	;volatile
  6726  0017FE  6FE8               	movwf	(??_USBCtrlEPService+0+0+1)&0ffh
  6727  001800  0104               	movlb	4	; () banked
  6728  001802  EE24 F002          	lfsr	2,1024+02h	;volatile
  6729  001806  0100               	movlb	0	; () banked
  6730  001808  52DE               	movf	postinc2
  6731  00180A  51E8               	movf	(??_USBCtrlEPService+0+1)&0ffh,w
  6732  00180C  18DD               	xorwf	postdec2,w
  6733  00180E  C0E7  FFE8         	movff	??_USBCtrlEPService+0+0,wreg
  6734  001812  B4D8               	btfsc	status,2
  6735  001814  18DF               	xorwf	indf2,w
  6736                           
  6737  001816  A4D8               	btfss	status,2
  6738  001818  D001               	goto	u3151
  6739  00181A  D001               	goto	u3150
  6740  00181C                     u3151:
  6741  00181C  D040               	goto	l3652
  6742  00181E                     u3150:
  6743                           	line	118
  6744                           	
  6745  00181E                     l3640:; BSR set to: 0
  6746                           
  6747                           ;usbctrltrf.c: 115: {
  6748                           ;usbctrltrf.c: 116: unsigned char setup_cnt;
  6749                           ;usbctrltrf.c: 118: ep0Bo.ADR = (byte*)(&SetupPkt);
  6750  00181E  0105               	movlb	5	; () banked
  6751  001820  0E05               	movlw	high(1280)	;volatile
  6752  001822  0104               	movlb	4	; () banked
  6753  001824  0104               	movlb	4	; () banked
  6754  001826  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  6755  001828  0105               	movlb	5	; () banked
  6756  00182A  0E00               	movlw	low(1280)	;volatile
  6757  00182C  0104               	movlb	4	; () banked
  6758  00182E  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  6759                           	line	119
  6760                           	
  6761  001830                     l3642:; BSR set to: 4
  6762                           
  6763                           ;usbctrltrf.c: 119: for(setup_cnt = 0; setup_cnt < sizeof(CTRL_TRF_SETUP); setup_cnt++)
  6764  001830  0100               	movlb	0	; () banked
  6765  001832  6FE7               	movwf	(??_USBCtrlEPService+0+0)&0ffh
  6766  001834  0E00               	movlw	low(0)
  6767  001836  0100               	movlb	0	; () banked
  6768  001838  0100               	movlb	0	; () banked
  6769  00183A  6FE9               	movwf	((USBCtrlEPService@setup_cnt))&0ffh
  6770  00183C  0100               	movlb	0	; () banked
  6771  00183E  51E7               	movf	(??_USBCtrlEPService+0+0)&0ffh,w
  6772  001840  0E07               	movlw	(08h-1)
  6773  001842  0100               	movlb	0	; () banked
  6774  001844  0100               	movlb	0	; () banked
  6775  001846  65E9               	cpfsgt	((USBCtrlEPService@setup_cnt))&0ffh
  6776  001848  D001               	goto	u3161
  6777  00184A  D001               	goto	u3160
  6778  00184C                     u3161:
  6779  00184C  D002               	goto	l3646
  6780  00184E                     u3160:
  6781  00184E  D027               	goto	l3652
  6782                           	
  6783  001850                     l3644:; BSR set to: 0
  6784                           
  6785  001850  D026               	goto	l3652
  6786                           	line	120
  6787                           	
  6788  001852                     l308:; BSR set to: 0
  6789                           
  6790                           	line	121
  6791                           	
  6792  001852                     l3646:; BSR set to: 0
  6793                           
  6794                           ;usbctrltrf.c: 120: {
  6795                           ;usbctrltrf.c: 121: *(((byte*)&SetupPkt)+setup_cnt) = *(((byte*)&CtrlTrfData)+setup_cnt)
                                 ;
  6796  001852  0100               	movlb	0	; () banked
  6797  001854  0100               	movlb	0	; () banked
  6798  001856  51E9               	movf	((USBCtrlEPService@setup_cnt))&0ffh,w
  6799  001858  0D01               	mullw	01h
  6800  00185A  0106               	movlb	6	; () banked
  6801  00185C  0E00               	movlw	low(1536)	;volatile
  6802  00185E  24F3               	addwf	(prodl),c,w
  6803  001860  6ED9               	movwf	c:fsr2l
  6804  001862  0106               	movlb	6	; () banked
  6805  001864  0E06               	movlw	high(1536)	;volatile
  6806  001866  20F4               	addwfc	prod+1,w
  6807  001868  6EDA               	movwf	1+c:fsr2l
  6808  00186A  0100               	movlb	0	; () banked
  6809  00186C  0100               	movlb	0	; () banked
  6810  00186E  51E9               	movf	((USBCtrlEPService@setup_cnt))&0ffh,w
  6811  001870  0D01               	mullw	01h
  6812  001872  0105               	movlb	5	; () banked
  6813  001874  0E00               	movlw	low(1280)	;volatile
  6814  001876  24F3               	addwf	(prodl),c,w
  6815  001878  6EE1               	movwf	c:fsr1l
  6816  00187A  0105               	movlb	5	; () banked
  6817  00187C  0E05               	movlw	high(1280)	;volatile
  6818  00187E  20F4               	addwfc	prod+1,w
  6819  001880  6EE2               	movwf	1+c:fsr1l
  6820  001882  CFDF FFE7          	movff	indf2,indf1
  6821                           	line	119
  6822                           	
  6823  001886                     l3648:; BSR set to: 5
  6824                           
  6825  001886  0100               	movlb	0	; () banked
  6826  001888  0100               	movlb	0	; () banked
  6827  00188A  2BE9               	incf	((USBCtrlEPService@setup_cnt))&0ffh
  6828                           	
  6829  00188C                     l3650:; BSR set to: 0
  6830                           
  6831  00188C  0E07               	movlw	(08h-1)
  6832  00188E  0100               	movlb	0	; () banked
  6833  001890  0100               	movlb	0	; () banked
  6834  001892  65E9               	cpfsgt	((USBCtrlEPService@setup_cnt))&0ffh
  6835  001894  D001               	goto	u3171
  6836  001896  D001               	goto	u3170
  6837  001898                     u3171:
  6838  001898  D7DC               	goto	l3646
  6839  00189A                     u3170:
  6840  00189A  D001               	goto	l3652
  6841                           	
  6842  00189C                     l309:; BSR set to: 0
  6843                           
  6844  00189C  D000               	goto	l3652
  6845                           	line	123
  6846                           	
  6847  00189E                     l307:; BSR set to: 0
  6848                           
  6849                           	line	126
  6850                           	
  6851  00189E                     l3652:; BSR set to: 0
  6852                           
  6853                           ;usbctrltrf.c: 122: }
  6854                           ;usbctrltrf.c: 123: }
  6855                           ;usbctrltrf.c: 126: USBCtrlTrfSetupHandler();
  6856  00189E  ECAE  F00D         	call	_USBCtrlTrfSetupHandler	;wreg free
  6857                           	line	127
  6858                           ;usbctrltrf.c: 127: }
  6859  0018A2  D012               	goto	l3666
  6860                           	line	128
  6861                           	
  6862  0018A4                     l306:
  6863                           	line	131
  6864                           	
  6865  0018A4                     l3654:
  6866                           ;usbctrltrf.c: 128: else
  6867                           ;usbctrltrf.c: 129: {
  6868                           ;usbctrltrf.c: 131: USBCtrlTrfOutHandler();
  6869  0018A4  EC10  F010         	call	_USBCtrlTrfOutHandler	;wreg free
  6870  0018A8  D00F               	goto	l3666
  6871                           	line	132
  6872                           	
  6873  0018AA                     l310:
  6874                           	line	135
  6875                           ;usbctrltrf.c: 132: }
  6876                           ;usbctrltrf.c: 135: }
  6877  0018AA  D00E               	goto	l3666
  6878                           	line	136
  6879                           	
  6880  0018AC                     l305:
  6881                           	
  6882  0018AC                     l3656:
  6883                           ;usbctrltrf.c: 136: else if(USTAT == ((0x00<<3)|(1<<2)))
  6884  0018AC  5061               	movf	((c:3937)),c,w	;volatile
  6885  0018AE  0A04               	xorlw	4
  6886                           
  6887  0018B0  A4D8               	btfss	status,2
  6888  0018B2  D001               	goto	u3181
  6889  0018B4  D001               	goto	u3180
  6890  0018B6                     u3181:
  6891  0018B6  D004               	goto	l3662
  6892  0018B8                     u3180:
  6893                           	line	138
  6894                           	
  6895  0018B8                     l3658:
  6896                           ;usbctrltrf.c: 137: {
  6897                           ;usbctrltrf.c: 138: UIRbits.TRNIF = 0;
  6898  0018B8  9665               	bcf	((c:3941)),c,3	;volatile
  6899                           	line	139
  6900                           	
  6901  0018BA                     l3660:
  6902                           ;usbctrltrf.c: 139: USBCtrlTrfInHandler();
  6903  0018BA  EC46  F00F         	call	_USBCtrlTrfInHandler	;wreg free
  6904                           	line	140
  6905                           ;usbctrltrf.c: 140: }
  6906  0018BE  D004               	goto	l3666
  6907                           	line	141
  6908                           	
  6909  0018C0                     l312:
  6910                           	line	143
  6911                           	
  6912  0018C0                     l3662:
  6913                           ;usbctrltrf.c: 141: else
  6914                           ;usbctrltrf.c: 142: {
  6915                           ;usbctrltrf.c: 143: return 0;
  6916  0018C0  0E00               	movlw	(0)&0ffh
  6917  0018C2  D004               	goto	l314
  6918                           	
  6919  0018C4                     l3664:
  6920  0018C4  D003               	goto	l314
  6921                           	line	144
  6922                           	
  6923  0018C6                     l313:
  6924  0018C6  D000               	goto	l3666
  6925                           	
  6926  0018C8                     l311:
  6927                           	line	145
  6928                           	
  6929  0018C8                     l3666:
  6930                           ;usbctrltrf.c: 144: }
  6931                           ;usbctrltrf.c: 145: return 1;
  6932  0018C8  0E01               	movlw	(01h)&0ffh
  6933  0018CA  D000               	goto	l314
  6934                           	
  6935  0018CC                     l3668:
  6936                           	line	147
  6937                           	
  6938  0018CC                     l314:
  6939  0018CC  0012               	return
  6940                           	opt stack 0
  6941                           GLOBAL	__end_of_USBCtrlEPService
  6942  0018CE                     	__end_of_USBCtrlEPService:
  6943                           	signat	_USBCtrlEPService,89
  6944                           	global	_USBCtrlTrfSetupHandler
  6945                           
  6946 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6947 ;; Defined at:
  6948 ;;		line 191 in file "../usbctrltrf.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  i               1    6[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;		None               void
  6955 ;; Registers used:
  6956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6964 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6965 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        2 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    5
  6969 ;; This function calls:
  6970 ;;		_USBCheckStdRequest
  6971 ;;		_USBCheckHIDRequest
  6972 ;;		_USBCtrlEPServiceComplete
  6973 ;; This function is called by:
  6974 ;;		_USBCtrlEPService
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           psect	text11,class=CODE,space=0,reloc=2
  6978                           global __ptext11
  6979  001B5C                     __ptext11:
  6980                           psect	text11
  6981                           	file	"../usbctrltrf.c"
  6982                           	line	191
  6983                           	global	__size_of_USBCtrlTrfSetupHandler
  6984  0000                     	__size_of_USBCtrlTrfSetupHandler	equ	__end_of_USBCtrlTrfSetupHandler-_USBCtrlTrfSetupHa
                                 ndler
  6985                           	
  6986  001B5C                     _USBCtrlTrfSetupHandler:
  6987                           	opt	stack 22
  6988                           	line	208
  6989                           	
  6990  001B5C                     l3670:
  6991                           ;usbctrltrf.c: 192: byte i;
  6992                           ;usbctrltrf.c: 208: if(ep0Bi.Stat.UOWN != 0)
  6993  001B5C  0104               	movlb	4	; () banked
  6994                           	
  6995  001B5E  0104               	movlb	4	; () banked
  6996  001B60  AF04               	btfss	((1028))&0ffh,7	;volatile
  6997  001B62  D001               	goto	u3191
  6998  001B64  D001               	goto	u3190
  6999  001B66                     u3191:
  7000  001B66  D005               	goto	l3674
  7001  001B68                     u3190:
  7002                           	line	209
  7003                           	
  7004  001B68                     l3672:; BSR set to: 4
  7005                           
  7006                           ;usbctrltrf.c: 209: ep0Bi.Stat._byte = 0x00;
  7007  001B68  0E00               	movlw	low(0)
  7008  001B6A  0104               	movlb	4	; () banked
  7009  001B6C  0104               	movlb	4	; () banked
  7010  001B6E  6F04               	movwf	((1028))&0ffh	;volatile
  7011  001B70  D000               	goto	l3674
  7012                           	
  7013  001B72                     l317:; BSR set to: 4
  7014                           
  7015                           	line	210
  7016                           	
  7017  001B72                     l3674:; BSR set to: 4
  7018                           
  7019                           ;usbctrltrf.c: 210: short_pkt_status = 0;
  7020  001B72  0100               	movlb	0	; () banked
  7021  001B74  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7022  001B76  0E00               	movlw	low(0)
  7023  001B78  6E1E               	movwf	((c:_short_pkt_status)),c
  7024  001B7A  0100               	movlb	0	; () banked
  7025  001B7C  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7026                           	line	214
  7027                           	
  7028  001B7E                     l3676:; BSR set to: 0
  7029                           
  7030                           ;usbctrltrf.c: 214: ctrl_trf_state = 0;
  7031  001B7E  0100               	movlb	0	; () banked
  7032  001B80  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7033  001B82  0E00               	movlw	low(0)
  7034  001B84  6E1C               	movwf	((c:_ctrl_trf_state)),c
  7035  001B86  0100               	movlb	0	; () banked
  7036  001B88  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7037                           	line	215
  7038                           	
  7039  001B8A                     l3678:; BSR set to: 0
  7040                           
  7041                           ;usbctrltrf.c: 215: ctrl_trf_session_owner = 0;
  7042  001B8A  0100               	movlb	0	; () banked
  7043  001B8C  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7044  001B8E  0E00               	movlw	low(0)
  7045  001B90  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7046  001B92  0100               	movlb	0	; () banked
  7047  001B94  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7048                           	line	216
  7049                           	
  7050  001B96                     l3680:; BSR set to: 0
  7051                           
  7052                           ;usbctrltrf.c: 216: wCount._word = 0;
  7053  001B96  0E00               	movlw	high(0)
  7054  001B98  6E22               	movwf	((c:_wCount+1)),c
  7055  001B9A  0E00               	movlw	low(0)
  7056  001B9C  6E21               	movwf	((c:_wCount)),c
  7057                           	line	219
  7058                           	
  7059  001B9E                     l3682:; BSR set to: 0
  7060                           
  7061                           ;usbctrltrf.c: 219: USBCheckStdRequest();
  7062  001B9E  ECC4  F009         	call	_USBCheckStdRequest	;wreg free
  7063                           	line	221
  7064                           	
  7065  001BA2                     l3684:
  7066                           ;usbctrltrf.c: 221: for(i=0;i < (sizeof(ClassReqHandler)/sizeof(pFunc));i++)
  7067  001BA2  0100               	movlb	0	; () banked
  7068  001BA4  6FE5               	movwf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh
  7069  001BA6  0E00               	movlw	low(0)
  7070  001BA8  0100               	movlb	0	; () banked
  7071  001BAA  0100               	movlb	0	; () banked
  7072  001BAC  6FE6               	movwf	((USBCtrlTrfSetupHandler@i))&0ffh
  7073  001BAE  0100               	movlb	0	; () banked
  7074  001BB0  51E5               	movf	(??_USBCtrlTrfSetupHandler+0+0)&0ffh,w
  7075                           	
  7076  001BB2                     l3686:; BSR set to: 0
  7077                           
  7078  001BB2  0100               	movlb	0	; () banked
  7079  001BB4  0100               	movlb	0	; () banked
  7080  001BB6  51E6               	movf	((USBCtrlTrfSetupHandler@i))&0ffh,w
  7081  001BB8  B4D8               	btfsc	status,2
  7082  001BBA  D001               	goto	u3201
  7083  001BBC  D001               	goto	u3200
  7084  001BBE                     u3201:
  7085  001BBE  D002               	goto	l3690
  7086  001BC0                     u3200:
  7087  001BC0  D02B               	goto	l3700
  7088                           	
  7089  001BC2                     l3688:; BSR set to: 0
  7090                           
  7091  001BC2  D02A               	goto	l3700
  7092                           	line	222
  7093                           	
  7094  001BC4                     l318:; BSR set to: 0
  7095                           
  7096                           	line	223
  7097                           	
  7098  001BC4                     l3690:; BSR set to: 0
  7099                           
  7100                           ;usbctrltrf.c: 222: {
  7101                           ;usbctrltrf.c: 223: if(ctrl_trf_session_owner != 0)break;
  7102  001BC4  501B               	movf	((c:_ctrl_trf_session_owner)),c,w
  7103  001BC6  B4D8               	btfsc	status,2
  7104  001BC8  D001               	goto	u3211
  7105  001BCA  D001               	goto	u3210
  7106  001BCC                     u3211:
  7107  001BCC  D002               	goto	l3694
  7108  001BCE                     u3210:
  7109  001BCE  D024               	goto	l3700
  7110                           	
  7111  001BD0                     l3692:; BSR set to: 0
  7112                           
  7113  001BD0  D023               	goto	l3700
  7114                           	
  7115  001BD2                     l320:; BSR set to: 0
  7116                           
  7117                           	line	224
  7118                           	
  7119  001BD2                     l3694:; BSR set to: 0
  7120                           
  7121                           ;usbctrltrf.c: 224: ClassReqHandler[i]();
  7122  001BD2  0100               	movlb	0	; () banked
  7123  001BD4  0100               	movlb	0	; () banked
  7124  001BD6  51E6               	movf	((USBCtrlTrfSetupHandler@i))&0ffh,w
  7125  001BD8  0D02               	mullw	02h
  7126  001BDA  0E0A               	movlw	low((_ClassReqHandler))
  7127  001BDC  24F3               	addwf	(prodl),c,w
  7128  001BDE  6EF6               	movwf	tblptrl
  7129  001BE0  0E08               	movlw	high((_ClassReqHandler))
  7130  001BE2  20F4               	addwfc	(prodh),c,w
  7131  001BE4  6EF7               	movwf	tblptrh
  7132  001BE6  D801               	call	u3228
  7133  001BE8  D00C               	goto	u3229
  7134  001BEA                     u3228:
  7135  001BEA  0005               	push
  7136  001BEC  6EFA               	movwf	pclath
  7137  001BEE  0009               	tblrd	*+
  7138                           	
  7139  001BF0  50F5               	movf	tablat,w
  7140  001BF2  6EFD               	movwf	tosl
  7141  001BF4  0009               	tblrd	*+
  7142                           	
  7143  001BF6  50F5               	movf	tablat,w
  7144  001BF8  6EFE               	movwf	tosl+1
  7145  001BFA  50F8               	movf	tblptru,w
  7146  001BFC  6EFF               	movwf	tosl+2
  7147  001BFE  50FA               	movf	pclath,w
  7148                           	
  7149  001C00  0012               	return	;indir
  7150  001C02                     	u3229:
  7151                           	line	221
  7152                           	
  7153  001C02                     l3696:
  7154  001C02  0100               	movlb	0	; () banked
  7155  001C04  0100               	movlb	0	; () banked
  7156  001C06  2BE6               	incf	((USBCtrlTrfSetupHandler@i))&0ffh
  7157                           	
  7158  001C08                     l3698:; BSR set to: 0
  7159                           
  7160  001C08  0100               	movlb	0	; () banked
  7161  001C0A  0100               	movlb	0	; () banked
  7162  001C0C  51E6               	movf	((USBCtrlTrfSetupHandler@i))&0ffh,w
  7163  001C0E  B4D8               	btfsc	status,2
  7164  001C10  D001               	goto	u3231
  7165  001C12  D001               	goto	u3230
  7166  001C14                     u3231:
  7167  001C14  D7D7               	goto	l3690
  7168  001C16                     u3230:
  7169  001C16  D000               	goto	l3700
  7170                           	
  7171  001C18                     l319:; BSR set to: 0
  7172                           
  7173                           	line	228
  7174                           	
  7175  001C18                     l3700:; BSR set to: 0
  7176                           
  7177                           ;usbctrltrf.c: 225: }
  7178                           ;usbctrltrf.c: 228: USBCtrlEPServiceComplete();
  7179  001C18  EC67  F00C         	call	_USBCtrlEPServiceComplete	;wreg free
  7180                           	line	230
  7181                           	
  7182  001C1C                     l321:
  7183  001C1C  0012               	return
  7184                           	opt stack 0
  7185                           GLOBAL	__end_of_USBCtrlTrfSetupHandler
  7186  001C1E                     	__end_of_USBCtrlTrfSetupHandler:
  7187                           	signat	_USBCtrlTrfSetupHandler,88
  7188                           	global	_USBCheckHIDRequest
  7189                           
  7190 ;; *************** function _USBCheckHIDRequest *****************
  7191 ;; Defined at:
  7192 ;;		line 76 in file "../hid.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;		None               void
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7208 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7209 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7210 ;;Total ram usage:        1 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    3
  7213 ;; This function calls:
  7214 ;;		_HIDGetReportHandler
  7215 ;;		_HIDSetReportHandler
  7216 ;; This function is called by:
  7217 ;;		_USBCtrlTrfSetupHandler
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           psect	text12,class=CODE,space=0,reloc=2
  7221                           global __ptext12
  7222  000F6E                     __ptext12:
  7223                           psect	text12
  7224                           	file	"../hid.c"
  7225                           	line	76
  7226                           	global	__size_of_USBCheckHIDRequest
  7227  0000                     	__size_of_USBCheckHIDRequest	equ	__end_of_USBCheckHIDRequest-_USBCheckHIDRequest
  7228                           	
  7229  000F6E                     _USBCheckHIDRequest:
  7230                           	opt	stack 23
  7231                           	line	77
  7232                           	
  7233  000F6E                     l3074:
  7234                           ;hid.c: 77: if(SetupPkt.Recipient != 1) return;
  7235  000F6E  0105               	movlb	5	; () banked
  7236  000F70  0105               	movlb	5	; () banked
  7237  000F72  5100               	movf	((1280))&0ffh,w	;volatile
  7238  000F74  0B1F               	andlw	(1<<5)-1
  7239  000F76  0100               	movlb	0	; () banked
  7240  000F78  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7241  000F7A  0100               	movlb	0	; () banked
  7242  000F7C  05E0               	decf	((??_USBCheckHIDRequest+0+0))&0ffh,w
  7243  000F7E  B4D8               	btfsc	status,2
  7244  000F80  D001               	goto	u2381
  7245  000F82  D001               	goto	u2380
  7246  000F84                     u2381:
  7247  000F84  D002               	goto	l3078
  7248  000F86                     u2380:
  7249  000F86  D0B7               	goto	l40
  7250                           	
  7251  000F88                     l3076:; BSR set to: 0
  7252                           
  7253  000F88  D0B6               	goto	l40
  7254                           	
  7255  000F8A                     l39:; BSR set to: 0
  7256                           
  7257                           	line	78
  7258                           	
  7259  000F8A                     l3078:; BSR set to: 0
  7260                           
  7261                           ;hid.c: 78: if(SetupPkt.bIntfID != 0x00) return;
  7262  000F8A  0105               	movlb	5	; () banked
  7263  000F8C  0105               	movlb	5	; () banked
  7264  000F8E  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  7265  000F90  B4D8               	btfsc	status,2
  7266  000F92  D001               	goto	u2391
  7267  000F94  D001               	goto	u2390
  7268  000F96                     u2391:
  7269  000F96  D002               	goto	l3082
  7270  000F98                     u2390:
  7271  000F98  D0AE               	goto	l40
  7272                           	
  7273  000F9A                     l3080:; BSR set to: 5
  7274                           
  7275  000F9A  D0AD               	goto	l40
  7276                           	
  7277  000F9C                     l41:; BSR set to: 5
  7278                           
  7279                           	line	85
  7280                           	
  7281  000F9C                     l3082:; BSR set to: 5
  7282                           
  7283                           ;hid.c: 85: if(SetupPkt.bRequest == 6)
  7284  000F9C  0105               	movlb	5	; () banked
  7285  000F9E  0105               	movlb	5	; () banked
  7286  000FA0  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  7287  000FA2  0A06               	xorlw	6
  7288                           
  7289  000FA4  A4D8               	btfss	status,2
  7290  000FA6  D001               	goto	u2401
  7291  000FA8  D001               	goto	u2400
  7292  000FAA                     u2401:
  7293  000FAA  D042               	goto	l3106
  7294  000FAC                     u2400:
  7295  000FAC  D032               	goto	l3104
  7296                           	line	87
  7297                           	
  7298  000FAE                     l3084:; BSR set to: 5
  7299                           
  7300                           ;hid.c: 86: {
  7301                           ;hid.c: 87: switch(SetupPkt.bDscType)
  7302  000FAE  D031               	goto	l3104
  7303                           	line	89
  7304                           ;hid.c: 88: {
  7305                           ;hid.c: 89: case 0x21:
  7306                           	
  7307  000FB0                     l44:; BSR set to: 5
  7308                           
  7309                           	line	90
  7310                           	
  7311  000FB0                     l3086:; BSR set to: 5
  7312                           
  7313                           ;hid.c: 90: ctrl_trf_session_owner = 2;
  7314  000FB0  0100               	movlb	0	; () banked
  7315  000FB2  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7316  000FB4  0E02               	movlw	low(02h)
  7317  000FB6  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7318  000FB8  0100               	movlb	0	; () banked
  7319  000FBA  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7320                           	line	91
  7321                           	
  7322  000FBC                     l3088:; BSR set to: 0
  7323                           
  7324                           ;hid.c: 91: { if(usb_active_cfg == 1) pSrc.bRom = (const byte*)&cfg01.hid_i00a00; };
  7325  000FBC  0425               	decf	((c:_usb_active_cfg)),c,w
  7326                           
  7327  000FBE  A4D8               	btfss	status,2
  7328  000FC0  D001               	goto	u2411
  7329  000FC2  D001               	goto	u2410
  7330  000FC4                     u2411:
  7331  000FC4  D004               	goto	l45
  7332  000FC6                     u2410:
  7333                           	
  7334  000FC6                     l3090:; BSR set to: 0
  7335                           
  7336  000FC6  0E08               	movlw	high(_cfg01+012h)
  7337  000FC8  6E0B               	movwf	((c:_pSrc+1)),c
  7338  000FCA  0E52               	movlw	low(_cfg01+012h)
  7339  000FCC  6E0A               	movwf	((c:_pSrc)),c
  7340                           	
  7341  000FCE                     l45:; BSR set to: 0
  7342                           
  7343                           	line	92
  7344                           ;hid.c: 92: wCount._word = sizeof(USB_HID_DSC);
  7345  000FCE  0E00               	movlw	high(09h)
  7346  000FD0  6E22               	movwf	((c:_wCount+1)),c
  7347  000FD2  0E09               	movlw	low(09h)
  7348  000FD4  6E21               	movwf	((c:_wCount)),c
  7349                           	line	93
  7350                           ;hid.c: 93: break;
  7351  000FD6  D02A               	goto	l46
  7352                           	line	94
  7353                           ;hid.c: 94: case 0x22:
  7354                           	
  7355  000FD8                     l47:; BSR set to: 0
  7356                           
  7357                           	line	95
  7358                           	
  7359  000FD8                     l3092:
  7360                           ;hid.c: 95: ctrl_trf_session_owner = 2;
  7361  000FD8  0100               	movlb	0	; () banked
  7362  000FDA  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7363  000FDC  0E02               	movlw	low(02h)
  7364  000FDE  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7365  000FE0  0100               	movlb	0	; () banked
  7366  000FE2  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7367                           	line	96
  7368                           	
  7369  000FE4                     l3094:; BSR set to: 0
  7370                           
  7371                           ;hid.c: 96: { if(usb_active_cfg == 1) pSrc.bRom = (const byte*)&hid_rpt01; };
  7372  000FE4  0425               	decf	((c:_usb_active_cfg)),c,w
  7373                           
  7374  000FE6  A4D8               	btfss	status,2
  7375  000FE8  D001               	goto	u2421
  7376  000FEA  D001               	goto	u2420
  7377  000FEC                     u2421:
  7378  000FEC  D005               	goto	l3098
  7379  000FEE                     u2420:
  7380                           	
  7381  000FEE                     l3096:; BSR set to: 0
  7382                           
  7383  000FEE  0E08               	movlw	high(_hid_rpt01)
  7384  000FF0  6E0B               	movwf	((c:_pSrc+1)),c
  7385  000FF2  0E8F               	movlw	low(_hid_rpt01)
  7386  000FF4  6E0A               	movwf	((c:_pSrc)),c
  7387  000FF6  D000               	goto	l3098
  7388                           	
  7389  000FF8                     l48:; BSR set to: 0
  7390                           
  7391                           	line	97
  7392                           	
  7393  000FF8                     l3098:; BSR set to: 0
  7394                           
  7395                           ;hid.c: 97: { if(usb_active_cfg == 1) wCount._word = sizeof(hid_rpt01); };
  7396  000FF8  0425               	decf	((c:_usb_active_cfg)),c,w
  7397                           
  7398  000FFA  A4D8               	btfss	status,2
  7399  000FFC  D001               	goto	u2431
  7400  000FFE  D001               	goto	u2430
  7401  001000                     u2431:
  7402  001000  D015               	goto	l46
  7403  001002                     u2430:
  7404                           	
  7405  001002                     l3100:; BSR set to: 0
  7406                           
  7407  001002  0E00               	movlw	high(01Dh)
  7408  001004  6E22               	movwf	((c:_wCount+1)),c
  7409  001006  0E1D               	movlw	low(01Dh)
  7410  001008  6E21               	movwf	((c:_wCount)),c
  7411  00100A  D010               	goto	l46
  7412                           	
  7413  00100C                     l49:; BSR set to: 0
  7414                           
  7415                           	line	98
  7416                           ;hid.c: 98: break;
  7417  00100C  D00F               	goto	l46
  7418                           	line	99
  7419                           ;hid.c: 99: case 0x23:
  7420                           	
  7421  00100E                     l50:; BSR set to: 0
  7422                           
  7423                           	line	101
  7424                           ;hid.c: 101: break;
  7425  00100E  D00E               	goto	l46
  7426                           	line	102
  7427                           	
  7428  001010                     l3102:; BSR set to: 0
  7429                           
  7430                           ;hid.c: 102: }
  7431  001010  D00D               	goto	l46
  7432                           	line	87
  7433                           	
  7434  001012                     l43:; BSR set to: 0
  7435                           
  7436                           	
  7437  001012                     l3104:
  7438  001012  0105               	movlb	5	; () banked
  7439  001014  0105               	movlb	5	; () banked
  7440  001016  5103               	movf	(0+(1280+03h))&0ffh,w	;volatile
  7441                           	; Switch size 1, requested type "space"
  7442                           ; Number of cases is 3, Range of values is 33 to 35
  7443                           ; switch strategies available:
  7444                           ; Name         Instructions Cycles
  7445                           ; simple_byte           10     6 (average)
  7446                           ;	Chosen strategy is simple_byte
  7447                           
  7448  001018  0A21               	xorlw	33^0	; case 33
  7449  00101A  B4D8               	skipnz
  7450  00101C  D7C9               	goto	l3086
  7451  00101E  0A03               	xorlw	34^33	; case 34
  7452  001020  B4D8               	skipnz
  7453  001022  D7DA               	goto	l3092
  7454  001024  0A01               	xorlw	35^34	; case 35
  7455  001026  B4D8               	skipnz
  7456  001028  D001               	goto	l46
  7457  00102A  D000               	goto	l46
  7458                           
  7459                           	line	102
  7460                           	
  7461  00102C                     l46:
  7462                           	line	103
  7463                           ;hid.c: 103: usb_stat.ctrl_trf_mem = 1;
  7464  00102C  8220               	bsf	((c:_usb_stat)),c,1
  7465  00102E  D000               	goto	l3106
  7466                           	line	104
  7467                           	
  7468  001030                     l42:
  7469                           	line	106
  7470                           	
  7471  001030                     l3106:
  7472                           ;hid.c: 104: }
  7473                           ;hid.c: 106: if(SetupPkt.RequestType != 0x01) return;
  7474  001030  0105               	movlb	5	; () banked
  7475  001032  0105               	movlb	5	; () banked
  7476  001034  3900               	swapf	((1280))&0ffh,w	;volatile
  7477  001036  32E8               	rrcf	wreg,f
  7478  001038  0B03               	andlw	(1<<2)-1
  7479  00103A  0100               	movlb	0	; () banked
  7480  00103C  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7481  00103E  0100               	movlb	0	; () banked
  7482  001040  05E0               	decf	((??_USBCheckHIDRequest+0+0))&0ffh,w
  7483  001042  B4D8               	btfsc	status,2
  7484  001044  D001               	goto	u2441
  7485  001046  D001               	goto	u2440
  7486  001048                     u2441:
  7487  001048  D040               	goto	l3140
  7488  00104A                     u2440:
  7489  00104A  D055               	goto	l40
  7490                           	
  7491  00104C                     l3108:; BSR set to: 0
  7492                           
  7493  00104C  D054               	goto	l40
  7494                           	
  7495  00104E                     l51:; BSR set to: 0
  7496                           
  7497                           	line	107
  7498                           ;hid.c: 107: switch(SetupPkt.bRequest)
  7499  00104E  D03D               	goto	l3140
  7500                           	line	109
  7501                           ;hid.c: 108: {
  7502                           ;hid.c: 109: case 0x01:
  7503                           	
  7504  001050                     l53:; BSR set to: 0
  7505                           
  7506                           	line	110
  7507                           	
  7508  001050                     l3110:
  7509                           ;hid.c: 110: HIDGetReportHandler();
  7510  001050  EC23  F012         	call	_HIDGetReportHandler	;wreg free
  7511                           	line	111
  7512                           ;hid.c: 111: break;
  7513  001054  D050               	goto	l40
  7514                           	line	112
  7515                           ;hid.c: 112: case 0x09:
  7516                           	
  7517  001056                     l55:
  7518                           	line	113
  7519                           	
  7520  001056                     l3112:
  7521                           ;hid.c: 113: HIDSetReportHandler();
  7522  001056  EC24  F012         	call	_HIDSetReportHandler	;wreg free
  7523                           	line	114
  7524                           ;hid.c: 114: break;
  7525  00105A  D04D               	goto	l40
  7526                           	line	115
  7527                           ;hid.c: 115: case 0x02:
  7528                           	
  7529  00105C                     l56:
  7530                           	line	116
  7531                           	
  7532  00105C                     l3114:
  7533                           ;hid.c: 116: ctrl_trf_session_owner = 2;
  7534  00105C  0100               	movlb	0	; () banked
  7535  00105E  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7536  001060  0E02               	movlw	low(02h)
  7537  001062  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7538  001064  0100               	movlb	0	; () banked
  7539  001066  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7540                           	line	117
  7541                           	
  7542  001068                     l3116:; BSR set to: 0
  7543                           
  7544                           ;hid.c: 117: pSrc.bRam = (byte*)&idle_rate;
  7545  001068  0E00               	movlw	high((c:_idle_rate))
  7546  00106A  6E0B               	movwf	((c:_pSrc+1)),c
  7547  00106C  0E24               	movlw	low((c:_idle_rate))
  7548  00106E  6E0A               	movwf	((c:_pSrc)),c
  7549                           	line	118
  7550                           	
  7551  001070                     l3118:; BSR set to: 0
  7552                           
  7553                           ;hid.c: 118: usb_stat.ctrl_trf_mem = 0;
  7554  001070  9220               	bcf	((c:_usb_stat)),c,1
  7555                           	line	119
  7556                           	
  7557  001072                     l3120:; BSR set to: 0
  7558                           
  7559                           ;hid.c: 119: ((wCount).v[0]) = 1;
  7560  001072  0100               	movlb	0	; () banked
  7561  001074  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7562  001076  0E01               	movlw	low(01h)
  7563  001078  6E21               	movwf	((c:_wCount)),c
  7564  00107A  0100               	movlb	0	; () banked
  7565  00107C  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7566                           	line	120
  7567                           ;hid.c: 120: break;
  7568  00107E  D03B               	goto	l40
  7569                           	line	121
  7570                           ;hid.c: 121: case 0x0A:
  7571                           	
  7572  001080                     l57:; BSR set to: 0
  7573                           
  7574                           	line	122
  7575                           	
  7576  001080                     l3122:
  7577                           ;hid.c: 122: ctrl_trf_session_owner = 2;
  7578  001080  0100               	movlb	0	; () banked
  7579  001082  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7580  001084  0E02               	movlw	low(02h)
  7581  001086  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7582  001088  0100               	movlb	0	; () banked
  7583  00108A  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7584                           	line	123
  7585                           	
  7586  00108C                     l3124:; BSR set to: 0
  7587                           
  7588                           ;hid.c: 123: idle_rate = ((SetupPkt.W_Value).v[1]);
  7589  00108C  C503 F024          	movff	0+(1280+03h),(c:_idle_rate)	;volatile
  7590                           	line	124
  7591                           ;hid.c: 124: break;
  7592  001090  D032               	goto	l40
  7593                           	line	125
  7594                           ;hid.c: 125: case 0x03:
  7595                           	
  7596  001092                     l58:; BSR set to: 0
  7597                           
  7598                           	line	126
  7599                           	
  7600  001092                     l3126:
  7601                           ;hid.c: 126: ctrl_trf_session_owner = 2;
  7602  001092  0100               	movlb	0	; () banked
  7603  001094  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7604  001096  0E02               	movlw	low(02h)
  7605  001098  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7606  00109A  0100               	movlb	0	; () banked
  7607  00109C  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7608                           	line	127
  7609                           	
  7610  00109E                     l3128:; BSR set to: 0
  7611                           
  7612                           ;hid.c: 127: pSrc.bRam = (byte*)&active_protocol;
  7613  00109E  0E00               	movlw	high((c:_active_protocol))
  7614  0010A0  6E0B               	movwf	((c:_pSrc+1)),c
  7615  0010A2  0E23               	movlw	low((c:_active_protocol))
  7616  0010A4  6E0A               	movwf	((c:_pSrc)),c
  7617                           	line	128
  7618                           	
  7619  0010A6                     l3130:; BSR set to: 0
  7620                           
  7621                           ;hid.c: 128: usb_stat.ctrl_trf_mem = 0;
  7622  0010A6  9220               	bcf	((c:_usb_stat)),c,1
  7623                           	line	129
  7624                           	
  7625  0010A8                     l3132:; BSR set to: 0
  7626                           
  7627                           ;hid.c: 129: ((wCount).v[0]) = 1;
  7628  0010A8  0100               	movlb	0	; () banked
  7629  0010AA  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7630  0010AC  0E01               	movlw	low(01h)
  7631  0010AE  6E21               	movwf	((c:_wCount)),c
  7632  0010B0  0100               	movlb	0	; () banked
  7633  0010B2  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7634                           	line	130
  7635                           ;hid.c: 130: break;
  7636  0010B4  D020               	goto	l40
  7637                           	line	131
  7638                           ;hid.c: 131: case 0x0B:
  7639                           	
  7640  0010B6                     l59:; BSR set to: 0
  7641                           
  7642                           	line	132
  7643                           	
  7644  0010B6                     l3134:
  7645                           ;hid.c: 132: ctrl_trf_session_owner = 2;
  7646  0010B6  0100               	movlb	0	; () banked
  7647  0010B8  6FE0               	movwf	(??_USBCheckHIDRequest+0+0)&0ffh
  7648  0010BA  0E02               	movlw	low(02h)
  7649  0010BC  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7650  0010BE  0100               	movlb	0	; () banked
  7651  0010C0  51E0               	movf	(??_USBCheckHIDRequest+0+0)&0ffh,w
  7652                           	line	133
  7653                           	
  7654  0010C2                     l3136:; BSR set to: 0
  7655                           
  7656                           ;hid.c: 133: active_protocol = ((SetupPkt.W_Value).v[0]);
  7657  0010C2  C502 F023          	movff	0+(1280+02h),(c:_active_protocol)	;volatile
  7658                           	line	134
  7659                           ;hid.c: 134: break;
  7660  0010C6  D017               	goto	l40
  7661                           	line	135
  7662                           	
  7663  0010C8                     l3138:; BSR set to: 0
  7664                           
  7665                           ;hid.c: 135: }
  7666  0010C8  D016               	goto	l40
  7667                           	line	107
  7668                           	
  7669  0010CA                     l52:; BSR set to: 0
  7670                           
  7671                           	
  7672  0010CA                     l3140:; BSR set to: 0
  7673                           
  7674  0010CA  0105               	movlb	5	; () banked
  7675  0010CC  0105               	movlb	5	; () banked
  7676  0010CE  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  7677                           	; Switch size 1, requested type "space"
  7678                           ; Number of cases is 6, Range of values is 1 to 11
  7679                           ; switch strategies available:
  7680                           ; Name         Instructions Cycles
  7681                           ; simple_byte           19    10 (average)
  7682                           ;	Chosen strategy is simple_byte
  7683                           
  7684  0010D0  0A01               	xorlw	1^0	; case 1
  7685  0010D2  B4D8               	skipnz
  7686  0010D4  D7BD               	goto	l3110
  7687  0010D6  0A03               	xorlw	2^1	; case 2
  7688  0010D8  B4D8               	skipnz
  7689  0010DA  D7C0               	goto	l3114
  7690  0010DC  0A01               	xorlw	3^2	; case 3
  7691  0010DE  B4D8               	skipnz
  7692  0010E0  D7D8               	goto	l3126
  7693  0010E2  0A0A               	xorlw	9^3	; case 9
  7694  0010E4  B4D8               	skipnz
  7695  0010E6  D7B7               	goto	l3112
  7696  0010E8  0A03               	xorlw	10^9	; case 10
  7697  0010EA  B4D8               	skipnz
  7698  0010EC  D7C9               	goto	l3122
  7699  0010EE  0A01               	xorlw	11^10	; case 11
  7700  0010F0  B4D8               	skipnz
  7701  0010F2  D7E1               	goto	l3134
  7702  0010F4  D000               	goto	l40
  7703                           
  7704                           	line	135
  7705                           	
  7706  0010F6                     l54:; BSR set to: 5
  7707                           
  7708                           	line	137
  7709                           	
  7710  0010F6                     l40:
  7711  0010F6  0012               	return
  7712                           	opt stack 0
  7713                           GLOBAL	__end_of_USBCheckHIDRequest
  7714  0010F8                     	__end_of_USBCheckHIDRequest:
  7715                           	signat	_USBCheckHIDRequest,88
  7716                           	global	_HIDGetReportHandler
  7717                           
  7718 ;; *************** function _HIDGetReportHandler *****************
  7719 ;; Defined at:
  7720 ;;		line 140 in file "../hid.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;		None
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;		None               void
  7727 ;; Registers used:
  7728 ;;		None
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7734 ;;      Params:         0       0       0       0       0       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7738 ;;Total ram usage:        0 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    2
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_USBCheckHIDRequest
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           psect	text13,class=CODE,space=0,reloc=2
  7748                           global __ptext13
  7749  002446                     __ptext13:
  7750                           psect	text13
  7751                           	file	"../hid.c"
  7752                           	line	140
  7753                           	global	__size_of_HIDGetReportHandler
  7754  0000                     	__size_of_HIDGetReportHandler	equ	__end_of_HIDGetReportHandler-_HIDGetReportHandler
  7755                           	
  7756  002446                     _HIDGetReportHandler:
  7757                           	opt	stack 23
  7758                           	line	142
  7759                           	
  7760  002446                     l62:
  7761  002446  0012               	return
  7762                           	opt stack 0
  7763                           GLOBAL	__end_of_HIDGetReportHandler
  7764  002448                     	__end_of_HIDGetReportHandler:
  7765                           	signat	_HIDGetReportHandler,88
  7766                           	global	_HIDSetReportHandler
  7767                           
  7768 ;; *************** function _HIDSetReportHandler *****************
  7769 ;; Defined at:
  7770 ;;		line 145 in file "../hid.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;		None               void
  7777 ;; Registers used:
  7778 ;;		None
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7787 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    2
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_USBCheckHIDRequest
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           psect	text14,class=CODE,space=0,reloc=2
  7798                           global __ptext14
  7799  002448                     __ptext14:
  7800                           psect	text14
  7801                           	file	"../hid.c"
  7802                           	line	145
  7803                           	global	__size_of_HIDSetReportHandler
  7804  0000                     	__size_of_HIDSetReportHandler	equ	__end_of_HIDSetReportHandler-_HIDSetReportHandler
  7805                           	
  7806  002448                     _HIDSetReportHandler:
  7807                           	opt	stack 23
  7808                           	line	148
  7809                           	
  7810  002448                     l65:
  7811  002448  0012               	return
  7812                           	opt stack 0
  7813                           GLOBAL	__end_of_HIDSetReportHandler
  7814  00244A                     	__end_of_HIDSetReportHandler:
  7815                           	signat	_HIDSetReportHandler,88
  7816                           	global	_USBCheckStdRequest
  7817                           
  7818 ;; *************** function _USBCheckStdRequest *****************
  7819 ;; Defined at:
  7820 ;;		line 73 in file "../usb9.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;		None
  7825 ;; Return value:  Size  Location     Type
  7826 ;;		None               void
  7827 ;; Registers used:
  7828 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0
  7835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7836 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7837 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    4
  7841 ;; This function calls:
  7842 ;;		_USBStdGetDscHandler
  7843 ;;		_USBStdSetCfgHandler
  7844 ;;		_USBStdGetStatusHandler
  7845 ;;		_USBStdFeatureReqHandler
  7846 ;; This function is called by:
  7847 ;;		_USBCtrlTrfSetupHandler
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           psect	text15,class=CODE,space=0,reloc=2
  7851                           global __ptext15
  7852  001388                     __ptext15:
  7853                           psect	text15
  7854                           	file	"../usb9.c"
  7855                           	line	73
  7856                           	global	__size_of_USBCheckStdRequest
  7857  0000                     	__size_of_USBCheckStdRequest	equ	__end_of_USBCheckStdRequest-_USBCheckStdRequest
  7858                           	
  7859  001388                     _USBCheckStdRequest:
  7860                           	opt	stack 22
  7861                           	line	74
  7862                           	
  7863  001388                     l3488:
  7864                           ;usb9.c: 74: if(SetupPkt.RequestType != 0x00) return;
  7865  001388  0105               	movlb	5	; () banked
  7866  00138A  0105               	movlb	5	; () banked
  7867  00138C  3900               	swapf	((1280))&0ffh,w	;volatile
  7868  00138E  32E8               	rrcf	wreg,f
  7869  001390  0B03               	andlw	(1<<2)-1
  7870  001392  0900               	iorlw	0
  7871  001394  B4D8               	btfsc	status,2
  7872  001396  D001               	goto	u2971
  7873  001398  D001               	goto	u2970
  7874  00139A                     u2971:
  7875  00139A  D05F               	goto	l3524
  7876  00139C                     u2970:
  7877  00139C  D083               	goto	l201
  7878                           	
  7879  00139E                     l3490:; BSR set to: 5
  7880                           
  7881  00139E  D082               	goto	l201
  7882                           	
  7883  0013A0                     l200:; BSR set to: 5
  7884                           
  7885                           	line	76
  7886                           ;usb9.c: 76: switch(SetupPkt.bRequest)
  7887  0013A0  D05C               	goto	l3524
  7888                           	line	78
  7889                           ;usb9.c: 77: {
  7890                           ;usb9.c: 78: case 5:
  7891                           	
  7892  0013A2                     l203:; BSR set to: 5
  7893                           
  7894                           	line	79
  7895                           	
  7896  0013A2                     l3492:; BSR set to: 5
  7897                           
  7898                           ;usb9.c: 79: ctrl_trf_session_owner = 1;
  7899  0013A2  0100               	movlb	0	; () banked
  7900  0013A4  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  7901  0013A6  0E01               	movlw	low(01h)
  7902  0013A8  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7903  0013AA  0100               	movlb	0	; () banked
  7904  0013AC  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  7905                           	line	80
  7906                           ;usb9.c: 80: usb_device_state = 4;
  7907  0013AE  0100               	movlb	0	; () banked
  7908  0013B0  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  7909  0013B2  0E04               	movlw	low(04h)
  7910  0013B4  6E1F               	movwf	((c:_usb_device_state)),c
  7911  0013B6  0100               	movlb	0	; () banked
  7912  0013B8  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  7913                           	line	82
  7914                           ;usb9.c: 82: break;
  7915  0013BA  D074               	goto	l201
  7916                           	line	83
  7917                           ;usb9.c: 83: case 6:
  7918                           	
  7919  0013BC                     l205:; BSR set to: 0
  7920                           
  7921                           	line	84
  7922                           	
  7923  0013BC                     l3494:
  7924                           ;usb9.c: 84: USBStdGetDscHandler();
  7925  0013BC  EC53  F00A         	call	_USBStdGetDscHandler	;wreg free
  7926                           	line	85
  7927                           ;usb9.c: 85: break;
  7928  0013C0  D071               	goto	l201
  7929                           	line	86
  7930                           ;usb9.c: 86: case 9:
  7931                           	
  7932  0013C2                     l206:
  7933                           	line	87
  7934                           	
  7935  0013C2                     l3496:
  7936                           ;usb9.c: 87: USBStdSetCfgHandler();
  7937  0013C2  EC8A  F00F         	call	_USBStdSetCfgHandler	;wreg free
  7938                           	line	88
  7939                           ;usb9.c: 88: break;
  7940  0013C6  D06E               	goto	l201
  7941                           	line	89
  7942                           ;usb9.c: 89: case 8:
  7943                           	
  7944  0013C8                     l207:
  7945                           	line	90
  7946                           	
  7947  0013C8                     l3498:
  7948                           ;usb9.c: 90: ctrl_trf_session_owner = 1;
  7949  0013C8  0100               	movlb	0	; () banked
  7950  0013CA  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  7951  0013CC  0E01               	movlw	low(01h)
  7952  0013CE  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  7953  0013D0  0100               	movlb	0	; () banked
  7954  0013D2  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  7955                           	line	91
  7956                           	
  7957  0013D4                     l3500:; BSR set to: 0
  7958                           
  7959                           ;usb9.c: 91: pSrc.bRam = (byte*)&usb_active_cfg;
  7960  0013D4  0E00               	movlw	high((c:_usb_active_cfg))
  7961  0013D6  6E0B               	movwf	((c:_pSrc+1)),c
  7962  0013D8  0E25               	movlw	low((c:_usb_active_cfg))
  7963  0013DA  6E0A               	movwf	((c:_pSrc)),c
  7964                           	line	92
  7965                           	
  7966  0013DC                     l3502:; BSR set to: 0
  7967                           
  7968                           ;usb9.c: 92: usb_stat.ctrl_trf_mem = 0;
  7969  0013DC  9220               	bcf	((c:_usb_stat)),c,1
  7970                           	line	93
  7971                           	
  7972  0013DE                     l3504:; BSR set to: 0
  7973                           
  7974                           ;usb9.c: 93: ((wCount).v[0]) = 1;
  7975  0013DE  0100               	movlb	0	; () banked
  7976  0013E0  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  7977  0013E2  0E01               	movlw	low(01h)
  7978  0013E4  6E21               	movwf	((c:_wCount)),c
  7979  0013E6  0100               	movlb	0	; () banked
  7980  0013E8  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  7981                           	line	94
  7982                           ;usb9.c: 94: break;
  7983  0013EA  D05C               	goto	l201
  7984                           	line	95
  7985                           ;usb9.c: 95: case 0:
  7986                           	
  7987  0013EC                     l208:; BSR set to: 0
  7988                           
  7989                           	line	96
  7990                           	
  7991  0013EC                     l3506:
  7992                           ;usb9.c: 96: USBStdGetStatusHandler();
  7993  0013EC  EC69  F00B         	call	_USBStdGetStatusHandler	;wreg free
  7994                           	line	97
  7995                           ;usb9.c: 97: break;
  7996  0013F0  D059               	goto	l201
  7997                           	line	98
  7998                           ;usb9.c: 98: case 1:
  7999                           	
  8000  0013F2                     l209:
  8001  0013F2  D000               	goto	l3508
  8002                           	line	99
  8003                           	
  8004  0013F4                     l210:
  8005                           	line	100
  8006                           	
  8007  0013F4                     l3508:
  8008                           ;usb9.c: 99: case 3:
  8009                           ;usb9.c: 100: USBStdFeatureReqHandler();
  8010  0013F4  ECDE  F00A         	call	_USBStdFeatureReqHandler	;wreg free
  8011                           	line	101
  8012                           ;usb9.c: 101: break;
  8013  0013F8  D055               	goto	l201
  8014                           	line	102
  8015                           ;usb9.c: 102: case 10:
  8016                           	
  8017  0013FA                     l211:
  8018                           	line	103
  8019                           	
  8020  0013FA                     l3510:
  8021                           ;usb9.c: 103: ctrl_trf_session_owner = 1;
  8022  0013FA  0100               	movlb	0	; () banked
  8023  0013FC  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8024  0013FE  0E01               	movlw	low(01h)
  8025  001400  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8026  001402  0100               	movlb	0	; () banked
  8027  001404  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8028                           	line	104
  8029                           	
  8030  001406                     l3512:; BSR set to: 0
  8031                           
  8032                           ;usb9.c: 104: pSrc.bRam = (byte*)&usb_alt_intf+SetupPkt.bIntfID;
  8033  001406  0105               	movlb	5	; () banked
  8034  001408  0105               	movlb	5	; () banked
  8035  00140A  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  8036  00140C  0D01               	mullw	01h
  8037  00140E  0E26               	movlw	low((c:_usb_alt_intf))
  8038  001410  24F3               	addwf	(prodl),c,w
  8039                           	
  8040  001412  6E0A               	movwf	((c:_pSrc)),c
  8041  001414  0E00               	movlw	high((c:_usb_alt_intf))
  8042  001416  20F4               	addwfc	prod+1,w
  8043  001418  6E0B               	movwf	1+((c:_pSrc)),c
  8044                           	line	105
  8045                           	
  8046  00141A                     l3514:; BSR set to: 5
  8047                           
  8048                           ;usb9.c: 105: usb_stat.ctrl_trf_mem = 0;
  8049  00141A  9220               	bcf	((c:_usb_stat)),c,1
  8050                           	line	106
  8051                           	
  8052  00141C                     l3516:; BSR set to: 5
  8053                           
  8054                           ;usb9.c: 106: ((wCount).v[0]) = 1;
  8055  00141C  0100               	movlb	0	; () banked
  8056  00141E  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8057  001420  0E01               	movlw	low(01h)
  8058  001422  6E21               	movwf	((c:_wCount)),c
  8059  001424  0100               	movlb	0	; () banked
  8060  001426  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8061                           	line	107
  8062                           ;usb9.c: 107: break;
  8063  001428  D03D               	goto	l201
  8064                           	line	108
  8065                           ;usb9.c: 108: case 11:
  8066                           	
  8067  00142A                     l212:; BSR set to: 0
  8068                           
  8069                           	line	109
  8070                           	
  8071  00142A                     l3518:
  8072                           ;usb9.c: 109: ctrl_trf_session_owner = 1;
  8073  00142A  0100               	movlb	0	; () banked
  8074  00142C  6FE4               	movwf	(??_USBCheckStdRequest+0+0)&0ffh
  8075  00142E  0E01               	movlw	low(01h)
  8076  001430  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8077  001432  0100               	movlb	0	; () banked
  8078  001434  51E4               	movf	(??_USBCheckStdRequest+0+0)&0ffh,w
  8079                           	line	110
  8080                           	
  8081  001436                     l3520:; BSR set to: 0
  8082                           
  8083                           ;usb9.c: 110: usb_alt_intf[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8084  001436  0105               	movlb	5	; () banked
  8085  001438  0105               	movlb	5	; () banked
  8086  00143A  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  8087  00143C  0D01               	mullw	01h
  8088  00143E  0E26               	movlw	low((c:_usb_alt_intf))
  8089  001440  24F3               	addwf	(prodl),c,w
  8090  001442  6ED9               	movwf	c:fsr2l
  8091  001444  0E00               	movlw	high((c:_usb_alt_intf))
  8092  001446  20F4               	addwfc	prod+1,w
  8093  001448  6EDA               	movwf	1+c:fsr2l
  8094  00144A  0105               	movlb	5	; () banked
  8095  00144C  C502 FFDF          	movff	0+(1280+02h),indf2	;volatile
  8096                           
  8097                           	line	111
  8098                           ;usb9.c: 111: break;
  8099  001450  D029               	goto	l201
  8100                           	line	112
  8101                           ;usb9.c: 112: case 7:
  8102                           	
  8103  001452                     l213:; BSR set to: 5
  8104                           
  8105  001452  D028               	goto	l201
  8106                           	line	113
  8107                           	
  8108  001454                     l214:; BSR set to: 5
  8109                           
  8110  001454  D027               	goto	l201
  8111                           	line	114
  8112                           ;usb9.c: 113: case 12:
  8113                           ;usb9.c: 114: default:
  8114                           	
  8115  001456                     l215:; BSR set to: 5
  8116                           
  8117                           	line	115
  8118                           ;usb9.c: 115: break;
  8119  001456  D026               	goto	l201
  8120                           	line	116
  8121                           	
  8122  001458                     l3522:; BSR set to: 5
  8123                           
  8124                           ;usb9.c: 116: }
  8125  001458  D025               	goto	l201
  8126                           	line	76
  8127                           	
  8128  00145A                     l202:; BSR set to: 5
  8129                           
  8130                           	
  8131  00145A                     l3524:; BSR set to: 5
  8132                           
  8133  00145A  0105               	movlb	5	; () banked
  8134  00145C  0105               	movlb	5	; () banked
  8135  00145E  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  8136                           	; Switch size 1, requested type "space"
  8137                           ; Number of cases is 11, Range of values is 0 to 12
  8138                           ; switch strategies available:
  8139                           ; Name         Instructions Cycles
  8140                           ; simple_byte           34    18 (average)
  8141                           ;	Chosen strategy is simple_byte
  8142                           
  8143  001460  0A00               	xorlw	0^0	; case 0
  8144  001462  B4D8               	skipnz
  8145  001464  D7C3               	goto	l3506
  8146  001466  0A01               	xorlw	1^0	; case 1
  8147  001468  B4D8               	skipnz
  8148  00146A  D7C4               	goto	l3508
  8149  00146C  0A02               	xorlw	3^1	; case 3
  8150  00146E  B4D8               	skipnz
  8151  001470  D7C1               	goto	l3508
  8152  001472  0A06               	xorlw	5^3	; case 5
  8153  001474  B4D8               	skipnz
  8154  001476  D795               	goto	l3492
  8155  001478  0A03               	xorlw	6^5	; case 6
  8156  00147A  B4D8               	skipnz
  8157  00147C  D79F               	goto	l3494
  8158  00147E  0A01               	xorlw	7^6	; case 7
  8159  001480  B4D8               	skipnz
  8160  001482  D010               	goto	l201
  8161  001484  0A0F               	xorlw	8^7	; case 8
  8162  001486  B4D8               	skipnz
  8163  001488  D79F               	goto	l3498
  8164  00148A  0A01               	xorlw	9^8	; case 9
  8165  00148C  B4D8               	skipnz
  8166  00148E  D799               	goto	l3496
  8167  001490  0A03               	xorlw	10^9	; case 10
  8168  001492  B4D8               	skipnz
  8169  001494  D7B2               	goto	l3510
  8170  001496  0A01               	xorlw	11^10	; case 11
  8171  001498  B4D8               	skipnz
  8172  00149A  D7C7               	goto	l3518
  8173  00149C  0A07               	xorlw	12^11	; case 12
  8174  00149E  B4D8               	skipnz
  8175  0014A0  D001               	goto	l201
  8176  0014A2  D000               	goto	l201
  8177                           
  8178                           	line	116
  8179                           	
  8180  0014A4                     l204:; BSR set to: 5
  8181                           
  8182                           	line	118
  8183                           	
  8184  0014A4                     l201:
  8185  0014A4  0012               	return
  8186                           	opt stack 0
  8187                           GLOBAL	__end_of_USBCheckStdRequest
  8188  0014A6                     	__end_of_USBCheckStdRequest:
  8189                           	signat	_USBCheckStdRequest,88
  8190                           	global	_USBStdGetDscHandler
  8191                           
  8192 ;; *************** function _USBStdGetDscHandler *****************
  8193 ;; Defined at:
  8194 ;;		line 139 in file "../usb9.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;		None
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;		None               void
  8201 ;; Registers used:
  8202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8208 ;;      Params:         0       0       0       0       0       0       0       0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8210 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8211 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8212 ;;Total ram usage:        2 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    2
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_USBCheckStdRequest
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           psect	text16,class=CODE,space=0,reloc=2
  8222                           global __ptext16
  8223  0014A6                     __ptext16:
  8224                           psect	text16
  8225                           	file	"../usb9.c"
  8226                           	line	139
  8227                           	global	__size_of_USBStdGetDscHandler
  8228  0000                     	__size_of_USBStdGetDscHandler	equ	__end_of_USBStdGetDscHandler-_USBStdGetDscHandler
  8229                           	
  8230  0014A6                     _USBStdGetDscHandler:
  8231                           	opt	stack 23
  8232                           	line	140
  8233                           	
  8234  0014A6                     l3526:
  8235                           ;usb9.c: 140: if(SetupPkt.bmRequestType == 0x80)
  8236  0014A6  0105               	movlb	5	; () banked
  8237  0014A8  0105               	movlb	5	; () banked
  8238  0014AA  5100               	movf	((1280))&0ffh,w	;volatile
  8239  0014AC  0A80               	xorlw	128
  8240                           
  8241  0014AE  A4D8               	btfss	status,2
  8242  0014B0  D001               	goto	u2981
  8243  0014B2  D001               	goto	u2980
  8244  0014B4                     u2981:
  8245  0014B4  D082               	goto	l224
  8246  0014B6                     u2980:
  8247  0014B6  D072               	goto	l3550
  8248                           	line	142
  8249                           	
  8250  0014B8                     l3528:; BSR set to: 5
  8251                           
  8252                           ;usb9.c: 141: {
  8253                           ;usb9.c: 142: switch(SetupPkt.bDscType)
  8254  0014B8  D071               	goto	l3550
  8255                           	line	144
  8256                           ;usb9.c: 143: {
  8257                           ;usb9.c: 144: case 0x01:
  8258                           	
  8259  0014BA                     l220:; BSR set to: 5
  8260                           
  8261                           	line	145
  8262                           	
  8263  0014BA                     l3530:; BSR set to: 5
  8264                           
  8265                           ;usb9.c: 145: ctrl_trf_session_owner = 1;
  8266  0014BA  0100               	movlb	0	; () banked
  8267  0014BC  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8268  0014BE  0E01               	movlw	low(01h)
  8269  0014C0  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8270  0014C2  0100               	movlb	0	; () banked
  8271  0014C4  51E0               	movf	(??_USBStdGetDscHandler+0+0)&0ffh,w
  8272                           	line	146
  8273                           	
  8274  0014C6                     l3532:; BSR set to: 0
  8275                           
  8276                           ;usb9.c: 146: pSrc.bRom = (const byte*)&device_dsc;
  8277  0014C6  0E08               	movlw	high(_device_dsc)
  8278  0014C8  6E0B               	movwf	((c:_pSrc+1)),c
  8279  0014CA  0EAC               	movlw	low(_device_dsc)
  8280  0014CC  6E0A               	movwf	((c:_pSrc)),c
  8281                           	line	147
  8282                           	
  8283  0014CE                     l3534:; BSR set to: 0
  8284                           
  8285                           ;usb9.c: 147: wCount._word = sizeof(device_dsc);
  8286  0014CE  0E00               	movlw	high(012h)
  8287  0014D0  6E22               	movwf	((c:_wCount+1)),c
  8288  0014D2  0E12               	movlw	low(012h)
  8289  0014D4  6E21               	movwf	((c:_wCount)),c
  8290                           	line	148
  8291                           ;usb9.c: 148: break;
  8292  0014D6  D06F               	goto	l221
  8293                           	line	149
  8294                           ;usb9.c: 149: case 0x02:
  8295                           	
  8296  0014D8                     l222:; BSR set to: 0
  8297                           
  8298                           	line	150
  8299                           	
  8300  0014D8                     l3536:
  8301                           ;usb9.c: 150: ctrl_trf_session_owner = 1;
  8302  0014D8  0100               	movlb	0	; () banked
  8303  0014DA  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8304  0014DC  0E01               	movlw	low(01h)
  8305  0014DE  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8306  0014E0  0100               	movlb	0	; () banked
  8307  0014E2  51E0               	movf	(??_USBStdGetDscHandler+0+0)&0ffh,w
  8308                           	line	151
  8309                           	
  8310  0014E4                     l3538:; BSR set to: 0
  8311                           
  8312                           ;usb9.c: 151: pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8313  0014E4  0105               	movlb	5	; () banked
  8314  0014E6  0105               	movlb	5	; () banked
  8315  0014E8  5102               	movf	(0+(1280+02h))&0ffh,w	;volatile
  8316  0014EA  0D02               	mullw	02h
  8317  0014EC  0E06               	movlw	low((_USB_CD_Ptr))
  8318  0014EE  24F3               	addwf	(prodl),c,w
  8319  0014F0  6EF6               	movwf	tblptrl
  8320  0014F2  0E08               	movlw	high((_USB_CD_Ptr))
  8321  0014F4  20F4               	addwfc	(prodh),c,w
  8322  0014F6  6EF7               	movwf	tblptrh
  8323  0014F8  0009               	tblrd*+
  8324                           	
  8325  0014FA  CFF5 F00A          	movff	tablat,(c:_pSrc)
  8326  0014FE  000A               	tblrd*-
  8327                           	
  8328  001500  CFF5 F00B          	movff	tablat,(c:_pSrc+1)
  8329                           
  8330                           	line	152
  8331                           	
  8332  001504                     l3540:; BSR set to: 5
  8333                           
  8334                           ;usb9.c: 152: wCount._word = *(pSrc.wRom+1);
  8335  001504  0E02               	movlw	02h
  8336  001506  240A               	addwf	((c:_pSrc)),c,w
  8337  001508  0100               	movlb	0	; () banked
  8338  00150A  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8339  00150C  0E00               	movlw	0
  8340  00150E  200B               	addwfc	((c:_pSrc+1)),c,w
  8341  001510  0100               	movlb	0	; () banked
  8342  001512  6FE1               	movwf	(??_USBStdGetDscHandler+0+0+1)&0ffh
  8343  001514  C0E0  FFF6         	movff	??_USBStdGetDscHandler+0+0,tblptrl
  8344  001518  C0E1  FFF7         	movff	??_USBStdGetDscHandler+0+1,tblptrh
  8345  00151C  6AF8               	clrf	tblptru
  8346  00151E  0E07               	movlw	high __ramtop-1
  8347  001520  64F7               	cpfsgt	tblptrh
  8348  001522  D007               	bra	u2997
  8349  001524  0009               	tblrd	*+
  8350                           	
  8351                           
  8352  001526  CFF5 F021          	movff	tablat,(c:_wCount)
  8353  00152A  0009               	tblrd	*+
  8354                           	
  8355  00152C  CFF5 F022          	movff	tablat,1+(c:_wCount)
  8356  001530  D008               	bra	u2990
  8357  001532                     u2997:
  8358  001532  CFF6 FFE9          	movff	tblptrl,fsr0l
  8359  001536  CFF7 FFEA          	movff	tblptrh,fsr0h
  8360  00153A  CFEE F021          	movff	postinc0,(c:_wCount)
  8361  00153E  CFEE F022          	movff	postinc0,1+(c:_wCount)
  8362  001542                     u2990:
  8363                           	
  8364                           	line	153
  8365                           ;usb9.c: 153: break;
  8366  001542  D039               	goto	l221
  8367                           	line	154
  8368                           ;usb9.c: 154: case 0x03:
  8369                           	
  8370  001544                     l223:
  8371                           	line	155
  8372                           	
  8373  001544                     l3542:
  8374                           ;usb9.c: 155: ctrl_trf_session_owner = 1;
  8375  001544  0100               	movlb	0	; () banked
  8376  001546  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8377  001548  0E01               	movlw	low(01h)
  8378  00154A  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8379  00154C  0100               	movlb	0	; () banked
  8380  00154E  51E0               	movf	(??_USBStdGetDscHandler+0+0)&0ffh,w
  8381                           	line	156
  8382                           	
  8383  001550                     l3544:; BSR set to: 0
  8384                           
  8385                           ;usb9.c: 156: pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  8386  001550  0105               	movlb	5	; () banked
  8387  001552  0105               	movlb	5	; () banked
  8388  001554  5102               	movf	(0+(1280+02h))&0ffh,w	;volatile
  8389  001556  0D02               	mullw	02h
  8390  001558  0E00               	movlw	low((_USB_SD_Ptr))
  8391  00155A  24F3               	addwf	(prodl),c,w
  8392  00155C  6EF6               	movwf	tblptrl
  8393  00155E  0E08               	movlw	high((_USB_SD_Ptr))
  8394  001560  20F4               	addwfc	(prodh),c,w
  8395  001562  6EF7               	movwf	tblptrh
  8396  001564  0009               	tblrd*+
  8397                           	
  8398  001566  CFF5 F00A          	movff	tablat,(c:_pSrc)
  8399  00156A  000A               	tblrd*-
  8400                           	
  8401  00156C  CFF5 F00B          	movff	tablat,(c:_pSrc+1)
  8402                           
  8403                           	line	157
  8404                           	
  8405  001570                     l3546:; BSR set to: 5
  8406                           
  8407                           ;usb9.c: 157: wCount._word = *pSrc.bRom;
  8408  001570  500A               	movf	((c:_pSrc)),c,w
  8409  001572  6EF6               	movwf	tblptrl
  8410  001574  6EE9               	movwf	fsr0l
  8411  001576  0E07               	movlw	high __ramtop-1
  8412  001578  6EEA               	movwf	fsr0h
  8413  00157A  500B               	movf	((c:_pSrc+1)),c,w
  8414  00157C  64EA               	cpfsgt	fsr0h
  8415  00157E  D003               	bra	u3007
  8416  001580  6EEA               	movwf	fsr0h
  8417  001582  50EF               	movf	indf0,w
  8418  001584  D003               	bra	u3000
  8419  001586                     u3007:
  8420  001586  6EF7               	movwf	tblptrh
  8421  001588  0008               	tblrd	*
  8422                           	
  8423  00158A  50F5               	movf	tablat,w
  8424  00158C                     u3000:
  8425  00158C  0100               	movlb	0	; () banked
  8426  00158E  6FE0               	movwf	(??_USBStdGetDscHandler+0+0)&0ffh
  8427  001590  0100               	movlb	0	; () banked
  8428  001592  51E0               	movf	((??_USBStdGetDscHandler+0+0))&0ffh,w
  8429  001594  6E21               	movwf	((c:_wCount)),c
  8430  001596  6A22               	clrf	((c:_wCount+1)),c
  8431                           	line	158
  8432                           ;usb9.c: 158: break;
  8433  001598  D00E               	goto	l221
  8434                           	line	159
  8435                           	
  8436  00159A                     l3548:; BSR set to: 0
  8437                           
  8438                           ;usb9.c: 159: }
  8439  00159A  D00D               	goto	l221
  8440                           	line	142
  8441                           	
  8442  00159C                     l219:; BSR set to: 0
  8443                           
  8444                           	
  8445  00159C                     l3550:
  8446  00159C  0105               	movlb	5	; () banked
  8447  00159E  0105               	movlb	5	; () banked
  8448  0015A0  5103               	movf	(0+(1280+03h))&0ffh,w	;volatile
  8449                           	; Switch size 1, requested type "space"
  8450                           ; Number of cases is 3, Range of values is 1 to 3
  8451                           ; switch strategies available:
  8452                           ; Name         Instructions Cycles
  8453                           ; simple_byte           10     6 (average)
  8454                           ;	Chosen strategy is simple_byte
  8455                           
  8456  0015A2  0A01               	xorlw	1^0	; case 1
  8457  0015A4  B4D8               	skipnz
  8458  0015A6  D789               	goto	l3530
  8459  0015A8  0A03               	xorlw	2^1	; case 2
  8460  0015AA  B4D8               	skipnz
  8461  0015AC  D795               	goto	l3536
  8462  0015AE  0A01               	xorlw	3^2	; case 3
  8463  0015B0  B4D8               	skipnz
  8464  0015B2  D7C8               	goto	l3542
  8465  0015B4  D000               	goto	l221
  8466                           
  8467                           	line	159
  8468                           	
  8469  0015B6                     l221:
  8470                           	line	161
  8471                           ;usb9.c: 161: usb_stat.ctrl_trf_mem = 1;
  8472  0015B6  8220               	bsf	((c:_usb_stat)),c,1
  8473  0015B8  D000               	goto	l224
  8474                           	line	162
  8475                           	
  8476  0015BA                     l218:
  8477                           	line	163
  8478                           	
  8479  0015BA                     l224:
  8480  0015BA  0012               	return
  8481                           	opt stack 0
  8482                           GLOBAL	__end_of_USBStdGetDscHandler
  8483  0015BC                     	__end_of_USBStdGetDscHandler:
  8484                           	signat	_USBStdGetDscHandler,88
  8485                           	global	_USBStdSetCfgHandler
  8486                           
  8487 ;; *************** function _USBStdSetCfgHandler *****************
  8488 ;; Defined at:
  8489 ;;		line 183 in file "../usb9.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;		None               void
  8496 ;; Registers used:
  8497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8505 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8506 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8507 ;;Total ram usage:        1 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    3
  8510 ;; This function calls:
  8511 ;;		_ClearArray
  8512 ;;		_HIDInitEP
  8513 ;; This function is called by:
  8514 ;;		_USBCheckStdRequest
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           psect	text17,class=CODE,space=0,reloc=2
  8518                           global __ptext17
  8519  001F14                     __ptext17:
  8520                           psect	text17
  8521                           	file	"../usb9.c"
  8522                           	line	183
  8523                           	global	__size_of_USBStdSetCfgHandler
  8524  0000                     	__size_of_USBStdSetCfgHandler	equ	__end_of_USBStdSetCfgHandler-_USBStdSetCfgHandler
  8525                           	
  8526  001F14                     _USBStdSetCfgHandler:
  8527                           	opt	stack 22
  8528                           	line	184
  8529                           	
  8530  001F14                     l3552:
  8531                           ;usb9.c: 184: ctrl_trf_session_owner = 1;
  8532  001F14  0100               	movlb	0	; () banked
  8533  001F16  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8534  001F18  0E01               	movlw	low(01h)
  8535  001F1A  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8536  001F1C  0100               	movlb	0	; () banked
  8537  001F1E  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8538                           	line	185
  8539                           	
  8540  001F20                     l3554:; BSR set to: 0
  8541                           
  8542                           ;usb9.c: 185: ClearArray((byte*)&UEP1,15);;
  8543  001F20  0E0F               	movlw	high((c:3947))	;volatile
  8544  001F22  0100               	movlb	0	; () banked
  8545  001F24  0100               	movlb	0	; () banked
  8546  001F26  6FE1               	movwf	((?_ClearArray+1))&0ffh
  8547  001F28  0E6B               	movlw	low((c:3947))	;volatile
  8548  001F2A  0100               	movlb	0	; () banked
  8549  001F2C  6FE0               	movwf	((?_ClearArray))&0ffh
  8550  001F2E  0100               	movlb	0	; () banked
  8551  001F30  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8552  001F32  0E0F               	movlw	low(0Fh)
  8553  001F34  0100               	movlb	0	; () banked
  8554  001F36  0100               	movlb	0	; () banked
  8555  001F38  6FE2               	movwf	(0+(?_ClearArray+02h))&0ffh
  8556  001F3A  0100               	movlb	0	; () banked
  8557  001F3C  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8558  001F3E  0100               	movlb	0	; () banked
  8559  001F40  ECE1  F011         	call	_ClearArray	;wreg free
  8560                           	line	186
  8561                           	
  8562  001F44                     l3556:
  8563                           ;usb9.c: 186: ClearArray((byte*)&usb_alt_intf,1);
  8564  001F44  0E00               	movlw	high((c:_usb_alt_intf))
  8565  001F46  0100               	movlb	0	; () banked
  8566  001F48  0100               	movlb	0	; () banked
  8567  001F4A  6FE1               	movwf	((?_ClearArray+1))&0ffh
  8568  001F4C  0E26               	movlw	low((c:_usb_alt_intf))
  8569  001F4E  0100               	movlb	0	; () banked
  8570  001F50  6FE0               	movwf	((?_ClearArray))&0ffh
  8571  001F52  0100               	movlb	0	; () banked
  8572  001F54  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8573  001F56  0E01               	movlw	low(01h)
  8574  001F58  0100               	movlb	0	; () banked
  8575  001F5A  0100               	movlb	0	; () banked
  8576  001F5C  6FE2               	movwf	(0+(?_ClearArray+02h))&0ffh
  8577  001F5E  0100               	movlb	0	; () banked
  8578  001F60  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8579  001F62  0100               	movlb	0	; () banked
  8580  001F64  ECE1  F011         	call	_ClearArray	;wreg free
  8581                           	line	187
  8582                           	
  8583  001F68                     l3558:
  8584                           ;usb9.c: 187: usb_active_cfg = SetupPkt.bCfgValue;
  8585  001F68  C502 F025          	movff	0+(1280+02h),(c:_usb_active_cfg)	;volatile
  8586                           	line	188
  8587                           	
  8588  001F6C                     l3560:
  8589                           ;usb9.c: 188: if(SetupPkt.bCfgValue == 0)
  8590  001F6C  0105               	movlb	5	; () banked
  8591  001F6E  0105               	movlb	5	; () banked
  8592  001F70  6702               	tstfsz	(0+(1280+02h))&0ffh	;volatile
  8593  001F72  D001               	goto	u3011
  8594  001F74  D001               	goto	u3010
  8595  001F76                     u3011:
  8596  001F76  D007               	goto	l3564
  8597  001F78                     u3010:
  8598                           	line	189
  8599                           	
  8600  001F78                     l3562:; BSR set to: 5
  8601                           
  8602                           ;usb9.c: 189: usb_device_state = 5;
  8603  001F78  0100               	movlb	0	; () banked
  8604  001F7A  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8605  001F7C  0E05               	movlw	low(05h)
  8606  001F7E  6E1F               	movwf	((c:_usb_device_state)),c
  8607  001F80  0100               	movlb	0	; () banked
  8608  001F82  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8609  001F84  D009               	goto	l229
  8610                           	line	190
  8611                           	
  8612  001F86                     l227:; BSR set to: 0
  8613                           
  8614                           	line	192
  8615                           	
  8616  001F86                     l3564:
  8617                           ;usb9.c: 190: else
  8618                           ;usb9.c: 191: {
  8619                           ;usb9.c: 192: usb_device_state = 6;
  8620  001F86  0100               	movlb	0	; () banked
  8621  001F88  6FE3               	movwf	(??_USBStdSetCfgHandler+0+0)&0ffh
  8622  001F8A  0E06               	movlw	low(06h)
  8623  001F8C  6E1F               	movwf	((c:_usb_device_state)),c
  8624  001F8E  0100               	movlb	0	; () banked
  8625  001F90  51E3               	movf	(??_USBStdSetCfgHandler+0+0)&0ffh,w
  8626                           	line	197
  8627                           	
  8628  001F92                     l3566:; BSR set to: 0
  8629                           
  8630                           ;usb9.c: 197: HIDInitEP();
  8631  001F92  EC05  F011         	call	_HIDInitEP	;wreg free
  8632  001F96  D000               	goto	l229
  8633                           	line	202
  8634                           	
  8635  001F98                     l228:
  8636                           	line	203
  8637                           	
  8638  001F98                     l229:
  8639  001F98  0012               	return
  8640                           	opt stack 0
  8641                           GLOBAL	__end_of_USBStdSetCfgHandler
  8642  001F9A                     	__end_of_USBStdSetCfgHandler:
  8643                           	signat	_USBStdSetCfgHandler,88
  8644                           	global	_HIDInitEP
  8645                           
  8646 ;; *************** function _HIDInitEP *****************
  8647 ;; Defined at:
  8648 ;;		line 172 in file "../hid.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;		None
  8653 ;; Return value:  Size  Location     Type
  8654 ;;		None               void
  8655 ;; Registers used:
  8656 ;;		wreg, status,2
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8662 ;;      Params:         0       0       0       0       0       0       0       0       0
  8663 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8664 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8665 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8666 ;;Total ram usage:        1 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:    2
  8669 ;; This function calls:
  8670 ;;		Nothing
  8671 ;; This function is called by:
  8672 ;;		_USBStdSetCfgHandler
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           psect	text18,class=CODE,space=0,reloc=2
  8676                           global __ptext18
  8677  00220A                     __ptext18:
  8678                           psect	text18
  8679                           	file	"../hid.c"
  8680                           	line	172
  8681                           	global	__size_of_HIDInitEP
  8682  0000                     	__size_of_HIDInitEP	equ	__end_of_HIDInitEP-_HIDInitEP
  8683                           	
  8684  00220A                     _HIDInitEP:
  8685                           	opt	stack 22
  8686                           	line	173
  8687                           	
  8688  00220A                     l3142:
  8689                           ;hid.c: 173: hid_rpt_rx_len =0;
  8690  00220A  0100               	movlb	0	; () banked
  8691  00220C  6FE0               	movwf	(??_HIDInitEP+0+0)&0ffh
  8692  00220E  0E00               	movlw	low(0)
  8693  002210  6E1D               	movwf	((c:_hid_rpt_rx_len)),c
  8694  002212  0100               	movlb	0	; () banked
  8695  002214  51E0               	movf	(??_HIDInitEP+0+0)&0ffh,w
  8696                           	line	175
  8697                           	
  8698  002216                     l3144:; BSR set to: 0
  8699                           
  8700                           ;hid.c: 175: UEP1 = 0x0E|0x10;
  8701  002216  0E1E               	movlw	low(01Eh)
  8702  002218  6E6B               	movwf	((c:3947)),c	;volatile
  8703                           	line	177
  8704                           	
  8705  00221A                     l3146:; BSR set to: 0
  8706                           
  8707                           ;hid.c: 177: ep1Bo.Cnt = sizeof(hid_report_out);
  8708  00221A  0E40               	movlw	low(040h)
  8709  00221C  0104               	movlb	4	; () banked
  8710  00221E  0104               	movlb	4	; () banked
  8711  002220  6F09               	movwf	(0+(1032+01h))&0ffh	;volatile
  8712                           	line	178
  8713                           	
  8714  002222                     l3148:; BSR set to: 4
  8715                           
  8716                           ;hid.c: 178: ep1Bo.ADR = (byte*)&hid_report_out;
  8717  002222  0107               	movlb	7	; () banked
  8718  002224  0E07               	movlw	high(1792)	;volatile
  8719  002226  0104               	movlb	4	; () banked
  8720  002228  0104               	movlb	4	; () banked
  8721  00222A  6F0B               	movwf	(1+(1032+02h))&0ffh	;volatile
  8722  00222C  0107               	movlb	7	; () banked
  8723  00222E  0E00               	movlw	low(1792)	;volatile
  8724  002230  0104               	movlb	4	; () banked
  8725  002232  6F0A               	movwf	(0+(1032+02h))&0ffh	;volatile
  8726                           	line	179
  8727                           	
  8728  002234                     l3150:; BSR set to: 4
  8729                           
  8730                           ;hid.c: 179: ep1Bo.Stat._byte = 0x80|0x00|0x08;
  8731  002234  0E88               	movlw	low(088h)
  8732  002236  0104               	movlb	4	; () banked
  8733  002238  0104               	movlb	4	; () banked
  8734  00223A  6F08               	movwf	((1032))&0ffh	;volatile
  8735                           	line	192
  8736                           	
  8737  00223C                     l3152:; BSR set to: 4
  8738                           
  8739                           ;hid.c: 192: ep1Bi.ADR = (byte*)&hid_report_in;
  8740  00223C  0107               	movlb	7	; () banked
  8741  00223E  0E07               	movlw	high(1856)	;volatile
  8742  002240  0104               	movlb	4	; () banked
  8743  002242  0104               	movlb	4	; () banked
  8744  002244  6F0F               	movwf	(1+(1036+02h))&0ffh	;volatile
  8745  002246  0107               	movlb	7	; () banked
  8746  002248  0E40               	movlw	low(1856)	;volatile
  8747  00224A  0104               	movlb	4	; () banked
  8748  00224C  6F0E               	movwf	(0+(1036+02h))&0ffh	;volatile
  8749                           	line	193
  8750                           	
  8751  00224E                     l3154:; BSR set to: 4
  8752                           
  8753                           ;hid.c: 193: ep1Bi.Stat._byte = 0x00|0x40;
  8754  00224E  0E40               	movlw	low(040h)
  8755  002250  0104               	movlb	4	; () banked
  8756  002252  0104               	movlb	4	; () banked
  8757  002254  6F0C               	movwf	((1036))&0ffh	;volatile
  8758                           	line	195
  8759                           	
  8760  002256                     l68:; BSR set to: 4
  8761                           
  8762  002256  0012               	return
  8763                           	opt stack 0
  8764                           GLOBAL	__end_of_HIDInitEP
  8765  002258                     	__end_of_HIDInitEP:
  8766                           	signat	_HIDInitEP,88
  8767                           	global	_USBStdGetStatusHandler
  8768                           
  8769 ;; *************** function _USBStdGetStatusHandler *****************
  8770 ;; Defined at:
  8771 ;;		line 221 in file "../usb9.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;		None               void
  8778 ;; Registers used:
  8779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0
  8786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8787 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8788 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8789 ;;Total ram usage:        4 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    2
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_USBCheckStdRequest
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           psect	text19,class=CODE,space=0,reloc=2
  8799                           global __ptext19
  8800  0016D2                     __ptext19:
  8801                           psect	text19
  8802                           	file	"../usb9.c"
  8803                           	line	221
  8804                           	global	__size_of_USBStdGetStatusHandler
  8805  0000                     	__size_of_USBStdGetStatusHandler	equ	__end_of_USBStdGetStatusHandler-_USBStdGetStatusHa
                                 ndler
  8806                           	
  8807  0016D2                     _USBStdGetStatusHandler:; BSR set to: 4
  8808                           
  8809                           	opt	stack 23
  8810                           	line	222
  8811                           	
  8812  0016D2                     l3568:
  8813                           ;usb9.c: 222: CtrlTrfData._byte0 = 0;
  8814  0016D2  0E00               	movlw	low(0)
  8815  0016D4  0106               	movlb	6	; () banked
  8816  0016D6  0106               	movlb	6	; () banked
  8817  0016D8  6F00               	movwf	((1536))&0ffh	;volatile
  8818                           	line	223
  8819                           ;usb9.c: 223: CtrlTrfData._byte1 = 0;
  8820  0016DA  0E00               	movlw	low(0)
  8821  0016DC  0106               	movlb	6	; () banked
  8822  0016DE  0106               	movlb	6	; () banked
  8823  0016E0  6F01               	movwf	(0+(1536+01h))&0ffh	;volatile
  8824                           	line	225
  8825                           ;usb9.c: 225: switch(SetupPkt.Recipient)
  8826  0016E2  D058               	goto	l3590
  8827                           	line	227
  8828                           ;usb9.c: 226: {
  8829                           ;usb9.c: 227: case 0:
  8830                           	
  8831  0016E4                     l233:; BSR set to: 6
  8832                           
  8833                           	line	228
  8834                           	
  8835  0016E4                     l3570:
  8836                           ;usb9.c: 240: if(1 == 1)
  8837  0016E4  0100               	movlb	0	; () banked
  8838  0016E6  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  8839  0016E8  0E01               	movlw	low(01h)
  8840  0016EA  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8841  0016EC  0100               	movlb	0	; () banked
  8842  0016EE  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  8843                           	line	241
  8844                           	
  8845  0016F0                     l3572:; BSR set to: 0
  8846                           
  8847                           ;usb9.c: 241: CtrlTrfData._byte0|=0b00000001;
  8848  0016F0  0106               	movlb	6	; () banked
  8849  0016F2  0106               	movlb	6	; () banked
  8850  0016F4  8100               	bsf	(0+(0/8)+(1536))&0ffh,(0)&7	;volatile
  8851  0016F6  D000               	goto	l3574
  8852                           	
  8853  0016F8                     l234:; BSR set to: 6
  8854                           
  8855                           	line	244
  8856                           	
  8857  0016F8                     l3574:; BSR set to: 6
  8858                           
  8859                           ;usb9.c: 244: if(usb_stat.RemoteWakeup == 1)
  8860                           	
  8861  0016F8  A020               	btfss	((c:_usb_stat)),c,0
  8862  0016FA  D001               	goto	u3021
  8863  0016FC  D001               	goto	u3020
  8864  0016FE                     u3021:
  8865  0016FE  D058               	goto	l3592
  8866  001700                     u3020:
  8867                           	line	245
  8868                           	
  8869  001700                     l3576:; BSR set to: 6
  8870                           
  8871                           ;usb9.c: 245: CtrlTrfData._byte0|=0b00000010;
  8872  001700  0106               	movlb	6	; () banked
  8873  001702  0106               	movlb	6	; () banked
  8874  001704  8300               	bsf	(0+(1/8)+(1536))&0ffh,(1)&7	;volatile
  8875  001706  D054               	goto	l3592
  8876                           	
  8877  001708                     l235:; BSR set to: 6
  8878                           
  8879                           	line	246
  8880                           ;usb9.c: 246: break;
  8881  001708  D053               	goto	l3592
  8882                           	line	247
  8883                           ;usb9.c: 247: case 1:
  8884                           	
  8885  00170A                     l237:; BSR set to: 6
  8886                           
  8887                           	line	248
  8888                           	
  8889  00170A                     l3578:
  8890                           ;usb9.c: 248: ctrl_trf_session_owner = 1;
  8891  00170A  0100               	movlb	0	; () banked
  8892  00170C  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  8893  00170E  0E01               	movlw	low(01h)
  8894  001710  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8895  001712  0100               	movlb	0	; () banked
  8896  001714  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  8897                           	line	249
  8898                           ;usb9.c: 249: break;
  8899  001716  D04C               	goto	l3592
  8900                           	line	250
  8901                           ;usb9.c: 250: case 2:
  8902                           	
  8903  001718                     l238:; BSR set to: 0
  8904                           
  8905                           	line	251
  8906                           	
  8907  001718                     l3580:
  8908                           ;usb9.c: 251: ctrl_trf_session_owner = 1;
  8909  001718  0100               	movlb	0	; () banked
  8910  00171A  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  8911  00171C  0E01               	movlw	low(01h)
  8912  00171E  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  8913  001720  0100               	movlb	0	; () banked
  8914  001722  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  8915                           	line	255
  8916                           	
  8917  001724                     l3582:; BSR set to: 0
  8918                           
  8919                           ;usb9.c: 255: pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);
  8920  001724  0105               	movlb	5	; () banked
  8921  001726  0105               	movlb	5	; () banked
  8922  001728  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  8923  00172A  0B0F               	andlw	(1<<4)-1
  8924  00172C  0100               	movlb	0	; () banked
  8925  00172E  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  8926  001730  0100               	movlb	0	; () banked
  8927  001732  51E0               	movf	((??_USBStdGetStatusHandler+0+0))&0ffh,w
  8928  001734  0D08               	mullw	08h
  8929  001736  0104               	movlb	4	; () banked
  8930  001738  0E00               	movlw	low(1024)	;volatile
  8931  00173A  24F3               	addwf	(prodl),c,w
  8932  00173C  0100               	movlb	0	; () banked
  8933  00173E  6FE1               	movwf	(??_USBStdGetStatusHandler+1+0)&0ffh
  8934  001740  0104               	movlb	4	; () banked
  8935  001742  0E04               	movlw	high(1024)	;volatile
  8936  001744  20F4               	addwfc	prod+1,w
  8937  001746  0100               	movlb	0	; () banked
  8938  001748  6FE2               	movwf	1+(??_USBStdGetStatusHandler+1+0)&0ffh
  8939  00174A  0105               	movlb	5	; () banked
  8940  00174C  0105               	movlb	5	; () banked
  8941  00174E  3504               	rlcf	(0+(1280+04h))&0ffh,w	;volatile
  8942  001750  36E8               	rlcf	wreg,f
  8943  001752  0B01               	andlw	1
  8944  001754  0100               	movlb	0	; () banked
  8945  001756  6FE3               	movwf	(??_USBStdGetStatusHandler+3+0)&0ffh
  8946  001758  0100               	movlb	0	; () banked
  8947  00175A  51E3               	movf	((??_USBStdGetStatusHandler+3+0))&0ffh,w
  8948  00175C  0D04               	mullw	04h
  8949  00175E  50F3               	movf	(prodl),c,w
  8950  001760  0100               	movlb	0	; () banked
  8951  001762  25E1               	addwf	(??_USBStdGetStatusHandler+1+0)&0ffh,w
  8952                           	
  8953  001764  6E07               	movwf	((c:_pDst)),c
  8954  001766  50F4               	movf	(prodh),c,w
  8955  001768  0100               	movlb	0	; () banked
  8956  00176A  21E2               	addwfc	(??_USBStdGetStatusHandler+1+1)&0ffh,w
  8957  00176C  6E08               	movwf	1+((c:_pDst)),c
  8958                           	line	256
  8959                           	
  8960  00176E                     l3584:; BSR set to: 0
  8961                           
  8962                           ;usb9.c: 256: if(*pDst.bRam & 0x04)
  8963  00176E  C007  FFD9         	movff	(c:_pDst),fsr2l
  8964  001772  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  8965  001776  50DF               	movf	indf2,w
  8966  001778  0100               	movlb	0	; () banked
  8967  00177A  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  8968  00177C  0100               	movlb	0	; () banked
  8969                           	
  8970  00177E  A5E0               	btfss	((??_USBStdGetStatusHandler+0+0))&0ffh,(2)&7
  8971  001780  D001               	goto	u3031
  8972  001782  D001               	goto	u3030
  8973  001784                     u3031:
  8974  001784  D015               	goto	l3592
  8975  001786                     u3030:
  8976                           	line	257
  8977                           	
  8978  001786                     l3586:; BSR set to: 0
  8979                           
  8980                           ;usb9.c: 257: CtrlTrfData._byte0=0x01;
  8981  001786  0E01               	movlw	low(01h)
  8982  001788  0106               	movlb	6	; () banked
  8983  00178A  0106               	movlb	6	; () banked
  8984  00178C  6F00               	movwf	((1536))&0ffh	;volatile
  8985  00178E  D010               	goto	l3592
  8986                           	
  8987  001790                     l239:; BSR set to: 6
  8988                           
  8989                           	line	258
  8990                           ;usb9.c: 258: break;
  8991  001790  D00F               	goto	l3592
  8992                           	line	259
  8993                           	
  8994  001792                     l3588:; BSR set to: 6
  8995                           
  8996                           ;usb9.c: 259: }
  8997  001792  D00E               	goto	l3592
  8998                           	line	225
  8999                           	
  9000  001794                     l232:; BSR set to: 6
  9001                           
  9002                           	
  9003  001794                     l3590:; BSR set to: 6
  9004                           
  9005  001794  0105               	movlb	5	; () banked
  9006  001796  0105               	movlb	5	; () banked
  9007  001798  5100               	movf	((1280))&0ffh,w	;volatile
  9008  00179A  0B1F               	andlw	(1<<5)-1
  9009                           	; Switch size 1, requested type "space"
  9010                           ; Number of cases is 3, Range of values is 0 to 2
  9011                           ; switch strategies available:
  9012                           ; Name         Instructions Cycles
  9013                           ; simple_byte           10     6 (average)
  9014                           ;	Chosen strategy is simple_byte
  9015                           
  9016  00179C  0A00               	xorlw	0^0	; case 0
  9017  00179E  B4D8               	skipnz
  9018  0017A0  D7A1               	goto	l3570
  9019  0017A2  0A01               	xorlw	1^0	; case 1
  9020  0017A4  B4D8               	skipnz
  9021  0017A6  D7B1               	goto	l3578
  9022  0017A8  0A03               	xorlw	2^1	; case 2
  9023  0017AA  B4D8               	skipnz
  9024  0017AC  D7B5               	goto	l3580
  9025  0017AE  D000               	goto	l3592
  9026                           
  9027                           	line	259
  9028                           	
  9029  0017B0                     l236:; BSR set to: 5
  9030                           
  9031                           	line	261
  9032                           	
  9033  0017B0                     l3592:
  9034                           ;usb9.c: 261: if(ctrl_trf_session_owner == 1)
  9035  0017B0  041B               	decf	((c:_ctrl_trf_session_owner)),c,w
  9036                           
  9037  0017B2  A4D8               	btfss	status,2
  9038  0017B4  D001               	goto	u3041
  9039  0017B6  D001               	goto	u3040
  9040  0017B8                     u3041:
  9041  0017B8  D00E               	goto	l241
  9042  0017BA                     u3040:
  9043                           	line	263
  9044                           	
  9045  0017BA                     l3594:
  9046                           ;usb9.c: 262: {
  9047                           ;usb9.c: 263: pSrc.bRam = (byte*)&CtrlTrfData;
  9048  0017BA  0106               	movlb	6	; () banked
  9049  0017BC  0E06               	movlw	high(1536)	;volatile
  9050  0017BE  6E0B               	movwf	((c:_pSrc+1)),c
  9051  0017C0  0106               	movlb	6	; () banked
  9052  0017C2  0E00               	movlw	low(1536)	;volatile
  9053  0017C4  6E0A               	movwf	((c:_pSrc)),c
  9054                           	line	264
  9055                           	
  9056  0017C6                     l3596:; BSR set to: 6
  9057                           
  9058                           ;usb9.c: 264: usb_stat.ctrl_trf_mem = 0;
  9059  0017C6  9220               	bcf	((c:_usb_stat)),c,1
  9060                           	line	265
  9061                           	
  9062  0017C8                     l3598:; BSR set to: 6
  9063                           
  9064                           ;usb9.c: 265: ((wCount).v[0]) = 2;
  9065  0017C8  0100               	movlb	0	; () banked
  9066  0017CA  6FE0               	movwf	(??_USBStdGetStatusHandler+0+0)&0ffh
  9067  0017CC  0E02               	movlw	low(02h)
  9068  0017CE  6E21               	movwf	((c:_wCount)),c
  9069  0017D0  0100               	movlb	0	; () banked
  9070  0017D2  51E0               	movf	(??_USBStdGetStatusHandler+0+0)&0ffh,w
  9071  0017D4  D000               	goto	l241
  9072                           	line	266
  9073                           	
  9074  0017D6                     l240:; BSR set to: 0
  9075                           
  9076                           	line	267
  9077                           	
  9078  0017D6                     l241:
  9079  0017D6  0012               	return
  9080                           	opt stack 0
  9081                           GLOBAL	__end_of_USBStdGetStatusHandler
  9082  0017D8                     	__end_of_USBStdGetStatusHandler:
  9083                           	signat	_USBStdGetStatusHandler,88
  9084                           	global	_USBStdFeatureReqHandler
  9085                           
  9086 ;; *************** function _USBStdFeatureReqHandler *****************
  9087 ;; Defined at:
  9088 ;;		line 286 in file "../usb9.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;		None               void
  9095 ;; Registers used:
  9096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9104 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9105 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9106 ;;Total ram usage:        4 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    2
  9109 ;; This function calls:
  9110 ;;		Nothing
  9111 ;; This function is called by:
  9112 ;;		_USBCheckStdRequest
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           psect	text20,class=CODE,space=0,reloc=2
  9116                           global __ptext20
  9117  0015BC                     __ptext20:
  9118                           psect	text20
  9119                           	file	"../usb9.c"
  9120                           	line	286
  9121                           	global	__size_of_USBStdFeatureReqHandler
  9122  0000                     	__size_of_USBStdFeatureReqHandler	equ	__end_of_USBStdFeatureReqHandler-_USBStdFeatureRe
                                 qHandler
  9123                           	
  9124  0015BC                     _USBStdFeatureReqHandler:
  9125                           	opt	stack 23
  9126                           	line	288
  9127                           	
  9128  0015BC                     l3600:
  9129                           ;usb9.c: 287: if((SetupPkt.bFeature == 0x01)&&
  9130                           ;usb9.c: 288: (SetupPkt.Recipient == 0))
  9131  0015BC  0105               	movlb	5	; () banked
  9132  0015BE  0105               	movlb	5	; () banked
  9133  0015C0  0502               	decf	(0+(1280+02h))&0ffh,w	;volatile
  9134                           
  9135  0015C2  A4D8               	btfss	status,2
  9136  0015C4  D001               	goto	u3051
  9137  0015C6  D001               	goto	u3050
  9138  0015C8                     u3051:
  9139  0015C8  D01B               	goto	l244
  9140  0015CA                     u3050:
  9141                           	
  9142  0015CA                     l3602:; BSR set to: 5
  9143                           
  9144  0015CA  0105               	movlb	5	; () banked
  9145  0015CC  0105               	movlb	5	; () banked
  9146  0015CE  5100               	movf	((1280))&0ffh,w	;volatile
  9147  0015D0  0B1F               	andlw	(1<<5)-1
  9148  0015D2  0900               	iorlw	0
  9149  0015D4  A4D8               	btfss	status,2
  9150  0015D6  D001               	goto	u3061
  9151  0015D8  D001               	goto	u3060
  9152  0015DA                     u3061:
  9153  0015DA  D012               	goto	l244
  9154  0015DC                     u3060:
  9155                           	line	290
  9156                           	
  9157  0015DC                     l3604:; BSR set to: 5
  9158                           
  9159                           ;usb9.c: 289: {
  9160                           ;usb9.c: 290: ctrl_trf_session_owner = 1;
  9161  0015DC  0100               	movlb	0	; () banked
  9162  0015DE  6FE0               	movwf	(??_USBStdFeatureReqHandler+0+0)&0ffh
  9163  0015E0  0E01               	movlw	low(01h)
  9164  0015E2  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  9165  0015E4  0100               	movlb	0	; () banked
  9166  0015E6  51E0               	movf	(??_USBStdFeatureReqHandler+0+0)&0ffh,w
  9167                           	line	291
  9168                           	
  9169  0015E8                     l3606:; BSR set to: 0
  9170                           
  9171                           ;usb9.c: 291: if(SetupPkt.bRequest == 3)
  9172  0015E8  0105               	movlb	5	; () banked
  9173  0015EA  0105               	movlb	5	; () banked
  9174  0015EC  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  9175  0015EE  0A03               	xorlw	3
  9176                           
  9177  0015F0  A4D8               	btfss	status,2
  9178  0015F2  D001               	goto	u3071
  9179  0015F4  D001               	goto	u3070
  9180  0015F6                     u3071:
  9181  0015F6  D002               	goto	l245
  9182  0015F8                     u3070:
  9183                           	line	292
  9184                           	
  9185  0015F8                     l3608:; BSR set to: 5
  9186                           
  9187                           ;usb9.c: 292: usb_stat.RemoteWakeup = 1;
  9188  0015F8  8020               	bsf	((c:_usb_stat)),c,0
  9189  0015FA  D002               	goto	l244
  9190                           	line	293
  9191                           	
  9192  0015FC                     l245:; BSR set to: 5
  9193                           
  9194                           	line	294
  9195                           ;usb9.c: 293: else
  9196                           ;usb9.c: 294: usb_stat.RemoteWakeup = 0;
  9197  0015FC  9020               	bcf	((c:_usb_stat)),c,0
  9198  0015FE  D000               	goto	l244
  9199                           	
  9200  001600                     l246:; BSR set to: 5
  9201                           
  9202                           	line	295
  9203                           	
  9204  001600                     l244:; BSR set to: 5
  9205                           
  9206                           	line	299
  9207                           ;usb9.c: 295: }
  9208                           ;usb9.c: 297: if((SetupPkt.bFeature == 0x00)&&
  9209                           ;usb9.c: 298: (SetupPkt.Recipient == 2)&&
  9210                           ;usb9.c: 299: (SetupPkt.EPNum != 0))
  9211  001600  0105               	movlb	5	; () banked
  9212  001602  0105               	movlb	5	; () banked
  9213  001604  6702               	tstfsz	(0+(1280+02h))&0ffh	;volatile
  9214  001606  D001               	goto	u3081
  9215  001608  D001               	goto	u3080
  9216  00160A                     u3081:
  9217  00160A  D062               	goto	l252
  9218  00160C                     u3080:
  9219                           	
  9220  00160C                     l3610:; BSR set to: 5
  9221                           
  9222  00160C  0105               	movlb	5	; () banked
  9223  00160E  0105               	movlb	5	; () banked
  9224  001610  5100               	movf	((1280))&0ffh,w	;volatile
  9225  001612  0B1F               	andlw	(1<<5)-1
  9226  001614  0A02               	xorlw	02h
  9227  001616  A4D8               	btfss	status,2
  9228  001618  D001               	goto	u3091
  9229  00161A  D001               	goto	u3090
  9230  00161C                     u3091:
  9231  00161C  D059               	goto	l252
  9232  00161E                     u3090:
  9233                           	
  9234  00161E                     l3612:; BSR set to: 5
  9235                           
  9236  00161E  0105               	movlb	5	; () banked
  9237  001620  0105               	movlb	5	; () banked
  9238  001622  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  9239  001624  0B0F               	andlw	(1<<4)-1
  9240  001626  0900               	iorlw	0
  9241  001628  B4D8               	btfsc	status,2
  9242  00162A  D001               	goto	u3101
  9243  00162C  D001               	goto	u3100
  9244  00162E                     u3101:
  9245  00162E  D050               	goto	l252
  9246  001630                     u3100:
  9247                           	line	301
  9248                           	
  9249  001630                     l3614:; BSR set to: 5
  9250                           
  9251                           ;usb9.c: 300: {
  9252                           ;usb9.c: 301: ctrl_trf_session_owner = 1;
  9253  001630  0100               	movlb	0	; () banked
  9254  001632  6FE0               	movwf	(??_USBStdFeatureReqHandler+0+0)&0ffh
  9255  001634  0E01               	movlw	low(01h)
  9256  001636  6E1B               	movwf	((c:_ctrl_trf_session_owner)),c
  9257  001638  0100               	movlb	0	; () banked
  9258  00163A  51E0               	movf	(??_USBStdFeatureReqHandler+0+0)&0ffh,w
  9259                           	line	303
  9260                           	
  9261  00163C                     l3616:; BSR set to: 0
  9262                           
  9263                           ;usb9.c: 303: pDst.bRam = (byte*)&ep0Bo+(SetupPkt.EPNum*8)+(SetupPkt.EPDir*4);
  9264  00163C  0105               	movlb	5	; () banked
  9265  00163E  0105               	movlb	5	; () banked
  9266  001640  5104               	movf	(0+(1280+04h))&0ffh,w	;volatile
  9267  001642  0B0F               	andlw	(1<<4)-1
  9268  001644  0100               	movlb	0	; () banked
  9269  001646  6FE0               	movwf	(??_USBStdFeatureReqHandler+0+0)&0ffh
  9270  001648  0100               	movlb	0	; () banked
  9271  00164A  51E0               	movf	((??_USBStdFeatureReqHandler+0+0))&0ffh,w
  9272  00164C  0D08               	mullw	08h
  9273  00164E  0104               	movlb	4	; () banked
  9274  001650  0E00               	movlw	low(1024)	;volatile
  9275  001652  24F3               	addwf	(prodl),c,w
  9276  001654  0100               	movlb	0	; () banked
  9277  001656  6FE1               	movwf	(??_USBStdFeatureReqHandler+1+0)&0ffh
  9278  001658  0104               	movlb	4	; () banked
  9279  00165A  0E04               	movlw	high(1024)	;volatile
  9280  00165C  20F4               	addwfc	prod+1,w
  9281  00165E  0100               	movlb	0	; () banked
  9282  001660  6FE2               	movwf	1+(??_USBStdFeatureReqHandler+1+0)&0ffh
  9283  001662  0105               	movlb	5	; () banked
  9284  001664  0105               	movlb	5	; () banked
  9285  001666  3504               	rlcf	(0+(1280+04h))&0ffh,w	;volatile
  9286  001668  36E8               	rlcf	wreg,f
  9287  00166A  0B01               	andlw	1
  9288  00166C  0100               	movlb	0	; () banked
  9289  00166E  6FE3               	movwf	(??_USBStdFeatureReqHandler+3+0)&0ffh
  9290  001670  0100               	movlb	0	; () banked
  9291  001672  51E3               	movf	((??_USBStdFeatureReqHandler+3+0))&0ffh,w
  9292  001674  0D04               	mullw	04h
  9293  001676  50F3               	movf	(prodl),c,w
  9294  001678  0100               	movlb	0	; () banked
  9295  00167A  25E1               	addwf	(??_USBStdFeatureReqHandler+1+0)&0ffh,w
  9296                           	
  9297  00167C  6E07               	movwf	((c:_pDst)),c
  9298  00167E  50F4               	movf	(prodh),c,w
  9299  001680  0100               	movlb	0	; () banked
  9300  001682  21E2               	addwfc	(??_USBStdFeatureReqHandler+1+1)&0ffh,w
  9301  001684  6E08               	movwf	1+((c:_pDst)),c
  9302                           	line	305
  9303                           	
  9304  001686                     l3618:; BSR set to: 0
  9305                           
  9306                           ;usb9.c: 305: if(SetupPkt.bRequest == 3)
  9307  001686  0105               	movlb	5	; () banked
  9308  001688  0105               	movlb	5	; () banked
  9309  00168A  5101               	movf	(0+(1280+01h))&0ffh,w	;volatile
  9310  00168C  0A03               	xorlw	3
  9311                           
  9312  00168E  A4D8               	btfss	status,2
  9313  001690  D001               	goto	u3111
  9314  001692  D001               	goto	u3110
  9315  001694                     u3111:
  9316  001694  D007               	goto	l248
  9317  001696                     u3110:
  9318                           	line	306
  9319                           	
  9320  001696                     l3620:; BSR set to: 5
  9321                           
  9322                           ;usb9.c: 306: *pDst.bRam = 0x80|0x04;
  9323  001696  C007  FFD9         	movff	(c:_pDst),fsr2l
  9324  00169A  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  9325  00169E  0E84               	movlw	low(084h)
  9326  0016A0  6EDF               	movwf	indf2
  9327  0016A2  D016               	goto	l252
  9328                           	line	307
  9329                           	
  9330  0016A4                     l248:; BSR set to: 5
  9331                           
  9332                           	line	315
  9333                           ;usb9.c: 307: else
  9334                           ;usb9.c: 308: {
  9335                           ;usb9.c: 315: if(SetupPkt.EPDir == 1)
  9336  0016A4  0105               	movlb	5	; () banked
  9337                           	
  9338  0016A6  0105               	movlb	5	; () banked
  9339  0016A8  AF04               	btfss	(0+(1280+04h))&0ffh,7	;volatile
  9340  0016AA  D001               	goto	u3121
  9341  0016AC  D001               	goto	u3120
  9342  0016AE                     u3121:
  9343  0016AE  D007               	goto	l3624
  9344  0016B0                     u3120:
  9345                           	line	316
  9346                           	
  9347  0016B0                     l3622:; BSR set to: 5
  9348                           
  9349                           ;usb9.c: 316: *pDst.bRam = 0x00|0x40;
  9350  0016B0  C007  FFD9         	movff	(c:_pDst),fsr2l
  9351  0016B4  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  9352  0016B8  0E40               	movlw	low(040h)
  9353  0016BA  6EDF               	movwf	indf2
  9354  0016BC  D009               	goto	l252
  9355                           	line	317
  9356                           	
  9357  0016BE                     l250:; BSR set to: 5
  9358                           
  9359                           	line	318
  9360                           	
  9361  0016BE                     l3624:; BSR set to: 5
  9362                           
  9363                           ;usb9.c: 317: else
  9364                           ;usb9.c: 318: *pDst.bRam = 0x80|0x00|0x08;
  9365  0016BE  C007  FFD9         	movff	(c:_pDst),fsr2l
  9366  0016C2  C008  FFDA         	movff	(c:_pDst+1),fsr2h
  9367  0016C6  0E88               	movlw	low(088h)
  9368  0016C8  6EDF               	movwf	indf2
  9369  0016CA  D002               	goto	l252
  9370                           	
  9371  0016CC                     l251:; BSR set to: 5
  9372                           
  9373  0016CC  D001               	goto	l252
  9374                           	line	320
  9375                           	
  9376  0016CE                     l249:; BSR set to: 5
  9377                           
  9378  0016CE  D000               	goto	l252
  9379                           	line	321
  9380                           	
  9381  0016D0                     l247:; BSR set to: 5
  9382                           
  9383                           	line	322
  9384                           	
  9385  0016D0                     l252:; BSR set to: 5
  9386                           
  9387  0016D0  0012               	return
  9388                           	opt stack 0
  9389                           GLOBAL	__end_of_USBStdFeatureReqHandler
  9390  0016D2                     	__end_of_USBStdFeatureReqHandler:
  9391                           	signat	_USBStdFeatureReqHandler,88
  9392                           	global	_USBCtrlTrfOutHandler
  9393                           
  9394 ;; *************** function _USBCtrlTrfOutHandler *****************
  9395 ;; Defined at:
  9396 ;;		line 253 in file "../usbctrltrf.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;		None               void
  9403 ;; Registers used:
  9404 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9410 ;;      Params:         0       0       0       0       0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9414 ;;Total ram usage:        0 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    3
  9417 ;; This function calls:
  9418 ;;		_USBCtrlTrfRxService
  9419 ;;		_USBPrepareForNextSetupTrf
  9420 ;; This function is called by:
  9421 ;;		_USBCtrlEPService
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           psect	text21,class=CODE,space=0,reloc=2
  9425                           global __ptext21
  9426  002020                     __ptext21:
  9427                           psect	text21
  9428                           	file	"../usbctrltrf.c"
  9429                           	line	253
  9430                           	global	__size_of_USBCtrlTrfOutHandler
  9431  0000                     	__size_of_USBCtrlTrfOutHandler	equ	__end_of_USBCtrlTrfOutHandler-_USBCtrlTrfOutHandler
  9432                           	
  9433  002020                     _USBCtrlTrfOutHandler:; BSR set to: 5
  9434                           
  9435                           	opt	stack 24
  9436                           	line	254
  9437                           	
  9438  002020                     l3702:
  9439                           ;usbctrltrf.c: 254: if(ctrl_trf_state == 2)
  9440  002020  501C               	movf	((c:_ctrl_trf_state)),c,w
  9441  002022  0A02               	xorlw	2
  9442                           
  9443  002024  A4D8               	btfss	status,2
  9444  002026  D001               	goto	u3241
  9445  002028  D001               	goto	u3240
  9446  00202A                     u3241:
  9447  00202A  D020               	goto	l3716
  9448  00202C                     u3240:
  9449                           	line	256
  9450                           	
  9451  00202C                     l3704:
  9452                           ;usbctrltrf.c: 255: {
  9453                           ;usbctrltrf.c: 256: USBCtrlTrfRxService();
  9454  00202C  ECCD  F00F         	call	_USBCtrlTrfRxService	;wreg free
  9455                           	line	263
  9456                           	
  9457  002030                     l3706:
  9458                           ;usbctrltrf.c: 263: ep0Bo.ADR = (byte*)(&CtrlTrfData);
  9459  002030  0106               	movlb	6	; () banked
  9460  002032  0E06               	movlw	high(1536)	;volatile
  9461  002034  0104               	movlb	4	; () banked
  9462  002036  0104               	movlb	4	; () banked
  9463  002038  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  9464  00203A  0106               	movlb	6	; () banked
  9465  00203C  0E00               	movlw	low(1536)	;volatile
  9466  00203E  0104               	movlb	4	; () banked
  9467  002040  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  9468                           	line	264
  9469                           	
  9470  002042                     l3708:; BSR set to: 4
  9471                           
  9472                           ;usbctrltrf.c: 264: ep0Bo.Cnt = 8;
  9473  002042  0E08               	movlw	low(08h)
  9474  002044  0104               	movlb	4	; () banked
  9475  002046  0104               	movlb	4	; () banked
  9476  002048  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
  9477                           	line	265
  9478                           	
  9479  00204A                     l3710:; BSR set to: 4
  9480                           
  9481                           ;usbctrltrf.c: 265: if(ep0Bo.Stat.DTS == 0)
  9482  00204A  0104               	movlb	4	; () banked
  9483                           	
  9484  00204C  0104               	movlb	4	; () banked
  9485  00204E  BD00               	btfsc	((1024))&0ffh,6	;volatile
  9486  002050  D001               	goto	u3251
  9487  002052  D001               	goto	u3250
  9488  002054                     u3251:
  9489  002054  D005               	goto	l3714
  9490  002056                     u3250:
  9491                           	line	266
  9492                           	
  9493  002056                     l3712:; BSR set to: 4
  9494                           
  9495                           ;usbctrltrf.c: 266: ep0Bo.Stat._byte = 0x80|0x40|0x08;
  9496  002056  0EC8               	movlw	low(0C8h)
  9497  002058  0104               	movlb	4	; () banked
  9498  00205A  0104               	movlb	4	; () banked
  9499  00205C  6F00               	movwf	((1024))&0ffh	;volatile
  9500  00205E  D01A               	goto	l328
  9501                           	line	267
  9502                           	
  9503  002060                     l325:; BSR set to: 4
  9504                           
  9505                           	line	268
  9506                           	
  9507  002060                     l3714:; BSR set to: 4
  9508                           
  9509                           ;usbctrltrf.c: 267: else
  9510                           ;usbctrltrf.c: 268: ep0Bo.Stat._byte = 0x80|0x00|0x08;
  9511  002060  0E88               	movlw	low(088h)
  9512  002062  0104               	movlb	4	; () banked
  9513  002064  0104               	movlb	4	; () banked
  9514  002066  6F00               	movwf	((1024))&0ffh	;volatile
  9515  002068  D015               	goto	l328
  9516                           	
  9517  00206A                     l326:; BSR set to: 4
  9518                           
  9519                           	line	269
  9520                           ;usbctrltrf.c: 269: }
  9521  00206A  D014               	goto	l328
  9522                           	line	270
  9523                           	
  9524  00206C                     l324:; BSR set to: 4
  9525                           
  9526                           	line	273
  9527                           	
  9528  00206C                     l3716:
  9529                           ;usbctrltrf.c: 270: else
  9530                           ;usbctrltrf.c: 271: {
  9531                           ;usbctrltrf.c: 273: USBPrepareForNextSetupTrf();
  9532  00206C  ECFD  F011         	call	_USBPrepareForNextSetupTrf	;wreg free
  9533                           	line	274
  9534                           	
  9535  002070                     l3718:
  9536                           ;usbctrltrf.c: 274: ep0Bo.Cnt = 8;
  9537  002070  0E08               	movlw	low(08h)
  9538  002072  0104               	movlb	4	; () banked
  9539  002074  0104               	movlb	4	; () banked
  9540  002076  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
  9541                           	line	275
  9542                           	
  9543  002078                     l3720:; BSR set to: 4
  9544                           
  9545                           ;usbctrltrf.c: 275: ep0Bo.ADR = (byte*)(&SetupPkt);
  9546  002078  0105               	movlb	5	; () banked
  9547  00207A  0E05               	movlw	high(1280)	;volatile
  9548  00207C  0104               	movlb	4	; () banked
  9549  00207E  0104               	movlb	4	; () banked
  9550  002080  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  9551  002082  0105               	movlb	5	; () banked
  9552  002084  0E00               	movlw	low(1280)	;volatile
  9553  002086  0104               	movlb	4	; () banked
  9554  002088  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  9555                           	line	276
  9556                           	
  9557  00208A                     l3722:; BSR set to: 4
  9558                           
  9559                           ;usbctrltrf.c: 276: ep0Bo.Stat._byte = 0x80|0x00|0x08|0x04;
  9560  00208A  0E8C               	movlw	low(08Ch)
  9561  00208C  0104               	movlb	4	; () banked
  9562  00208E  0104               	movlb	4	; () banked
  9563  002090  6F00               	movwf	((1024))&0ffh	;volatile
  9564  002092  D000               	goto	l328
  9565                           	line	277
  9566                           	
  9567  002094                     l327:; BSR set to: 4
  9568                           
  9569                           	line	281
  9570                           	
  9571  002094                     l328:; BSR set to: 4
  9572                           
  9573  002094  0012               	return
  9574                           	opt stack 0
  9575                           GLOBAL	__end_of_USBCtrlTrfOutHandler
  9576  002096                     	__end_of_USBCtrlTrfOutHandler:
  9577                           	signat	_USBCtrlTrfOutHandler,88
  9578                           	global	_USBCtrlTrfInHandler
  9579                           
  9580 ;; *************** function _USBCtrlTrfInHandler *****************
  9581 ;; Defined at:
  9582 ;;		line 308 in file "../usbctrltrf.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;		None
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;		None
  9587 ;; Return value:  Size  Location     Type
  9588 ;;		None               void
  9589 ;; Registers used:
  9590 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9596 ;;      Params:         0       0       0       0       0       0       0       0       0
  9597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9598 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9599 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9600 ;;Total ram usage:        1 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    3
  9603 ;; This function calls:
  9604 ;;		_USBCtrlTrfTxService
  9605 ;;		_USBPrepareForNextSetupTrf
  9606 ;; This function is called by:
  9607 ;;		_USBCtrlEPService
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           psect	text22,class=CODE,space=0,reloc=2
  9611                           global __ptext22
  9612  001E8C                     __ptext22:
  9613                           psect	text22
  9614                           	file	"../usbctrltrf.c"
  9615                           	line	308
  9616                           	global	__size_of_USBCtrlTrfInHandler
  9617  0000                     	__size_of_USBCtrlTrfInHandler	equ	__end_of_USBCtrlTrfInHandler-_USBCtrlTrfInHandler
  9618                           	
  9619  001E8C                     _USBCtrlTrfInHandler:; BSR set to: 4
  9620                           
  9621                           	opt	stack 24
  9622                           	line	309
  9623                           	
  9624  001E8C                     l3724:
  9625                           ;usbctrltrf.c: 309: if(usb_device_state==4) { UADDR = SetupPkt.bDevADR._byte; if(UADDR >
                                  0) usb_device_state=5; else usb_device_state=3; };
  9626  001E8C  501F               	movf	((c:_usb_device_state)),c,w
  9627  001E8E  0A04               	xorlw	4
  9628                           
  9629  001E90  A4D8               	btfss	status,2
  9630  001E92  D001               	goto	u3261
  9631  001E94  D001               	goto	u3260
  9632  001E96                     u3261:
  9633  001E96  D016               	goto	l3734
  9634  001E98                     u3260:
  9635                           	
  9636  001E98                     l3726:
  9637  001E98  C502 FF63          	movff	0+(1280+02h),(c:3939)	;volatile
  9638                           	
  9639  001E9C                     l3728:
  9640  001E9C  5063               	movf	((c:3939)),c,w	;volatile
  9641  001E9E  B4D8               	btfsc	status,2
  9642  001EA0  D001               	goto	u3271
  9643  001EA2  D001               	goto	u3270
  9644  001EA4                     u3271:
  9645  001EA4  D007               	goto	l3732
  9646  001EA6                     u3270:
  9647                           	
  9648  001EA6                     l3730:
  9649  001EA6  0100               	movlb	0	; () banked
  9650  001EA8  6FE4               	movwf	(??_USBCtrlTrfInHandler+0+0)&0ffh
  9651  001EAA  0E05               	movlw	low(05h)
  9652  001EAC  6E1F               	movwf	((c:_usb_device_state)),c
  9653  001EAE  0100               	movlb	0	; () banked
  9654  001EB0  51E4               	movf	(??_USBCtrlTrfInHandler+0+0)&0ffh,w
  9655  001EB2  D008               	goto	l3734
  9656                           	
  9657  001EB4                     l332:; BSR set to: 0
  9658                           
  9659                           	
  9660  001EB4                     l3732:
  9661  001EB4  0100               	movlb	0	; () banked
  9662  001EB6  6FE4               	movwf	(??_USBCtrlTrfInHandler+0+0)&0ffh
  9663  001EB8  0E03               	movlw	low(03h)
  9664  001EBA  6E1F               	movwf	((c:_usb_device_state)),c
  9665  001EBC  0100               	movlb	0	; () banked
  9666  001EBE  51E4               	movf	(??_USBCtrlTrfInHandler+0+0)&0ffh,w
  9667  001EC0  D001               	goto	l3734
  9668                           	
  9669  001EC2                     l333:; BSR set to: 0
  9670                           
  9671  001EC2  D000               	goto	l3734
  9672                           	
  9673  001EC4                     l331:; BSR set to: 0
  9674                           
  9675                           	line	311
  9676                           	
  9677  001EC4                     l3734:
  9678                           ;usbctrltrf.c: 311: if(ctrl_trf_state == 1)
  9679  001EC4  041C               	decf	((c:_ctrl_trf_state)),c,w
  9680                           
  9681  001EC6  A4D8               	btfss	status,2
  9682  001EC8  D001               	goto	u3281
  9683  001ECA  D001               	goto	u3280
  9684  001ECC                     u3281:
  9685  001ECC  D01F               	goto	l3746
  9686  001ECE                     u3280:
  9687                           	line	313
  9688                           	
  9689  001ECE                     l3736:
  9690                           ;usbctrltrf.c: 312: {
  9691                           ;usbctrltrf.c: 313: USBCtrlTrfTxService();
  9692  001ECE  EC7C  F008         	call	_USBCtrlTrfTxService	;wreg free
  9693                           	line	329
  9694                           	
  9695  001ED2                     l3738:
  9696                           ;usbctrltrf.c: 329: if(short_pkt_status == 2)
  9697  001ED2  501E               	movf	((c:_short_pkt_status)),c,w
  9698  001ED4  0A02               	xorlw	2
  9699                           
  9700  001ED6  A4D8               	btfss	status,2
  9701  001ED8  D001               	goto	u3291
  9702  001EDA  D001               	goto	u3290
  9703  001EDC                     u3291:
  9704  001EDC  D005               	goto	l335
  9705  001EDE                     u3290:
  9706                           	line	333
  9707                           	
  9708  001EDE                     l3740:
  9709                           ;usbctrltrf.c: 330: {
  9710                           ;usbctrltrf.c: 333: ep0Bi.Stat._byte = 0x80|0x04;
  9711  001EDE  0E84               	movlw	low(084h)
  9712  001EE0  0104               	movlb	4	; () banked
  9713  001EE2  0104               	movlb	4	; () banked
  9714  001EE4  6F04               	movwf	((1028))&0ffh	;volatile
  9715                           	line	334
  9716                           ;usbctrltrf.c: 334: }
  9717  001EE6  D015               	goto	l340
  9718                           	line	336
  9719                           	
  9720  001EE8                     l335:
  9721                           	line	338
  9722                           ;usbctrltrf.c: 336: else
  9723                           ;usbctrltrf.c: 337: {
  9724                           ;usbctrltrf.c: 338: if(ep0Bi.Stat.DTS == 0)
  9725  001EE8  0104               	movlb	4	; () banked
  9726                           	
  9727  001EEA  0104               	movlb	4	; () banked
  9728  001EEC  BD04               	btfsc	((1028))&0ffh,6	;volatile
  9729  001EEE  D001               	goto	u3301
  9730  001EF0  D001               	goto	u3300
  9731  001EF2                     u3301:
  9732  001EF2  D005               	goto	l3744
  9733  001EF4                     u3300:
  9734                           	line	339
  9735                           	
  9736  001EF4                     l3742:; BSR set to: 4
  9737                           
  9738                           ;usbctrltrf.c: 339: ep0Bi.Stat._byte = 0x80|0x40|0x08;
  9739  001EF4  0EC8               	movlw	low(0C8h)
  9740  001EF6  0104               	movlb	4	; () banked
  9741  001EF8  0104               	movlb	4	; () banked
  9742  001EFA  6F04               	movwf	((1028))&0ffh	;volatile
  9743  001EFC  D00A               	goto	l340
  9744                           	line	340
  9745                           	
  9746  001EFE                     l337:; BSR set to: 4
  9747                           
  9748                           	line	341
  9749                           	
  9750  001EFE                     l3744:; BSR set to: 4
  9751                           
  9752                           ;usbctrltrf.c: 340: else
  9753                           ;usbctrltrf.c: 341: ep0Bi.Stat._byte = 0x80|0x00|0x08;
  9754  001EFE  0E88               	movlw	low(088h)
  9755  001F00  0104               	movlb	4	; () banked
  9756  001F02  0104               	movlb	4	; () banked
  9757  001F04  6F04               	movwf	((1028))&0ffh	;volatile
  9758  001F06  D005               	goto	l340
  9759                           	
  9760  001F08                     l338:; BSR set to: 4
  9761                           
  9762  001F08  D004               	goto	l340
  9763                           	line	342
  9764                           	
  9765  001F0A                     l336:; BSR set to: 4
  9766                           
  9767                           	line	343
  9768                           ;usbctrltrf.c: 342: }
  9769                           ;usbctrltrf.c: 343: }
  9770  001F0A  D003               	goto	l340
  9771                           	line	344
  9772                           	
  9773  001F0C                     l334:; BSR set to: 4
  9774                           
  9775                           	line	345
  9776                           	
  9777  001F0C                     l3746:
  9778                           ;usbctrltrf.c: 344: else
  9779                           ;usbctrltrf.c: 345: USBPrepareForNextSetupTrf();
  9780  001F0C  ECFD  F011         	call	_USBPrepareForNextSetupTrf	;wreg free
  9781  001F10  D000               	goto	l340
  9782                           	
  9783  001F12                     l339:
  9784                           	line	347
  9785                           	
  9786  001F12                     l340:
  9787  001F12  0012               	return
  9788                           	opt stack 0
  9789                           GLOBAL	__end_of_USBCtrlTrfInHandler
  9790  001F14                     	__end_of_USBCtrlTrfInHandler:
  9791                           	signat	_USBCtrlTrfInHandler,88
  9792                           	global	_USBCtrlEPServiceComplete
  9793                           
  9794 ;; *************** function _USBCtrlEPServiceComplete *****************
  9795 ;; Defined at:
  9796 ;;		line 518 in file "../usbctrltrf.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;		None
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;		None
  9801 ;; Return value:  Size  Location     Type
  9802 ;;		None               void
  9803 ;; Registers used:
  9804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
  9810 ;;      Params:         0       0       0       0       0       0       0       0       0
  9811 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9812 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9813 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9814 ;;Total ram usage:        1 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:    3
  9817 ;; This function calls:
  9818 ;;		_USBCtrlTrfTxService
  9819 ;; This function is called by:
  9820 ;;		_USBCtrlTrfSetupHandler
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           psect	text23,class=CODE,space=0,reloc=2
  9824                           global __ptext23
  9825  0018CE                     __ptext23:
  9826                           psect	text23
  9827                           	file	"../usbctrltrf.c"
  9828                           	line	518
  9829                           	global	__size_of_USBCtrlEPServiceComplete
  9830  0000                     	__size_of_USBCtrlEPServiceComplete	equ	__end_of_USBCtrlEPServiceComplete-_USBCtrlEPServ
                                 iceComplete
  9831                           	
  9832  0018CE                     _USBCtrlEPServiceComplete:
  9833                           	opt	stack 23
  9834                           	line	529
  9835                           	
  9836  0018CE                     l3748:
  9837                           ;usbctrltrf.c: 529: UCONbits.PKTDIS = 0;
  9838  0018CE  9860               	bcf	((c:3936)),c,4	;volatile
  9839                           	line	532
  9840                           ;usbctrltrf.c: 532: if(ctrl_trf_session_owner == 0)
  9841  0018D0  661B               	tstfsz	((c:_ctrl_trf_session_owner)),c
  9842  0018D2  D001               	goto	u3311
  9843  0018D4  D001               	goto	u3310
  9844  0018D6                     u3311:
  9845  0018D6  D016               	goto	l365
  9846  0018D8                     u3310:
  9847                           	line	538
  9848                           	
  9849  0018D8                     l3750:
  9850                           ;usbctrltrf.c: 533: {
  9851                           ;usbctrltrf.c: 538: ep0Bo.Cnt = 8;
  9852  0018D8  0E08               	movlw	low(08h)
  9853  0018DA  0104               	movlb	4	; () banked
  9854  0018DC  0104               	movlb	4	; () banked
  9855  0018DE  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
  9856                           	line	539
  9857                           ;usbctrltrf.c: 539: ep0Bo.ADR = (byte*)&SetupPkt;
  9858  0018E0  0105               	movlb	5	; () banked
  9859  0018E2  0E05               	movlw	high(1280)	;volatile
  9860  0018E4  0104               	movlb	4	; () banked
  9861  0018E6  0104               	movlb	4	; () banked
  9862  0018E8  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  9863  0018EA  0105               	movlb	5	; () banked
  9864  0018EC  0E00               	movlw	low(1280)	;volatile
  9865  0018EE  0104               	movlb	4	; () banked
  9866  0018F0  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  9867                           	line	541
  9868                           ;usbctrltrf.c: 541: ep0Bo.Stat._byte = 0x80|0x04;
  9869  0018F2  0E84               	movlw	low(084h)
  9870  0018F4  0104               	movlb	4	; () banked
  9871  0018F6  0104               	movlb	4	; () banked
  9872  0018F8  6F00               	movwf	((1024))&0ffh	;volatile
  9873                           	line	542
  9874                           ;usbctrltrf.c: 542: ep0Bi.Stat._byte = 0x80|0x04;
  9875  0018FA  0E84               	movlw	low(084h)
  9876  0018FC  0104               	movlb	4	; () banked
  9877  0018FE  0104               	movlb	4	; () banked
  9878  001900  6F04               	movwf	((1028))&0ffh	;volatile
  9879                           	line	543
  9880                           ;usbctrltrf.c: 543: }
  9881  001902  D05F               	goto	l370
  9882                           	line	544
  9883                           	
  9884  001904                     l365:
  9885                           	line	546
  9886                           ;usbctrltrf.c: 544: else
  9887                           ;usbctrltrf.c: 545: {
  9888                           ;usbctrltrf.c: 546: if(SetupPkt.DataDir == 1)
  9889  001904  0105               	movlb	5	; () banked
  9890                           	
  9891  001906  0105               	movlb	5	; () banked
  9892  001908  AF00               	btfss	((1280))&0ffh,7	;volatile
  9893  00190A  D001               	goto	u3321
  9894  00190C  D001               	goto	u3320
  9895  00190E                     u3321:
  9896  00190E  D038               	goto	l3770
  9897  001910                     u3320:
  9898                           	line	548
  9899                           	
  9900  001910                     l3752:; BSR set to: 5
  9901                           
  9902                           ;usbctrltrf.c: 547: {
  9903                           ;usbctrltrf.c: 548: if(SetupPkt.wLength < wCount._word)
  9904  001910  5021               	movf	((c:_wCount)),c,w
  9905  001912  0105               	movlb	5	; () banked
  9906  001914  0105               	movlb	5	; () banked
  9907  001916  5D06               	subwf	(0+(1280+06h))&0ffh,w	;volatile
  9908  001918  5022               	movf	((c:_wCount+1)),c,w
  9909  00191A  0105               	movlb	5	; () banked
  9910  00191C  0105               	movlb	5	; () banked
  9911  00191E  5907               	subwfb	(1+(1280+06h))&0ffh,w	;volatile
  9912  001920  B0D8               	btfsc	status,0
  9913  001922  D001               	goto	u3331
  9914  001924  D001               	goto	u3330
  9915  001926                     u3331:
  9916  001926  D005               	goto	l3756
  9917  001928                     u3330:
  9918                           	line	549
  9919                           	
  9920  001928                     l3754:; BSR set to: 5
  9921                           
  9922                           ;usbctrltrf.c: 549: wCount._word = SetupPkt.wLength;
  9923  001928  C506 F021          	movff	0+(1280+06h),(c:_wCount)	;volatile
  9924  00192C  C507 F022          	movff	1+(1280+06h),(c:_wCount+1)	;volatile
  9925  001930  D000               	goto	l3756
  9926                           	
  9927  001932                     l368:; BSR set to: 5
  9928                           
  9929                           	line	550
  9930                           	
  9931  001932                     l3756:; BSR set to: 5
  9932                           
  9933                           ;usbctrltrf.c: 550: USBCtrlTrfTxService();
  9934  001932  EC7C  F008         	call	_USBCtrlTrfTxService	;wreg free
  9935                           	line	551
  9936                           	
  9937  001936                     l3758:
  9938                           ;usbctrltrf.c: 551: ctrl_trf_state = 1;
  9939  001936  0100               	movlb	0	; () banked
  9940  001938  6FE4               	movwf	(??_USBCtrlEPServiceComplete+0+0)&0ffh
  9941  00193A  0E01               	movlw	low(01h)
  9942  00193C  6E1C               	movwf	((c:_ctrl_trf_state)),c
  9943  00193E  0100               	movlb	0	; () banked
  9944  001940  51E4               	movf	(??_USBCtrlEPServiceComplete+0+0)&0ffh,w
  9945                           	line	579
  9946                           	
  9947  001942                     l3760:; BSR set to: 0
  9948                           
  9949                           ;usbctrltrf.c: 579: ep0Bo.Cnt = 8;
  9950  001942  0E08               	movlw	low(08h)
  9951  001944  0104               	movlb	4	; () banked
  9952  001946  0104               	movlb	4	; () banked
  9953  001948  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
  9954                           	line	580
  9955                           	
  9956  00194A                     l3762:; BSR set to: 4
  9957                           
  9958                           ;usbctrltrf.c: 580: ep0Bo.ADR = (byte*)&SetupPkt;
  9959  00194A  0105               	movlb	5	; () banked
  9960  00194C  0E05               	movlw	high(1280)	;volatile
  9961  00194E  0104               	movlb	4	; () banked
  9962  001950  0104               	movlb	4	; () banked
  9963  001952  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
  9964  001954  0105               	movlb	5	; () banked
  9965  001956  0E00               	movlw	low(1280)	;volatile
  9966  001958  0104               	movlb	4	; () banked
  9967  00195A  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
  9968                           	line	581
  9969                           	
  9970  00195C                     l3764:; BSR set to: 4
  9971                           
  9972                           ;usbctrltrf.c: 581: ep0Bo.Stat._byte = 0x80;
  9973  00195C  0E80               	movlw	low(080h)
  9974  00195E  0104               	movlb	4	; () banked
  9975  001960  0104               	movlb	4	; () banked
  9976  001962  6F00               	movwf	((1024))&0ffh	;volatile
  9977                           	line	587
  9978                           	
  9979  001964                     l3766:; BSR set to: 4
  9980                           
  9981                           ;usbctrltrf.c: 587: ep0Bi.ADR = (byte*)&CtrlTrfData;
  9982  001964  0106               	movlb	6	; () banked
  9983  001966  0E06               	movlw	high(1536)	;volatile
  9984  001968  0104               	movlb	4	; () banked
  9985  00196A  0104               	movlb	4	; () banked
  9986  00196C  6F07               	movwf	(1+(1028+02h))&0ffh	;volatile
  9987  00196E  0106               	movlb	6	; () banked
  9988  001970  0E00               	movlw	low(1536)	;volatile
  9989  001972  0104               	movlb	4	; () banked
  9990  001974  6F06               	movwf	(0+(1028+02h))&0ffh	;volatile
  9991                           	line	588
  9992                           	
  9993  001976                     l3768:; BSR set to: 4
  9994                           
  9995                           ;usbctrltrf.c: 588: ep0Bi.Stat._byte = 0x80|0x40|0x08;
  9996  001976  0EC8               	movlw	low(0C8h)
  9997  001978  0104               	movlb	4	; () banked
  9998  00197A  0104               	movlb	4	; () banked
  9999  00197C  6F04               	movwf	((1028))&0ffh	;volatile
 10000                           	line	589
 10001                           ;usbctrltrf.c: 589: }
 10002  00197E  D021               	goto	l370
 10003                           	line	590
 10004                           	
 10005  001980                     l367:; BSR set to: 4
 10006                           
 10007                           	line	592
 10008                           	
 10009  001980                     l3770:
 10010                           ;usbctrltrf.c: 590: else
 10011                           ;usbctrltrf.c: 591: {
 10012                           ;usbctrltrf.c: 592: ctrl_trf_state = 2;
 10013  001980  0100               	movlb	0	; () banked
 10014  001982  6FE4               	movwf	(??_USBCtrlEPServiceComplete+0+0)&0ffh
 10015  001984  0E02               	movlw	low(02h)
 10016  001986  6E1C               	movwf	((c:_ctrl_trf_state)),c
 10017  001988  0100               	movlb	0	; () banked
 10018  00198A  51E4               	movf	(??_USBCtrlEPServiceComplete+0+0)&0ffh,w
 10019                           	line	602
 10020                           	
 10021  00198C                     l3772:; BSR set to: 0
 10022                           
 10023                           ;usbctrltrf.c: 602: ep0Bi.Cnt = 0;
 10024  00198C  0E00               	movlw	low(0)
 10025  00198E  0104               	movlb	4	; () banked
 10026  001990  0104               	movlb	4	; () banked
 10027  001992  6F05               	movwf	(0+(1028+01h))&0ffh	;volatile
 10028                           	line	603
 10029                           	
 10030  001994                     l3774:; BSR set to: 4
 10031                           
 10032                           ;usbctrltrf.c: 603: ep0Bi.Stat._byte = 0x80|0x40|0x08;
 10033  001994  0EC8               	movlw	low(0C8h)
 10034  001996  0104               	movlb	4	; () banked
 10035  001998  0104               	movlb	4	; () banked
 10036  00199A  6F04               	movwf	((1028))&0ffh	;volatile
 10037                           	line	608
 10038                           	
 10039  00199C                     l3776:; BSR set to: 4
 10040                           
 10041                           ;usbctrltrf.c: 608: ep0Bo.Cnt = 8;
 10042  00199C  0E08               	movlw	low(08h)
 10043  00199E  0104               	movlb	4	; () banked
 10044  0019A0  0104               	movlb	4	; () banked
 10045  0019A2  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
 10046                           	line	609
 10047                           	
 10048  0019A4                     l3778:; BSR set to: 4
 10049                           
 10050                           ;usbctrltrf.c: 609: ep0Bo.ADR = (byte*)&CtrlTrfData;
 10051  0019A4  0106               	movlb	6	; () banked
 10052  0019A6  0E06               	movlw	high(1536)	;volatile
 10053  0019A8  0104               	movlb	4	; () banked
 10054  0019AA  0104               	movlb	4	; () banked
 10055  0019AC  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
 10056  0019AE  0106               	movlb	6	; () banked
 10057  0019B0  0E00               	movlw	low(1536)	;volatile
 10058  0019B2  0104               	movlb	4	; () banked
 10059  0019B4  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
 10060                           	line	610
 10061                           	
 10062  0019B6                     l3780:; BSR set to: 4
 10063                           
 10064                           ;usbctrltrf.c: 610: ep0Bo.Stat._byte = 0x80|0x40|0x08;
 10065  0019B6  0EC8               	movlw	low(0C8h)
 10066  0019B8  0104               	movlb	4	; () banked
 10067  0019BA  0104               	movlb	4	; () banked
 10068  0019BC  6F00               	movwf	((1024))&0ffh	;volatile
 10069  0019BE  D001               	goto	l370
 10070                           	line	611
 10071                           	
 10072  0019C0                     l369:; BSR set to: 4
 10073                           
 10074  0019C0  D000               	goto	l370
 10075                           	line	612
 10076                           	
 10077  0019C2                     l366:; BSR set to: 4
 10078                           
 10079                           	line	614
 10080                           	
 10081  0019C2                     l370:; BSR set to: 4
 10082                           
 10083  0019C2  0012               	return
 10084                           	opt stack 0
 10085                           GLOBAL	__end_of_USBCtrlEPServiceComplete
 10086  0019C4                     	__end_of_USBCtrlEPServiceComplete:
 10087                           	signat	_USBCtrlEPServiceComplete,88
 10088                           	global	_USBCtrlTrfRxService
 10089                           
 10090 ;; *************** function _USBCtrlTrfRxService *****************
 10091 ;; Defined at:
 10092 ;;		line 466 in file "../usbctrltrf.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;		None
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;  byte_to_read    2    0[BANK0 ] struct _WORD
 10097 ;; Return value:  Size  Location     Type
 10098 ;;		None               void
 10099 ;; Registers used:
 10100 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10106 ;;      Params:         0       0       0       0       0       0       0       0       0
 10107 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10109 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10110 ;;Total ram usage:        2 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:    2
 10113 ;; This function calls:
 10114 ;;		Nothing
 10115 ;; This function is called by:
 10116 ;;		_USBCtrlTrfOutHandler
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           psect	text24,class=CODE,space=0,reloc=2
 10120                           global __ptext24
 10121  001F9A                     __ptext24:
 10122                           psect	text24
 10123                           	file	"../usbctrltrf.c"
 10124                           	line	466
 10125                           	global	__size_of_USBCtrlTrfRxService
 10126  0000                     	__size_of_USBCtrlTrfRxService	equ	__end_of_USBCtrlTrfRxService-_USBCtrlTrfRxService
 10127                           	
 10128  001F9A                     _USBCtrlTrfRxService:; BSR set to: 4
 10129                           
 10130                           	opt	stack 24
 10131                           	line	469
 10132                           	
 10133  001F9A                     l3782:
 10134                           ;usbctrltrf.c: 467: WORD_t byte_to_read;
 10135                           ;usbctrltrf.c: 469: ((byte_to_read).v[1]) = 0x03 & ep0Bo.Stat._byte;
 10136  001F9A  0104               	movlb	4	; () banked
 10137  001F9C  0104               	movlb	4	; () banked
 10138  001F9E  5100               	movf	((1024))&0ffh,w	;volatile
 10139  001FA0  0B03               	andlw	low(03h)
 10140  001FA2  0100               	movlb	0	; () banked
 10141  001FA4  0100               	movlb	0	; () banked
 10142  001FA6  6FE1               	movwf	(0+(USBCtrlTrfRxService@byte_to_read+01h))&0ffh
 10143                           	line	470
 10144                           	
 10145  001FA8                     l3784:; BSR set to: 0
 10146                           
 10147                           ;usbctrltrf.c: 470: ((byte_to_read).v[0]) = ep0Bo.Cnt;
 10148  001FA8  C401 F0E0          	movff	0+(1024+01h),(USBCtrlTrfRxService@byte_to_read)	;volatile
 10149                           	line	475
 10150                           ;usbctrltrf.c: 475: wCount._word = wCount._word + byte_to_read._word;
 10151  001FAC  0100               	movlb	0	; () banked
 10152  001FAE  0100               	movlb	0	; () banked
 10153  001FB0  51E0               	movf	((USBCtrlTrfRxService@byte_to_read))&0ffh,w
 10154  001FB2  2421               	addwf	((c:_wCount)),c,w
 10155                           	
 10156  001FB4  6E21               	movwf	((c:_wCount)),c
 10157  001FB6  0100               	movlb	0	; () banked
 10158  001FB8  0100               	movlb	0	; () banked
 10159  001FBA  51E1               	movf	((USBCtrlTrfRxService@byte_to_read+1))&0ffh,w
 10160  001FBC  2022               	addwfc	((c:_wCount+1)),c,w
 10161  001FBE  6E22               	movwf	1+((c:_wCount)),c
 10162                           	line	477
 10163                           	
 10164  001FC0                     l3786:; BSR set to: 0
 10165                           
 10166                           ;usbctrltrf.c: 477: pSrc.bRam = (byte*)&CtrlTrfData;
 10167  001FC0  0106               	movlb	6	; () banked
 10168  001FC2  0E06               	movlw	high(1536)	;volatile
 10169  001FC4  6E0B               	movwf	((c:_pSrc+1)),c
 10170  001FC6  0106               	movlb	6	; () banked
 10171  001FC8  0E00               	movlw	low(1536)	;volatile
 10172  001FCA  6E0A               	movwf	((c:_pSrc)),c
 10173                           	line	479
 10174                           ;usbctrltrf.c: 479: while(byte_to_read._word)
 10175  001FCC  D01F               	goto	l3796
 10176                           	
 10177  001FCE                     l360:; BSR set to: 6
 10178                           
 10179                           	line	481
 10180                           	
 10181  001FCE                     l3788:
 10182                           ;usbctrltrf.c: 480: {
 10183                           ;usbctrltrf.c: 481: *pDst.bRam = *pSrc.bRam;
 10184  001FCE  C00A  FFF6         	movff	(c:_pSrc),tblptrl
 10185  001FD2  C00B  FFF7         	movff	(c:_pSrc+1),tblptrh
 10186  001FD6  6AF8               	clrf	tblptru
 10187  001FD8  C007  FFD9         	movff	(c:_pDst),fsr2l
 10188  001FDC  C008  FFDA         	movff	(c:_pDst+1),fsr2h
 10189  001FE0  0E07               	movlw	high __ramtop-1
 10190  001FE2  64F7               	cpfsgt	tblptrh
 10191  001FE4  D003               	bra	u3347
 10192  001FE6  0008               	tblrd	*
 10193                           	
 10194  001FE8  50F5               	movf	tablat,w
 10195  001FEA  D005               	bra	u3340
 10196  001FEC                     u3347:
 10197  001FEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 10198  001FF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10199  001FF4  50EF               	movf	indf0,w
 10200  001FF6                     u3340:
 10201  001FF6  6EDF               	movwf	indf2
 10202                           	line	482
 10203                           	
 10204  001FF8                     l3790:
 10205                           ;usbctrltrf.c: 482: pDst.bRam++;
 10206  001FF8  4A07               	infsnz	((c:_pDst)),c
 10207  001FFA  2A08               	incf	((c:_pDst+1)),c
 10208                           	line	483
 10209                           	
 10210  001FFC                     l3792:
 10211                           ;usbctrltrf.c: 483: pSrc.bRam++;
 10212  001FFC  4A0A               	infsnz	((c:_pSrc)),c
 10213  001FFE  2A0B               	incf	((c:_pSrc+1)),c
 10214                           	line	484
 10215                           	
 10216  002000                     l3794:
 10217                           ;usbctrltrf.c: 484: byte_to_read._word--;
 10218  002000  0100               	movlb	0	; () banked
 10219  002002  0100               	movlb	0	; () banked
 10220  002004  07E0               	decf	((USBCtrlTrfRxService@byte_to_read))&0ffh
 10221  002006  A0D8               	btfss	status,0
 10222  002008  07E1               	decf	((USBCtrlTrfRxService@byte_to_read+1))&0ffh
 10223  00200A  D000               	goto	l3796
 10224                           	line	485
 10225                           	
 10226  00200C                     l359:; BSR set to: 0
 10227                           
 10228                           	line	479
 10229                           	
 10230  00200C                     l3796:
 10231  00200C  0100               	movlb	0	; () banked
 10232  00200E  0100               	movlb	0	; () banked
 10233  002010  51E1               	movf	((USBCtrlTrfRxService@byte_to_read+1))&0ffh,w
 10234  002012  11E0               	iorwf ((USBCtrlTrfRxService@byte_to_read))&0ffh,w
 10235                           
 10236  002014  A4D8               	btfss	status,2
 10237  002016  D001               	goto	u3351
 10238  002018  D001               	goto	u3350
 10239  00201A                     u3351:
 10240  00201A  D7D9               	goto	l3788
 10241  00201C                     u3350:
 10242  00201C  D000               	goto	l362
 10243                           	
 10244  00201E                     l361:; BSR set to: 0
 10245                           
 10246                           	line	487
 10247                           	
 10248  00201E                     l362:; BSR set to: 0
 10249                           
 10250  00201E  0012               	return
 10251                           	opt stack 0
 10252                           GLOBAL	__end_of_USBCtrlTrfRxService
 10253  002020                     	__end_of_USBCtrlTrfRxService:
 10254                           	signat	_USBCtrlTrfRxService,88
 10255                           	global	_USBCtrlTrfTxService
 10256                           
 10257 ;; *************** function _USBCtrlTrfTxService *****************
 10258 ;; Defined at:
 10259 ;;		line 371 in file "../usbctrltrf.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;		None
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;  byte_to_send    2    2[BANK0 ] struct _WORD
 10264 ;; Return value:  Size  Location     Type
 10265 ;;		None               void
 10266 ;; Registers used:
 10267 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10273 ;;      Params:         0       0       0       0       0       0       0       0       0
 10274 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10275 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10276 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10277 ;;Total ram usage:        4 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    2
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_USBCtrlTrfInHandler
 10284 ;;		_USBCtrlEPServiceComplete
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           psect	text25,class=CODE,space=0,reloc=2
 10288                           global __ptext25
 10289  0010F8                     __ptext25:
 10290                           psect	text25
 10291                           	file	"../usbctrltrf.c"
 10292                           	line	371
 10293                           	global	__size_of_USBCtrlTrfTxService
 10294  0000                     	__size_of_USBCtrlTrfTxService	equ	__end_of_USBCtrlTrfTxService-_USBCtrlTrfTxService
 10295                           	
 10296  0010F8                     _USBCtrlTrfTxService:; BSR set to: 0
 10297                           
 10298                           	opt	stack 24
 10299                           	line	377
 10300                           	
 10301  0010F8                     l3802:
 10302                           ;usbctrltrf.c: 372: WORD_t byte_to_send;
 10303                           ;usbctrltrf.c: 377: if(wCount._word < 8)
 10304  0010F8  0E08               	movlw	08h
 10305  0010FA  5C21               	subwf	((c:_wCount)),c,w
 10306  0010FC  0E00               	movlw	0
 10307  0010FE  5822               	subwfb	((c:_wCount+1)),c,w
 10308  001100  B0D8               	btfsc	status,0
 10309  001102  D001               	goto	u3361
 10310  001104  D001               	goto	u3360
 10311  001106                     u3361:
 10312  001106  D01D               	goto	l3812
 10313  001108                     u3360:
 10314                           	line	379
 10315                           	
 10316  001108                     l3804:
 10317                           ;usbctrltrf.c: 378: {
 10318                           ;usbctrltrf.c: 379: byte_to_send._word = wCount._word;
 10319  001108  C021  F0E2         	movff	(c:_wCount),(USBCtrlTrfTxService@byte_to_send)
 10320  00110C  C022  F0E3         	movff	(c:_wCount+1),(USBCtrlTrfTxService@byte_to_send+1)
 10321                           	line	394
 10322                           ;usbctrltrf.c: 394: if(short_pkt_status == 0)
 10323  001110  661E               	tstfsz	((c:_short_pkt_status)),c
 10324  001112  D001               	goto	u3371
 10325  001114  D001               	goto	u3370
 10326  001116                     u3371:
 10327  001116  D007               	goto	l3808
 10328  001118                     u3370:
 10329                           	line	396
 10330                           	
 10331  001118                     l3806:
 10332                           ;usbctrltrf.c: 395: {
 10333                           ;usbctrltrf.c: 396: short_pkt_status = 1;
 10334  001118  0100               	movlb	0	; () banked
 10335  00111A  6FE0               	movwf	(??_USBCtrlTrfTxService+0+0)&0ffh
 10336  00111C  0E01               	movlw	low(01h)
 10337  00111E  6E1E               	movwf	((c:_short_pkt_status)),c
 10338  001120  0100               	movlb	0	; () banked
 10339  001122  51E0               	movf	(??_USBCtrlTrfTxService+0+0)&0ffh,w
 10340                           	line	397
 10341                           ;usbctrltrf.c: 397: }
 10342  001124  D016               	goto	l3814
 10343                           	line	398
 10344                           	
 10345  001126                     l344:; BSR set to: 0
 10346                           
 10347                           	
 10348  001126                     l3808:
 10349                           ;usbctrltrf.c: 398: else if(short_pkt_status == 1)
 10350  001126  041E               	decf	((c:_short_pkt_status)),c,w
 10351                           
 10352  001128  A4D8               	btfss	status,2
 10353  00112A  D001               	goto	u3381
 10354  00112C  D001               	goto	u3380
 10355  00112E                     u3381:
 10356  00112E  D011               	goto	l3814
 10357  001130                     u3380:
 10358                           	line	400
 10359                           	
 10360  001130                     l3810:
 10361                           ;usbctrltrf.c: 399: {
 10362                           ;usbctrltrf.c: 400: short_pkt_status = 2;
 10363  001130  0100               	movlb	0	; () banked
 10364  001132  6FE0               	movwf	(??_USBCtrlTrfTxService+0+0)&0ffh
 10365  001134  0E02               	movlw	low(02h)
 10366  001136  6E1E               	movwf	((c:_short_pkt_status)),c
 10367  001138  0100               	movlb	0	; () banked
 10368  00113A  51E0               	movf	(??_USBCtrlTrfTxService+0+0)&0ffh,w
 10369  00113C  D00A               	goto	l3814
 10370                           	line	401
 10371                           	
 10372  00113E                     l346:; BSR set to: 0
 10373                           
 10374  00113E  D009               	goto	l3814
 10375                           	line	403
 10376                           	
 10377  001140                     l345:; BSR set to: 0
 10378                           
 10379                           ;usbctrltrf.c: 401: }
 10380                           ;usbctrltrf.c: 403: }
 10381  001140  D008               	goto	l3814
 10382                           	line	404
 10383                           	
 10384  001142                     l343:; BSR set to: 0
 10385                           
 10386                           	line	405
 10387                           	
 10388  001142                     l3812:
 10389                           ;usbctrltrf.c: 404: else
 10390                           ;usbctrltrf.c: 405: byte_to_send._word = 8;
 10391  001142  0E00               	movlw	high(08h)
 10392  001144  0100               	movlb	0	; () banked
 10393  001146  0100               	movlb	0	; () banked
 10394  001148  6FE3               	movwf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh
 10395  00114A  0E08               	movlw	low(08h)
 10396  00114C  0100               	movlb	0	; () banked
 10397  00114E  6FE2               	movwf	((USBCtrlTrfTxService@byte_to_send))&0ffh
 10398  001150  D000               	goto	l3814
 10399                           	
 10400  001152                     l347:; BSR set to: 0
 10401                           
 10402                           	line	410
 10403                           	
 10404  001152                     l3814:
 10405                           ;usbctrltrf.c: 410: ep0Bi.Stat.BC9 = 0;
 10406  001152  0104               	movlb	4	; () banked
 10407  001154  0104               	movlb	4	; () banked
 10408  001156  9304               	bcf	((1028))&0ffh,1	;volatile
 10409                           	line	411
 10410                           	
 10411  001158                     l3816:; BSR set to: 4
 10412                           
 10413                           ;usbctrltrf.c: 411: ep0Bi.Stat.BC8 = 0;
 10414  001158  0104               	movlb	4	; () banked
 10415  00115A  0104               	movlb	4	; () banked
 10416  00115C  9104               	bcf	((1028))&0ffh,0	;volatile
 10417                           	line	412
 10418                           	
 10419  00115E                     l3818:; BSR set to: 4
 10420                           
 10421                           ;usbctrltrf.c: 412: ep0Bi.Stat._byte |= ((byte_to_send).v[1]);
 10422  00115E  0100               	movlb	0	; () banked
 10423  001160  0100               	movlb	0	; () banked
 10424  001162  51E3               	movf	(0+(USBCtrlTrfTxService@byte_to_send+01h))&0ffh,w
 10425  001164  0104               	movlb	4	; () banked
 10426  001166  0104               	movlb	4	; () banked
 10427  001168  1304               	iorwf	((1028))&0ffh	;volatile
 10428                           	line	413
 10429                           	
 10430  00116A                     l3820:; BSR set to: 4
 10431                           
 10432                           ;usbctrltrf.c: 413: ep0Bi.Cnt = ((byte_to_send).v[0]);
 10433  00116A  C0E2  F405         	movff	(USBCtrlTrfTxService@byte_to_send),0+(1028+01h)	;volatile
 10434                           	line	418
 10435                           	
 10436  00116E                     l3822:; BSR set to: 4
 10437                           
 10438                           ;usbctrltrf.c: 418: wCount._word = wCount._word - byte_to_send._word;
 10439  00116E  0100               	movlb	0	; () banked
 10440  001170  C0E2  F0E0         	movff	(USBCtrlTrfTxService@byte_to_send),??_USBCtrlTrfTxService+0+0
 10441  001174  0100               	movlb	0	; () banked
 10442  001176  C0E3  F0E1         	movff	(USBCtrlTrfTxService@byte_to_send+1),??_USBCtrlTrfTxService+0+0+1
 10443  00117A  0100               	movlb	0	; () banked
 10444  00117C  1FE0               	comf	(??_USBCtrlTrfTxService+0+0)&0ffh
 10445  00117E  1FE1               	comf	(??_USBCtrlTrfTxService+0+1)&0ffh
 10446  001180  4BE0               	infsnz	(??_USBCtrlTrfTxService+0+0)&0ffh
 10447  001182  2BE1               	incf	(??_USBCtrlTrfTxService+0+1)&0ffh
 10448  001184  5021               	movf	((c:_wCount)),c,w
 10449  001186  0100               	movlb	0	; () banked
 10450  001188  25E0               	addwf	(??_USBCtrlTrfTxService+0+0)&0ffh,w
 10451                           	
 10452  00118A  6E21               	movwf	((c:_wCount)),c
 10453  00118C  5022               	movf	((c:_wCount+1)),c,w
 10454  00118E  0100               	movlb	0	; () banked
 10455  001190  21E1               	addwfc	(??_USBCtrlTrfTxService+0+1)&0ffh,w
 10456  001192  6E22               	movwf	1+((c:_wCount)),c
 10457                           	line	420
 10458                           ;usbctrltrf.c: 420: pDst.bRam = (byte*)&CtrlTrfData;
 10459  001194  0106               	movlb	6	; () banked
 10460  001196  0E06               	movlw	high(1536)	;volatile
 10461  001198  6E08               	movwf	((c:_pDst+1)),c
 10462  00119A  0106               	movlb	6	; () banked
 10463  00119C  0E00               	movlw	low(1536)	;volatile
 10464  00119E  6E07               	movwf	((c:_pDst)),c
 10465                           	line	422
 10466                           	
 10467  0011A0                     l3824:; BSR set to: 6
 10468                           
 10469                           ;usbctrltrf.c: 422: if(usb_stat.ctrl_trf_mem == 1)
 10470                           	
 10471  0011A0  A220               	btfss	((c:_usb_stat)),c,1
 10472  0011A2  D001               	goto	u3391
 10473  0011A4  D001               	goto	u3390
 10474  0011A6                     u3391:
 10475  0011A6  D04B               	goto	l3846
 10476  0011A8                     u3390:
 10477  0011A8  D020               	goto	l3836
 10478                           	line	424
 10479                           	
 10480  0011AA                     l3826:; BSR set to: 6
 10481                           
 10482                           ;usbctrltrf.c: 423: {
 10483                           ;usbctrltrf.c: 424: while(byte_to_send._word)
 10484  0011AA  D01F               	goto	l3836
 10485                           	
 10486  0011AC                     l350:; BSR set to: 6
 10487                           
 10488                           	line	426
 10489                           	
 10490  0011AC                     l3828:
 10491                           ;usbctrltrf.c: 425: {
 10492                           ;usbctrltrf.c: 426: *pDst.bRam = *pSrc.bRom;
 10493  0011AC  C00A  FFF6         	movff	(c:_pSrc),tblptrl
 10494  0011B0  C00B  FFF7         	movff	(c:_pSrc+1),tblptrh
 10495  0011B4  6AF8               	clrf	tblptru
 10496  0011B6  C007  FFD9         	movff	(c:_pDst),fsr2l
 10497  0011BA  C008  FFDA         	movff	(c:_pDst+1),fsr2h
 10498  0011BE  0E07               	movlw	high __ramtop-1
 10499  0011C0  64F7               	cpfsgt	tblptrh
 10500  0011C2  D003               	bra	u3407
 10501  0011C4  0008               	tblrd	*
 10502                           	
 10503  0011C6  50F5               	movf	tablat,w
 10504  0011C8  D005               	bra	u3400
 10505  0011CA                     u3407:
 10506  0011CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10507  0011CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10508  0011D2  50EF               	movf	indf0,w
 10509  0011D4                     u3400:
 10510  0011D4  6EDF               	movwf	indf2
 10511                           	line	427
 10512                           	
 10513  0011D6                     l3830:
 10514                           ;usbctrltrf.c: 427: pDst.bRam++;
 10515  0011D6  4A07               	infsnz	((c:_pDst)),c
 10516  0011D8  2A08               	incf	((c:_pDst+1)),c
 10517                           	line	428
 10518                           	
 10519  0011DA                     l3832:
 10520                           ;usbctrltrf.c: 428: pSrc.bRom++;
 10521  0011DA  4A0A               	infsnz	((c:_pSrc)),c
 10522  0011DC  2A0B               	incf	((c:_pSrc+1)),c
 10523                           	line	429
 10524                           	
 10525  0011DE                     l3834:
 10526                           ;usbctrltrf.c: 429: byte_to_send._word--;
 10527  0011DE  0100               	movlb	0	; () banked
 10528  0011E0  0100               	movlb	0	; () banked
 10529  0011E2  07E2               	decf	((USBCtrlTrfTxService@byte_to_send))&0ffh
 10530  0011E4  A0D8               	btfss	status,0
 10531  0011E6  07E3               	decf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh
 10532  0011E8  D000               	goto	l3836
 10533                           	line	430
 10534                           	
 10535  0011EA                     l349:; BSR set to: 0
 10536                           
 10537                           	line	424
 10538                           	
 10539  0011EA                     l3836:
 10540  0011EA  0100               	movlb	0	; () banked
 10541  0011EC  0100               	movlb	0	; () banked
 10542  0011EE  51E3               	movf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh,w
 10543  0011F0  11E2               	iorwf ((USBCtrlTrfTxService@byte_to_send))&0ffh,w
 10544                           
 10545  0011F2  A4D8               	btfss	status,2
 10546  0011F4  D001               	goto	u3411
 10547  0011F6  D001               	goto	u3410
 10548  0011F8                     u3411:
 10549  0011F8  D7D9               	goto	l3828
 10550  0011FA                     u3410:
 10551  0011FA  D02B               	goto	l356
 10552                           	
 10553  0011FC                     l351:; BSR set to: 0
 10554                           
 10555                           	line	431
 10556                           ;usbctrltrf.c: 430: }
 10557                           ;usbctrltrf.c: 431: }
 10558  0011FC  D02A               	goto	l356
 10559                           	line	432
 10560                           	
 10561  0011FE                     l348:; BSR set to: 0
 10562                           
 10563                           	line	434
 10564                           ;usbctrltrf.c: 432: else
 10565                           ;usbctrltrf.c: 433: {
 10566                           ;usbctrltrf.c: 434: while(byte_to_send._word)
 10567  0011FE  D01F               	goto	l3846
 10568                           	
 10569  001200                     l354:; BSR set to: 0
 10570                           
 10571                           	line	436
 10572                           	
 10573  001200                     l3838:; BSR set to: 0
 10574                           
 10575                           ;usbctrltrf.c: 435: {
 10576                           ;usbctrltrf.c: 436: *pDst.bRam = *pSrc.bRam;
 10577  001200  C00A  FFF6         	movff	(c:_pSrc),tblptrl
 10578  001204  C00B  FFF7         	movff	(c:_pSrc+1),tblptrh
 10579  001208  6AF8               	clrf	tblptru
 10580  00120A  C007  FFD9         	movff	(c:_pDst),fsr2l
 10581  00120E  C008  FFDA         	movff	(c:_pDst+1),fsr2h
 10582  001212  0E07               	movlw	high __ramtop-1
 10583  001214  64F7               	cpfsgt	tblptrh
 10584  001216  D003               	bra	u3427
 10585  001218  0008               	tblrd	*
 10586                           	
 10587  00121A  50F5               	movf	tablat,w
 10588  00121C  D005               	bra	u3420
 10589  00121E                     u3427:
 10590  00121E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10591  001222  CFF7 FFEA          	movff	tblptrh,fsr0h
 10592  001226  50EF               	movf	indf0,w
 10593  001228                     u3420:
 10594  001228  6EDF               	movwf	indf2
 10595                           	line	437
 10596                           	
 10597  00122A                     l3840:
 10598                           ;usbctrltrf.c: 437: pDst.bRam++;
 10599  00122A  4A07               	infsnz	((c:_pDst)),c
 10600  00122C  2A08               	incf	((c:_pDst+1)),c
 10601                           	line	438
 10602                           	
 10603  00122E                     l3842:
 10604                           ;usbctrltrf.c: 438: pSrc.bRam++;
 10605  00122E  4A0A               	infsnz	((c:_pSrc)),c
 10606  001230  2A0B               	incf	((c:_pSrc+1)),c
 10607                           	line	439
 10608                           	
 10609  001232                     l3844:
 10610                           ;usbctrltrf.c: 439: byte_to_send._word--;
 10611  001232  0100               	movlb	0	; () banked
 10612  001234  0100               	movlb	0	; () banked
 10613  001236  07E2               	decf	((USBCtrlTrfTxService@byte_to_send))&0ffh
 10614  001238  A0D8               	btfss	status,0
 10615  00123A  07E3               	decf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh
 10616  00123C  D000               	goto	l3846
 10617                           	line	440
 10618                           	
 10619  00123E                     l353:; BSR set to: 0
 10620                           
 10621                           	line	434
 10622                           	
 10623  00123E                     l3846:
 10624  00123E  0100               	movlb	0	; () banked
 10625  001240  0100               	movlb	0	; () banked
 10626  001242  51E3               	movf	((USBCtrlTrfTxService@byte_to_send+1))&0ffh,w
 10627  001244  11E2               	iorwf ((USBCtrlTrfTxService@byte_to_send))&0ffh,w
 10628                           
 10629  001246  A4D8               	btfss	status,2
 10630  001248  D001               	goto	u3431
 10631  00124A  D001               	goto	u3430
 10632  00124C                     u3431:
 10633  00124C  D7D9               	goto	l3838
 10634  00124E                     u3430:
 10635  00124E  D001               	goto	l356
 10636                           	
 10637  001250                     l355:; BSR set to: 0
 10638                           
 10639  001250  D000               	goto	l356
 10640                           	line	441
 10641                           	
 10642  001252                     l352:; BSR set to: 0
 10643                           
 10644                           	line	443
 10645                           	
 10646  001252                     l356:; BSR set to: 0
 10647                           
 10648  001252  0012               	return
 10649                           	opt stack 0
 10650                           GLOBAL	__end_of_USBCtrlTrfTxService
 10651  001254                     	__end_of_USBCtrlTrfTxService:
 10652                           	signat	_USBCtrlTrfTxService,88
 10653                           	global	_USBModuleEnable
 10654                           
 10655 ;; *************** function _USBModuleEnable *****************
 10656 ;; Defined at:
 10657 ;;		line 150 in file "../usbdrv.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;		None
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;		None               void
 10664 ;; Registers used:
 10665 ;;		wreg, status,2
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10671 ;;      Params:         0       0       0       0       0       0       0       0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10673 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10674 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10675 ;;Total ram usage:        1 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    2
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_USBCheckBusStatus
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           psect	text26,class=CODE,space=0,reloc=2
 10685                           global __ptext26
 10686  0023E2                     __ptext26:
 10687                           psect	text26
 10688                           	file	"../usbdrv.c"
 10689                           	line	150
 10690                           	global	__size_of_USBModuleEnable
 10691  0000                     	__size_of_USBModuleEnable	equ	__end_of_USBModuleEnable-_USBModuleEnable
 10692                           	
 10693  0023E2                     _USBModuleEnable:; BSR set to: 0
 10694                           
 10695                           	opt	stack 26
 10696                           	line	151
 10697                           	
 10698  0023E2                     l3848:
 10699                           ;usbdrv.c: 151: UCON = 0;
 10700  0023E2  0E00               	movlw	low(0)
 10701  0023E4  6E60               	movwf	((c:3936)),c	;volatile
 10702                           	line	152
 10703                           ;usbdrv.c: 152: UIE = 0;
 10704  0023E6  0E00               	movlw	low(0)
 10705  0023E8  6E64               	movwf	((c:3940)),c	;volatile
 10706                           	line	153
 10707                           	
 10708  0023EA                     l3850:
 10709                           ;usbdrv.c: 153: UCONbits.USBEN = 1;
 10710  0023EA  8660               	bsf	((c:3936)),c,3	;volatile
 10711                           	line	154
 10712                           	
 10713  0023EC                     l3852:
 10714                           ;usbdrv.c: 154: usb_device_state = 1;
 10715  0023EC  0100               	movlb	0	; () banked
 10716  0023EE  6FE0               	movwf	(??_USBModuleEnable+0+0)&0ffh
 10717  0023F0  0E01               	movlw	low(01h)
 10718  0023F2  6E1F               	movwf	((c:_usb_device_state)),c
 10719  0023F4  0100               	movlb	0	; () banked
 10720  0023F6  51E0               	movf	(??_USBModuleEnable+0+0)&0ffh,w
 10721                           	line	155
 10722                           	
 10723  0023F8                     l443:; BSR set to: 0
 10724                           
 10725  0023F8  0012               	return
 10726                           	opt stack 0
 10727                           GLOBAL	__end_of_USBModuleEnable
 10728  0023FA                     	__end_of_USBModuleEnable:
 10729                           	signat	_USBModuleEnable,88
 10730                           	global	_USBWakeFromSuspend
 10731                           
 10732 ;; *************** function _USBWakeFromSuspend *****************
 10733 ;; Defined at:
 10734 ;;		line 403 in file "../usbdrv.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;		None
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;		None
 10739 ;; Return value:  Size  Location     Type
 10740 ;;		None               void
 10741 ;; Registers used:
 10742 ;;		None
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10748 ;;      Params:         0       0       0       0       0       0       0       0       0
 10749 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10750 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10751 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10752 ;;Total ram usage:        0 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:    2
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		_USBDriverService
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           psect	text27,class=CODE,space=0,reloc=2
 10762                           global __ptext27
 10763  002410                     __ptext27:
 10764                           psect	text27
 10765                           	file	"../usbdrv.c"
 10766                           	line	403
 10767                           	global	__size_of_USBWakeFromSuspend
 10768  0000                     	__size_of_USBWakeFromSuspend	equ	__end_of_USBWakeFromSuspend-_USBWakeFromSuspend
 10769                           	
 10770  002410                     _USBWakeFromSuspend:; BSR set to: 0
 10771                           
 10772                           	opt	stack 26
 10773                           	line	408
 10774                           	
 10775  002410                     l3854:
 10776                           ;usbdrv.c: 408: UCONbits.SUSPND = 0;
 10777  002410  9260               	bcf	((c:3936)),c,1	;volatile
 10778                           	line	409
 10779                           ;usbdrv.c: 409: UIEbits.ACTVIE = 0;
 10780  002412  9464               	bcf	((c:3940)),c,2	;volatile
 10781                           	line	425
 10782                           ;usbdrv.c: 425: while(UIRbits.ACTVIF){UIRbits.ACTVIF = 0;}
 10783  002414  D001               	goto	l464
 10784                           	
 10785  002416                     l465:
 10786  002416  9465               	bcf	((c:3941)),c,2	;volatile
 10787                           	
 10788  002418                     l464:
 10789                           	
 10790  002418  B465               	btfsc	((c:3941)),c,2	;volatile
 10791  00241A  D001               	goto	u3441
 10792  00241C  D001               	goto	u3440
 10793  00241E                     u3441:
 10794  00241E  D7FB               	goto	l465
 10795  002420                     u3440:
 10796  002420  D000               	goto	l467
 10797                           	
 10798  002422                     l466:
 10799                           	line	427
 10800                           	
 10801  002422                     l467:
 10802  002422  0012               	return
 10803                           	opt stack 0
 10804                           GLOBAL	__end_of_USBWakeFromSuspend
 10805  002424                     	__end_of_USBWakeFromSuspend:
 10806                           	signat	_USBWakeFromSuspend,88
 10807                           	global	_USBProtocolResetHandler
 10808                           
 10809 ;; *************** function _USBProtocolResetHandler *****************
 10810 ;; Defined at:
 10811 ;;		line 680 in file "../usbdrv.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;		None
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;		None               void
 10818 ;; Registers used:
 10819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 10825 ;;      Params:         0       0       0       0       0       0       0       0       0
 10826 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10827 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10828 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10829 ;;Total ram usage:        1 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; Hardware stack levels required when called:    3
 10832 ;; This function calls:
 10833 ;;		_ClearArray
 10834 ;;		_USBPrepareForNextSetupTrf
 10835 ;; This function is called by:
 10836 ;;		_USBDriverService
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           psect	text28,class=CODE,space=0,reloc=2
 10840                           global __ptext28
 10841  001D60                     __ptext28:
 10842                           psect	text28
 10843                           	file	"../usbdrv.c"
 10844                           	line	680
 10845                           	global	__size_of_USBProtocolResetHandler
 10846  0000                     	__size_of_USBProtocolResetHandler	equ	__end_of_USBProtocolResetHandler-_USBProtocolRese
                                 tHandler
 10847                           	
 10848  001D60                     _USBProtocolResetHandler:
 10849                           	opt	stack 25
 10850                           	line	681
 10851                           	
 10852  001D60                     l3856:
 10853                           ;usbdrv.c: 681: UEIR = 0;
 10854  001D60  0E00               	movlw	low(0)
 10855  001D62  6E67               	movwf	((c:3943)),c	;volatile
 10856                           	line	682
 10857                           ;usbdrv.c: 682: UIR = 0;
 10858  001D64  0E00               	movlw	low(0)
 10859  001D66  6E65               	movwf	((c:3941)),c	;volatile
 10860                           	line	683
 10861                           ;usbdrv.c: 683: UEIE = 0b10011111;
 10862  001D68  0E9F               	movlw	low(09Fh)
 10863  001D6A  6E66               	movwf	((c:3942)),c	;volatile
 10864                           	line	684
 10865                           ;usbdrv.c: 684: UIE = 0b01111011;
 10866  001D6C  0E7B               	movlw	low(07Bh)
 10867  001D6E  6E64               	movwf	((c:3940)),c	;volatile
 10868                           	line	686
 10869                           ;usbdrv.c: 686: UADDR = 0x00;
 10870  001D70  0E00               	movlw	low(0)
 10871  001D72  6E63               	movwf	((c:3939)),c	;volatile
 10872                           	line	687
 10873                           	
 10874  001D74                     l3858:
 10875                           ;usbdrv.c: 687: ClearArray((byte*)&UEP1,15);;
 10876  001D74  0E0F               	movlw	high((c:3947))	;volatile
 10877  001D76  0100               	movlb	0	; () banked
 10878  001D78  0100               	movlb	0	; () banked
 10879  001D7A  6FE1               	movwf	((?_ClearArray+1))&0ffh
 10880  001D7C  0E6B               	movlw	low((c:3947))	;volatile
 10881  001D7E  0100               	movlb	0	; () banked
 10882  001D80  6FE0               	movwf	((?_ClearArray))&0ffh
 10883  001D82  0100               	movlb	0	; () banked
 10884  001D84  6FE3               	movwf	(??_USBProtocolResetHandler+0+0)&0ffh
 10885  001D86  0E0F               	movlw	low(0Fh)
 10886  001D88  0100               	movlb	0	; () banked
 10887  001D8A  0100               	movlb	0	; () banked
 10888  001D8C  6FE2               	movwf	(0+(?_ClearArray+02h))&0ffh
 10889  001D8E  0100               	movlb	0	; () banked
 10890  001D90  51E3               	movf	(??_USBProtocolResetHandler+0+0)&0ffh,w
 10891  001D92  0100               	movlb	0	; () banked
 10892  001D94  ECE1  F011         	call	_ClearArray	;wreg free
 10893                           	line	688
 10894                           	
 10895  001D98                     l3860:
 10896                           ;usbdrv.c: 688: UEP0 = 0x06|0x10;
 10897  001D98  0E16               	movlw	low(016h)
 10898  001D9A  6E6A               	movwf	((c:3946)),c	;volatile
 10899                           	line	690
 10900                           ;usbdrv.c: 690: while(UIRbits.TRNIF == 1)
 10901  001D9C  D006               	goto	l475
 10902                           	
 10903  001D9E                     l476:
 10904                           	line	692
 10905                           ;usbdrv.c: 691: {
 10906                           ;usbdrv.c: 692: UIRbits.TRNIF = 0;
 10907  001D9E  9665               	bcf	((c:3941)),c,3	;volatile
 10908                           	line	706
 10909                           # 706 "../usbdrv.c"
 10910  001DA0  F000               nop ;# 
 10911                           # 706 "../usbdrv.c"
 10912  001DA2  F000               nop ;# 
 10913                           # 706 "../usbdrv.c"
 10914  001DA4  F000               nop ;# 
 10915                           # 706 "../usbdrv.c"
 10916  001DA6  F000               nop ;# 
 10917                           # 706 "../usbdrv.c"
 10918  001DA8  F000               nop ;# 
 10919                           psect	text28
 10920                           	line	707
 10921                           	
 10922  001DAA                     l475:
 10923                           	line	690
 10924                           	
 10925  001DAA  B665               	btfsc	((c:3941)),c,3	;volatile
 10926  001DAC  D001               	goto	u3451
 10927  001DAE  D001               	goto	u3450
 10928  001DB0                     u3451:
 10929  001DB0  D7F6               	goto	l476
 10930  001DB2                     u3450:
 10931                           	
 10932  001DB2                     l477:
 10933                           	line	709
 10934                           ;usbdrv.c: 707: }
 10935                           ;usbdrv.c: 709: UCONbits.PKTDIS = 0;
 10936  001DB2  9860               	bcf	((c:3936)),c,4	;volatile
 10937                           	line	710
 10938                           	
 10939  001DB4                     l3862:
 10940                           ;usbdrv.c: 710: USBPrepareForNextSetupTrf();
 10941  001DB4  ECFD  F011         	call	_USBPrepareForNextSetupTrf	;wreg free
 10942                           	line	712
 10943                           	
 10944  001DB8                     l3864:
 10945                           ;usbdrv.c: 712: ep0Bo.Cnt = 8;
 10946  001DB8  0E08               	movlw	low(08h)
 10947  001DBA  0104               	movlb	4	; () banked
 10948  001DBC  0104               	movlb	4	; () banked
 10949  001DBE  6F01               	movwf	(0+(1024+01h))&0ffh	;volatile
 10950                           	line	713
 10951                           	
 10952  001DC0                     l3866:; BSR set to: 4
 10953                           
 10954                           ;usbdrv.c: 713: ep0Bo.ADR = (byte*)(&SetupPkt);
 10955  001DC0  0105               	movlb	5	; () banked
 10956  001DC2  0E05               	movlw	high(1280)	;volatile
 10957  001DC4  0104               	movlb	4	; () banked
 10958  001DC6  0104               	movlb	4	; () banked
 10959  001DC8  6F03               	movwf	(1+(1024+02h))&0ffh	;volatile
 10960  001DCA  0105               	movlb	5	; () banked
 10961  001DCC  0E00               	movlw	low(1280)	;volatile
 10962  001DCE  0104               	movlb	4	; () banked
 10963  001DD0  6F02               	movwf	(0+(1024+02h))&0ffh	;volatile
 10964                           	line	714
 10965                           	
 10966  001DD2                     l3868:; BSR set to: 4
 10967                           
 10968                           ;usbdrv.c: 714: ep0Bo.Stat._byte = 0x80|0x00|0x08|0x04;
 10969  001DD2  0E8C               	movlw	low(08Ch)
 10970  001DD4  0104               	movlb	4	; () banked
 10971  001DD6  0104               	movlb	4	; () banked
 10972  001DD8  6F00               	movwf	((1024))&0ffh	;volatile
 10973                           	line	716
 10974                           	
 10975  001DDA                     l3870:; BSR set to: 4
 10976                           
 10977                           ;usbdrv.c: 716: usb_stat.RemoteWakeup = 0;
 10978  001DDA  9020               	bcf	((c:_usb_stat)),c,0
 10979                           	line	717
 10980                           	
 10981  001DDC                     l3872:; BSR set to: 4
 10982                           
 10983                           ;usbdrv.c: 717: usb_active_cfg = 0;
 10984  001DDC  0100               	movlb	0	; () banked
 10985  001DDE  6FE3               	movwf	(??_USBProtocolResetHandler+0+0)&0ffh
 10986  001DE0  0E00               	movlw	low(0)
 10987  001DE2  6E25               	movwf	((c:_usb_active_cfg)),c
 10988  001DE4  0100               	movlb	0	; () banked
 10989  001DE6  51E3               	movf	(??_USBProtocolResetHandler+0+0)&0ffh,w
 10990                           	line	718
 10991                           	
 10992  001DE8                     l3874:; BSR set to: 0
 10993                           
 10994                           ;usbdrv.c: 718: usb_device_state = 3;
 10995  001DE8  0100               	movlb	0	; () banked
 10996  001DEA  6FE3               	movwf	(??_USBProtocolResetHandler+0+0)&0ffh
 10997  001DEC  0E03               	movlw	low(03h)
 10998  001DEE  6E1F               	movwf	((c:_usb_device_state)),c
 10999  001DF0  0100               	movlb	0	; () banked
 11000  001DF2  51E3               	movf	(??_USBProtocolResetHandler+0+0)&0ffh,w
 11001                           	line	719
 11002                           	
 11003  001DF4                     l478:; BSR set to: 0
 11004                           
 11005  001DF4  0012               	return
 11006                           	opt stack 0
 11007                           GLOBAL	__end_of_USBProtocolResetHandler
 11008  001DF6                     	__end_of_USBProtocolResetHandler:
 11009                           	signat	_USBProtocolResetHandler,88
 11010                           	global	_ClearArray
 11011                           
 11012 ;; *************** function _ClearArray *****************
 11013 ;; Defined at:
 11014 ;;		line 724 in file "../usbdrv.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  startAdr        2    0[BANK0 ] PTR unsigned char 
 11017 ;;		 -> usb_alt_intf(1), UEP1(1), 
 11018 ;;  count           1    2[BANK0 ] unsigned char 
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;		None               void
 11023 ;; Registers used:
 11024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11030 ;;      Params:         0       3       0       0       0       0       0       0       0
 11031 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11032 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11033 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11034 ;;Total ram usage:        3 bytes
 11035 ;; Hardware stack levels used:    1
 11036 ;; Hardware stack levels required when called:    2
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		_USBStdSetCfgHandler
 11041 ;;		_USBProtocolResetHandler
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           psect	text29,class=CODE,space=0,reloc=2
 11045                           global __ptext29
 11046  0023C2                     __ptext29:
 11047                           psect	text29
 11048                           	file	"../usbdrv.c"
 11049                           	line	724
 11050                           	global	__size_of_ClearArray
 11051  0000                     	__size_of_ClearArray	equ	__end_of_ClearArray-_ClearArray
 11052                           	
 11053  0023C2                     _ClearArray:; BSR set to: 0
 11054                           
 11055                           	opt	stack 22
 11056                           	line	728
 11057                           ;usbdrv.c: 728: do{
 11058                           	
 11059  0023C2                     l481:
 11060                           	line	730
 11061                           	
 11062  0023C2                     l3626:
 11063                           ;usbdrv.c: 730: *startAdr = 0;
 11064  0023C2  C0E0  FFD9         	movff	(ClearArray@startAdr),fsr2l
 11065  0023C6  C0E1  FFDA         	movff	(ClearArray@startAdr+1),fsr2h
 11066  0023CA  0E00               	movlw	low(0)
 11067  0023CC  6EDF               	movwf	indf2
 11068                           	line	731
 11069                           	
 11070  0023CE                     l3628:
 11071                           ;usbdrv.c: 731: startAdr++;
 11072  0023CE  0100               	movlb	0	; () banked
 11073  0023D0  0100               	movlb	0	; () banked
 11074  0023D2  4BE0               	infsnz	((ClearArray@startAdr))&0ffh
 11075  0023D4  2BE1               	incf	((ClearArray@startAdr+1))&0ffh
 11076                           	line	732
 11077                           	
 11078  0023D6                     l3630:; BSR set to: 0
 11079                           
 11080                           ;usbdrv.c: 732: }while(--count);
 11081  0023D6  0100               	movlb	0	; () banked
 11082  0023D8  0100               	movlb	0	; () banked
 11083  0023DA  2FE2               	decfsz	((ClearArray@count))&0ffh
 11084                           	
 11085  0023DC  D7F2               	goto	l481
 11086  0023DE  D000               	goto	l483
 11087                           	
 11088  0023E0                     l482:; BSR set to: 0
 11089                           
 11090                           	line	733
 11091                           	
 11092  0023E0                     l483:; BSR set to: 0
 11093                           
 11094  0023E0  0012               	return
 11095                           	opt stack 0
 11096                           GLOBAL	__end_of_ClearArray
 11097  0023E2                     	__end_of_ClearArray:
 11098                           	signat	_ClearArray,8312
 11099                           	global	_USBPrepareForNextSetupTrf
 11100                           
 11101 ;; *************** function _USBPrepareForNextSetupTrf *****************
 11102 ;; Defined at:
 11103 ;;		line 633 in file "../usbctrltrf.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;		None               void
 11110 ;; Registers used:
 11111 ;;		wreg, status,2
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11119 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11120 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11121 ;;Total ram usage:        1 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    2
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_USBCtrlTrfOutHandler
 11128 ;;		_USBCtrlTrfInHandler
 11129 ;;		_USBProtocolResetHandler
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           psect	text30,class=CODE,space=0,reloc=2
 11133                           global __ptext30
 11134  0023FA                     __ptext30:
 11135                           psect	text30
 11136                           	file	"../usbctrltrf.c"
 11137                           	line	633
 11138                           	global	__size_of_USBPrepareForNextSetupTrf
 11139  0000                     	__size_of_USBPrepareForNextSetupTrf	equ	__end_of_USBPrepareForNextSetupTrf-_USBPrepareF
                                 orNextSetupTrf
 11140                           	
 11141  0023FA                     _USBPrepareForNextSetupTrf:; BSR set to: 0
 11142                           
 11143                           	opt	stack 24
 11144                           	line	634
 11145                           	
 11146  0023FA                     l3798:
 11147                           ;usbctrltrf.c: 634: ctrl_trf_state = 0;
 11148  0023FA  0100               	movlb	0	; () banked
 11149  0023FC  6FE0               	movwf	(??_USBPrepareForNextSetupTrf+0+0)&0ffh
 11150  0023FE  0E00               	movlw	low(0)
 11151  002400  6E1C               	movwf	((c:_ctrl_trf_state)),c
 11152  002402  0100               	movlb	0	; () banked
 11153  002404  51E0               	movf	(??_USBPrepareForNextSetupTrf+0+0)&0ffh,w
 11154                           	line	650
 11155                           	
 11156  002406                     l3800:; BSR set to: 0
 11157                           
 11158                           ;usbctrltrf.c: 650: ep0Bi.Stat._byte = 0x00;
 11159  002406  0E00               	movlw	low(0)
 11160  002408  0104               	movlb	4	; () banked
 11161  00240A  0104               	movlb	4	; () banked
 11162  00240C  6F04               	movwf	((1028))&0ffh	;volatile
 11163                           	line	654
 11164                           	
 11165  00240E                     l373:; BSR set to: 4
 11166                           
 11167  00240E  0012               	return
 11168                           	opt stack 0
 11169                           GLOBAL	__end_of_USBPrepareForNextSetupTrf
 11170  002410                     	__end_of_USBPrepareForNextSetupTrf:
 11171                           	signat	_USBPrepareForNextSetupTrf,88
 11172                           	global	_USBSuspend
 11173                           
 11174 ;; *************** function _USBSuspend *****************
 11175 ;; Defined at:
 11176 ;;		line 337 in file "../usbdrv.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;		None
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;		None
 11181 ;; Return value:  Size  Location     Type
 11182 ;;		None               void
 11183 ;; Registers used:
 11184 ;;		None
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11190 ;;      Params:         0       0       0       0       0       0       0       0       0
 11191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11193 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11194 ;;Total ram usage:        0 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    2
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_USBDriverService
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           psect	text31,class=CODE,space=0,reloc=2
 11204                           global __ptext31
 11205  002424                     __ptext31:
 11206                           psect	text31
 11207                           	file	"../usbdrv.c"
 11208                           	line	337
 11209                           	global	__size_of_USBSuspend
 11210  0000                     	__size_of_USBSuspend	equ	__end_of_USBSuspend-_USBSuspend
 11211                           	
 11212  002424                     _USBSuspend:; BSR set to: 4
 11213                           
 11214                           	opt	stack 26
 11215                           	line	361
 11216                           	
 11217  002424                     l3876:
 11218                           ;usbdrv.c: 361: UIEbits.ACTVIE = 1;
 11219  002424  8464               	bsf	((c:3940)),c,2	;volatile
 11220                           	line	362
 11221                           ;usbdrv.c: 362: UIRbits.IDLEIF = 0;
 11222  002426  9865               	bcf	((c:3941)),c,4	;volatile
 11223                           	line	363
 11224                           ;usbdrv.c: 363: UCONbits.SUSPND = 1;
 11225  002428  8260               	bsf	((c:3936)),c,1	;volatile
 11226                           	line	371
 11227                           ;usbdrv.c: 371: PIR3bits.USBIF = 0;
 11228  00242A  94A4               	bcf	((c:4004)),c,2	;volatile
 11229                           	line	373
 11230                           ;usbdrv.c: 373: PIE3bits.USBIE = 1;
 11231  00242C  84A3               	bsf	((c:4003)),c,2	;volatile
 11232                           	line	375
 11233                           # 375 "../usbdrv.c"
 11234  00242E  0003               sleep ;# 
 11235                           psect	text31
 11236                           	line	381
 11237                           ;usbdrv.c: 381: PIE3bits.USBIE = 0;
 11238  002430  94A3               	bcf	((c:4003)),c,2	;volatile
 11239                           	line	385
 11240                           	
 11241  002432                     l461:
 11242  002432  0012               	return
 11243                           	opt stack 0
 11244                           GLOBAL	__end_of_USBSuspend
 11245  002434                     	__end_of_USBSuspend:
 11246                           	signat	_USBSuspend,88
 11247                           	global	_USBStallHandler
 11248                           
 11249 ;; *************** function _USBStallHandler *****************
 11250 ;; Defined at:
 11251 ;;		line 570 in file "../usbdrv.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;		None
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;		None               void
 11258 ;; Registers used:
 11259 ;;		wreg, status,2, status,0
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11268 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11269 ;;Total ram usage:        0 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:    2
 11272 ;; This function calls:
 11273 ;;		Nothing
 11274 ;; This function is called by:
 11275 ;;		_USBDriverService
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           psect	text32,class=CODE,space=0,reloc=2
 11279                           global __ptext32
 11280  0022EE                     __ptext32:
 11281                           psect	text32
 11282                           	file	"../usbdrv.c"
 11283                           	line	570
 11284                           	global	__size_of_USBStallHandler
 11285  0000                     	__size_of_USBStallHandler	equ	__end_of_USBStallHandler-_USBStallHandler
 11286                           	
 11287  0022EE                     _USBStallHandler:
 11288                           	opt	stack 26
 11289                           	line	580
 11290                           	
 11291  0022EE                     l3878:
 11292                           ;usbdrv.c: 580: if(UEP0bits.EPSTALL == 1)
 11293                           	
 11294  0022EE  A06A               	btfss	((c:3946)),c,0	;volatile
 11295  0022F0  D001               	goto	u3461
 11296  0022F2  D001               	goto	u3460
 11297  0022F4                     u3461:
 11298  0022F4  D017               	goto	l3888
 11299  0022F6                     u3460:
 11300                           	line	614
 11301                           	
 11302  0022F6                     l3880:
 11303                           ;usbdrv.c: 581: {
 11304                           ;usbdrv.c: 614: if((ep0Bo.Stat._byte == 0x80) && (ep0Bi.Stat._byte == (0x80|0x04)))
 11305  0022F6  0104               	movlb	4	; () banked
 11306  0022F8  0104               	movlb	4	; () banked
 11307  0022FA  5100               	movf	((1024))&0ffh,w	;volatile
 11308  0022FC  0A80               	xorlw	128
 11309                           
 11310  0022FE  A4D8               	btfss	status,2
 11311  002300  D001               	goto	u3471
 11312  002302  D001               	goto	u3470
 11313  002304                     u3471:
 11314  002304  D00D               	goto	l3886
 11315  002306                     u3470:
 11316                           	
 11317  002306                     l3882:; BSR set to: 4
 11318                           
 11319  002306  0104               	movlb	4	; () banked
 11320  002308  0104               	movlb	4	; () banked
 11321  00230A  5104               	movf	((1028))&0ffh,w	;volatile
 11322  00230C  0A84               	xorlw	132
 11323                           
 11324  00230E  A4D8               	btfss	status,2
 11325  002310  D001               	goto	u3481
 11326  002312  D001               	goto	u3480
 11327  002314                     u3481:
 11328  002314  D005               	goto	l3886
 11329  002316                     u3480:
 11330                           	line	617
 11331                           	
 11332  002316                     l3884:; BSR set to: 4
 11333                           
 11334                           ;usbdrv.c: 615: {
 11335                           ;usbdrv.c: 617: ep0Bo.Stat._byte = 0x80|0x00|0x08|0x04;
 11336  002316  0E8C               	movlw	low(08Ch)
 11337  002318  0104               	movlb	4	; () banked
 11338  00231A  0104               	movlb	4	; () banked
 11339  00231C  6F00               	movwf	((1024))&0ffh	;volatile
 11340  00231E  D000               	goto	l3886
 11341                           	line	618
 11342                           	
 11343  002320                     l471:; BSR set to: 4
 11344                           
 11345                           	line	621
 11346                           	
 11347  002320                     l3886:; BSR set to: 4
 11348                           
 11349                           ;usbdrv.c: 618: }
 11350                           ;usbdrv.c: 621: UEP0bits.EPSTALL = 0;
 11351  002320  906A               	bcf	((c:3946)),c,0	;volatile
 11352  002322  D000               	goto	l3888
 11353                           	line	622
 11354                           	
 11355  002324                     l470:; BSR set to: 4
 11356                           
 11357                           	line	623
 11358                           	
 11359  002324                     l3888:
 11360                           ;usbdrv.c: 622: }
 11361                           ;usbdrv.c: 623: UIRbits.STALLIF = 0;
 11362  002324  9A65               	bcf	((c:3941)),c,5	;volatile
 11363                           	line	624
 11364                           	
 11365  002326                     l472:
 11366  002326  0012               	return
 11367                           	opt stack 0
 11368                           GLOBAL	__end_of_USBStallHandler
 11369  002328                     	__end_of_USBStallHandler:
 11370                           	signat	_USBStallHandler,88
 11371                           	global	_ClearWatchdog
 11372                           
 11373 ;; *************** function _ClearWatchdog *****************
 11374 ;; Defined at:
 11375 ;;		line 670 in file "../BootPIC18NonJ.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;		None
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;		None               void
 11382 ;; Registers used:
 11383 ;;		None
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11389 ;;      Params:         0       0       0       0       0       0       0       0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11391 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11392 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11393 ;;Total ram usage:        0 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; Hardware stack levels required when called:    2
 11396 ;; This function calls:
 11397 ;;		Nothing
 11398 ;; This function is called by:
 11399 ;;		_ProcessIO
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           psect	text33,class=CODE,space=0,reloc=2
 11403                           global __ptext33
 11404  00243E                     __ptext33:
 11405                           psect	text33
 11406                           	file	"../BootPIC18NonJ.c"
 11407                           	line	670
 11408                           	global	__size_of_ClearWatchdog
 11409  0000                     	__size_of_ClearWatchdog	equ	__end_of_ClearWatchdog-_ClearWatchdog
 11410                           	
 11411  00243E                     _ClearWatchdog:
 11412                           	opt	stack 27
 11413                           	line	671
 11414                           	
 11415  00243E                     l3890:
 11416                           # 671 "../BootPIC18NonJ.c"
 11417  00243E  0004               clrwdt ;# 
 11418                           psect	text33
 11419                           	line	672
 11420                           	
 11421  002440                     l702:
 11422  002440  0012               	return
 11423                           	opt stack 0
 11424                           GLOBAL	__end_of_ClearWatchdog
 11425  002442                     	__end_of_ClearWatchdog:
 11426                           	signat	_ClearWatchdog,88
 11427                           	global	_WriteConfigBits
 11428                           
 11429 ;; *************** function _WriteConfigBits *****************
 11430 ;; Defined at:
 11431 ;;		line 582 in file "../BootPIC18NonJ.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;		None
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;		None
 11436 ;; Return value:  Size  Location     Type
 11437 ;;		None               void
 11438 ;; Registers used:
 11439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11445 ;;      Params:         0       0       0       0       0       0       0       0       0
 11446 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11447 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11448 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11449 ;;Total ram usage:        4 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; Hardware stack levels required when called:    3
 11452 ;; This function calls:
 11453 ;;		_UnlockAndActivate
 11454 ;; This function is called by:
 11455 ;;		_ProcessIO
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           psect	text34,class=CODE,space=0,reloc=2
 11459                           global __ptext34
 11460  001CC4                     __ptext34:
 11461                           psect	text34
 11462                           	file	"../BootPIC18NonJ.c"
 11463                           	line	582
 11464                           	global	__size_of_WriteConfigBits
 11465  0000                     	__size_of_WriteConfigBits	equ	__end_of_WriteConfigBits-_WriteConfigBits
 11466                           	
 11467  001CC4                     _WriteConfigBits:
 11468                           	opt	stack 26
 11469                           	line	585
 11470                           	
 11471  001CC4                     l3898:
 11472                           ;BootPIC18NonJ.c: 583: static unsigned char i;
 11473                           ;BootPIC18NonJ.c: 585: TBLPTR = (unsigned short long)PacketFromPC.Address;
 11474  001CC4  C061  FFF6         	movff	0+(_PacketFromPC+01h),(c:4086)	;volatile
 11475  001CC8  C062  FFF7         	movff	1+(_PacketFromPC+01h),(c:4086+1)	;volatile
 11476  001CCC  C063  FFF8         	movff	2+(_PacketFromPC+01h),(c:4086+2)	;volatile
 11477                           	line	587
 11478                           	
 11479  001CD0                     l3900:
 11480                           ;BootPIC18NonJ.c: 587: for(i = 0; i < PacketFromPC.Size; i++)
 11481  001CD0  0100               	movlb	0	; () banked
 11482  001CD2  6FE1               	movwf	(??_WriteConfigBits+0+0)&0ffh
 11483  001CD4  0E00               	movlw	low(0)
 11484  001CD6  6E12               	movwf	((c:WriteConfigBits@i)),c
 11485  001CD8  0100               	movlb	0	; () banked
 11486  001CDA  51E1               	movf	(??_WriteConfigBits+0+0)&0ffh,w
 11487  001CDC  D037               	goto	l3910
 11488                           	line	588
 11489                           	
 11490  001CDE                     l679:; BSR set to: 0
 11491                           
 11492                           	line	589
 11493                           	
 11494  001CDE                     l3902:; BSR set to: 0
 11495                           
 11496                           ;BootPIC18NonJ.c: 588: {
 11497                           ;BootPIC18NonJ.c: 589: TABLAT = PacketFromPC.Data[i+(0x3A-PacketFromPC.Size)];
 11498  001CDE  0100               	movlb	0	; () banked
 11499  001CE0  0100               	movlb	0	; () banked
 11500  001CE2  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11501  001CE4  0100               	movlb	0	; () banked
 11502  001CE6  6FE1               	movwf	(??_WriteConfigBits+0+0)&0ffh
 11503  001CE8  6BE2               	clrf	(??_WriteConfigBits+0+0+1)&0ffh
 11504                           
 11505  001CEA  0100               	movlb	0	; () banked
 11506  001CEC  1FE1               	comf	(??_WriteConfigBits+0+0)&0ffh
 11507  001CEE  1FE2               	comf	(??_WriteConfigBits+0+1)&0ffh
 11508  001CF0  4BE1               	infsnz	(??_WriteConfigBits+0+0)&0ffh
 11509  001CF2  2BE2               	incf	(??_WriteConfigBits+0+1)&0ffh
 11510  001CF4  5012               	movf	((c:WriteConfigBits@i)),c,w
 11511  001CF6  0100               	movlb	0	; () banked
 11512  001CF8  25E1               	addwf	(??_WriteConfigBits+0+0)&0ffh,w
 11513  001CFA  0100               	movlb	0	; () banked
 11514  001CFC  6FE3               	movwf	(??_WriteConfigBits+2+0)&0ffh
 11515  001CFE  0100               	movlb	0	; () banked
 11516  001D00  0100               	movlb	0	; () banked
 11517  001D02  0E00               	movlw	0
 11518  001D04  21E2               	addwfc	(??_WriteConfigBits+0+1)&0ffh,w
 11519  001D06  6FE4               	movwf	1+(??_WriteConfigBits+2+0)&0ffh
 11520  001D08  0E40               	movlw	040h
 11521  001D0A  0100               	movlb	0	; () banked
 11522  001D0C  27E3               	addwf	(??_WriteConfigBits+2+0)&0ffh
 11523  001D0E  0E00               	movlw	0
 11524  001D10  23E4               	addwfc	(??_WriteConfigBits+2+1)&0ffh
 11525  001D12  0100               	movlb	0	; () banked
 11526  001D14  0E60               	movlw	low(_PacketFromPC)
 11527  001D16  0100               	movlb	0	; () banked
 11528  001D18  25E3               	addwf	(??_WriteConfigBits+2+0)&0ffh,w
 11529  001D1A  6ED9               	movwf	c:fsr2l
 11530  001D1C  0100               	movlb	0	; () banked
 11531  001D1E  0E00               	movlw	high(_PacketFromPC)
 11532  001D20  0100               	movlb	0	; () banked
 11533  001D22  21E4               	addwfc	(??_WriteConfigBits+2+1)&0ffh,w
 11534  001D24  6EDA               	movwf	1+c:fsr2l
 11535  001D26  50DF               	movf	indf2,w
 11536  001D28  6EF5               	movwf	((c:4085)),c	;volatile
 11537                           	line	590
 11538                           # 590 "../BootPIC18NonJ.c"
 11539  001D2A  000C               tblwt ;# 
 11540                           psect	text34
 11541                           	line	592
 11542                           	
 11543  001D2C                     l3904:
 11544                           ;BootPIC18NonJ.c: 592: EECON1 = 0b11000100;
 11545  001D2C  0EC4               	movlw	low(0C4h)
 11546  001D2E  6EA6               	movwf	((c:4006)),c	;volatile
 11547                           	line	593
 11548                           	
 11549  001D30                     l3906:
 11550                           ;BootPIC18NonJ.c: 593: UnlockAndActivate(0xB5);
 11551  001D30  0100               	movlb	0	; () banked
 11552  001D32  6FE1               	movwf	(??_WriteConfigBits+0+0)&0ffh
 11553  001D34  0EB5               	movlw	low(0B5h)
 11554  001D36  0100               	movlb	0	; () banked
 11555  001D38  0100               	movlb	0	; () banked
 11556  001D3A  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
 11557  001D3C  0100               	movlb	0	; () banked
 11558  001D3E  51E1               	movf	(??_WriteConfigBits+0+0)&0ffh,w
 11559  001D40  0100               	movlb	0	; () banked
 11560  001D42  ECAF  F011         	call	_UnlockAndActivate	;wreg free
 11561                           	line	595
 11562                           # 595 "../BootPIC18NonJ.c"
 11563  001D46  0009               tblrdpostinc ;# 
 11564                           psect	text34
 11565                           	line	587
 11566                           	
 11567  001D48                     l3908:
 11568  001D48  2A12               	incf	((c:WriteConfigBits@i)),c
 11569  001D4A  D000               	goto	l3910
 11570                           	
 11571  001D4C                     l678:
 11572                           	
 11573  001D4C                     l3910:
 11574  001D4C  0100               	movlb	0	; () banked
 11575  001D4E  0100               	movlb	0	; () banked
 11576  001D50  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11577  001D52  5C12               	subwf	((c:WriteConfigBits@i)),c,w
 11578  001D54  A0D8               	btfss	status,0
 11579  001D56  D001               	goto	u3511
 11580  001D58  D001               	goto	u3510
 11581  001D5A                     u3511:
 11582  001D5A  D7C1               	goto	l3902
 11583  001D5C                     u3510:
 11584  001D5C  D000               	goto	l681
 11585                           	
 11586  001D5E                     l680:; BSR set to: 0
 11587                           
 11588                           	line	597
 11589                           	
 11590  001D5E                     l681:; BSR set to: 0
 11591                           
 11592  001D5E  0012               	return
 11593                           	opt stack 0
 11594                           GLOBAL	__end_of_WriteConfigBits
 11595  001D60                     	__end_of_WriteConfigBits:
 11596                           	signat	_WriteConfigBits,88
 11597                           	global	_WriteEEPROM
 11598                           
 11599 ;; *************** function _WriteEEPROM *****************
 11600 ;; Defined at:
 11601 ;;		line 601 in file "../BootPIC18NonJ.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;		None
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;		None
 11606 ;; Return value:  Size  Location     Type
 11607 ;;		None               void
 11608 ;; Registers used:
 11609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11615 ;;      Params:         0       0       0       0       0       0       0       0       0
 11616 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11617 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11618 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11619 ;;Total ram usage:        4 bytes
 11620 ;; Hardware stack levels used:    1
 11621 ;; Hardware stack levels required when called:    3
 11622 ;; This function calls:
 11623 ;;		_UnlockAndActivate
 11624 ;; This function is called by:
 11625 ;;		_ProcessIO
 11626 ;; This function uses a non-reentrant model
 11627 ;;
 11628                           psect	text35,class=CODE,space=0,reloc=2
 11629                           global __ptext35
 11630  001DF6                     __ptext35:
 11631                           psect	text35
 11632                           	file	"../BootPIC18NonJ.c"
 11633                           	line	601
 11634                           	global	__size_of_WriteEEPROM
 11635  0000                     	__size_of_WriteEEPROM	equ	__end_of_WriteEEPROM-_WriteEEPROM
 11636                           	
 11637  001DF6                     _WriteEEPROM:; BSR set to: 0
 11638                           
 11639                           	opt	stack 26
 11640                           	line	604
 11641                           	
 11642  001DF6                     l3912:
 11643                           ;BootPIC18NonJ.c: 602: static unsigned char i;
 11644                           ;BootPIC18NonJ.c: 604: for(i = 0; i < PacketFromPC.Size; i++)
 11645  001DF6  0100               	movlb	0	; () banked
 11646  001DF8  6FE1               	movwf	(??_WriteEEPROM+0+0)&0ffh
 11647  001DFA  0E00               	movlw	low(0)
 11648  001DFC  6E13               	movwf	((c:WriteEEPROM@i)),c
 11649  001DFE  0100               	movlb	0	; () banked
 11650  001E00  51E1               	movf	(??_WriteEEPROM+0+0)&0ffh,w
 11651  001E02  D03A               	goto	l3924
 11652                           	line	605
 11653                           	
 11654  001E04                     l687:; BSR set to: 0
 11655                           
 11656                           	line	606
 11657                           	
 11658  001E04                     l3914:; BSR set to: 0
 11659                           
 11660                           ;BootPIC18NonJ.c: 605: {
 11661                           ;BootPIC18NonJ.c: 606: EEADR = (((unsigned char)PacketFromPC.Address) + i);
 11662  001E04  0100               	movlb	0	; () banked
 11663  001E06  0100               	movlb	0	; () banked
 11664  001E08  5161               	movf	(0+(_PacketFromPC+01h))&0ffh,w
 11665  001E0A  2413               	addwf	((c:WriteEEPROM@i)),c,w
 11666  001E0C  6EA9               	movwf	((c:4009)),c	;volatile
 11667                           	line	607
 11668                           	
 11669  001E0E                     l3916:; BSR set to: 0
 11670                           
 11671                           ;BootPIC18NonJ.c: 607: EEDATA = PacketFromPC.Data[i+(0x3A-PacketFromPC.Size)];
 11672  001E0E  0100               	movlb	0	; () banked
 11673  001E10  0100               	movlb	0	; () banked
 11674  001E12  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11675  001E14  0100               	movlb	0	; () banked
 11676  001E16  6FE1               	movwf	(??_WriteEEPROM+0+0)&0ffh
 11677  001E18  6BE2               	clrf	(??_WriteEEPROM+0+0+1)&0ffh
 11678                           
 11679  001E1A  0100               	movlb	0	; () banked
 11680  001E1C  1FE1               	comf	(??_WriteEEPROM+0+0)&0ffh
 11681  001E1E  1FE2               	comf	(??_WriteEEPROM+0+1)&0ffh
 11682  001E20  4BE1               	infsnz	(??_WriteEEPROM+0+0)&0ffh
 11683  001E22  2BE2               	incf	(??_WriteEEPROM+0+1)&0ffh
 11684  001E24  5013               	movf	((c:WriteEEPROM@i)),c,w
 11685  001E26  0100               	movlb	0	; () banked
 11686  001E28  25E1               	addwf	(??_WriteEEPROM+0+0)&0ffh,w
 11687  001E2A  0100               	movlb	0	; () banked
 11688  001E2C  6FE3               	movwf	(??_WriteEEPROM+2+0)&0ffh
 11689  001E2E  0100               	movlb	0	; () banked
 11690  001E30  0100               	movlb	0	; () banked
 11691  001E32  0E00               	movlw	0
 11692  001E34  21E2               	addwfc	(??_WriteEEPROM+0+1)&0ffh,w
 11693  001E36  6FE4               	movwf	1+(??_WriteEEPROM+2+0)&0ffh
 11694  001E38  0E40               	movlw	040h
 11695  001E3A  0100               	movlb	0	; () banked
 11696  001E3C  27E3               	addwf	(??_WriteEEPROM+2+0)&0ffh
 11697  001E3E  0E00               	movlw	0
 11698  001E40  23E4               	addwfc	(??_WriteEEPROM+2+1)&0ffh
 11699  001E42  0100               	movlb	0	; () banked
 11700  001E44  0E60               	movlw	low(_PacketFromPC)
 11701  001E46  0100               	movlb	0	; () banked
 11702  001E48  25E3               	addwf	(??_WriteEEPROM+2+0)&0ffh,w
 11703  001E4A  6ED9               	movwf	c:fsr2l
 11704  001E4C  0100               	movlb	0	; () banked
 11705  001E4E  0E00               	movlw	high(_PacketFromPC)
 11706  001E50  0100               	movlb	0	; () banked
 11707  001E52  21E4               	addwfc	(??_WriteEEPROM+2+1)&0ffh,w
 11708  001E54  6EDA               	movwf	1+c:fsr2l
 11709  001E56  50DF               	movf	indf2,w
 11710  001E58  6EA8               	movwf	((c:4008)),c	;volatile
 11711                           	line	609
 11712                           	
 11713  001E5A                     l3918:; BSR set to: 0
 11714                           
 11715                           ;BootPIC18NonJ.c: 609: EECON1 = 0b00000100;
 11716  001E5A  0E04               	movlw	low(04h)
 11717  001E5C  6EA6               	movwf	((c:4006)),c	;volatile
 11718                           	line	610
 11719                           	
 11720  001E5E                     l3920:; BSR set to: 0
 11721                           
 11722                           ;BootPIC18NonJ.c: 610: UnlockAndActivate(0xB5);
 11723  001E5E  0100               	movlb	0	; () banked
 11724  001E60  6FE1               	movwf	(??_WriteEEPROM+0+0)&0ffh
 11725  001E62  0EB5               	movlw	low(0B5h)
 11726  001E64  0100               	movlb	0	; () banked
 11727  001E66  0100               	movlb	0	; () banked
 11728  001E68  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
 11729  001E6A  0100               	movlb	0	; () banked
 11730  001E6C  51E1               	movf	(??_WriteEEPROM+0+0)&0ffh,w
 11731  001E6E  0100               	movlb	0	; () banked
 11732  001E70  ECAF  F011         	call	_UnlockAndActivate	;wreg free
 11733                           	line	604
 11734                           	
 11735  001E74                     l3922:
 11736  001E74  2A13               	incf	((c:WriteEEPROM@i)),c
 11737  001E76  D000               	goto	l3924
 11738                           	
 11739  001E78                     l686:
 11740                           	
 11741  001E78                     l3924:
 11742  001E78  0100               	movlb	0	; () banked
 11743  001E7A  0100               	movlb	0	; () banked
 11744  001E7C  5165               	movf	(0+(_PacketFromPC+05h))&0ffh,w
 11745  001E7E  5C13               	subwf	((c:WriteEEPROM@i)),c,w
 11746  001E80  A0D8               	btfss	status,0
 11747  001E82  D001               	goto	u3521
 11748  001E84  D001               	goto	u3520
 11749  001E86                     u3521:
 11750  001E86  D7BE               	goto	l3914
 11751  001E88                     u3520:
 11752  001E88  D000               	goto	l689
 11753                           	
 11754  001E8A                     l688:; BSR set to: 0
 11755                           
 11756                           	line	613
 11757                           	
 11758  001E8A                     l689:; BSR set to: 0
 11759                           
 11760  001E8A  0012               	return
 11761                           	opt stack 0
 11762                           GLOBAL	__end_of_WriteEEPROM
 11763  001E8C                     	__end_of_WriteEEPROM:
 11764                           	signat	_WriteEEPROM,88
 11765                           	global	_WriteFlashBlock
 11766                           
 11767 ;; *************** function _WriteFlashBlock *****************
 11768 ;; Defined at:
 11769 ;;		line 507 in file "../BootPIC18NonJ.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;		None
 11772 ;; Auto vars:     Size  Location     Type
 11773 ;;		None
 11774 ;; Return value:  Size  Location     Type
 11775 ;;		None               void
 11776 ;; Registers used:
 11777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/0
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 11783 ;;      Params:         0       0       0       0       0       0       0       0       0
 11784 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11785 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11786 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11787 ;;Total ram usage:        3 bytes
 11788 ;; Hardware stack levels used:    1
 11789 ;; Hardware stack levels required when called:    3
 11790 ;; This function calls:
 11791 ;;		_UnlockAndActivate
 11792 ;; This function is called by:
 11793 ;;		_ProcessIO
 11794 ;; This function uses a non-reentrant model
 11795 ;;
 11796                           psect	text36,class=CODE,space=0,reloc=2
 11797                           global __ptext36
 11798  001254                     __ptext36:
 11799                           psect	text36
 11800                           	file	"../BootPIC18NonJ.c"
 11801                           	line	507
 11802                           	global	__size_of_WriteFlashBlock
 11803  0000                     	__size_of_WriteFlashBlock	equ	__end_of_WriteFlashBlock-_WriteFlashBlock
 11804                           	
 11805  001254                     _WriteFlashBlock:; BSR set to: 0
 11806                           
 11807                           	opt	stack 26
 11808                           	line	512
 11809                           	
 11810  001254                     l3926:
 11811                           ;BootPIC18NonJ.c: 508: static unsigned char i;
 11812                           ;BootPIC18NonJ.c: 509: static unsigned char BytesTakenFromBuffer;
 11813                           ;BootPIC18NonJ.c: 510: static unsigned char CorrectionFactor;
 11814                           ;BootPIC18NonJ.c: 512: BytesTakenFromBuffer = 0;
 11815  001254  0100               	movlb	0	; () banked
 11816  001256  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 11817  001258  0E00               	movlw	low(0)
 11818  00125A  6E14               	movwf	((c:WriteFlashBlock@BytesTakenFromBuffer)),c
 11819  00125C  0100               	movlb	0	; () banked
 11820  00125E  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 11821                           	line	513
 11822                           	
 11823  001260                     l3928:; BSR set to: 0
 11824                           
 11825                           ;BootPIC18NonJ.c: 513: TBLPTR = (ProgrammedPointer - BufferedDataIndex);
 11826  001260  5018               	movf	((c:_BufferedDataIndex)),c,w
 11827  001262  0100               	movlb	0	; () banked
 11828  001264  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 11829  001266  6BE2               	clrf	(??_WriteFlashBlock+0+0+1)&0ffh
 11830  001268  6BE3               	clrf	(??_WriteFlashBlock+0+0+2)&0ffh
 11831  00126A  0100               	movlb	0	; () banked
 11832  00126C  1FE1               	comf	(??_WriteFlashBlock+0+0)&0ffh
 11833  00126E  1FE2               	comf	(??_WriteFlashBlock+0+1)&0ffh
 11834  001270  1FE3               	comf	(??_WriteFlashBlock+0+2)&0ffh
 11835  001272  2BE1               	incf	(??_WriteFlashBlock+0+0)&0ffh
 11836  001274  0E00               	movlw	0
 11837  001276  23E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh
 11838  001278  23E3               	addwfc	(??_WriteFlashBlock+0+2)&0ffh
 11839                           
 11840  00127A  5004               	movf	((c:_ProgrammedPointer)),c,w
 11841  00127C  0100               	movlb	0	; () banked
 11842  00127E  25E1               	addwf	(??_WriteFlashBlock+0+0)&0ffh,w
 11843  001280  6EF6               	movwf	((c:4086)),c	;volatile
 11844  001282  0100               	movlb	0	; () banked
 11845  001284  5005               	movf	((c:_ProgrammedPointer+1)),c,w
 11846  001286  21E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh,w
 11847  001288  6EF7               	movwf	1+((c:4086)),c	;volatile
 11848  00128A  0100               	movlb	0	; () banked
 11849  00128C  5006               	movf	((c:_ProgrammedPointer+2)),c,w
 11850  00128E  21E3               	addwfc	(??_WriteFlashBlock+0+2)&0ffh,w
 11851  001290  6EF8               	movwf	2+((c:4086)),c	;volatile
 11852                           	line	529
 11853                           	
 11854  001292                     l3930:; BSR set to: 0
 11855                           
 11856                           ;BootPIC18NonJ.c: 529: CorrectionFactor = (TBLPTRL & 0b00011111);
 11857  001292  50F6               	movf	((c:4086)),c,w	;volatile
 11858  001294  0B1F               	andlw	low(01Fh)
 11859  001296  6E15               	movwf	((c:WriteFlashBlock@CorrectionFactor)),c
 11860                           	line	530
 11861                           	
 11862  001298                     l3932:; BSR set to: 0
 11863                           
 11864                           ;BootPIC18NonJ.c: 530: TBLPTRL &= 0b11100000;
 11865  001298  0EE0               	movlw	(0E0h)&0ffh
 11866  00129A  16F6               	andwf	((c:4086)),c	;volatile
 11867                           	line	541
 11868                           	
 11869  00129C                     l3934:; BSR set to: 0
 11870                           
 11871                           ;BootPIC18NonJ.c: 541: for(i = 0; i < 0x20; i++)
 11872  00129C  0100               	movlb	0	; () banked
 11873  00129E  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 11874  0012A0  0E00               	movlw	low(0)
 11875  0012A2  6E16               	movwf	((c:WriteFlashBlock@i)),c
 11876  0012A4  0100               	movlb	0	; () banked
 11877  0012A6  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 11878                           	
 11879  0012A8                     l3936:; BSR set to: 0
 11880                           
 11881  0012A8  0E1F               	movlw	(020h-1)
 11882  0012AA  6416               	cpfsgt	((c:WriteFlashBlock@i)),c
 11883  0012AC  D001               	goto	u3531
 11884  0012AE  D001               	goto	u3530
 11885  0012B0                     u3531:
 11886  0012B0  D002               	goto	l664
 11887  0012B2                     u3530:
 11888  0012B2  D027               	goto	l665
 11889                           	
 11890  0012B4                     l3938:; BSR set to: 0
 11891                           
 11892  0012B4  D026               	goto	l665
 11893                           	line	542
 11894                           	
 11895  0012B6                     l664:
 11896                           	line	543
 11897                           ;BootPIC18NonJ.c: 542: {
 11898                           ;BootPIC18NonJ.c: 543: if(CorrectionFactor == 0)
 11899  0012B6  6615               	tstfsz	((c:WriteFlashBlock@CorrectionFactor)),c
 11900  0012B8  D001               	goto	u3541
 11901  0012BA  D001               	goto	u3540
 11902  0012BC                     u3541:
 11903  0012BC  D019               	goto	l666
 11904  0012BE                     u3540:
 11905                           	line	545
 11906                           	
 11907  0012BE                     l3940:
 11908                           ;BootPIC18NonJ.c: 544: {
 11909                           ;BootPIC18NonJ.c: 545: if(BufferedDataIndex != 0)
 11910  0012BE  5018               	movf	((c:_BufferedDataIndex)),c,w
 11911  0012C0  B4D8               	btfsc	status,2
 11912  0012C2  D001               	goto	u3551
 11913  0012C4  D001               	goto	u3550
 11914  0012C6                     u3551:
 11915  0012C6  D010               	goto	l667
 11916  0012C8                     u3550:
 11917                           	line	547
 11918                           	
 11919  0012C8                     l3942:
 11920                           ;BootPIC18NonJ.c: 546: {
 11921                           ;BootPIC18NonJ.c: 547: TABLAT = ProgrammingBuffer[BytesTakenFromBuffer];
 11922  0012C8  5014               	movf	((c:WriteFlashBlock@BytesTakenFromBuffer)),c,w
 11923  0012CA  0D01               	mullw	01h
 11924  0012CC  0101               	movlb	1	; () banked
 11925  0012CE  0E00               	movlw	low(_ProgrammingBuffer)
 11926  0012D0  24F3               	addwf	(prodl),c,w
 11927  0012D2  6ED9               	movwf	c:fsr2l
 11928  0012D4  0101               	movlb	1	; () banked
 11929  0012D6  0E01               	movlw	high(_ProgrammingBuffer)
 11930  0012D8  20F4               	addwfc	prod+1,w
 11931  0012DA  6EDA               	movwf	1+c:fsr2l
 11932  0012DC  50DF               	movf	indf2,w
 11933  0012DE  6EF5               	movwf	((c:4085)),c	;volatile
 11934                           	line	548
 11935                           # 548 "../BootPIC18NonJ.c"
 11936  0012E0  000D               tblwtpostinc ;# 
 11937                           psect	text36
 11938                           	line	549
 11939                           	
 11940  0012E2                     l3944:
 11941                           ;BootPIC18NonJ.c: 549: BytesTakenFromBuffer++;
 11942  0012E2  2A14               	incf	((c:WriteFlashBlock@BytesTakenFromBuffer)),c
 11943                           	line	550
 11944                           	
 11945  0012E4                     l3946:
 11946                           ;BootPIC18NonJ.c: 550: BufferedDataIndex--;
 11947  0012E4  0618               	decf	((c:_BufferedDataIndex)),c
 11948                           	line	551
 11949                           ;BootPIC18NonJ.c: 551: }
 11950  0012E6  D007               	goto	l669
 11951                           	line	552
 11952                           	
 11953  0012E8                     l667:
 11954                           	line	554
 11955                           ;BootPIC18NonJ.c: 552: else
 11956                           ;BootPIC18NonJ.c: 553: {
 11957                           ;BootPIC18NonJ.c: 554: TABLAT = 0xFF;
 11958  0012E8  68F5               	setf	((c:4085)),c	;volatile
 11959                           	line	555
 11960                           # 555 "../BootPIC18NonJ.c"
 11961  0012EA  000D               tblwtpostinc ;# 
 11962                           psect	text36
 11963  0012EC  D004               	goto	l669
 11964                           	line	556
 11965                           	
 11966  0012EE                     l668:
 11967                           	line	557
 11968                           ;BootPIC18NonJ.c: 556: }
 11969                           ;BootPIC18NonJ.c: 557: }
 11970  0012EE  D003               	goto	l669
 11971                           	line	558
 11972                           	
 11973  0012F0                     l666:
 11974                           	line	560
 11975                           ;BootPIC18NonJ.c: 558: else
 11976                           ;BootPIC18NonJ.c: 559: {
 11977                           ;BootPIC18NonJ.c: 560: TABLAT = 0xFF;
 11978  0012F0  68F5               	setf	((c:4085)),c	;volatile
 11979                           	line	561
 11980                           # 561 "../BootPIC18NonJ.c"
 11981  0012F2  000D               tblwtpostinc ;# 
 11982                           psect	text36
 11983                           	line	562
 11984                           	
 11985  0012F4                     l3948:
 11986                           ;BootPIC18NonJ.c: 562: CorrectionFactor--;
 11987  0012F4  0615               	decf	((c:WriteFlashBlock@CorrectionFactor)),c
 11988                           	line	563
 11989                           	
 11990  0012F6                     l669:
 11991                           	line	541
 11992  0012F6  2A16               	incf	((c:WriteFlashBlock@i)),c
 11993                           	
 11994  0012F8                     l3950:
 11995  0012F8  0E1F               	movlw	(020h-1)
 11996  0012FA  6416               	cpfsgt	((c:WriteFlashBlock@i)),c
 11997  0012FC  D001               	goto	u3561
 11998  0012FE  D001               	goto	u3560
 11999  001300                     u3561:
 12000  001300  D7DA               	goto	l664
 12001  001302                     u3560:
 12002                           	
 12003  001302                     l665:
 12004                           	line	566
 12005                           ;BootPIC18NonJ.c: 563: }
 12006                           ;BootPIC18NonJ.c: 564: }
 12007                           ;BootPIC18NonJ.c: 566: TBLPTR--;
 12008  001302  0E01               	movlw	low(01h)
 12009  001304  5EF6               	subwf	((c:4086)),c	;volatile
 12010  001306  0E00               	movlw	high(01h)
 12011  001308  5AF7               	subwfb	((c:4086+1)),c	;volatile
 12012  00130A  0E00               	movlw	low highword(01h)
 12013  00130C  5AF8               	subwfb	((c:4086+2)),c	;volatile
 12014                           
 12015                           	line	569
 12016                           	
 12017  00130E                     l3952:
 12018                           ;BootPIC18NonJ.c: 569: EECON1 = 0b10100100;
 12019  00130E  0EA4               	movlw	low(0A4h)
 12020  001310  6EA6               	movwf	((c:4006)),c	;volatile
 12021                           	line	570
 12022                           	
 12023  001312                     l3954:
 12024                           ;BootPIC18NonJ.c: 570: UnlockAndActivate(0xB5);
 12025  001312  0100               	movlb	0	; () banked
 12026  001314  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 12027  001316  0EB5               	movlw	low(0B5h)
 12028  001318  0100               	movlb	0	; () banked
 12029  00131A  0100               	movlb	0	; () banked
 12030  00131C  6FE0               	movwf	((?_UnlockAndActivate))&0ffh
 12031  00131E  0100               	movlb	0	; () banked
 12032  001320  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 12033  001322  0100               	movlb	0	; () banked
 12034  001324  ECAF  F011         	call	_UnlockAndActivate	;wreg free
 12035                           	line	574
 12036                           	
 12037  001328                     l3956:
 12038                           ;BootPIC18NonJ.c: 574: for(i = 0; i < BufferedDataIndex; i++)
 12039  001328  0100               	movlb	0	; () banked
 12040  00132A  6FE1               	movwf	(??_WriteFlashBlock+0+0)&0ffh
 12041  00132C  0E00               	movlw	low(0)
 12042  00132E  6E16               	movwf	((c:WriteFlashBlock@i)),c
 12043  001330  0100               	movlb	0	; () banked
 12044  001332  51E1               	movf	(??_WriteFlashBlock+0+0)&0ffh,w
 12045  001334  D021               	goto	l3962
 12046                           	line	575
 12047                           	
 12048  001336                     l671:; BSR set to: 0
 12049                           
 12050                           	line	576
 12051                           	
 12052  001336                     l3958:
 12053                           ;BootPIC18NonJ.c: 575: {
 12054                           ;BootPIC18NonJ.c: 576: ProgrammingBuffer[i] = ProgrammingBuffer[BytesTakenFromBuffer+i];
 12055  001336  5016               	movf	((c:WriteFlashBlock@i)),c,w
 12056  001338  C014  F0E1         	movff	(c:WriteFlashBlock@BytesTakenFromBuffer),??_WriteFlashBlock+0+0
 12057  00133C  0100               	movlb	0	; () banked
 12058  00133E  6BE2               	clrf	(??_WriteFlashBlock+0+0+1)&0ffh
 12059  001340  0100               	movlb	0	; () banked
 12060  001342  27E1               	addwf	(??_WriteFlashBlock+0+0)&0ffh
 12061  001344  0E00               	movlw	0
 12062  001346  23E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh
 12063  001348  0101               	movlb	1	; () banked
 12064  00134A  0E00               	movlw	low(_ProgrammingBuffer)
 12065  00134C  0100               	movlb	0	; () banked
 12066  00134E  25E1               	addwf	(??_WriteFlashBlock+0+0)&0ffh,w
 12067  001350  6ED9               	movwf	c:fsr2l
 12068  001352  0101               	movlb	1	; () banked
 12069  001354  0E01               	movlw	high(_ProgrammingBuffer)
 12070  001356  0100               	movlb	0	; () banked
 12071  001358  21E2               	addwfc	(??_WriteFlashBlock+0+1)&0ffh,w
 12072  00135A  6EDA               	movwf	1+c:fsr2l
 12073  00135C  5016               	movf	((c:WriteFlashBlock@i)),c,w
 12074  00135E  0D01               	mullw	01h
 12075  001360  0101               	movlb	1	; () banked
 12076  001362  0E00               	movlw	low(_ProgrammingBuffer)
 12077  001364  24F3               	addwf	(prodl),c,w
 12078  001366  6EE1               	movwf	c:fsr1l
 12079  001368  0101               	movlb	1	; () banked
 12080  00136A  0E01               	movlw	high(_ProgrammingBuffer)
 12081  00136C  20F4               	addwfc	prod+1,w
 12082  00136E  6EE2               	movwf	1+c:fsr1l
 12083  001370  CFDF FFE7          	movff	indf2,indf1
 12084                           	line	574
 12085                           	
 12086  001374                     l3960:; BSR set to: 1
 12087                           
 12088  001374  2A16               	incf	((c:WriteFlashBlock@i)),c
 12089  001376  D000               	goto	l3962
 12090                           	
 12091  001378                     l670:; BSR set to: 1
 12092                           
 12093                           	
 12094  001378                     l3962:
 12095  001378  5018               	movf	((c:_BufferedDataIndex)),c,w
 12096  00137A  5C16               	subwf	((c:WriteFlashBlock@i)),c,w
 12097  00137C  A0D8               	btfss	status,0
 12098  00137E  D001               	goto	u3571
 12099  001380  D001               	goto	u3570
 12100  001382                     u3571:
 12101  001382  D7D9               	goto	l3958
 12102  001384                     u3570:
 12103  001384  D000               	goto	l673
 12104                           	
 12105  001386                     l672:
 12106                           	line	578
 12107                           	
 12108  001386                     l673:
 12109  001386  0012               	return
 12110                           	opt stack 0
 12111                           GLOBAL	__end_of_WriteFlashBlock
 12112  001388                     	__end_of_WriteFlashBlock:
 12113                           	signat	_WriteFlashBlock,88
 12114                           	global	_UnlockAndActivate
 12115                           
 12116 ;; *************** function _UnlockAndActivate *****************
 12117 ;; Defined at:
 12118 ;;		line 620 in file "../BootPIC18NonJ.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;  UnlockKey       1    0[BANK0 ] unsigned char 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;		None
 12123 ;; Return value:  Size  Location     Type
 12124 ;;		None               void
 12125 ;; Registers used:
 12126 ;;		wreg, status,2, status,0
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12132 ;;      Params:         0       1       0       0       0       0       0       0       0
 12133 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12135 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12136 ;;Total ram usage:        1 bytes
 12137 ;; Hardware stack levels used:    1
 12138 ;; Hardware stack levels required when called:    2
 12139 ;; This function calls:
 12140 ;;		Nothing
 12141 ;; This function is called by:
 12142 ;;		_ProcessIO
 12143 ;;		_WriteFlashBlock
 12144 ;;		_WriteConfigBits
 12145 ;;		_WriteEEPROM
 12146 ;; This function uses a non-reentrant model
 12147 ;;
 12148                           psect	text37,class=CODE,space=0,reloc=2
 12149                           global __ptext37
 12150  00235E                     __ptext37:
 12151                           psect	text37
 12152                           	file	"../BootPIC18NonJ.c"
 12153                           	line	620
 12154                           	global	__size_of_UnlockAndActivate
 12155  0000                     	__size_of_UnlockAndActivate	equ	__end_of_UnlockAndActivate-_UnlockAndActivate
 12156                           	
 12157  00235E                     _UnlockAndActivate:
 12158                           	opt	stack 26
 12159                           	line	621
 12160                           	
 12161  00235E                     l3892:
 12162                           ;BootPIC18NonJ.c: 621: INTCONbits.GIE = 0;
 12163  00235E  9EF2               	bcf	((c:4082)),c,7	;volatile
 12164                           	line	625
 12165                           	
 12166  002360                     l3894:
 12167                           ;BootPIC18NonJ.c: 625: if(UnlockKey != 0xB5)
 12168  002360  0100               	movlb	0	; () banked
 12169  002362  0100               	movlb	0	; () banked
 12170  002364  51E0               	movf	((UnlockAndActivate@UnlockKey))&0ffh,w
 12171  002366  0AB5               	xorlw	181
 12172                           
 12173  002368  B4D8               	btfsc	status,2
 12174  00236A  D001               	goto	u3491
 12175  00236C  D001               	goto	u3490
 12176  00236E                     u3491:
 12177  00236E  D006               	goto	l692
 12178  002370                     u3490:
 12179                           	line	634
 12180                           	
 12181  002370                     l3896:; BSR set to: 0
 12182                           
 12183                           ;BootPIC18NonJ.c: 626: {
 12184                           ;BootPIC18NonJ.c: 634: OSCCON = 0x03;
 12185  002370  0E03               	movlw	low(03h)
 12186  002372  6ED3               	movwf	((c:4051)),c	;volatile
 12187                           	line	635
 12188                           ;BootPIC18NonJ.c: 635: while(1)
 12189                           	
 12190  002374                     l693:
 12191                           	line	637
 12192                           # 637 "../BootPIC18NonJ.c"
 12193  002374  0003               sleep ;# 
 12194                           psect	text37
 12195  002376  D7FE               	goto	l693
 12196                           	line	638
 12197                           	
 12198  002378                     l694:
 12199                           	line	635
 12200  002378  D7FD               	goto	l693
 12201                           	
 12202  00237A                     l695:
 12203                           	line	639
 12204                           # 639 "../BootPIC18NonJ.c"
 12205  00237A  00FF               reset ;# 
 12206                           psect	text37
 12207                           	line	640
 12208                           	
 12209  00237C                     l692:
 12210                           	line	644
 12211                           # 644 "../BootPIC18NonJ.c"
 12212  00237C  0E55               MOVLW 0x55 ;# 
 12213                           	line	645
 12214                           # 645 "../BootPIC18NonJ.c"
 12215  00237E  6EA7               MOVWF EECON2, 0 ;# 
 12216                           	line	646
 12217                           # 646 "../BootPIC18NonJ.c"
 12218  002380  0EAA               MOVLW 0xAA ;# 
 12219                           	line	647
 12220                           # 647 "../BootPIC18NonJ.c"
 12221  002382  6EA7               MOVWF EECON2, 0 ;# 
 12222                           	line	648
 12223                           # 648 "../BootPIC18NonJ.c"
 12224  002384  82A6               BSF EECON1, 1, 0 ;# 
 12225                           psect	text37
 12226                           	line	650
 12227                           ;BootPIC18NonJ.c: 650: while(EECON1bits.WR);
 12228  002386  D000               	goto	l696
 12229                           	
 12230  002388                     l697:
 12231                           	
 12232  002388                     l696:
 12233                           	
 12234  002388  B2A6               	btfsc	((c:4006)),c,1	;volatile
 12235  00238A  D001               	goto	u3501
 12236  00238C  D001               	goto	u3500
 12237  00238E                     u3501:
 12238  00238E  D7FC               	goto	l696
 12239  002390                     u3500:
 12240                           	
 12241  002390                     l698:
 12242                           	line	651
 12243                           ;BootPIC18NonJ.c: 651: EECON1bits.WREN = 0;
 12244  002390  94A6               	bcf	((c:4006)),c,2	;volatile
 12245                           	line	652
 12246                           	
 12247  002392                     l699:
 12248  002392  0012               	return
 12249                           	opt stack 0
 12250                           GLOBAL	__end_of_UnlockAndActivate
 12251  002394                     	__end_of_UnlockAndActivate:
 12252                           	signat	_UnlockAndActivate,4216
 12253                           	global	_TableReadPostIncrement
 12254                           
 12255 ;; *************** function _TableReadPostIncrement *****************
 12256 ;; Defined at:
 12257 ;;		line 674 in file "../BootPIC18NonJ.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;		None
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;		None
 12262 ;; Return value:  Size  Location     Type
 12263 ;;		None               void
 12264 ;; Registers used:
 12265 ;;		None
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12271 ;;      Params:         0       0       0       0       0       0       0       0       0
 12272 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12274 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12275 ;;Total ram usage:        0 bytes
 12276 ;; Hardware stack levels used:    1
 12277 ;; Hardware stack levels required when called:    2
 12278 ;; This function calls:
 12279 ;;		Nothing
 12280 ;; This function is called by:
 12281 ;;		_ProcessIO
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           psect	text38,class=CODE,space=0,reloc=2
 12285                           global __ptext38
 12286  002442                     __ptext38:
 12287                           psect	text38
 12288                           	file	"../BootPIC18NonJ.c"
 12289                           	line	674
 12290                           	global	__size_of_TableReadPostIncrement
 12291  0000                     	__size_of_TableReadPostIncrement	equ	__end_of_TableReadPostIncrement-_TableReadPostIncr
                                 ement
 12292                           	
 12293  002442                     _TableReadPostIncrement:
 12294                           	opt	stack 27
 12295                           	line	675
 12296                           	
 12297  002442                     l3964:
 12298                           # 675 "../BootPIC18NonJ.c"
 12299  002442  0009               tblrdpostinc ;# 
 12300                           psect	text38
 12301                           	line	676
 12302                           	
 12303  002444                     l705:
 12304  002444  0012               	return
 12305                           	opt stack 0
 12306                           GLOBAL	__end_of_TableReadPostIncrement
 12307  002446                     	__end_of_TableReadPostIncrement:
 12308                           	signat	_TableReadPostIncrement,88
 12309                           	global	_ResetDeviceCleanly
 12310                           
 12311 ;; *************** function _ResetDeviceCleanly *****************
 12312 ;; Defined at:
 12313 ;;		line 482 in file "../BootPIC18NonJ.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;		None
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;		None
 12318 ;; Return value:  Size  Location     Type
 12319 ;;		None               void
 12320 ;; Registers used:
 12321 ;;		wreg, status,2, status,0
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/0
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12327 ;;      Params:         0       0       0       0       0       0       0       0       0
 12328 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12329 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12330 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12331 ;;Total ram usage:        1 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:    2
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_ProcessIO
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           psect	text39,class=CODE,space=0,reloc=2
 12341                           global __ptext39
 12342  002258                     __ptext39:
 12343                           psect	text39
 12344                           	file	"../BootPIC18NonJ.c"
 12345                           	line	482
 12346                           	global	__size_of_ResetDeviceCleanly
 12347  0000                     	__size_of_ResetDeviceCleanly	equ	__end_of_ResetDeviceCleanly-_ResetDeviceCleanly
 12348                           	
 12349  002258                     _ResetDeviceCleanly:
 12350                           	opt	stack 27
 12351                           	line	485
 12352                           	
 12353  002258                     l3966:
 12354                           ;BootPIC18NonJ.c: 483: static unsigned char i;
 12355                           ;BootPIC18NonJ.c: 485: UCONbits.SUSPND = 0;
 12356  002258  9260               	bcf	((c:3936)),c,1	;volatile
 12357                           	line	486
 12358                           	
 12359  00225A                     l3968:
 12360                           ;BootPIC18NonJ.c: 486: UCON = 0x00;
 12361  00225A  0E00               	movlw	low(0)
 12362  00225C  6E60               	movwf	((c:3936)),c	;volatile
 12363                           	line	491
 12364                           	
 12365  00225E                     l3970:
 12366                           ;BootPIC18NonJ.c: 491: for(i = 0; i < 0xFF; i++)
 12367  00225E  0100               	movlb	0	; () banked
 12368  002260  6FE0               	movwf	(??_ResetDeviceCleanly+0+0)&0ffh
 12369  002262  0E00               	movlw	low(0)
 12370  002264  6E11               	movwf	((c:ResetDeviceCleanly@i)),c
 12371  002266  0100               	movlb	0	; () banked
 12372  002268  51E0               	movf	(??_ResetDeviceCleanly+0+0)&0ffh,w
 12373                           	
 12374  00226A                     l3972:; BSR set to: 0
 12375                           
 12376  00226A  2811               	incf	((c:ResetDeviceCleanly@i)),c,w
 12377                           
 12378  00226C  A4D8               	btfss	status,2
 12379  00226E  D001               	goto	u3581
 12380  002270  D001               	goto	u3580
 12381  002272                     u3581:
 12382  002272  D002               	goto	l650
 12383  002274                     u3580:
 12384  002274  D014               	goto	l651
 12385                           	
 12386  002276                     l3974:; BSR set to: 0
 12387                           
 12388  002276  D013               	goto	l651
 12389                           	line	492
 12390                           	
 12391  002278                     l650:
 12392                           	line	493
 12393                           ;BootPIC18NonJ.c: 492: {
 12394                           ;BootPIC18NonJ.c: 493: WREG = 0xFF;
 12395  002278  68E8               	setf	((c:4072)),c	;volatile
 12396                           	line	494
 12397                           ;BootPIC18NonJ.c: 494: while(WREG)
 12398  00227A  D006               	goto	l3978
 12399                           	
 12400  00227C                     l653:
 12401                           	line	496
 12402                           	
 12403  00227C                     l3976:
 12404                           ;BootPIC18NonJ.c: 495: {
 12405                           ;BootPIC18NonJ.c: 496: WREG--;
 12406  00227C  06E8               	decf	((c:4072)),c	;volatile
 12407                           	line	497
 12408                           # 497 "../BootPIC18NonJ.c"
 12409  00227E  F000               nop ;# 
 12410                           # 497 "../BootPIC18NonJ.c"
 12411  002280  F000               nop ;# 
 12412                           # 497 "../BootPIC18NonJ.c"
 12413  002282  F000               nop ;# 
 12414                           # 497 "../BootPIC18NonJ.c"
 12415  002284  F000               nop ;# 
 12416                           psect	text39
 12417  002286  D000               	goto	l3978
 12418                           	line	498
 12419                           	
 12420  002288                     l652:
 12421                           	line	494
 12422                           	
 12423  002288                     l3978:
 12424  002288  66E8               	tstfsz	((c:4072)),c	;volatile
 12425  00228A  D001               	goto	u3591
 12426  00228C  D001               	goto	u3590
 12427  00228E                     u3591:
 12428  00228E  D7F6               	goto	l3976
 12429  002290                     u3590:
 12430  002290  D000               	goto	l3980
 12431                           	
 12432  002292                     l654:
 12433                           	line	491
 12434                           	
 12435  002292                     l3980:
 12436  002292  2A11               	incf	((c:ResetDeviceCleanly@i)),c
 12437                           	
 12438  002294                     l3982:
 12439  002294  2811               	incf	((c:ResetDeviceCleanly@i)),c,w
 12440                           
 12441  002296  A4D8               	btfss	status,2
 12442  002298  D001               	goto	u3601
 12443  00229A  D001               	goto	u3600
 12444  00229C                     u3601:
 12445  00229C  D7ED               	goto	l650
 12446  00229E                     u3600:
 12447                           	
 12448  00229E                     l651:
 12449                           	line	500
 12450                           # 500 "../BootPIC18NonJ.c"
 12451  00229E  00FF               reset ;# 
 12452                           	line	501
 12453                           # 501 "../BootPIC18NonJ.c"
 12454  0022A0  F000               nop ;# 
 12455                           	line	502
 12456                           # 502 "../BootPIC18NonJ.c"
 12457  0022A2  F000               nop ;# 
 12458                           psect	text39
 12459                           	line	503
 12460                           	
 12461  0022A4                     l655:
 12462  0022A4  0012               	return
 12463                           	opt stack 0
 12464                           GLOBAL	__end_of_ResetDeviceCleanly
 12465  0022A6                     	__end_of_ResetDeviceCleanly:
 12466                           	signat	_ResetDeviceCleanly,88
 12467                           	global	_interrupt_at_low_vector
 12468                           
 12469 ;; *************** function _interrupt_at_low_vector *****************
 12470 ;; Defined at:
 12471 ;;		line 151 in file "../main.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;		None               void
 12478 ;; Registers used:
 12479 ;;		None
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12487 ;;      Temps:         17       0       0       0       0       0       0       0       0
 12488 ;;      Totals:        17       0       0       0       0       0       0       0       0
 12489 ;;Total ram usage:       17 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:    1
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		Interrupt level 1
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           psect	intcodelo,class=CODE,space=0,reloc=2
 12499                           global __pintcodelo
 12500  000018                     __pintcodelo:
 12501                           psect	intcodelo
 12502                           	file	"../main.c"
 12503                           	line	151
 12504                           	global	__size_of_interrupt_at_low_vector
 12505  0000                     	__size_of_interrupt_at_low_vector	equ	__end_of_interrupt_at_low_vector-_interrupt_at_lo
                                 w_vector
 12506                           	
 12507  000018                     _interrupt_at_low_vector:
 12508                           	opt	stack 22
 12509  000018  CFD8 F027          	movff	status+0,??_interrupt_at_low_vector+0
 12510  00001C  CFE8 F028          	movff	wreg+0,??_interrupt_at_low_vector+1
 12511  000020  CFE0 F029          	movff	bsr+0,??_interrupt_at_low_vector+2
 12512  000024  CFFA F02A          	movff	pclat+0,??_interrupt_at_low_vector+3
 12513  000028  CFFB F02B          	movff	pclat+1,??_interrupt_at_low_vector+4
 12514  00002C  CFE9 F02C          	movff	fsr0l+0,??_interrupt_at_low_vector+5
 12515  000030  CFEA F02D          	movff	fsr0h+0,??_interrupt_at_low_vector+6
 12516  000034  CFE1 F02E          	movff	fsr1l+0,??_interrupt_at_low_vector+7
 12517  000038  CFE2 F02F          	movff	fsr1h+0,??_interrupt_at_low_vector+8
 12518  00003C  CFD9 F030          	movff	fsr2l+0,??_interrupt_at_low_vector+9
 12519  000040  CFDA F031          	movff	fsr2h+0,??_interrupt_at_low_vector+10
 12520  000044  CFF3 F032          	movff	prodl+0,??_interrupt_at_low_vector+11
 12521  000048  CFF4 F033          	movff	prodh+0,??_interrupt_at_low_vector+12
 12522  00004C  CFF6 F034          	movff	tblptrl+0,??_interrupt_at_low_vector+13
 12523  000050  CFF7 F035          	movff	tblptrh+0,??_interrupt_at_low_vector+14
 12524  000054  CFF8 F036          	movff	tblptru+0,??_interrupt_at_low_vector+15
 12525  000058  CFF5 F037          	movff	tablat+0,??_interrupt_at_low_vector+16
 12526                           	line	152
 12527                           	
 12528  00005C                     i1l1438:
 12529                           # 152 "../main.c"
 12530  00005C  EF0C F020          goto 0x4018 ;# 
 12531                           psect	intcodelo
 12532                           	line	153
 12533                           	
 12534  000060                     i1l129:
 12535  000060  C037  FFF5         	movff	??_interrupt_at_low_vector+16,tablat+0
 12536  000064  C036  FFF8         	movff	??_interrupt_at_low_vector+15,tblptru+0
 12537  000068  C035  FFF7         	movff	??_interrupt_at_low_vector+14,tblptrh+0
 12538  00006C  C034  FFF6         	movff	??_interrupt_at_low_vector+13,tblptrl+0
 12539  000070  C033  FFF4         	movff	??_interrupt_at_low_vector+12,prodh+0
 12540  000074  C032  FFF3         	movff	??_interrupt_at_low_vector+11,prodl+0
 12541  000078  C031  FFDA         	movff	??_interrupt_at_low_vector+10,fsr2h+0
 12542  00007C  C030  FFD9         	movff	??_interrupt_at_low_vector+9,fsr2l+0
 12543  000080  C02F  FFE2         	movff	??_interrupt_at_low_vector+8,fsr1h+0
 12544  000084  C02E  FFE1         	movff	??_interrupt_at_low_vector+7,fsr1l+0
 12545  000088  C02D  FFEA         	movff	??_interrupt_at_low_vector+6,fsr0h+0
 12546  00008C  C02C  FFE9         	movff	??_interrupt_at_low_vector+5,fsr0l+0
 12547  000090  C02B  FFFB         	movff	??_interrupt_at_low_vector+4,pclat+1
 12548  000094  C02A  FFFA         	movff	??_interrupt_at_low_vector+3,pclat+0
 12549  000098  C029  FFE0         	movff	??_interrupt_at_low_vector+2,bsr+0
 12550  00009C  C028  FFE8         	movff	??_interrupt_at_low_vector+1,wreg+0
 12551  0000A0  C027  FFD8         	movff	??_interrupt_at_low_vector+0,status+0
 12552  0000A4  0010               	retfie
 12553                           	opt stack 0
 12554                           GLOBAL	__end_of_interrupt_at_low_vector
 12555  0000A6                     	__end_of_interrupt_at_low_vector:
 12556                           	signat	_interrupt_at_low_vector,1112
 12557                           	global	_interrupt_at_high_vector
 12558                           
 12559 ;; *************** function _interrupt_at_high_vector *****************
 12560 ;; Defined at:
 12561 ;;		line 146 in file "../main.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;		None
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;		None
 12566 ;; Return value:  Size  Location     Type
 12567 ;;		None               void
 12568 ;; Registers used:
 12569 ;;		None
 12570 ;; Tracked objects:
 12571 ;;		On entry : 0/0
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3  BANK4h   BANK5   BANK6   BANK7
 12575 ;;      Params:         0       0       0       0       0       0       0       0       0
 12576 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12577 ;;      Temps:         14       0       0       0       0       0       0       0       0
 12578 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12579 ;;Total ram usage:       14 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; This function calls:
 12582 ;;		Nothing
 12583 ;; This function is called by:
 12584 ;;		Interrupt level 2
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           psect	intcode,class=CODE,space=0,reloc=2
 12588                           global __pintcode
 12589  000008                     __pintcode:
 12590                           psect	intcode
 12591                           	file	"../main.c"
 12592                           	line	146
 12593                           	global	__size_of_interrupt_at_high_vector
 12594  0000                     	__size_of_interrupt_at_high_vector	equ	__end_of_interrupt_at_high_vector-_interrupt_at_
                                 high_vector
 12595                           	
 12596  000008                     _interrupt_at_high_vector:
 12597                           	opt	stack 22
 12598  000008  CFFA F038          	movff	pclat+0,??_interrupt_at_high_vector+0
 12599  00000C  CFFB F039          	movff	pclat+1,??_interrupt_at_high_vector+1
 12600  000010  CFE9 F03A          	movff	fsr0l+0,??_interrupt_at_high_vector+2
 12601                           	global	int_func
 12602  000014  EF4B  F010         	goto	int_func
 12603                           psect	intcode_body,class=CODE,space=0,reloc=2
 12604                           global __pintcode_body
 12605  002096                     __pintcode_body:
 12606  002096                     int_func:
 12607  002096  CFEA F03B          	movff	fsr0h+0,??_interrupt_at_high_vector+3
 12608  00209A  CFE1 F03C          	movff	fsr1l+0,??_interrupt_at_high_vector+4
 12609  00209E  CFE2 F03D          	movff	fsr1h+0,??_interrupt_at_high_vector+5
 12610  0020A2  CFD9 F03E          	movff	fsr2l+0,??_interrupt_at_high_vector+6
 12611  0020A6  CFDA F03F          	movff	fsr2h+0,??_interrupt_at_high_vector+7
 12612  0020AA  CFF3 F040          	movff	prodl+0,??_interrupt_at_high_vector+8
 12613  0020AE  CFF4 F041          	movff	prodh+0,??_interrupt_at_high_vector+9
 12614  0020B2  CFF6 F042          	movff	tblptrl+0,??_interrupt_at_high_vector+10
 12615  0020B6  CFF7 F043          	movff	tblptrh+0,??_interrupt_at_high_vector+11
 12616  0020BA  CFF8 F044          	movff	tblptru+0,??_interrupt_at_high_vector+12
 12617  0020BE  CFF5 F045          	movff	tablat+0,??_interrupt_at_high_vector+13
 12618                           	line	147
 12619                           	
 12620  0020C2                     i2l1436:
 12621                           # 147 "../main.c"
 12622  0020C2  EF04 F020          goto 0x4008 ;# 
 12623                           psect	intcode_body
 12624                           	line	148
 12625                           	
 12626  0020C6                     i2l126:
 12627  0020C6  C045  FFF5         	movff	??_interrupt_at_high_vector+13,tablat+0
 12628  0020CA  C044  FFF8         	movff	??_interrupt_at_high_vector+12,tblptru+0
 12629  0020CE  C043  FFF7         	movff	??_interrupt_at_high_vector+11,tblptrh+0
 12630  0020D2  C042  FFF6         	movff	??_interrupt_at_high_vector+10,tblptrl+0
 12631  0020D6  C041  FFF4         	movff	??_interrupt_at_high_vector+9,prodh+0
 12632  0020DA  C040  FFF3         	movff	??_interrupt_at_high_vector+8,prodl+0
 12633  0020DE  C03F  FFDA         	movff	??_interrupt_at_high_vector+7,fsr2h+0
 12634  0020E2  C03E  FFD9         	movff	??_interrupt_at_high_vector+6,fsr2l+0
 12635  0020E6  C03D  FFE2         	movff	??_interrupt_at_high_vector+5,fsr1h+0
 12636  0020EA  C03C  FFE1         	movff	??_interrupt_at_high_vector+4,fsr1l+0
 12637  0020EE  C03B  FFEA         	movff	??_interrupt_at_high_vector+3,fsr0h+0
 12638  0020F2  C03A  FFE9         	movff	??_interrupt_at_high_vector+2,fsr0l+0
 12639  0020F6  C039  FFFB         	movff	??_interrupt_at_high_vector+1,pclat+1
 12640  0020FA  C038  FFFA         	movff	??_interrupt_at_high_vector+0,pclat+0
 12641  0020FE  0011               	retfie f
 12642                           	opt stack 0
 12643                           GLOBAL	__end_of_interrupt_at_high_vector
 12644  002100                     	__end_of_interrupt_at_high_vector:
 12645                           	signat	_interrupt_at_high_vector,88
 12646                           psect	smallconst
 12647  0008C2  00                 	db 0	; dummy byte at the end
 12648                           	global	__smallconst
 12649                           	global	__mediumconst
 12650                           	GLOBAL	__activetblptr
 12651  0000                     __activetblptr	EQU	2
 12652                           	psect	intsave_regs,class=BIGRAM,space=1
 12653                           	file ""
 12654                           	line	0
 12655                           psect	intcode
 12656  000018                     fp__USBCheckHIDRequest:
 12657                           	PSECT	rparam,class=COMRAM,space=1
 12658                           	GLOBAL	__Lrparam
 12659                           	FNCONF	rparam,??,?
 12660                           GLOBAL	__Lparam, __Hparam
 12661                           GLOBAL	__Lrparam, __Hrparam
 12662  0000                     __Lparam	EQU	__Lrparam
 12663  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    194
    Data        0
    BSS         230
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      69
    BANK0           160     17     145
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4h          239      0       0
    BANK5           248      0       0
    BANK6           248      0       0
    BANK7           128      0       0

Pointer List with Targets:

    ClearArray@startAdr	PTR unsigned char  size(2) Largest target is 1
		 -> usb_alt_intf(COMRAM[1]), UEP1(DATA[1]), 

    ep0Bi.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ClassReqHandler	const PTR FTN()void [1] size(2) Largest target is 0
		 -> USBCheckHIDRequest(), 

    ep0Bo.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep0Bi...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[38]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [2] size(2) Largest target is 41
		 -> cfg01(CODE[41]), 

    ep0Bo...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    pDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    HIDRxReport@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> PacketFromPC(BANK0[64]), 

    HIDTxReport@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> PacketToPC(BANK0[64]), 

    ep1Bi.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep1Bo.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep1Bi...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    S601$ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    ep1Bo...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> CtrlTrfData(BIGRAMhll[8]), hid_report_in(BIGRAMhh[64]), hid_report_out(BIGRAMhll[64]), SetupPkt(BIGRAMlll[8]), 

    S393_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S393_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S393_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S393_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pSrc.bRam	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_at_high_vector in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ProcessIO
    _InitializeSystem->_UserInit
    _USBTasks->_USBDriverService
    _ProcessIO->_USBDriverService
    _USBCheckBusStatus->_USBModuleEnable
    _USBDriverService->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlTrfSetupHandler->_USBCtrlEPServiceComplete
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBCheckStdRequest->_USBStdGetStatusHandler
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_ClearArray
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlEPServiceComplete->_USBCtrlTrfTxService
    _USBProtocolResetHandler->_ClearArray
    _WriteConfigBits->_UnlockAndActivate
    _WriteEEPROM->_UnlockAndActivate
    _WriteFlashBlock->_UnlockAndActivate

Critical Paths under _interrupt_at_high_vector in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_at_high_vector in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_at_high_vector in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_at_high_vector in BANK3

    None.

Critical Paths under _main in BANK4h

    None.

Critical Paths under _interrupt_at_high_vector in BANK4h

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_at_high_vector in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_at_high_vector in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_at_high_vector in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2413
                                             16 BANK0      1     1      0
                   _InitializeSystem
                           _USBTasks
                     _BlinkUSBStatus
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     1     1      0       0
                                              1 BANK0      1     1      0
                           _UserInit
 ---------------------------------------------------------------------------------
 (1) _USBTasks                                             0     0      0     801
                  _USBCheckBusStatus
                   _USBDriverService
 ---------------------------------------------------------------------------------
 (1) _BlinkUSBStatus                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            5     5      0    1609
                                             11 BANK0      5     5      0
                        _HIDRxReport
                        _HIDTxReport
                      _ClearWatchdog
                  _UnlockAndActivate
                   _USBDriverService
                    _WriteConfigBits
                        _WriteEEPROM
                    _WriteFlashBlock
             _TableReadPostIncrement
                 _ResetDeviceCleanly
 ---------------------------------------------------------------------------------
 (2) _HIDTxReport                                          5     2      3     226
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _HIDRxReport                                          4     1      3      96
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBCheckBusStatus                                    1     1      0       0
                                              1 BANK0      1     1      0
                    _USBModuleEnable
 ---------------------------------------------------------------------------------
 (2) _USBDriverService                                     1     1      0     801
                                             10 BANK0      1     1      0
                 _USBWakeFromSuspend
            _USBProtocolResetHandler
                         _USBSuspend
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlEPService                                     3     3      0     736
                                              7 BANK0      3     3      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfSetupHandler                               2     2      0     334
                                              5 BANK0      2     2      0
                 _USBCheckStdRequest
                 _USBCheckHIDRequest
           _USBCtrlEPServiceComplete
 ---------------------------------------------------------------------------------
 (5) _USBCheckHIDRequest                                   1     1      0       0
                                              0 BANK0      1     1      0
                _HIDGetReportHandler
                _HIDSetReportHandler
 ---------------------------------------------------------------------------------
 (6) _HIDGetReportHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HIDSetReportHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBCheckStdRequest                                   1     1      0      65
                                              4 BANK0      1     1      0
                _USBStdGetDscHandler
                _USBStdSetCfgHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (6) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _USBStdSetCfgHandler                                  1     1      0      65
                                              3 BANK0      1     1      0
                         _ClearArray
                          _HIDInitEP
 ---------------------------------------------------------------------------------
 (7) _HIDInitEP                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBStdGetStatusHandler                               4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) _USBStdFeatureReqHandler                              4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfOutHandler                                 0     0      0     102
                _USBCtrlTrfRxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfInHandler                                  1     1      0     170
                                              4 BANK0      1     1      0
                _USBCtrlTrfTxService
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPServiceComplete                             1     1      0     170
                                              4 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfRxService                                  2     2      0     102
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfTxService                                  4     4      0     170
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _USBModuleEnable                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBProtocolResetHandler                              1     1      0      65
                                              3 BANK0      1     1      0
                         _ClearArray
          _USBPrepareForNextSetupTrf
 ---------------------------------------------------------------------------------
 (7) _ClearArray                                           3     0      3      65
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) _USBPrepareForNextSetupTrf                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearWatchdog                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _WriteConfigBits                                      4     4      0      31
                                              1 BANK0      4     4      0
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROM                                          4     4      0      31
                                              1 BANK0      4     4      0
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (2) _WriteFlashBlock                                      3     3      0      31
                                              1 BANK0      3     3      0
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _UnlockAndActivate                                    1     0      1      31
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _TableReadPostIncrement                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ResetDeviceCleanly                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _interrupt_at_low_vector                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (9) _interrupt_at_high_vector                            14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _UserInit
   _USBTasks
     _USBCheckBusStatus
       _USBModuleEnable
     _USBDriverService
       _USBWakeFromSuspend
       _USBProtocolResetHandler
         _ClearArray
         _USBPrepareForNextSetupTrf
       _USBSuspend
       _USBStallHandler
       _USBCtrlEPService
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdGetDscHandler
             _USBStdSetCfgHandler
               _ClearArray
               _HIDInitEP
             _USBStdGetStatusHandler
             _USBStdFeatureReqHandler
           _USBCheckHIDRequest
             _HIDGetReportHandler
             _HIDSetReportHandler
           _USBCtrlEPServiceComplete
             _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
           _USBPrepareForNextSetupTrf
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
           _USBPrepareForNextSetupTrf
   _BlinkUSBStatus
   _ProcessIO
     _HIDRxReport
     _HIDTxReport
     _ClearWatchdog
     _UnlockAndActivate
     _USBDriverService
       _USBWakeFromSuspend
       _USBProtocolResetHandler
         _ClearArray
         _USBPrepareForNextSetupTrf
       _USBSuspend
       _USBStallHandler
       _USBCtrlEPService
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdGetDscHandler
             _USBStdSetCfgHandler
               _ClearArray
               _HIDInitEP
             _USBStdGetStatusHandler
             _USBStdFeatureReqHandler
           _USBCheckHIDRequest
             _HIDGetReportHandler
             _HIDSetReportHandler
           _USBCtrlEPServiceComplete
             _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
           _USBPrepareForNextSetupTrf
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
           _USBPrepareForNextSetupTrf
     _WriteConfigBits
       _UnlockAndActivate
     _WriteEEPROM
       _UnlockAndActivate
     _WriteFlashBlock
       _UnlockAndActivate
     _TableReadPostIncrement
     _ResetDeviceCleanly

 _interrupt_at_low_vector (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMlll          3FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BIGRAMhlh           F8      0       0      22        0.0%
BIGRAMhll           F8      0       0      23        0.0%
BITBANK6            F8      0       0      17        0.0%
BANK6               F8      0       0      18        0.0%
BITBANK5            F8      0       0      15        0.0%
BANK5               F8      0       0      16        0.0%
BIGRAMlh            EF      0       0      24        0.0%
BANK4h              EF      0       0      14        0.0%
BITBANK4h           EF      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      91       5       90.6%
BIGRAMhh            80      0       0      21        0.0%
BITBANK7            80      0       0      19        0.0%
BANK7               80      0       0      20        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      45       1       72.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       7       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116      12        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.11 build 48931 
Symbol Table                                                                                   Sun Jun 16 03:22:08 2013

              __end_of_ClearWatchdog 2442                 __size_of_WriteEEPROM 0096  
                       _usb_alt_intf 0026                           _USB_SD_Ptr 0800  
                       ?_HIDRxReport 00E0                       _BlinkUSBStatus 2160  
                       ?_HIDTxReport 00E0                                   l40 10F6  
                                 l41 0F9C                                   l42 1030  
                                 l50 100E                                   l51 104E  
                                 l43 1012                                   l52 10CA  
                                 l44 0FB0                                   l53 1050  
                                 l45 0FCE                                   l62 2446  
                                 l54 10F6                                   l46 102C  
                                 l55 1056                                   l47 0FD8  
                                 l39 0F8A                                   l71 1AB2  
                                 l56 105C                                   l48 0FF8  
                                 l80 1A36                                   l72 1B04  
                                 l65 2448                                   l57 1080  
                                 l49 100C                                   l81 1A02  
                                 l73 1AC4                                   l58 1092  
                                 l82 1A48                                   l74 1B18  
                                 l59 10B6                                   l83 1A92  
                                 l75 1B5A                                   l68 2256  
                                 l78 1A90                                   l79 19F4  
                                 bsr 000FE0                   _USBCheckHIDRequest 0F6E  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000              ?_TableReadPostIncrement 0027  
                       __CFG_CP3$OFF 000000                                  l200 13A0  
                                l201 14A4                                  l202 145A  
                                l210 13F4                                  l211 13FA  
                                l203 13A2                                  l220 14BA  
                                l204 14A4                                  l212 142A  
                                l140 21C6                                  l132 22BE  
                                l221 15B6                                  l213 1452  
                                l205 13BC                                  l141 21C6  
                                l133 22C2                                  l222 14D8  
                                l214 1454                                  l206 13C2  
                                l310 18AA                                  l142 21D0  
                                l134 22E6                                  l223 1544  
                                l215 1456                                  l207 13C8  
                                l311 18C8                                  l151 2176  
                                l143 2208                                  l135 22E8  
                                l240 17D6                                  l232 1794  
                                l224 15BA                                  l208 13EC  
                                l320 1BD2                                  l312 18C0  
                                l152 218A                                  l136 22EA  
                                l241 17D6                                  l233 16E4  
                                l209 13F2                                  l321 1C1C  
                                l313 18C6                                  l305 18AC  
                                l153 21B6                                  l137 22EA  
                                l250 16BE                                  l234 16F8  
                                l218 15BA                                  l314 18CC  
                                l306 18A4                                  l154 21B4  
                                l146 243C                                  l331 1EC4  
                                l251 16CC                                  l235 1708  
                                l227 1F86                                  l219 159C  
                                l307 189E                                  l155 21B6  
                                l340 1F12                                  l332 1EB4  
                                l324 206C                                  l252 16D0  
                                l244 1600                                  l236 17B0  
                                l228 1F98                                  l308 1852  
                                l333 1EC2                                  l325 2060  
                                l245 15FC                                  l237 170A  
                                l229 1F98                                  l317 1B72  
                                l309 189C                                  l350 11AC  
                                l334 1F0C                                  l326 206A  
                                l246 1600                                  l238 1718  
        __end_of_USBStdGetDscHandler 15BC                                  l318 1BC4  
                                l351 11FC                                  l343 1142  
                                l335 1EE8                                  l327 2094  
                                l247 16D0                                  l239 1790  
                                l319 1C18                                  l352 1252  
                                l344 1126                                  l360 1FCE  
                                l336 1F0A                                  l328 2094  
                                l248 16A4                                  l440 215E  
                                l353 123E                                  l345 1140  
                                l361 201E                                  l337 1EFE  
                                l249 16CE                                  l354 1200  
                                l346 113E                                  l362 201E  
                                l370 19C2                                  l338 1F08  
                                l450 1C52                                  l434 2110  
                                l610 0960                                  l443 23F8  
                                l355 1250                                  l347 1152  
                                l339 1F12                                  l451 1C60  
                                l435 210E                                  l611 0F6C  
                                l348 11FE                                  l356 1252  
                                l452 1C6E                                  l436 2130  
                                l604 235C                                  l612 0F38  
                                l620 0BAE                                  l461 2432  
                                l373 240E                                  l349 11EA  
                                l365 1904                                  l453 1C7C  
                                l437 212E                                  l621 0BC0  
                                l613 0966                                  l702 2440  
                                l470 2324                                  l366 19C2  
                                l454 1C96                                  l446 1C2A  
                                l438 215E                                  l630 0CC6  
                                l622 0BEE                                  l614 0AF4  
                                l471 2320                                  l359 200C  
                                l367 1980                                  l455 1CC2  
                                l447 1CC2                                  l439 215C  
                                l615 0F6A                                  l631 0D4A  
                                l623 0C22                                  l607 0964  
                                l472 2326                                  l464 2418  
                                l368 1932                                  l456 1CB2  
                                l448 1C38                                  l640 0E6E  
                                l632 0D68                                  l624 0C4E  
                                l616 0AF6                                  l608 0962  
                                l705 2444                                  l481 23C2  
                                l465 2416                                  l369 19C0  
                                l457 1CB0                                  l449 1C44  
                                l641 0E7E                                  l633 0D78  
                                l625 0C40                                  l617 0B1A  
                                l609 092E                                  l650 2278  
                                l482 23E0                                  l466 2422  
                                l458 1CB4                                  l642 0EEE  
                                l634 0D96                                  l626 0C70  
                                l618 0B28                                  l651 229E  
                                l483 23E0                                  l475 1DAA  
                                l467 2422                                  l643 0F30  
                                l635 0EDA                                  l627 0C96  
                                l619 0B44                                  l652 2288  
                                l476 1D9E                                  l644 0F32  
                                l636 0DD8                                  l628 0D6A  
                                l653 227C                                  l477 1DB2  
                                l637 0E4E                                  l629 0D52  
                                l645 0F6C                                  l654 2292  
                                l670 1378                                  l478 1DF4  
                                l638 0ED2                                  l655 22A4  
                                l671 1336                                  l639 0E80  
                                l672 1386                                  l664 12B6  
                                l680 1D5E                                  l673 1386  
                                l665 1302                                  l681 1D5E  
                                l666 12F0                                  l667 12E8  
                                l692 237C                                  l668 12EE  
                                l693 2374                                  l669 12F6  
                                l694 2378                                  l686 1E78  
                                l678 1D4C                                  l695 237A  
                                l687 1E04                                  l679 1CDE  
                                l696 2388                                  l688 1E8A  
                                l697 2388                                  l689 1E8A  
                                l698 2390                                  l699 2392  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                _UIE 000F64                                  _UIR 000F65  
                         _USBSuspend 2424                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
                ?_USBCheckHIDRequest 0027                ??_USBCtrlTrfRxService 00E0  
                       __CFG_LVP$OFF 000000                                 l3100 1002  
                               l3110 1050                                 l3102 1010  
                               l3120 1072                                 l3112 1056  
                               l3104 1012                                 l3200 22C8  
                               l3130 10A6                                 l3122 1080  
                               l3114 105C                                 l3106 1030  
                               l3210 21D0                                 l3202 22CC  
                               l3132 10A8                                 l3124 108C  
                               l3116 1068                                 l3108 104C  
                               l3140 10CA                                 l3300 0B48  
                               l3220 2204                                 l3212 21DC  
                               l3204 22D8                                 l3150 2234  
                               l3142 220A                                 l3134 10B6  
                               l3126 1092                                 l3118 1070  
                               l3310 0B9C                                 l3302 0B7A  
                               l3230 217C                                 l3222 2434  
                               l3214 21E0                                 l3206 22E0  
                               l3152 223C                                 l3144 2216  
                               l3136 10C2                                 l3128 109E  
                               l3080 0F9A                                 l3160 1AC4  
                               l3400 0E6A                                 l3320 0BCA  
                               l3304 0B7E                                 l3312 0BAE  
                               l3240 08CC                                 l3232 2186  
                               l3224 2160                                 l3216 21EC  
                               l3208 21B8                                 l3154 224E  
                               l3146 221A                                 l3138 10C8  
                               l3090 0FC6                                 l3082 0F9C  
                               l3074 0F6E                                 l3170 19D0  
                               l3162 1AFC                                 l3402 0E6E  
                               l3410 0EDA                                 l3330 0C14  
                               l3322 0BCE                                 l3314 0BC0  
                               l3306 0B94                                 l3250 092C  
                               l3242 08D8                                 l3234 218A  
                               l3226 216C                                 l3218 21F8  
                               l3148 2222                                 l3500 13D4  
                               l3092 0FD8                                 l3084 0FAE  
                               l3076 0F88                                 l3420 2328  
                               l3180 1A32                                 l3172 19DC  
                               l3164 1B04                                 l3156 1A94  
                               l3412 0EFA                                 l3404 0E7A  
                               l3340 0C4E                                 l3332 0C22  
                               l3324 0BE4                                 l3316 0BC4  
                               l3308 0B98                                 l3260 09A6  
                               l3252 092E                                 l3244 0900  
                               l3236 2196                                 l3228 2176  
                               l3510 13FA                                 l3502 13DC  
                               l3094 0FE4                                 l3086 0FB0  
                               l3078 0F8A                                 l3430 2100  
                               l3422 232C                                 l3190 1A86  
                               l3182 1A36                                 l3174 19EE  
                               l3166 1B1C                                 l3158 1AA2  
                               l3414 0F22                                 l3406 0E80  
                               l3350 0C96                                 l3342 0C5E  
                               l3334 0C32                                 l3326 0BEE  
                               l3318 0BC6                                 l3270 0A48  
                               l3262 09C0                                 l3254 094A  
                               l3246 090C                                 l3238 08C4  
                               l3600 15BC                                 l3520 1436  
                               l3512 1406                                 l3504 13DE  
                               l3096 0FEE                                 l3088 0FBC  
                               l3440 213A                                 l3432 2108  
                               l3424 2338                                 l3192 1A92  
                               l3184 1A48                                 l3176 19F4  
                               l3168 19C4                                 l3416 0F32  
                               l3408 0ED2                                 l3360 0D38  
                               l3352 0CB4                                 l3344 0C62  
                               l3336 0C3A                                 l3328 0BFE  
                               l3280 0AB2                                 l3272 0A62  
                               l3264 09EA                                 l3256 0950  
                               l3248 091C                                 l3610 160C  
                               l3602 15CA                                 l3530 14BA  
                               l3522 1458                                 l3514 141A  
                               l3506 13EC                                 l3098 0FF8  
                               l3450 1C1E                                 l3442 2142  
                               l3434 2118                                 l3426 2344  
                               l3186 1A50                                 l3178 1A02  
                               l3370 0D78                                 l3362 0D44  
                               l3354 0CC6                                 l3346 0C70  
                               l3338 0C40                                 l3290 0B0E  
                               l3282 0ABE                                 l3274 0A78  
                               l3266 0A04                                 l3258 0966  
                               l3418 0F38                                 l3194 22A6  
                               l3620 1696                                 l3612 161E  
                               l3604 15DC                                 l3540 1504  
                               l3532 14C6                                 l3516 141C  
                               l3508 13F4                                 l3524 145A  
                               l3700 1C18                                 l3460 1C4C  
                               l3452 1C28                                 l3444 214A  
                               l3436 2120                                 l3428 2350  
                               l3188 1A58                                 l3380 0DB6  
                               l3372 0D7C                                 l3364 0D4A  
                               l3356 0D2A                                 l3348 0C88  
                               l3292 0B28                                 l3284 0AE6  
                               l3276 0A92                                 l3268 0A2E  
                               l3196 22B8                                 l3630 23D6  
                               l3710 204A                                 l3702 2020  
                               l3622 16B0                                 l3614 1630  
                               l3606 15E8                                 l3542 1544  
                               l3534 14CE                                 l3550 159C  
                               l3526 14A6                                 l3518 142A  
                               l3470 1C6E                                 l3462 1C52  
                               l3454 1C32                                 l3446 214C  
                               l3438 2130                                 l3390 0DFA  
                               l3382 0DBA                                 l3374 0D88  
                               l3358 0D2C                                 l3366 0D52  
                               l3294 0B30                                 l3286 0AF6  
                               l3278 0AAC                                 l3198 22BE  
                               l3800 2406                                 l3720 2078  
                               l3712 2056                                 l3704 202C  
                               l3624 16BE                                 l3616 163C  
                               l3608 15F8                                 l3560 1F6C  
                               l3552 1F14                                 l3544 1550  
                               l3536 14D8                                 l3528 14B8  
                               l3640 181E                                 l3632 17D8  
                               l3480 1C9E                                 l3472 1C7A  
                               l3464 1C5A                                 l3456 1C38  
                               l3448 214E                                 l3392 0DFC  
                               l3384 0DD8                                 l3376 0D96  
                               l3368 0D6A                                 l3296 0B42  
                               l3288 0B02                                 l3626 23C2  
                               l3810 1130                                 l3802 10F8  
                               l3730 1EA6                                 l3722 208A  
                               l3714 2060                                 l3706 2030  
                               l3618 1686                                 l3570 16E4  
                               l3562 1F78                                 l3554 1F20  
                               l3546 1570                                 l3538 14E4  
                               l3490 139E                                 l3650 188C  
                               l3642 1830                                 l3634 17E0  
                               l3482 1CAC                                 l3474 1C7C  
                               l3466 1C60                                 l3458 1C42  
                               l3386 0DE8                                 l3394 0E4E  
                               l3378 0DA6                                 l3298 0B44  
                               l3900 1CD0                                 l3628 23CE  
                               l3820 116A                                 l3804 1108  
                               l3812 1142                                 l3740 1EDE  
                               l3732 1EB4                                 l3724 1E8C  
                               l3708 2042                                 l3716 206C  
                               l3580 1718                                 l3572 16F0  
                               l3564 1F86                                 l3556 1F44  
                               l3548 159A                                 l3492 13A2  
                               l3660 18BA                                 l3644 1850  
                               l3652 189E                                 l3636 17E2  
                               l3484 1CB4                                 l3476 1C88  
                               l3468 1C68                                 l3396 0E52  
                               l3388 0DF6                                 l3902 1CDE  
                               l3910 1D4C                                 l3830 11D6  
                               l3822 116E                                 l3814 1152  
                               l3806 1118                                 l3750 18D8  
                               l3742 1EF4                                 l3726 1E98  
                               l3734 1EC4                                 l3718 2070  
                               l3582 1724                                 l3574 16F8  
                               l3590 1794                                 l3566 1F92  
                               l3558 1F68                                 l3494 13BC  
                               l3670 1B5C                                 l3662 18C0  
                               l3646 1852                                 l3638 17F6  
                               l3654 18A4                                 l3486 1CB6  
                               l3478 1C94                                 l3398 0E5E  
                               l3920 1E5E                                 l3912 1DF6  
                               l3904 1D2C                                 l3840 122A  
                               l3832 11DA                                 l3824 11A0  
                               l3816 1158                                 l3808 1126  
                               l3760 1942                                 l3752 1910  
                               l3744 1EFE                                 l3736 1ECE  
                               l3728 1E9C                                 l3584 176E  
                               l3576 1700                                 l3592 17B0  
                               l3568 16D2                                 l3496 13C2  
                               l3488 1388                                 l3680 1B96  
                               l3672 1B68                                 l3664 18C4  
                               l3648 1886                                 l3656 18AC  
                               l3930 1292                                 l3922 1E74  
                               l3914 1E04                                 l3906 1D30  
                               l3850 23EA                                 l3842 122E  
                               l3834 11DE                                 l3826 11AA  
                               l3818 115E                                 l3762 194A  
                               l3754 1928                                 l3770 1980  
                               l3738 1ED2                                 l3746 1F0C  
                               l3594 17BA                                 l3586 1786  
                               l3578 170A                                 l3498 13C8  
                               l3690 1BC4                                 l3682 1B9E  
                               l3674 1B72                                 l3658 18B8  
                               l3666 18C8                                 l3940 12BE  
                               l3932 1298                                 l3916 1E0E  
                               l3924 1E78                                 l3908 1D48  
                               l3860 1D98                                 l3852 23EC  
                               l3844 1232                                 l3828 11AC  
                               l3836 11EA                                 l3780 19B6  
                               l3772 198C                                 l3764 195C  
                               l3756 1932                                 l3748 18CE  
                               l3596 17C6                                 l3588 1792  
                               l3692 1BD0                                 l3684 1BA2  
                               l3676 1B7E                                 l3668 18CC  
                               l3950 12F8                                 l3942 12C8  
                               l3934 129C                                 l3926 1254  
                               l3918 1E5A                                 l3870 1DDA  
                               l3862 1DB4                                 l3854 2410  
                               l3838 1200                                 l3846 123E  
                               l3790 1FF8                                 l3782 1F9A  
                               l3774 1994                                 l3766 1964  
                               l3758 1936                                 l3598 17C8  
                               l3694 1BD2                                 l3686 1BB2  
                               l3678 1B8A                                 l3960 1374  
                               l3952 130E                                 l3944 12E2  
                               l3936 12A8                                 l3928 1260  
                               l3880 22F6                                 l3872 1DDC  
                               l3864 1DB8                                 l3856 1D60  
                               l3848 23E2                                 l3792 1FFC  
                               l3784 1FA8                                 l3776 199C  
                               l3768 1976                                 l3696 1C02  
                               l3688 1BC2                                 l3970 225E  
                               l3962 1378                                 l3954 1312  
                               l3946 12E4                                 l3938 12B4  
                               l3890 243E                                 l3882 2306  
                               l3874 1DE8                                 l3866 1DC0  
                               l3858 1D74                                 l3794 2000  
                               l3786 1FC0                                 l3778 19A4  
                               l3698 1C08                                 l3980 2292  
                               l3972 226A                                 l3964 2442  
                               l3892 235E                                 l3956 1328  
                               l3948 12F4                                 l3884 2316  
                               l3876 2424                                 l3868 1DD2  
                               l3788 1FCE                                 l3796 200C  
                               l3982 2294                                 l3974 2276  
                               l3966 2258                                 l3894 2360  
                               l3958 1336                                 l3886 2320  
                               l3878 22EE                                 l3798 23FA  
                               l3976 227C                                 l3968 225A  
                               l3896 2370                                 l3888 2324  
                               l3978 2288                                 l3898 1CC4  
              ??_HIDSetReportHandler 00E0                                 u3000 158C  
                               u3010 1F78                                 u3011 1F76  
                               u3100 1630                                 u3020 1700  
                               u3101 162E                                 u3021 16FE  
                               u3110 1696                                 u3030 1786  
                               u3111 1694                                 u3031 1784  
                               u3007 1586                                 _LATC 000F8B  
                               u3120 16B0                                 u3040 17BA  
                               u2400 0FAC                                 u3200 1BC0  
                               u3121 16AE                                 u3041 17B8  
                               u2401 0FAA                                 u3201 1BBE  
                               u3050 15CA                                 u2410 0FC6  
                               u3210 1BCE                                 u3130 17E0  
                               u3051 15C8                                 u2411 0FC4  
                               u3211 1BCC                                 u3131 17DE  
                               u3300 1EF4                                 u3060 15DC  
                               u2420 0FEE                                 u3140 17F6  
                               u2500 1A46                                 u3301 1EF2  
                               u3061 15DA                                 u2421 0FEC  
                               u3141 17F4                                 u2501 1A44  
                               u3310 18D8                                 u3070 15F8  
                               u2430 1002                                 u3230 1C16  
                               u3150 181E                                 u2510 1A66  
                               u3311 18D6                                 u3071 15F6  
                               u2431 1000                                 u3231 1C14  
                               u3151 181C                                 u2511 1A62  
                               u3400 11D4                                 u3320 1910  
                               u3240 202C                                 u3080 160C  
                               u2440 104A                                 u3160 184E  
                               u2600 08CC                                 u2520 22B8  
                               u3321 190E                                 u3241 202A  
                               u3081 160A                                 u2441 1048  
                               u3161 184C                                 u2601 08CA  
                               u2521 22B6                                 u3410 11FA  
                               u3330 1928                                 u3250 2056  
                               u3090 161E                                 u3170 189A  
                               u2450 1AA2                                 u2610 08D8  
                               u2530 22D8                                 u3411 11F8  
                               u3331 1926                                 u3251 2054  
                               u3091 161C                                 u3171 1898  
                               u2451 1AA0                                 u2611 08D6  
                               u2531 22D6                                 u3500 2390  
                               u3420 1228                                 u3340 1FF6  
                               u3260 1E98                                 u2380 0F86  
                               u3228 1BEA                                 u3180 18B8  
                               u2516 1A68                                 u2460 1B18  
                               u2700 0C3A                                 u2620 092A  
                               u2540 22E0                                 u3501 238E  
                               u3261 1E96                                 u2381 0F84  
                               u3229 1C02                                 u3181 18B6  
                               u2461 1B16                                 u2701 0C38  
                               u2621 0928                                 u2541 22DE  
                               u3510 1D5C                                 u3430 124E  
                               u3350 201C                                 u3270 1EA6  
                               u2390 0F98                                 u3190 1B68  
                               u2470 1B32                                 u2710 0C5E  
                               u2630 095E                                 u2550 21CE  
                               u3511 1D5A                                 u3431 124C  
                               u3407 11CA                                 u3351 201A  
                               u3271 1EA4                                 u2391 0F96  
                               u3191 1B66                                 u2471 1B2E  
                               u2711 0C5C                                 u2631 095C  
                               u2551 21CC                                 u3600 229E  
                               u3520 1E88                                 u3440 2420  
                               u3360 1108                                 u3280 1ECE  
                               u2480 19DC                                 u2800 0EEE  
                               u2720 0C88                                 u2640 0ABE  
                               u2560 216C                                 u3601 229C  
                               u3521 1E86                                 u3441 241E  
                               u3361 1106                                 u3281 1ECC  
                               u2481 19DA                                 u2801 0EEC  
                               u2721 0C86                                 u2641 0ABC  
                               u2561 216A                                 u3530 12B2  
                               u3450 1DB2                                 u3370 1118  
                               u3290 1EDE                                 u2490 19EE  
                               u2810 0EFA                                 u2730 0CB4  
                               u2650 0B0E                                 u2570 2186  
                               u3531 12B0                                 u3451 1DB0  
                               u3427 121E                                 u3371 1116  
                               u3347 1FEC                                 u3291 1EDC  
                               u2491 19EC                                 u2811 0EF8  
                               u2731 0CB2                                 u2651 0B0C  
                               u2571 2184                                 u3540 12BE  
                               u3460 22F6                                 u3380 1130  
                               u2900 1C5A                                 u2820 2108  
                               u2476 1B34                                 u2740 0D44  
                               u2660 0B40                                 u2580 2196  
                               u3541 12BC                                 u3461 22F4  
                               u3381 112E                                 u2901 1C58  
                               u2821 2106                                 u2741 0D42  
                               u2661 0B3E                                 u2581 2194  
                               u3550 12C8                                 u3470 2306  
                               u3390 11A8                                 u2910 1C68  
                               u2830 2118                                 u2750 0D66  
                               u2670 0B6A                                 u2590 21A0  
                               u3551 12C6                                 u3471 2304  
                               u3391 11A6                                 u2911 1C66  
                               u2831 2116                                 u2751 0D64  
                               u2735 0CAC                                 u2591 219C  
                               u3560 1302                                 u3480 2316  
                               u2920 1C78                                 u2840 213A  
                               u2760 0DE8                                 u2680 0BAC  
                               u3561 1300                                 u3481 2314  
                               u2921 1C76                                 u2841 2138  
                               u2761 0DE6                                 u2681 0BAA  
                               u3490 2370                                 u3570 1384  
                               u2930 1C92                                 u2850 2142  
                               u2770 0E5E                                 u2690 0C32  
                               u3491 236E                                 u3571 1382  
                               u2931 1C90                                 u2851 2140  
                               u2771 0E5C                                 u2691 0C30  
                               u2675 0B60                                 u3580 2274  
                               u2940 1C9E                                 u2860 1C26  
                               u2780 0E6A                                 u2596 21A2  
                               u3581 2272                                 u2941 1C9C  
                               u2861 1C24                                 u2781 0E68  
                               u3590 2290                                 u2950 1CAC  
                               u2870 1C32                                 u2790 0E7A  
                               u3591 228E                                 u2951 1CAA  
                               u2871 1C30                                 u2791 0E78  
                               u2960 1CC0                                 u2880 1C40  
                               u2961 1CBE                                 u2881 1C3E  
                               u2970 139C                                 u2890 1C4C  
                               u2971 139A                                 u2891 1C4A  
                               u2980 14B6                                 u2981 14B4  
                               u2990 1542                                 u2997 1532  
              ??_USBCtrlTrfTxService 00E0                                 _UCFG 000F62  
                               _UEP0 000F6A                                 _UEP1 000F6B  
                               _UEIE 000F66                                 _UEIR 000F67  
                               _UCON 000F60   __size_of_USBPrepareForNextSetupTrf 0016  
                               _WREG 000FE8                   __size_of_HIDInitEP 004E  
           __size_of_USBModuleEnable 0018                                 _pDst 0007  
                               _pSrc 000A                                 _main 22A6  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$220 000000  
                         _ClearArray 23C2                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A6              BlinkUSBStatus@led_count 000D  
                      __CFG_IESO$OFF 000000                 ??_USBCheckHIDRequest 00E0  
         __end_of_USBCheckStdRequest 14A6               ??_USBCtrlTrfOutHandler 00E2  
                      __CFG_MCLRE$ON 000000            ??_USBStdFeatureReqHandler 00E0  
             __end_of_BlinkUSBStatus 21B8                                EECON1 000FA6  
                              EECON2 000FA7             ??_USBStdGetStatusHandler 00E0  
     __end_of_TableReadPostIncrement 2446                                ?_main 0027  
                              _EEADR 000FA9    __size_of_USBCtrlEPServiceComplete 00F6  
          ?_USBCtrlEPServiceComplete 0027                                i1l129 0060  
                              i2l126 20C6                                _UADDR 000F63  
                              _TRISC 000F94                                _USTAT 000F61  
                  HIDRxReport@buffer 00E0                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                              _ep0Bi 000404                                _ep1Bi 00040C  
                              _ep0Bo 000400                                _ep1Bo 000408  
                              _cfg01 0840                                _sd000 08BE  
                              _sd001 080C                                _sd002 0869  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000             _interrupt_at_high_vector 0008  
                     __CFG_EBTRB$OFF 000000                     _usb_device_state 001F  
                              pclath 000FFA                         HIDTxReport@i 00E4  
                              tablat 000FF5                     __end_of_USBTasks 243E  
                   _ConfigsLockValue 0019                                status 000FD8  
                     __CFG_T3CMX$RB5 000000                       __CFG_ICPRT$OFF 000000  
         __size_of_UnlockAndActivate 0036                    _BufferedDataIndex 0018  
                         _PacketToPC 00A0         __size_of_USBStdSetCfgHandler 0086  
                    __initialization 2394                      ?_BlinkUSBStatus 0027  
                       __end_of_main 22EE              _interrupt_at_low_vector 0018  
              _ProgramMemStopAddress 0001                    __end_of_HIDInitEP 2258  
          __size_of_USBCtrlEPService 00F6                               ??_main 00F0  
          __size_of_InitializeSystem 0052                        __activetblptr 000002  
                        ?_USBSuspend 0027                       __CFG_SDOMX$RC7 000000  
                    __CFG_CCP2MX$RC1 000000                     __end_of_UserInit 235E  
                             _EEDATA 000FA8                               _EECON1 000FA6  
                             _ANSELB 000F5C                               i1l1438 005C  
                             i2l1436 20C2                               _TABLAT 000FF5  
                             _OSCCON 000FD3                               _TBLPTR 000FF6  
                    _ClassReqHandler 080A                          ?_ClearArray 00E0  
                     __CFG_XINST$OFF 000000                    ??_USBModuleEnable 00E0  
                     __CFG_STVREN$ON 000000                               _wCount 0021  
    __size_of_USBStdGetStatusHandler 0106                               clear_0 239A  
                             clear_1 23A6                               clear_2 23B2  
       __size_of_HIDGetReportHandler 0002                 __size_of_HIDRxReport 00D0  
                         ProcessIO@i 00EF                 __size_of_HIDTxReport 00C8  
WriteFlashBlock@BytesTakenFromBuffer 0014                   __size_of_ProcessIO 06AA  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
        __size_of_ResetDeviceCleanly 004E                         WriteEEPROM@i 0013  
                        _CtrlTrfData 000600                 __CFG_LS48MHZ$SYS48X8 000000  
                         __accesstop 0060              __end_of__initialization 23B8  
                    __CFG_PBADEN$OFF 000000             __size_of_USBStallHandler 003A  
                        _bTRNIFCount 001A           UnlockAndActivate@UnlockKey 00E0  
                __size_of_USBSuspend 0010            ??_interrupt_at_low_vector 0027  
                     __pcstackCOMRAM 0027                        __end_of_cfg01 0869  
                   __CFG_nPWRTEN$OFF 000000                        __end_of_sd000 08C2  
                      __end_of_sd001 0840                        __end_of_sd002 088F  
                    _active_protocol 0023          __end_of_USBCtrlTrfInHandler 1F14  
                    __CFG_PCLKEN$OFF 000000                            ?_USBTasks 0027  
           __size_of_WriteFlashBlock 0134            __size_of_USBDriverService 00A6  
                     __CFG_nLPBOR$ON 000000                  __size_of_ClearArray 0020  
           __size_of_WriteConfigBits 009C              __end_of_ClassReqHandler 080C  
           ??_USBCtrlTrfSetupHandler 00E5               _USBStdGetStatusHandler 16D2  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                      ??_WriteEEPROM 00E1          __size_of_USBWakeFromSuspend 0014  
                  __end_of_ProcessIO 0F6E     __end_of_USBCtrlEPServiceComplete 19C4  
           ?_USBProtocolResetHandler 0027                    __CFG_PLLSEL$PLL3X 000000  
                          ?_UserInit 0027                           _device_dsc 08AC  
                   _USBCtrlEPService 17D8           ??_interrupt_at_high_vector 0038  
                         ??_USBTasks 00EB                     _InitializeSystem 21B8  
        __end_of_USBCtrlTrfRxService 2020                   _USBCheckStdRequest 1388  
                    __CFG_WDTEN$SWON 000000          __end_of_HIDSetReportHandler 244A  
        __end_of_USBCtrlTrfTxService 1254                  _USBStdSetCfgHandler 1F14  
    __end_of_interrupt_at_low_vector 00A6                              _OSCCON2 000FD2  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
                            _OSCTUNE 000F9B                  ?_USBCheckStdRequest 0027  
       __size_of_USBStdGetDscHandler 0116               __size_of_ClearWatchdog 0004  
                            _UIEbits 000F64                              _UIRbits 000F65  
                     HIDRxReport@len 00E2                     ??_BlinkUSBStatus 00E0  
                            __Hparam 0000                 ?_USBStdSetCfgHandler 0027  
        __size_of_USBCheckHIDRequest 018A                              __Lparam 0000  
                  __end_of_hid_rpt01 08AC                 ??_USBCheckStdRequest 00E4  
      __size_of_USBCtrlTrfOutHandler 0076                  __end_of_WriteEEPROM 1E8C  
                  ??_USBStallHandler 00E0                           ??_UserInit 00E0  
                       __psmallconst 0800                              __pcinit 2394  
                            __ramtop 0800                              __ptext0 22A6  
                            __ptext1 21B8                              __ptext2 2434  
                            __ptext3 2160                              __ptext4 08C4  
                            __ptext5 1A94                              __ptext6 19C4  
                            __ptext7 2328                              __ptext8 2100  
                            __ptext9 1C1E                         ??_USBSuspend 00E0  
                          _HIDInitEP 220A                       _ctrl_trf_state 001C  
                 __end_of_USB_CD_Ptr 080A      __size_of_USBCtrlTrfSetupHandler 00C2  
                  ??_WriteFlashBlock 00E1                       __pintcode_body 2096  
               end_of_initialization 23B8                      _USBModuleEnable 23E2  
                  ??_WriteConfigBits 00E1                   __end_of_USB_SD_Ptr 0806  
                _HIDGetReportHandler 2446      __end_of_USBProtocolResetHandler 1DF6  
                      __Lmediumconst 0000                              int_func 2096  
                       ??_ClearArray 00E3                       HIDTxReport@len 00E2  
           ?_USBStdFeatureReqHandler 0027           ?_USBPrepareForNextSetupTrf 0027  
              ??_USBStdSetCfgHandler 00E3                   __end_of_USBSuspend 2434  
                            postdec2 000FDD                        _ClearWatchdog 243E  
                            postinc0 000FEE                              postinc2 000FDE  
           _USBCtrlEPServiceComplete 18CE                 ?_HIDGetReportHandler 0027  
                          _PORTBbits 000F81      USBCtrlTrfRxService@byte_to_read 00E0  
                   _USBDriverService 1C1E                           ?_HIDInitEP 0027  
                 __end_of_ClearArray 23E2                         _PacketFromPC 0060  
    WriteFlashBlock@CorrectionFactor 0015               _ctrl_trf_session_owner 001B  
                        _WriteEEPROM 1DF6             ??_TableReadPostIncrement 00E0  
  __end_of_USBPrepareForNextSetupTrf 2410                     _short_pkt_status 001E  
                     ?_ClearWatchdog 0027               _USBCtrlTrfSetupHandler 1B5C  
                      ??_HIDRxReport 00E3                     _ErasePageTracker 000F  
                      ??_HIDTxReport 00E3                ??_HIDGetReportHandler 00E0  
   __end_of_interrupt_at_high_vector 2100                            _BootState 0017  
         __end_of_ResetDeviceCleanly 22A6              __end_of_USBModuleEnable 23FA  
                start_initialization 2394                    __size_of_USBTasks 000A  
            ?_USBStdGetStatusHandler 0027      __end_of_USBStdFeatureReqHandler 16D2  
           __end_of_USBCtrlEPService 18CE             __end_of_InitializeSystem 220A  
                _USBStdGetDscHandler 14A6                            _ProcessIO 08C4  
                    ClearArray@count 00E2                    __size_of_UserInit 0036  
                __end_of_HIDRxReport 1A94       __end_of_USBStdGetStatusHandler 17D8  
   __size_of_USBProtocolResetHandler 0096                  __end_of_HIDTxReport 1B5C  
                  _USBCheckBusStatus 2100                          ??_HIDInitEP 00E0  
                        __pbssCOMRAM 0001                        __pcstackBANK0 00E0  
       __size_of_USBCtrlTrfInHandler 0088                   ?_USBCheckBusStatus 0027  
                  HIDTxReport@buffer 00E0                 ?_USBStdGetDscHandler 0027  
         __end_of_USBWakeFromSuspend 2424                  ??_USBCheckBusStatus 00E1  
                    _USBStallHandler 22EE             ?_interrupt_at_low_vector 0027  
                    ??_ClearWatchdog 00E0      __size_of_TableReadPostIncrement 0004  
                          __pintcode 0008                           ?_ProcessIO 0027  
                          _hid_rpt01 088F                          __pintcodelo 0018  
                          _idle_rate 0024                      _WriteFlashBlock 1254  
          __end_of_USBCheckBusStatus 2160                      _WriteConfigBits 1CC4  
                        __smallconst 0800                  ResetDeviceCleanly@i 0011  
                   ?_USBModuleEnable 0027         __end_of_USBCtrlTrfOutHandler 2096  
              ??_USBStdGetDscHandler 00E0         __size_of_USBCtrlTrfRxService 0086  
            USBCtrlTrfSetupHandler@i 00E6    __size_of_interrupt_at_high_vector 20F8  
       __size_of_HIDSetReportHandler 0002            ?_interrupt_at_high_vector 0027  
       __size_of_USBCtrlTrfTxService 015C                             _LATCbits 000F8B  
         __end_of_USBCheckHIDRequest 10F8             __end_of_USBDriverService 1CC4  
         ??_USBCtrlEPServiceComplete 00E4                             _PIE3bits 000FA3  
        ??_USBPrepareForNextSetupTrf 00E0                             _PIR3bits 000FA4  
          USBCtrlEPService@setup_cnt 00E9                     __CFG_WDTPS$32768 000000  
                           _UEP0bits 000F6A          __size_of_USBCheckStdRequest 011E  
                        _HIDRxReport 19C4                             _UCONbits 000F60  
                        _HIDTxReport 1A94     __size_of_USBStdFeatureReqHandler 0116  
                           _USBTasks 2434               _TableReadPostIncrement 2442  
                  __CFG_CFGPLLEN$OFF 000000              __end_of_USBStallHandler 2328  
        __end_of_USBStdSetCfgHandler 1F9A                       _hid_report_out 000700  
                     main@ANSELBSave 00F0                   __end_of_device_dsc 08BE  
                         _EECON1bits 000FA6                         ?_WriteEEPROM 0027  
            ?_USBCtrlTrfSetupHandler 0027                             __Hrparam 0000  
                           __Lrparam 0000              __end_of_WriteFlashBlock 1388  
                 __CFG_BOREN$SBORDIS 000000                             _SetupPkt 000500  
            __end_of_WriteConfigBits 1D60                          ??_ProcessIO 00EB  
                           _UserInit 2328              __size_of_BlinkUSBStatus 0058  
         __size_of_USBCheckBusStatus 0060                       _hid_rpt_rx_len 001D  
            _USBProtocolResetHandler 1D60                           _ANSELBbits 000F5C  
    USBCtrlTrfTxService@byte_to_send 00E2            _USBPrepareForNextSetupTrf 23FA  
                           __ptext10 17D8                             __ptext11 1B5C  
                           __ptext20 15BC                             __ptext12 0F6E  
                           __ptext21 2020                             __ptext13 2446  
                           __ptext30 23FA                             __ptext22 1E8C  
                           __ptext14 2448                             __ptext31 2424  
                           __ptext23 18CE                             __ptext15 1388  
                           __ptext32 22EE                             __ptext24 1F9A  
                           __ptext16 14A6                             __ptext33 243E  
                           __ptext25 10F8                             __ptext17 1F14  
                           __ptext34 1CC4                             __ptext26 23E2  
                           __ptext18 220A                             __ptext35 1DF6  
                           __ptext27 2410                             __ptext19 16D2  
                           __ptext36 1254                             __ptext28 1D60  
                           __ptext37 235E                             __ptext29 23C2  
                           __ptext38 2442                             __ptext39 2258  
                        _OSCCON2bits 000FD2                   _ResetDeviceCleanly 2258  
     __end_of_USBCtrlTrfSetupHandler 1C1E                        __size_of_main 0048  
                  ?_USBCtrlEPService 0027                    ?_InitializeSystem 0027  
                 ??_USBCtrlEPService 00E7          __end_of_HIDGetReportHandler 2448  
                _USBCtrlTrfInHandler 1E8C                fp__USBCheckHIDRequest 0018  
                 ??_InitializeSystem 00E1                  ?_ResetDeviceCleanly 0027  
               _USBCtrlTrfOutHandler 2020                             _usb_stat 0020  
                  _ProgrammedPointer 0004                        _hid_report_in 000740  
                         _INTCONbits 000FF2                 ?_USBCtrlTrfInHandler 0027  
                   WriteFlashBlock@i 0016                 ??_ResetDeviceCleanly 00E0  
                   ?_USBStallHandler 0027                             intlevel1 0000  
                           intlevel2 0000                    _ProgrammingBuffer 0100  
                   WriteConfigBits@i 0012                    _UnlockAndActivate 235E  
                   ?_WriteFlashBlock 0027                ?_USBCtrlTrfOutHandler 0027  
               __CFG_CPUDIV$NOCLKDIV 000000                  _USBCtrlTrfRxService 1F9A  
                 ?_UnlockAndActivate 00E0                     ?_WriteConfigBits 0027  
                 _USBWakeFromSuspend 2410            ??_USBProtocolResetHandler 00E3  
            _USBStdFeatureReqHandler 15BC                  _HIDSetReportHandler 2448  
   __size_of_interrupt_at_low_vector 008E                  _USBCtrlTrfTxService 10F8  
                ??_UnlockAndActivate 00E1                  ?_USBWakeFromSuspend 0027  
              ??_USBCtrlTrfInHandler 00E4                 ?_USBCtrlTrfRxService 0027  
                 __CFG_FOSC$INTOSCIO 000000                   ClearArray@startAdr 00E0  
               ?_HIDSetReportHandler 0027                 ?_USBCtrlTrfTxService 0027  
               ??_USBWakeFromSuspend 00E0            __end_of_UnlockAndActivate 2394  
                  ?_USBDriverService 0027                           _USB_CD_Ptr 0806  
                     _usb_active_cfg 0025                   ??_USBDriverService 00EA  
