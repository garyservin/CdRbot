Version 3.2 HI-TECH Software Intermediate Code
[s S40 :1 `uc 1 :1 `uc 1 ]
[n S40 . RemoteWakeup ctrl_trf_mem ]
[u S39 `uc 1 `S40 1 ]
[n S39 _USB_DEVICE_STATUS _byte . ]
[s S42 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S42 . BC8 BC9 BSTALL DTSEN INCDIS KEN DTS UOWN ]
[s S43 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S43 . BC8 BC9 PID0 PID1 PID2 PID3 . UOWN ]
[s S44 :2 `uc 1 :4 `uc 1 :2 `uc 1 ]
[n S44 . . PID . ]
[u S41 `uc 1 `S42 1 `S43 1 `S44 1 ]
[n S41 _BD_STAT _byte . . . ]
[s S46 `S41 1 `uc 1 `uc 1 `uc 1 ]
[n S46 . Stat Cnt ADRL ADRH ]
[s S47 :8 `uc 1 :8 `uc 1 `*uc 1 ]
[n S47 . . . ADR ]
[u S45 `S46 1 `S47 1 ]
[n S45 _BDT . . ]
[s S25 `uc -> 8 `i ]
[n S25 . _byte ]
[s S26 `uc 1 `uc 1 `ui 1 `ui 1 `ui 1 ]
[n S26 . bmRequestType bRequest wValue wIndex wLength ]
[s S4 `uc 1 `uc 1 ]
[n S4 . byte0 byte1 ]
[s S2 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S2 . b0 b1 b2 b3 b4 b5 b6 b7 ]
[u S1 `uc 1 `S2 1 ]
[n S1 _BYTE _byte . ]
[s S5 `S1 1 `S1 1 ]
[n S5 . Byte0 Byte1 ]
[s S6 `S1 1 `S1 1 ]
[n S6 . LowB HighB ]
[s S7 `uc -> 2 `i ]
[n S7 . v ]
[u S3 `ui 1 `S4 1 `S5 1 `S6 1 `S7 1 ]
[n S3 _WORD _word . . . . ]
[s S27 :8 `uc 1 :8 `uc 1 `S3 1 `S3 1 `S3 1 ]
[n S27 . . . W_Value W_Index W_Length ]
[s S28 :5 `uc 1 :2 `uc 1 :1 `uc 1 :8 `uc 1 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 ]
[n S28 . Recipient RequestType DataDir . bFeature . . . . . ]
[s S29 :8 `uc 1 :8 `uc 1 `uc 1 `uc 1 `ui 1 :8 `uc 1 :8 `uc 1 ]
[n S29 . . . bDscIndex bDscType wLangID . . ]
[s S30 :8 `uc 1 :8 `uc 1 `S1 1 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 ]
[n S30 . . . bDevADR bDevADRH . . . . ]
[s S31 :8 `uc 1 :8 `uc 1 `uc 1 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 ]
[n S31 . . . bCfgValue bCfgRSD . . . . ]
[s S32 :8 `uc 1 :8 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 :8 `uc 1 :8 `uc 1 ]
[n S32 . . . bAltID bAltID_H bIntfID bIntfID_H . . ]
[s S33 :8 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 `uc 1 `uc 1 :8 `uc 1 :8 `uc 1 ]
[n S33 . . . . . bEPID bEPID_H . . ]
[s S34 :8 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 :4 `uc 1 :3 `uc 1 :1 `uc 1 :8 `uc 1 :8 `uc 1 :8 `uc 1 ]
[n S34 . . . . . EPNum . EPDir . . . ]
[u S24 `S25 1 `S26 1 `S27 1 `S28 1 `S29 1 `S30 1 `S31 1 `S32 1 `S33 1 `S34 1 ]
[n S24 _CTRL_TRF_SETUP . . . . . . . . . . ]
[s S36 `uc -> 8 `i ]
[n S36 . _byte ]
[s S37 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S37 . _byte0 _byte1 _byte2 _byte3 _byte4 _byte5 _byte6 _byte7 ]
[s S38 `ui 1 `ui 1 `ui 1 `ui 1 ]
[n S38 . _word0 _word1 _word2 _word3 ]
[u S35 `S36 1 `S37 1 `S38 1 ]
[n S35 _CTRL_TRF_DATA . . . ]
[; ;typedefs.h: 40: typedef unsigned char byte;
[; ;typedefs.h: 41: typedef unsigned int word;
[; ;typedefs.h: 42: typedef unsigned long dword;
[; ;typedefs.h: 44: typedef union _BYTE
[; ;typedefs.h: 45: {
[; ;typedefs.h: 46: byte _byte;
[; ;typedefs.h: 47: struct
[; ;typedefs.h: 48: {
[; ;typedefs.h: 49: unsigned b0:1;
[; ;typedefs.h: 50: unsigned b1:1;
[; ;typedefs.h: 51: unsigned b2:1;
[; ;typedefs.h: 52: unsigned b3:1;
[; ;typedefs.h: 53: unsigned b4:1;
[; ;typedefs.h: 54: unsigned b5:1;
[; ;typedefs.h: 55: unsigned b6:1;
[; ;typedefs.h: 56: unsigned b7:1;
[; ;typedefs.h: 57: };
[; ;typedefs.h: 58: } BYTE_t;
[; ;typedefs.h: 60: typedef union _WORD
[; ;typedefs.h: 61: {
[; ;typedefs.h: 62: word _word;
[; ;typedefs.h: 63: struct
[; ;typedefs.h: 64: {
[; ;typedefs.h: 65: byte byte0;
[; ;typedefs.h: 66: byte byte1;
[; ;typedefs.h: 67: };
[; ;typedefs.h: 68: struct
[; ;typedefs.h: 69: {
[; ;typedefs.h: 70: BYTE_t Byte0;
[; ;typedefs.h: 71: BYTE_t Byte1;
[; ;typedefs.h: 72: };
[; ;typedefs.h: 73: struct
[; ;typedefs.h: 74: {
[; ;typedefs.h: 75: BYTE_t LowB;
[; ;typedefs.h: 76: BYTE_t HighB;
[; ;typedefs.h: 77: };
[; ;typedefs.h: 78: struct
[; ;typedefs.h: 79: {
[; ;typedefs.h: 80: byte v[2];
[; ;typedefs.h: 81: };
[; ;typedefs.h: 82: } WORD_t;
[; ;typedefs.h: 86: typedef union _DWORD
[; ;typedefs.h: 87: {
[; ;typedefs.h: 88: dword _dword;
[; ;typedefs.h: 89: struct
[; ;typedefs.h: 90: {
[; ;typedefs.h: 91: byte byte0;
[; ;typedefs.h: 92: byte byte1;
[; ;typedefs.h: 93: byte byte2;
[; ;typedefs.h: 94: byte byte3;
[; ;typedefs.h: 95: };
[; ;typedefs.h: 96: struct
[; ;typedefs.h: 97: {
[; ;typedefs.h: 98: word word0;
[; ;typedefs.h: 99: word word1;
[; ;typedefs.h: 100: };
[; ;typedefs.h: 101: struct
[; ;typedefs.h: 102: {
[; ;typedefs.h: 103: BYTE_t Byte0;
[; ;typedefs.h: 104: BYTE_t Byte1;
[; ;typedefs.h: 105: BYTE_t Byte2;
[; ;typedefs.h: 106: BYTE_t Byte3;
[; ;typedefs.h: 107: };
[; ;typedefs.h: 108: struct
[; ;typedefs.h: 109: {
[; ;typedefs.h: 110: WORD_t Word0;
[; ;typedefs.h: 111: WORD_t Word1;
[; ;typedefs.h: 112: };
[; ;typedefs.h: 113: struct
[; ;typedefs.h: 114: {
[; ;typedefs.h: 115: byte v[4];
[; ;typedefs.h: 116: };
[; ;typedefs.h: 117: } DWORD_t;
[; ;typedefs.h: 123: typedef void(*pFunc)(void);
[; ;typedefs.h: 125: typedef union _POINTER
[; ;typedefs.h: 126: {
[; ;typedefs.h: 127: struct
[; ;typedefs.h: 128: {
[; ;typedefs.h: 129: byte bLow;
[; ;typedefs.h: 130: byte bHigh;
[; ;typedefs.h: 132: };
[; ;typedefs.h: 133: word _word;
[; ;typedefs.h: 137: byte* bRam;
[; ;typedefs.h: 139: word* wRam;
[; ;typedefs.h: 142: const byte* bRom;
[; ;typedefs.h: 143: const word* wRom;
[; ;typedefs.h: 148: } POINTER_t;
[; ;usbdefs_std_dsc.h: 122: typedef struct _USB_DEV_DSC
[; ;usbdefs_std_dsc.h: 123: {
[; ;usbdefs_std_dsc.h: 124: byte bLength; byte bDscType; word bcdUSB;
[; ;usbdefs_std_dsc.h: 125: byte bDevCls; byte bDevSubCls; byte bDevProtocol;
[; ;usbdefs_std_dsc.h: 126: byte bMaxPktSize0; word idVendor; word idProduct;
[; ;usbdefs_std_dsc.h: 127: word bcdDevice; byte iMFR; byte iProduct;
[; ;usbdefs_std_dsc.h: 128: byte iSerialNum; byte bNumCfg;
[; ;usbdefs_std_dsc.h: 129: } USB_DEV_DSC;
[; ;usbdefs_std_dsc.h: 134: typedef struct _USB_CFG_DSC
[; ;usbdefs_std_dsc.h: 135: {
[; ;usbdefs_std_dsc.h: 136: byte bLength; byte bDscType; word wTotalLength;
[; ;usbdefs_std_dsc.h: 137: byte bNumIntf; byte bCfgValue; byte iCfg;
[; ;usbdefs_std_dsc.h: 138: byte bmAttributes; byte bMaxPower;
[; ;usbdefs_std_dsc.h: 139: } USB_CFG_DSC;
[; ;usbdefs_std_dsc.h: 144: typedef struct _USB_INTF_DSC
[; ;usbdefs_std_dsc.h: 145: {
[; ;usbdefs_std_dsc.h: 146: byte bLength; byte bDscType; byte bIntfNum;
[; ;usbdefs_std_dsc.h: 147: byte bAltSetting; byte bNumEPs; byte bIntfCls;
[; ;usbdefs_std_dsc.h: 148: byte bIntfSubCls; byte bIntfProtocol; byte iIntf;
[; ;usbdefs_std_dsc.h: 149: } USB_INTF_DSC;
[; ;usbdefs_std_dsc.h: 154: typedef struct _USB_EP_DSC
[; ;usbdefs_std_dsc.h: 155: {
[; ;usbdefs_std_dsc.h: 156: byte bLength; byte bDscType; byte bEPAdr;
[; ;usbdefs_std_dsc.h: 157: byte bmAttributes; word wMaxPktSize; byte bInterval;
[; ;usbdefs_std_dsc.h: 158: } USB_EP_DSC;
[; ;hid.h: 131: typedef struct _USB_HID_DSC_HEADER
[; ;hid.h: 132: {
[; ;hid.h: 133: byte bDscType;
[; ;hid.h: 134: word wDscLength;
[; ;hid.h: 135: } USB_HID_DSC_HEADER;
[; ;hid.h: 137: typedef struct _USB_HID_DSC
[; ;hid.h: 138: {
[; ;hid.h: 139: byte bLength; byte bDscType; word bcdHID;
[; ;hid.h: 140: byte bCountryCode; byte bNumDsc;
[; ;hid.h: 141: USB_HID_DSC_HEADER hid_dsc_header[1];
[; ;hid.h: 145: } USB_HID_DSC;
[; ;hid.h: 148: extern byte hid_rpt_rx_len;
[; ;hid.h: 151: void HIDInitEP(void);
[; ;hid.h: 152: void USBCheckHIDRequest(void);
[; ;hid.h: 153: void HIDTxReport(char *buffer, byte len);
[; ;hid.h: 154: byte HIDRxReport(char *buffer, byte len);
[; ;usbdsc.h: 53: typedef const struct { USB_CFG_DSC cd01; USB_INTF_DSC i00a00; USB_HID_DSC hid_i00a00; USB_EP_DSC ep01i_i00a00; USB_EP_DSC ep01o_i00a00; } CFG01_t;
[; ;usbdsc.h: 62: typedef const struct{
[; ;usbdsc.h: 63: byte report[29];
[; ;usbdsc.h: 64: }HID_RPT01_t;
[; ;usbdsc.h: 69: extern const USB_DEV_DSC device_dsc;
[; ;usbdsc.h: 70: extern CFG01_t cfg01;
[; ;usbdsc.h: 71: extern const unsigned char *const USB_CD_Ptr[];
[; ;usbdsc.h: 72: extern const unsigned char *const USB_SD_Ptr[];
[; ;usbdsc.h: 74: extern HID_RPT01_t hid_rpt01;
[; ;usbdsc.h: 75: extern const pFunc ClassReqHandler[1];
[; ;usbdefs_ep0_buff.h: 59: typedef union _CTRL_TRF_SETUP
[; ;usbdefs_ep0_buff.h: 60: {
[; ;usbdefs_ep0_buff.h: 62: struct
[; ;usbdefs_ep0_buff.h: 63: {
[; ;usbdefs_ep0_buff.h: 64: byte _byte[8];
[; ;usbdefs_ep0_buff.h: 65: };
[; ;usbdefs_ep0_buff.h: 68: struct
[; ;usbdefs_ep0_buff.h: 69: {
[; ;usbdefs_ep0_buff.h: 70: byte bmRequestType;
[; ;usbdefs_ep0_buff.h: 71: byte bRequest;
[; ;usbdefs_ep0_buff.h: 72: word wValue;
[; ;usbdefs_ep0_buff.h: 73: word wIndex;
[; ;usbdefs_ep0_buff.h: 74: word wLength;
[; ;usbdefs_ep0_buff.h: 75: };
[; ;usbdefs_ep0_buff.h: 76: struct
[; ;usbdefs_ep0_buff.h: 77: {
[; ;usbdefs_ep0_buff.h: 78: unsigned :8;
[; ;usbdefs_ep0_buff.h: 79: unsigned :8;
[; ;usbdefs_ep0_buff.h: 80: WORD_t W_Value;
[; ;usbdefs_ep0_buff.h: 81: WORD_t W_Index;
[; ;usbdefs_ep0_buff.h: 82: WORD_t W_Length;
[; ;usbdefs_ep0_buff.h: 83: };
[; ;usbdefs_ep0_buff.h: 84: struct
[; ;usbdefs_ep0_buff.h: 85: {
[; ;usbdefs_ep0_buff.h: 86: unsigned Recipient:5;
[; ;usbdefs_ep0_buff.h: 87: unsigned RequestType:2;
[; ;usbdefs_ep0_buff.h: 88: unsigned DataDir:1;
[; ;usbdefs_ep0_buff.h: 89: unsigned :8;
[; ;usbdefs_ep0_buff.h: 90: byte bFeature;
[; ;usbdefs_ep0_buff.h: 91: unsigned :8;
[; ;usbdefs_ep0_buff.h: 92: unsigned :8;
[; ;usbdefs_ep0_buff.h: 93: unsigned :8;
[; ;usbdefs_ep0_buff.h: 94: unsigned :8;
[; ;usbdefs_ep0_buff.h: 95: unsigned :8;
[; ;usbdefs_ep0_buff.h: 96: };
[; ;usbdefs_ep0_buff.h: 97: struct
[; ;usbdefs_ep0_buff.h: 98: {
[; ;usbdefs_ep0_buff.h: 99: unsigned :8;
[; ;usbdefs_ep0_buff.h: 100: unsigned :8;
[; ;usbdefs_ep0_buff.h: 101: byte bDscIndex;
[; ;usbdefs_ep0_buff.h: 102: byte bDscType;
[; ;usbdefs_ep0_buff.h: 103: word wLangID;
[; ;usbdefs_ep0_buff.h: 104: unsigned :8;
[; ;usbdefs_ep0_buff.h: 105: unsigned :8;
[; ;usbdefs_ep0_buff.h: 106: };
[; ;usbdefs_ep0_buff.h: 107: struct
[; ;usbdefs_ep0_buff.h: 108: {
[; ;usbdefs_ep0_buff.h: 109: unsigned :8;
[; ;usbdefs_ep0_buff.h: 110: unsigned :8;
[; ;usbdefs_ep0_buff.h: 111: BYTE_t bDevADR;
[; ;usbdefs_ep0_buff.h: 112: byte bDevADRH;
[; ;usbdefs_ep0_buff.h: 113: unsigned :8;
[; ;usbdefs_ep0_buff.h: 114: unsigned :8;
[; ;usbdefs_ep0_buff.h: 115: unsigned :8;
[; ;usbdefs_ep0_buff.h: 116: unsigned :8;
[; ;usbdefs_ep0_buff.h: 117: };
[; ;usbdefs_ep0_buff.h: 118: struct
[; ;usbdefs_ep0_buff.h: 119: {
[; ;usbdefs_ep0_buff.h: 120: unsigned :8;
[; ;usbdefs_ep0_buff.h: 121: unsigned :8;
[; ;usbdefs_ep0_buff.h: 122: byte bCfgValue;
[; ;usbdefs_ep0_buff.h: 123: byte bCfgRSD;
[; ;usbdefs_ep0_buff.h: 124: unsigned :8;
[; ;usbdefs_ep0_buff.h: 125: unsigned :8;
[; ;usbdefs_ep0_buff.h: 126: unsigned :8;
[; ;usbdefs_ep0_buff.h: 127: unsigned :8;
[; ;usbdefs_ep0_buff.h: 128: };
[; ;usbdefs_ep0_buff.h: 129: struct
[; ;usbdefs_ep0_buff.h: 130: {
[; ;usbdefs_ep0_buff.h: 131: unsigned :8;
[; ;usbdefs_ep0_buff.h: 132: unsigned :8;
[; ;usbdefs_ep0_buff.h: 133: byte bAltID;
[; ;usbdefs_ep0_buff.h: 134: byte bAltID_H;
[; ;usbdefs_ep0_buff.h: 135: byte bIntfID;
[; ;usbdefs_ep0_buff.h: 136: byte bIntfID_H;
[; ;usbdefs_ep0_buff.h: 137: unsigned :8;
[; ;usbdefs_ep0_buff.h: 138: unsigned :8;
[; ;usbdefs_ep0_buff.h: 139: };
[; ;usbdefs_ep0_buff.h: 140: struct
[; ;usbdefs_ep0_buff.h: 141: {
[; ;usbdefs_ep0_buff.h: 142: unsigned :8;
[; ;usbdefs_ep0_buff.h: 143: unsigned :8;
[; ;usbdefs_ep0_buff.h: 144: unsigned :8;
[; ;usbdefs_ep0_buff.h: 145: unsigned :8;
[; ;usbdefs_ep0_buff.h: 146: byte bEPID;
[; ;usbdefs_ep0_buff.h: 147: byte bEPID_H;
[; ;usbdefs_ep0_buff.h: 148: unsigned :8;
[; ;usbdefs_ep0_buff.h: 149: unsigned :8;
[; ;usbdefs_ep0_buff.h: 150: };
[; ;usbdefs_ep0_buff.h: 151: struct
[; ;usbdefs_ep0_buff.h: 152: {
[; ;usbdefs_ep0_buff.h: 153: unsigned :8;
[; ;usbdefs_ep0_buff.h: 154: unsigned :8;
[; ;usbdefs_ep0_buff.h: 155: unsigned :8;
[; ;usbdefs_ep0_buff.h: 156: unsigned :8;
[; ;usbdefs_ep0_buff.h: 157: unsigned EPNum:4;
[; ;usbdefs_ep0_buff.h: 158: unsigned :3;
[; ;usbdefs_ep0_buff.h: 159: unsigned EPDir:1;
[; ;usbdefs_ep0_buff.h: 160: unsigned :8;
[; ;usbdefs_ep0_buff.h: 161: unsigned :8;
[; ;usbdefs_ep0_buff.h: 162: unsigned :8;
[; ;usbdefs_ep0_buff.h: 163: };
[; ;usbdefs_ep0_buff.h: 166: } CTRL_TRF_SETUP;
[; ;usbdefs_ep0_buff.h: 179: typedef union _CTRL_TRF_DATA
[; ;usbdefs_ep0_buff.h: 180: {
[; ;usbdefs_ep0_buff.h: 182: struct
[; ;usbdefs_ep0_buff.h: 183: {
[; ;usbdefs_ep0_buff.h: 184: byte _byte[8];
[; ;usbdefs_ep0_buff.h: 185: };
[; ;usbdefs_ep0_buff.h: 188: struct
[; ;usbdefs_ep0_buff.h: 189: {
[; ;usbdefs_ep0_buff.h: 190: byte _byte0;
[; ;usbdefs_ep0_buff.h: 191: byte _byte1;
[; ;usbdefs_ep0_buff.h: 192: byte _byte2;
[; ;usbdefs_ep0_buff.h: 193: byte _byte3;
[; ;usbdefs_ep0_buff.h: 194: byte _byte4;
[; ;usbdefs_ep0_buff.h: 195: byte _byte5;
[; ;usbdefs_ep0_buff.h: 196: byte _byte6;
[; ;usbdefs_ep0_buff.h: 197: byte _byte7;
[; ;usbdefs_ep0_buff.h: 198: };
[; ;usbdefs_ep0_buff.h: 199: struct
[; ;usbdefs_ep0_buff.h: 200: {
[; ;usbdefs_ep0_buff.h: 201: word _word0;
[; ;usbdefs_ep0_buff.h: 202: word _word1;
[; ;usbdefs_ep0_buff.h: 203: word _word2;
[; ;usbdefs_ep0_buff.h: 204: word _word3;
[; ;usbdefs_ep0_buff.h: 205: };
[; ;usbdefs_ep0_buff.h: 207: } CTRL_TRF_DATA;
[; ;usbmmap.h: 70: typedef union _USB_DEVICE_STATUS
[; ;usbmmap.h: 71: {
[; ;usbmmap.h: 72: byte _byte;
[; ;usbmmap.h: 73: struct
[; ;usbmmap.h: 74: {
[; ;usbmmap.h: 75: unsigned RemoteWakeup:1;
[; ;usbmmap.h: 76: unsigned ctrl_trf_mem:1;
[; ;usbmmap.h: 77: };
[; ;usbmmap.h: 78: } USB_DEVICE_STATUS;
[; ;usbmmap.h: 80: typedef union _BD_STAT
[; ;usbmmap.h: 81: {
[; ;usbmmap.h: 82: byte _byte;
[; ;usbmmap.h: 83: struct{
[; ;usbmmap.h: 84: unsigned BC8:1;
[; ;usbmmap.h: 85: unsigned BC9:1;
[; ;usbmmap.h: 86: unsigned BSTALL:1;
[; ;usbmmap.h: 87: unsigned DTSEN:1;
[; ;usbmmap.h: 88: unsigned INCDIS:1;
[; ;usbmmap.h: 89: unsigned KEN:1;
[; ;usbmmap.h: 90: unsigned DTS:1;
[; ;usbmmap.h: 91: unsigned UOWN:1;
[; ;usbmmap.h: 92: };
[; ;usbmmap.h: 93: struct{
[; ;usbmmap.h: 94: unsigned BC8:1;
[; ;usbmmap.h: 95: unsigned BC9:1;
[; ;usbmmap.h: 96: unsigned PID0:1;
[; ;usbmmap.h: 97: unsigned PID1:1;
[; ;usbmmap.h: 98: unsigned PID2:1;
[; ;usbmmap.h: 99: unsigned PID3:1;
[; ;usbmmap.h: 100: unsigned :1;
[; ;usbmmap.h: 101: unsigned UOWN:1;
[; ;usbmmap.h: 102: };
[; ;usbmmap.h: 103: struct{
[; ;usbmmap.h: 104: unsigned :2;
[; ;usbmmap.h: 105: unsigned PID:4;
[; ;usbmmap.h: 106: unsigned :2;
[; ;usbmmap.h: 107: };
[; ;usbmmap.h: 108: } BD_STAT;
[; ;usbmmap.h: 110: typedef union _BDT
[; ;usbmmap.h: 111: {
[; ;usbmmap.h: 112: struct
[; ;usbmmap.h: 113: {
[; ;usbmmap.h: 114: BD_STAT Stat;
[; ;usbmmap.h: 115: byte Cnt;
[; ;usbmmap.h: 116: byte ADRL;
[; ;usbmmap.h: 117: byte ADRH;
[; ;usbmmap.h: 118: };
[; ;usbmmap.h: 119: struct
[; ;usbmmap.h: 120: {
[; ;usbmmap.h: 121: unsigned :8;
[; ;usbmmap.h: 122: unsigned :8;
[; ;usbmmap.h: 123: byte* ADR;
[; ;usbmmap.h: 124: };
[; ;usbmmap.h: 125: } BDT;
[; ;usbmmap.h: 128: extern byte usb_device_state;
[; ;usbmmap.h: 129: extern USB_DEVICE_STATUS usb_stat;
[; ;usbmmap.h: 130: extern byte usb_active_cfg;
[; ;usbmmap.h: 131: extern byte usb_alt_intf[1];
[; ;usbmmap.h: 133: extern volatile BDT ep0Bo;
[; ;usbmmap.h: 134: extern volatile BDT ep0Bi;
[; ;usbmmap.h: 135: extern volatile BDT ep1Bo;
[; ;usbmmap.h: 136: extern volatile BDT ep1Bi;
[; ;usbmmap.h: 167: extern volatile
[; ;usbmmap.h: 168: CTRL_TRF_SETUP SetupPkt;
[; ;usbmmap.h: 169: extern volatile
[; ;usbmmap.h: 170: CTRL_TRF_DATA CtrlTrfData;
[; ;usbmmap.h: 173: extern volatile unsigned char hid_report_out[64];
[; ;usbmmap.h: 174: extern volatile unsigned char hid_report_in[64];
[; ;usbdrv.h: 206: void USBCheckBusStatus(void);
[; ;usbdrv.h: 207: void USBDriverService(void);
[; ;usbdrv.h: 208: void USBRemoteWakeup(void);
[; ;usbdrv.h: 209: void USBSoftDetach(void);
[; ;usbdrv.h: 211: void ClearArray(byte* startAdr,byte count);
[; ;usbctrltrf.h: 88: extern byte ctrl_trf_session_owner;
[; ;usbctrltrf.h: 90: extern POINTER_t pSrc;
[; ;usbctrltrf.h: 91: extern POINTER_t pDst;
[; ;usbctrltrf.h: 92: extern WORD_t wCount;
[; ;usbctrltrf.h: 95: byte USBCtrlEPService(void);
[; ;usbctrltrf.h: 96: void USBCtrlTrfTxService(void);
[; ;usbctrltrf.h: 97: void USBCtrlTrfRxService(void);
[; ;usbctrltrf.h: 98: void USBCtrlEPServiceComplete(void);
[; ;usbctrltrf.h: 99: void USBPrepareForNextSetupTrf(void);
[; ;usb9.h: 92: void USBCheckStdRequest(void);
"157 ../usbmmap.c
[v _usb_device_state `uc ~T0 @X0 1 e ]
[; ;usbmmap.c: 157: byte usb_device_state;
"158
[v _usb_stat `S39 ~T0 @X0 1 e ]
[; ;usbmmap.c: 158: USB_DEVICE_STATUS usb_stat;
"159
[v _usb_active_cfg `uc ~T0 @X0 1 e ]
[; ;usbmmap.c: 159: byte usb_active_cfg;
"160
[v _usb_alt_intf `uc ~T0 @X0 -> -> 1 `i `ux e ]
[; ;usbmmap.c: 160: byte usb_alt_intf[1];
"180
[v _ep0Bo `VS45 ~T0 @X0 1 e@1024 ]
[; ;usbmmap.c: 179: volatile BDT
[; ;usbmmap.c: 180: ep0Bo @0x400 ;
"182
[v _ep0Bi `VS45 ~T0 @X0 1 e@1028 ]
[; ;usbmmap.c: 181: volatile BDT
[; ;usbmmap.c: 182: ep0Bi @0x404;
"187
[v _ep1Bo `VS45 ~T0 @X0 1 e@1032 ]
[; ;usbmmap.c: 186: volatile BDT
[; ;usbmmap.c: 187: ep1Bo @0x408;
"189
[v _ep1Bi `VS45 ~T0 @X0 1 e@1036 ]
[; ;usbmmap.c: 188: volatile BDT
[; ;usbmmap.c: 189: ep1Bi @0x40C;
"278
[v _SetupPkt `VS24 ~T0 @X0 1 e@1280 ]
[; ;usbmmap.c: 277: volatile CTRL_TRF_SETUP
[; ;usbmmap.c: 278: SetupPkt @0x500;
"280
[v _CtrlTrfData `VS35 ~T0 @X0 1 e@1536 ]
[; ;usbmmap.c: 279: volatile CTRL_TRF_DATA
[; ;usbmmap.c: 280: CtrlTrfData @0x600;
"288
[v _hid_report_out `Vuc ~T0 @X0 -> 64 `i e@1792 ]
[; ;usbmmap.c: 288: volatile unsigned char hid_report_out[64] @0x700;
"289
[v _hid_report_in `Vuc ~T0 @X0 -> 64 `i e@1856 ]
[; ;usbmmap.c: 289: volatile unsigned char hid_report_in[64] @0x740;
